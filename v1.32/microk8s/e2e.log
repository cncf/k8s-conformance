  I0112 22:28:22.019339      23 e2e.go:109] Starting e2e run "50fb3fd7-9832-4cbc-823e-abd796aad631" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1736720901 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0112 22:28:22.340869 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 22:28:22.342413 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0112 22:28:22.376510 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0112 22:28:22.381261 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0112 22:28:22.381343 23 e2e.go:245] e2e test version: v1.32.0
  I0112 22:28:22.383003 23 e2e.go:254] kube-apiserver version: v1.32.0
  I0112 22:28:22.383171 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 22:28:22.388733 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.048 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/12/25 22:28:22.528
  I0112 22:28:22.528545 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 22:28:22.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:28:22.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:28:22.567
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/12/25 22:28:22.571
  STEP: Saw pod success @ 01/12/25 22:28:42.65
  I0112 22:28:42.656697 23 output.go:207] Trying to get logs from node ubuntu pod pod-08aecb36-82f5-4125-a607-3baaa4dc14ab container test-container: <nil>
  STEP: delete the pod @ 01/12/25 22:28:42.68
  I0112 22:28:42.730749 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9955" for this suite. @ 01/12/25 22:28:42.737
• [20.227 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/12/25 22:28:42.755
  I0112 22:28:42.755974 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 22:28:42.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:28:42.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:28:42.809
  STEP: Creating simple DaemonSet "daemon-set" @ 01/12/25 22:28:42.85
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 22:28:42.862
  I0112 22:28:42.871530 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:42.871584 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:43.872102 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:43.872163 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:44.875700 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:44.875777 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:45.871038 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:45.871094 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:46.871266 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:46.871363 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:47.875356 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:47.875462 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:48.873396 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:48.873459 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:49.873532 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:49.873607 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:50.872004 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:50.872063 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:51.873396 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:51.873455 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:52.872770 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:28:52.872830 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:28:53.870647 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:53.870703 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:28:54.870282 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:54.870335 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:28:55.870774 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:55.870853 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:28:56.872606 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:56.872680 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:28:57.870354 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:57.870412 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:28:58.872455 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:58.872558 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:28:59.872497 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:28:59.872569 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:29:00.873517 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:29:00.873586 23 fixtures.go:131] Node ubuntu2 is running 0 daemon pod, expected 1
  I0112 22:29:01.870557 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 22:29:01.870648 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/12/25 22:29:01.874
  I0112 22:29:01.902382 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:29:01.902512 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:29:02.905977 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:29:02.906127 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:29:03.907489 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:29:03.907537 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:29:04.903397 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 22:29:04.903512 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 22:29:04.908
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-473, will wait for the garbage collector to delete the pods @ 01/12/25 22:29:04.908
  I0112 22:29:04.986637 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 23.59787ms
  I0112 22:29:05.087649 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.996657ms
  I0112 22:29:07.493516 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:29:07.493604 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 22:29:07.500047 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2084"},"items":null}

  I0112 22:29:07.505602 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2084"},"items":null}

  I0112 22:29:07.519637 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-473" for this suite. @ 01/12/25 22:29:07.524
• [24.786 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/12/25 22:29:07.542
  I0112 22:29:07.542069 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:29:07.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:29:07.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:29:07.575
  STEP: Creating secret with name projected-secret-test-8625fbc5-5412-47ae-a725-4d640cb0b09e @ 01/12/25 22:29:07.58
  STEP: Creating a pod to test consume secrets @ 01/12/25 22:29:07.592
  STEP: Saw pod success @ 01/12/25 22:29:11.626
  I0112 22:29:11.631871 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-secrets-e98fe0ce-f8bc-4922-852d-d549e2f0f327 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 22:29:11.64
  I0112 22:29:11.679799 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1362" for this suite. @ 01/12/25 22:29:11.684
• [4.157 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/12/25 22:29:11.699
  I0112 22:29:11.699425 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 22:29:11.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:29:11.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:29:11.736
  STEP: Creating a suspended cronjob @ 01/12/25 22:29:11.74
  STEP: Ensuring no jobs are scheduled @ 01/12/25 22:29:11.754
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/12/25 22:34:11.755
  STEP: Removing cronjob @ 01/12/25 22:34:11.759
  I0112 22:34:11.773787 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9554" for this suite. @ 01/12/25 22:34:11.777
• [300.092 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/12/25 22:34:11.791
  I0112 22:34:11.791404 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 22:34:11.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:34:11.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:34:11.831
  I0112 22:34:17.871263 23 delete.go:62] Deleting pod "var-expansion-7ab20609-28b2-4eb2-bfeb-9a509d667a9d" in namespace "var-expansion-8435"
  I0112 22:34:17.886369 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-7ab20609-28b2-4eb2-bfeb-9a509d667a9d" to be fully deleted
  I0112 22:34:19.894826 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8435" for this suite. @ 01/12/25 22:34:19.898
• [8.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/12/25 22:34:19.911
  I0112 22:34:19.911916 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 22:34:19.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:34:19.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:34:19.958
  I0112 22:35:19.991159 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2558" for this suite. @ 01/12/25 22:35:19.996
• [60.110 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/12/25 22:35:20.022
  I0112 22:35:20.022616 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 22:35:20.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:35:20.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:35:20.08
  STEP: create the container @ 01/12/25 22:35:20.096
  W0112 22:35:20.119987      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/12/25 22:35:20.12
  STEP: get the container status @ 01/12/25 22:35:26.155
  STEP: the container should be terminated @ 01/12/25 22:35:26.159
  STEP: the termination message should be set @ 01/12/25 22:35:26.159
  I0112 22:35:26.159278 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/12/25 22:35:26.159
  I0112 22:35:26.198378 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6987" for this suite. @ 01/12/25 22:35:26.202
• [6.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/12/25 22:35:26.216
  I0112 22:35:26.216050 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 22:35:26.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:35:26.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:35:26.254
  STEP: Creating pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821 @ 01/12/25 22:35:26.258
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 22:35:28.282
  I0112 22:35:28.285301 23 container_probe.go:1749] Initial restart count of pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 is 0
  I0112 22:35:28.288921 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:30.297611 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:32.305624 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:34.310651 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:36.316166 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:38.320839 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:40.325862 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:42.330476 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:44.337264 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:46.342515 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:48.348001 23 container_probe.go:1759] Get pod liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 in namespace container-probe-9821
  I0112 22:35:48.348059 23 container_probe.go:1763] Restart count of pod container-probe-9821/liveness-f857a772-9bb7-4864-858d-edeeb65c0b33 is now 1 (20.062699125s elapsed)
  STEP: deleting the pod @ 01/12/25 22:35:48.348
  I0112 22:35:48.389998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9821" for this suite. @ 01/12/25 22:35:48.399
• [22.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/12/25 22:35:48.438
  I0112 22:35:48.438656 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 22:35:48.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:35:48.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:35:48.493
  STEP: creating the pod @ 01/12/25 22:35:48.501
  STEP: submitting the pod to kubernetes @ 01/12/25 22:35:48.501
  STEP: verifying the pod is in kubernetes @ 01/12/25 22:35:50.538
  STEP: updating the pod @ 01/12/25 22:35:50.541
  I0112 22:35:51.063059 23 pod_client.go:173] Successfully updated pod "pod-update-fe18d408-fe28-4338-8cfb-481968d29e9e"
  STEP: verifying the updated pod is in kubernetes @ 01/12/25 22:35:51.067
  I0112 22:35:51.072679 23 pods.go:391] Pod update OK
  I0112 22:35:51.072912 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-449" for this suite. @ 01/12/25 22:35:51.079
• [2.655 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/12/25 22:35:51.093
  I0112 22:35:51.093627 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 22:35:51.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:35:51.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:35:51.127
  STEP: Creating a ResourceQuota with best effort scope @ 01/12/25 22:35:51.139
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 22:35:51.153
  STEP: Creating a ResourceQuota with not best effort scope @ 01/12/25 22:35:53.158
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 22:35:53.172
  STEP: Creating a best-effort pod @ 01/12/25 22:35:55.177
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/12/25 22:35:55.204
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/12/25 22:35:57.21
  STEP: Deleting the pod @ 01/12/25 22:35:59.215
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 22:35:59.28
  STEP: Creating a not best-effort pod @ 01/12/25 22:36:01.285
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/12/25 22:36:01.31
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/12/25 22:36:03.315
  STEP: Deleting the pod @ 01/12/25 22:36:05.319
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 22:36:05.347
  I0112 22:36:07.355753 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4734" for this suite. @ 01/12/25 22:36:07.362
• [16.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 01/12/25 22:36:07.381
  I0112 22:36:07.381305 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 22:36:07.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:36:07.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:36:07.415
  STEP: Creating a job @ 01/12/25 22:36:07.419
  STEP: Ensuring active pods == parallelism @ 01/12/25 22:36:07.44
  STEP: delete a job @ 01/12/25 22:36:09.45
  STEP: deleting Job.batch foo in namespace job-1549, will wait for the garbage collector to delete the pods @ 01/12/25 22:36:09.45
  I0112 22:36:09.521285 23 resources.go:139] Deleting Job.batch foo took: 16.068234ms
  I0112 22:36:09.622002 23 resources.go:163] Terminating Job.batch foo pods took: 100.717757ms
  STEP: Ensuring job was deleted @ 01/12/25 22:36:11.522
  I0112 22:36:11.525711 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1549" for this suite. @ 01/12/25 22:36:11.529
• [4.162 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 01/12/25 22:36:11.543
  I0112 22:36:11.543638 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 22:36:11.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:36:11.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:36:11.589
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 22:36:11.592
  I0112 22:36:11.592920 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-3531 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0112 22:36:11.691318 23 builder.go:146] stderr: ""
  I0112 22:36:11.691450 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/12/25 22:36:11.691
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/12/25 22:36:16.744
  I0112 22:36:16.744971 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-3531 get pod e2e-test-httpd-pod -o json'
  I0112 22:36:16.828730 23 builder.go:146] stderr: ""
  I0112 22:36:16.829010 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"f784ec2d6681691af3775280d89f34e8af283dd624ab2a4c3c809a30ee253e0b\",\n            \"cni.projectcalico.org/podIP\": \"10.1.243.205/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.243.205/32\"\n        },\n        \"creationTimestamp\": \"2025-01-12T22:36:11Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3531\",\n        \"resourceVersion\": \"3064\",\n        \"uid\": \"2b981057-e4ed-49d1-8038-7a75c55dc905\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-sx6z4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ubuntu\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-sx6z4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T22:36:13Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T22:36:11Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T22:36:13Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T22:36:13Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-12T22:36:11Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://bbdb00ad2cae8207cc58a6e5a5516f790e84db55932befb5a1b730fd08071b25\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-12T22:36:12Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-sx6z4\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.17.202.11\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.17.202.11\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.243.205\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.243.205\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-12T22:36:11Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/12/25 22:36:16.829
  I0112 22:36:16.829179 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-3531 replace -f -'
  I0112 22:36:17.010021 23 builder.go:146] stderr: ""
  I0112 22:36:17.010099 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/12/25 22:36:17.01
  I0112 22:36:17.014533 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-3531 delete pods e2e-test-httpd-pod'
  I0112 22:36:18.511514 23 builder.go:146] stderr: ""
  I0112 22:36:18.511587 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0112 22:36:18.511711 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3531" for this suite. @ 01/12/25 22:36:18.515
• [6.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/12/25 22:36:18.53
  I0112 22:36:18.530953 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 22:36:18.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:36:18.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:36:18.571
  STEP: Creating configMap with name configmap-test-volume-91abdbc1-5b79-43bc-a23e-f028d4de22fb @ 01/12/25 22:36:18.575
  STEP: Creating a pod to test consume configMaps @ 01/12/25 22:36:18.588
  STEP: Saw pod success @ 01/12/25 22:36:22.619
  I0112 22:36:22.623698 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-6b660451-242a-4cc1-b833-350f61f8760a container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 22:36:22.637
  I0112 22:36:22.678552 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4598" for this suite. @ 01/12/25 22:36:22.683
• [4.174 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 01/12/25 22:36:22.704
  I0112 22:36:22.704832 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 22:36:22.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:36:22.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:36:22.742
  STEP: Creating service test in namespace statefulset-7292 @ 01/12/25 22:36:22.746
  STEP: Creating statefulset ss in namespace statefulset-7292 @ 01/12/25 22:36:22.762
  I0112 22:36:22.791993 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 22:36:32.826679 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/12/25 22:36:32.836
  STEP: Getting /status @ 01/12/25 22:36:32.872
  I0112 22:36:32.877411 23 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/12/25 22:36:32.877
  I0112 22:36:32.901362 23 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/12/25 22:36:32.901
  I0112 22:36:32.903271 23 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0112 22:36:32.903357 23 statefulset.go:1114] Found Statefulset ss in namespace statefulset-7292 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 22:36:32.903374 23 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/12/25 22:36:32.903
  I0112 22:36:32.903405 23 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0112 22:36:32.917656 23 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/12/25 22:36:32.917
  I0112 22:36:32.919511 23 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0112 22:36:32.919594 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7292
  I0112 22:36:32.923056 23 rest.go:152] Scaling statefulset ss to 0
  I0112 22:36:42.944815 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 22:36:42.949775 23 rest.go:90] Deleting statefulset ss
  I0112 22:36:42.978479 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7292" for this suite. @ 01/12/25 22:36:42.982
• [20.297 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 01/12/25 22:36:43.002
  I0112 22:36:43.002030 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 22:36:43.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:36:43.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:36:43.048
  STEP: Creating a test headless service @ 01/12/25 22:36:43.051
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 230.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.230_udp@PTR;check="$$(dig +tcp +noall +answer +search 230.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.230_tcp@PTR;sleep 1; done
   @ 01/12/25 22:36:43.099
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3091.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3091.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3091.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3091.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 230.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.230_udp@PTR;check="$$(dig +tcp +noall +answer +search 230.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.230_tcp@PTR;sleep 1; done
   @ 01/12/25 22:36:43.099
  STEP: creating a pod to probe DNS @ 01/12/25 22:36:43.099
  STEP: submitting the pod to kubernetes @ 01/12/25 22:36:43.099
  STEP: retrieving the pod @ 01/12/25 22:37:05.204
  STEP: looking for the results for each expected name from probers @ 01/12/25 22:37:05.208
  I0112 22:37:05.253814 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3091.svc.cluster.local from pod dns-3091/dns-test-0446f74f-205f-4555-b733-23dab5147219: the server could not find the requested resource (get pods dns-test-0446f74f-205f-4555-b733-23dab5147219)
  I0112 22:37:05.258605 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3091.svc.cluster.local from pod dns-3091/dns-test-0446f74f-205f-4555-b733-23dab5147219: the server could not find the requested resource (get pods dns-test-0446f74f-205f-4555-b733-23dab5147219)
  I0112 22:37:05.263438 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local from pod dns-3091/dns-test-0446f74f-205f-4555-b733-23dab5147219: the server could not find the requested resource (get pods dns-test-0446f74f-205f-4555-b733-23dab5147219)
  I0112 22:37:05.267746 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local from pod dns-3091/dns-test-0446f74f-205f-4555-b733-23dab5147219: the server could not find the requested resource (get pods dns-test-0446f74f-205f-4555-b733-23dab5147219)
  I0112 22:37:05.287982 23 dns_common.go:506] Lookups using dns-3091/dns-test-0446f74f-205f-4555-b733-23dab5147219 failed for: [jessie_udp@dns-test-service.dns-3091.svc.cluster.local jessie_tcp@dns-test-service.dns-3091.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3091.svc.cluster.local]

  I0112 22:37:05.295920 23 dns_common.go:514] Pod client logs for webserver: 
  I0112 22:37:05.303484 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0112 22:37:05.310416 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0112 22:37:10.292149 23 dns_common.go:546] DNS probes using dns-3091/dns-test-0446f74f-205f-4555-b733-23dab5147219 succeeded

  STEP: deleting the pod @ 01/12/25 22:37:10.292
  STEP: deleting the test service @ 01/12/25 22:37:10.684
  STEP: deleting the test headless service @ 01/12/25 22:37:11.165
  I0112 22:37:11.226879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3091" for this suite. @ 01/12/25 22:37:11.231
• [28.243 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/12/25 22:37:11.245
  I0112 22:37:11.245297 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 22:37:11.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:37:11.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:37:11.288
  STEP: Creating configMap with name configmap-test-volume-cea924be-3f9b-4ebf-a5f0-2fd7d5ffd554 @ 01/12/25 22:37:11.291
  STEP: Creating a pod to test consume configMaps @ 01/12/25 22:37:11.302
  STEP: Saw pod success @ 01/12/25 22:37:15.33
  I0112 22:37:15.334378 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-312fe989-e69a-4adb-9600-96722d642edb container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 22:37:15.341
  I0112 22:37:15.374844 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4005" for this suite. @ 01/12/25 22:37:15.379
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/12/25 22:37:15.394
  I0112 22:37:15.394810 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 22:37:15.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:37:15.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:37:15.426
  STEP: Creating a ResourceQuota @ 01/12/25 22:37:15.431
  STEP: Getting a ResourceQuota @ 01/12/25 22:37:15.443
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/12/25 22:37:15.448
  STEP: Patching the ResourceQuota @ 01/12/25 22:37:15.453
  STEP: Deleting a Collection of ResourceQuotas @ 01/12/25 22:37:15.471
  STEP: Verifying the deleted ResourceQuota @ 01/12/25 22:37:15.494
  I0112 22:37:15.498181 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4432" for this suite. @ 01/12/25 22:37:15.501
• [0.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/12/25 22:37:15.516
  I0112 22:37:15.516443 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:37:15.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:37:15.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:37:15.547
  STEP: Setting up server cert @ 01/12/25 22:37:15.612
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:37:16.046
  STEP: Deploying the webhook pod @ 01/12/25 22:37:16.063
  STEP: Wait for the deployment to be ready @ 01/12/25 22:37:16.097
  I0112 22:37:16.106240 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:37:18.119
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:37:18.148
  I0112 22:37:19.149100 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/12/25 22:37:19.157
  STEP: create a namespace for the webhook @ 01/12/25 22:37:19.187
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/12/25 22:37:19.225
  I0112 22:37:19.382779 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6711" for this suite. @ 01/12/25 22:37:19.388
  STEP: Destroying namespace "webhook-markers-7537" for this suite. @ 01/12/25 22:37:19.412
  STEP: Destroying namespace "fail-closed-namespace-4954" for this suite. @ 01/12/25 22:37:19.435
• [3.932 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 01/12/25 22:37:19.449
  I0112 22:37:19.449199 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 22:37:19.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:37:19.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:37:19.48
  STEP: Creating service test in namespace statefulset-9943 @ 01/12/25 22:37:19.484
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/12/25 22:37:19.503
  STEP: Creating stateful set ss in namespace statefulset-9943 @ 01/12/25 22:37:19.506
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9943 @ 01/12/25 22:37:19.529
  I0112 22:37:19.532256 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 22:37:29.534923 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/12/25 22:37:29.535
  I0112 22:37:29.538662 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 22:37:29.705073 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 22:37:29.705127 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 22:37:29.705165 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 22:37:29.709755 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0112 22:37:39.710602 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 22:37:39.710680 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 22:37:39.737626 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.9999996s
  I0112 22:37:40.742085 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.995870117s
  I0112 22:37:41.746685 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.991582577s
  I0112 22:37:42.752605 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.98714628s
  I0112 22:37:43.758395 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.981060769s
  I0112 22:37:44.763648 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.975375285s
  I0112 22:37:45.768876 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.970071528s
  I0112 22:37:46.774449 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.964832408s
  I0112 22:37:47.779855 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.959366934s
  I0112 22:37:48.785351 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 953.776802ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9943 @ 01/12/25 22:37:49.786
  I0112 22:37:49.790567 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 22:37:49.949117 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 22:37:49.949221 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 22:37:49.949247 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 22:37:49.953825 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I0112 22:37:59.958434 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 22:37:59.958579 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 22:37:59.958609 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/12/25 22:37:59.958
  STEP: Scale down will halt with unhealthy stateful pod @ 01/12/25 22:37:59.958
  I0112 22:37:59.968755 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 22:38:00.123225 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 22:38:00.123297 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 22:38:00.123323 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 22:38:00.123418 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 22:38:00.293760 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 22:38:00.293814 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 22:38:00.293831 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 22:38:00.293908 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 22:38:00.469713 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 22:38:00.469795 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 22:38:00.469817 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 22:38:00.469833 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 22:38:00.473710 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0112 22:38:10.481796 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 22:38:10.481883 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0112 22:38:10.481911 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0112 22:38:10.505361 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.9999997s
  I0112 22:38:11.510799 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.994687513s
  I0112 22:38:12.544019 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.989517364s
  I0112 22:38:13.550359 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.95621192s
  I0112 22:38:14.555234 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.949788987s
  I0112 22:38:15.563597 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.945012951s
  I0112 22:38:16.571399 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.936604656s
  I0112 22:38:17.576923 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.9283158s
  I0112 22:38:18.585464 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.923168501s
  I0112 22:38:19.591321 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 914.710634ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9943 @ 01/12/25 22:38:20.592
  I0112 22:38:20.599024 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 22:38:20.784880 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 22:38:20.784998 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 22:38:20.785022 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 22:38:20.785084 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 22:38:20.970519 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 22:38:20.970605 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 22:38:20.970634 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 22:38:20.970711 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-9943 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 22:38:21.162592 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 22:38:21.162674 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 22:38:21.162712 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 22:38:21.162736 23 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/12/25 22:38:31.177
  I0112 22:38:31.178052 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9943
  I0112 22:38:31.184270 23 rest.go:152] Scaling statefulset ss to 0
  I0112 22:38:31.193687 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 22:38:31.197733 23 rest.go:90] Deleting statefulset ss
  I0112 22:38:31.218905 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9943" for this suite. @ 01/12/25 22:38:31.223
• [71.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 01/12/25 22:38:31.242
  I0112 22:38:31.242913 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:38:31.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:38:31.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:38:31.278
  STEP: fetching services @ 01/12/25 22:38:31.285
  I0112 22:38:31.289420 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1881" for this suite. @ 01/12/25 22:38:31.294
• [0.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 01/12/25 22:38:31.309
  I0112 22:38:31.309429 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 22:38:31.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:38:31.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:38:31.362
  I0112 22:38:31.426774 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 22:39:31.430899 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/12/25 22:39:31.435
  I0112 22:39:31.435489 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/12/25 22:39:31.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:39:31.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:39:31.474
  I0112 22:39:31.512306 23 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0112 22:39:31.516838 23 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 01/12/25 22:39:31.631
  STEP: Removing a custom resource @ 01/12/25 22:39:31.641
  I0112 22:39:31.651710 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9277" for this suite. @ 01/12/25 22:39:31.656
  I0112 22:39:31.670000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9095" for this suite. @ 01/12/25 22:39:31.674
• [60.380 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/12/25 22:39:31.689
  I0112 22:39:31.690021 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 22:39:31.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:39:31.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:39:31.72
  STEP: Counting existing ResourceQuota @ 01/12/25 22:39:31.731
  STEP: Creating a ResourceQuota @ 01/12/25 22:39:36.735
  STEP: Ensuring resource quota status is calculated @ 01/12/25 22:39:36.756
  I0112 22:39:38.762725 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3855" for this suite. @ 01/12/25 22:39:38.767
• [7.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 01/12/25 22:39:38.784
  I0112 22:39:38.784540 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 22:39:38.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:39:38.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:39:38.829
  I0112 22:39:38.911309 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 22:40:38.918465 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/12/25 22:40:38.924
  STEP: Adding a custom resource @ 01/12/25 22:40:38.924
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/12/25 22:40:38.943
  I0112 22:40:38.963460 23 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/12/25 22:40:38.963
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/12/25 22:40:40.974
  I0112 22:40:40.987323 23 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/12/25 22:40:40.987
  STEP: Verifying the pod has the pod disruption condition @ 01/12/25 22:40:42.995
  I0112 22:40:43.001026 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0112 22:40:43.536828 23 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 01/12/25 22:40:43.584
  STEP: Removing a custom resource @ 01/12/25 22:40:43.604
  I0112 22:40:43.615484 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1622" for this suite. @ 01/12/25 22:40:43.62
• [64.850 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/12/25 22:40:43.634
  I0112 22:40:43.634329 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 22:40:43.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:40:43.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:40:43.668
  I0112 22:41:15.807358 23 container_probe.go:92] Container started at 2025-01-12 22:40:52 +0000 UTC, pod became ready at 2025-01-12 22:41:14 +0000 UTC
  I0112 22:41:15.807534 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-69" for this suite. @ 01/12/25 22:41:15.811
• [32.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/12/25 22:41:15.827
  I0112 22:41:15.827712 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename tables @ 01/12/25 22:41:15.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:15.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:15.86
  I0112 22:41:15.870354 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1350" for this suite. @ 01/12/25 22:41:15.877
• [0.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/12/25 22:41:15.892
  I0112 22:41:15.892649 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sysctl @ 01/12/25 22:41:15.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:15.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:15.926
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/12/25 22:41:15.93
  STEP: Watching for error events or started pod @ 01/12/25 22:41:15.946
  STEP: Waiting for pod completion @ 01/12/25 22:41:17.952
  STEP: Checking that the pod succeeded @ 01/12/25 22:41:19.973
  STEP: Getting logs from the pod @ 01/12/25 22:41:19.973
  STEP: Checking that the sysctl is actually updated @ 01/12/25 22:41:19.989
  I0112 22:41:19.989774 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9634" for this suite. @ 01/12/25 22:41:19.993
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/12/25 22:41:20.01
  I0112 22:41:20.010130 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 22:41:20.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:20.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:20.043
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 22:41:20.048
  STEP: Saw pod success @ 01/12/25 22:41:24.079
  I0112 22:41:24.083648 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-5cf5c8c7-36f2-401a-a1ab-a09b9b0240d8 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 22:41:24.091
  I0112 22:41:24.135913 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2739" for this suite. @ 01/12/25 22:41:24.14
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/12/25 22:41:24.155
  I0112 22:41:24.155345 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:41:24.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:24.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:24.197
  STEP: Setting up server cert @ 01/12/25 22:41:24.245
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:41:24.594
  STEP: Deploying the webhook pod @ 01/12/25 22:41:24.61
  STEP: Wait for the deployment to be ready @ 01/12/25 22:41:24.636
  I0112 22:41:24.643903 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:41:26.662
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:41:26.696
  I0112 22:41:27.696704 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/12/25 22:41:27.907
  STEP: Creating a configMap that should be mutated @ 01/12/25 22:41:27.922
  STEP: Deleting the collection of validation webhooks @ 01/12/25 22:41:27.964
  STEP: Creating a configMap that should not be mutated @ 01/12/25 22:41:28.073
  I0112 22:41:28.221787 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-802" for this suite. @ 01/12/25 22:41:28.226
  STEP: Destroying namespace "webhook-markers-2500" for this suite. @ 01/12/25 22:41:28.261
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/12/25 22:41:28.279
  I0112 22:41:28.279199 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 22:41:28.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:28.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:28.313
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/12/25 22:41:28.317
  STEP: When a replicaset with a matching selector is created @ 01/12/25 22:41:30.344
  STEP: Then the orphan pod is adopted @ 01/12/25 22:41:30.357
  STEP: When the matched label of one of its pods change @ 01/12/25 22:41:31.365
  I0112 22:41:31.369994 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/12/25 22:41:31.388
  I0112 22:41:32.396073 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8986" for this suite. @ 01/12/25 22:41:32.399
• [4.133 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 01/12/25 22:41:32.413
  I0112 22:41:32.413055 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 22:41:32.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:32.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:32.453
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-696.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-696.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 01/12/25 22:41:32.458
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-696.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-696.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/12/25 22:41:32.458
  STEP: creating a pod to probe /etc/hosts @ 01/12/25 22:41:32.458
  STEP: submitting the pod to kubernetes @ 01/12/25 22:41:32.458
  STEP: retrieving the pod @ 01/12/25 22:41:52.543
  STEP: looking for the results for each expected name from probers @ 01/12/25 22:41:52.548
  I0112 22:41:52.569799 23 dns_common.go:546] DNS probes using dns-696/dns-test-c5df5ad0-9220-40b6-937a-a91807ad9b29 succeeded

  STEP: deleting the pod @ 01/12/25 22:41:52.569
  I0112 22:41:52.623617 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-696" for this suite. @ 01/12/25 22:41:52.628
• [20.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 01/12/25 22:41:52.652
  I0112 22:41:52.652711 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 22:41:52.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:41:52.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:41:52.695
  STEP: Creating a job @ 01/12/25 22:41:52.698
  STEP: Ensuring job reaches completions @ 01/12/25 22:41:52.718
  I0112 22:42:04.770167 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9930" for this suite. @ 01/12/25 22:42:04.776
• [12.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/12/25 22:42:04.793
  I0112 22:42:04.794062 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 22:42:04.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:04.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:04.829
  STEP: Creating configMap with name configmap-test-volume-54fe74c4-e6f4-4874-97b2-1cd721ed547c @ 01/12/25 22:42:04.834
  STEP: Creating a pod to test consume configMaps @ 01/12/25 22:42:04.847
  STEP: Saw pod success @ 01/12/25 22:42:08.879
  I0112 22:42:08.883276 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-fb795505-722b-4b03-a552-e2538b404edc container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 22:42:08.891
  I0112 22:42:08.927442 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9730" for this suite. @ 01/12/25 22:42:08.932
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/12/25 22:42:08.946
  I0112 22:42:08.946887 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 22:42:08.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:08.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:08.986
  I0112 22:42:08.989601 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I0112 22:42:09.018124 23 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 01/12/25 22:42:11.036
  STEP: updating a scale subresource @ 01/12/25 22:42:11.04
  STEP: verifying the deployment Spec.Replicas was modified @ 01/12/25 22:42:11.054
  STEP: Patch a scale subresource @ 01/12/25 22:42:11.058
  I0112 22:42:11.086537 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a73925b2-f588-40c6-bbfb-0b2ae9ddc0e2",
      ResourceVersion: (string) (len=4) "4769",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872318528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 22:42:11.094261 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c31858f3-f901-4906-a0e6-f12c9f24d11e",
      ResourceVersion: (string) (len=4) "4768",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872318529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a73925b2-f588-40c6-bbfb-0b2ae9ddc0e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 37 33 39 32 35  62 32 2d 66 35 38 38 2d  |\"a73925b2-f588-|
              00000120  34 30 63 36 2d 62 62 66  62 2d 30 62 32 61 65 39  |40c6-bbfb-0b2ae9|
              00000130  64 64 63 30 65 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ddc0e2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 22:42:11.101830 23 deployment.go:68] Pod "test-new-deployment-685b768f58-29f7z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-29f7z",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b5c8ff9-84e9-437f-8123-79030a040b34",
      ResourceVersion: (string) (len=4) "4771",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872318531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "c31858f3-f901-4906-a0e6-f12c9f24d11e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  31 38 35 38 66 33 2d 66  |d\":\"c31858f3-f|
              00000090  39 30 31 2d 34 39 30 36  2d 61 30 65 36 2d 66 31  |901-4906-a0e6-f1|
              000000a0  32 63 39 66 32 34 64 31  31 65 5c 22 7d 22 3a 7b  |2c9f24d11e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99v8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99v8z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:42:11.104541 23 deployment.go:68] Pod "test-new-deployment-685b768f58-cwr6b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-cwr6b",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-3109",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5061b16f-6e13-41d5-b586-f7dfd5d33d45",
      ResourceVersion: (string) (len=4) "4763",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872318529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.224/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.224/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c1ceb87f00e621078bbc6d2411ddddd8ba763c404912d99f332ce2857a0feed0"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "c31858f3-f901-4906-a0e6-f12c9f24d11e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  31 38 35 38 66 33 2d 66  |d\":\"c31858f3-f|
              00000090  39 30 31 2d 34 39 30 36  2d 61 30 65 36 2d 66 31  |901-4906-a0e6-f1|
              000000a0  32 63 39 66 32 34 64 31  31 65 5c 22 7d 22 3a 7b  |2c9f24d11e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  32 34 5c 22 7d 22 3a 7b  |.1.243.224\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sgkwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sgkwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872318529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872318529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872318529,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2f4f119c7b45f1d0af60532fd213f0f64dfefb5272de1549d7ba787159dc310f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sgkwr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:42:11.109265 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3109" for this suite. @ 01/12/25 22:42:11.114
• [2.190 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/12/25 22:42:11.137
  I0112 22:42:11.137224 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename events @ 01/12/25 22:42:11.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:11.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:11.271
  STEP: Create set of events @ 01/12/25 22:42:11.274
  STEP: get a list of Events with a label in the current namespace @ 01/12/25 22:42:11.34
  STEP: delete a list of events @ 01/12/25 22:42:11.343
  I0112 22:42:11.343679 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/12/25 22:42:11.39
  I0112 22:42:11.394144 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6019" for this suite. @ 01/12/25 22:42:11.397
• [0.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 01/12/25 22:42:11.41
  I0112 22:42:11.410812 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 22:42:11.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:11.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:11.445
  STEP: getting /apis @ 01/12/25 22:42:11.47
  STEP: getting /apis/admissionregistration.k8s.io @ 01/12/25 22:42:11.474
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/12/25 22:42:11.475
  STEP: creating @ 01/12/25 22:42:11.477
  STEP: getting @ 01/12/25 22:42:11.528
  STEP: listing @ 01/12/25 22:42:11.532
  STEP: watching @ 01/12/25 22:42:11.537
  I0112 22:42:11.537112 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 01/12/25 22:42:11.539
  STEP: updating @ 01/12/25 22:42:11.575
  I0112 22:42:11.591099 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  I0112 22:42:11.591183 23 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0112 22:42:11.591281 23 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  I0112 22:42:11.591310 23 validatingadmissionpolicy.go:573] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/12/25 22:42:11.591
  STEP: patching /status @ 01/12/25 22:42:11.594
  STEP: updating /status @ 01/12/25 22:42:11.614
  STEP: deleting @ 01/12/25 22:42:11.663
  STEP: deleting a collection @ 01/12/25 22:42:11.699
  I0112 22:42:11.735651 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9971" for this suite. @ 01/12/25 22:42:11.74
• [0.345 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/12/25 22:42:11.755
  I0112 22:42:11.755858 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:42:11.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:11.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:11.786
  STEP: Setting up server cert @ 01/12/25 22:42:11.836
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:42:12.214
  STEP: Deploying the webhook pod @ 01/12/25 22:42:12.23
  STEP: Wait for the deployment to be ready @ 01/12/25 22:42:12.255
  I0112 22:42:12.263739 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:42:14.275
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:42:14.294
  I0112 22:42:15.294850 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/12/25 22:42:15.309
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/12/25 22:42:15.344
  STEP: Creating a configMap that should not be mutated @ 01/12/25 22:42:15.357
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/12/25 22:42:15.383
  STEP: Creating a configMap that should be mutated @ 01/12/25 22:42:15.403
  I0112 22:42:15.540690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1036" for this suite. @ 01/12/25 22:42:15.545
  STEP: Destroying namespace "webhook-markers-7179" for this suite. @ 01/12/25 22:42:15.567
• [3.839 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/12/25 22:42:15.594
  I0112 22:42:15.594714 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/12/25 22:42:15.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:15.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:15.627
  STEP: create the rc @ 01/12/25 22:42:15.634
  W0112 22:42:15.653196      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/12/25 22:42:23.693
  STEP: wait for the rc to be deleted @ 01/12/25 22:42:24.032
  I0112 22:42:25.112111 23 garbage_collector.go:670] 99 pods remaining
  I0112 22:42:25.112225 23 garbage_collector.go:677] 86 pods has nil DeletionTimestamp
  I0112 22:42:25.112245 23 garbage_collector.go:678] 
  I0112 22:42:26.049860 23 garbage_collector.go:670] 79 pods remaining
  I0112 22:42:26.049915 23 garbage_collector.go:677] 69 pods has nil DeletionTimestamp
  I0112 22:42:26.049948 23 garbage_collector.go:678] 
  I0112 22:42:27.044824 23 garbage_collector.go:670] 62 pods remaining
  I0112 22:42:27.044880 23 garbage_collector.go:677] 58 pods has nil DeletionTimestamp
  I0112 22:42:27.044892 23 garbage_collector.go:678] 
  I0112 22:42:28.050142 23 garbage_collector.go:670] 48 pods remaining
  I0112 22:42:28.050796 23 garbage_collector.go:677] 42 pods has nil DeletionTimestamp
  I0112 22:42:28.050874 23 garbage_collector.go:678] 
  I0112 22:42:29.061571 23 garbage_collector.go:670] 32 pods remaining
  I0112 22:42:29.061649 23 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0112 22:42:29.061668 23 garbage_collector.go:678] 
  I0112 22:42:30.082879 23 garbage_collector.go:670] 24 pods remaining
  I0112 22:42:30.083677 23 garbage_collector.go:677] 17 pods has nil DeletionTimestamp
  I0112 22:42:30.084305 23 garbage_collector.go:678] 
  I0112 22:42:31.057330 23 garbage_collector.go:670] 9 pods remaining
  I0112 22:42:31.057381 23 garbage_collector.go:677] 3 pods has nil DeletionTimestamp
  I0112 22:42:31.057401 23 garbage_collector.go:678] 
  STEP: Gathering metrics @ 01/12/25 22:42:32.042
  W0112 22:42:32.049289      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 22:42:32.049342 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 22:42:32.049588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1994" for this suite. @ 01/12/25 22:42:32.054
• [16.475 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 01/12/25 22:42:32.07
  I0112 22:42:32.070353 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:42:32.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:32.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:32.146
  STEP: creating a collection of services @ 01/12/25 22:42:32.151
  I0112 22:42:32.151679 23 service.go:3635] Creating e2e-svc-a-q657r
  I0112 22:42:32.185562 23 service.go:3635] Creating e2e-svc-b-nfdnf
  I0112 22:42:32.244308 23 service.go:3635] Creating e2e-svc-c-hp2vz
  STEP: deleting service collection @ 01/12/25 22:42:32.284
  I0112 22:42:32.429136 23 service.go:3670] Collection of services has been deleted
  I0112 22:42:32.429352 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8811" for this suite. @ 01/12/25 22:42:32.435
• [0.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/12/25 22:42:32.455
  I0112 22:42:32.455664 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 22:42:32.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:32.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:32.507
  I0112 22:42:32.515275 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/12/25 22:42:33.604
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/12/25 22:42:33.628
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/12/25 22:42:34.643
  I0112 22:42:34.677551 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/12/25 22:42:34.677
  I0112 22:42:35.694437 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4331" for this suite. @ 01/12/25 22:42:35.699
• [3.266 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 01/12/25 22:42:35.721
  I0112 22:42:35.721393 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 22:42:35.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:35.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:35.782
  I0112 22:42:35.794467 23 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-5871"
  I0112 22:42:35.823919 23 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-5871"
  STEP: waiting for a new root ca configmap created @ 01/12/25 22:42:36.324
  I0112 22:42:36.334984 23 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-5871"
  I0112 22:42:36.350832 23 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-5871"
  STEP: waiting for the root ca configmap reconciled @ 01/12/25 22:42:36.851
  I0112 22:42:36.856514 23 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-5871"
  I0112 22:42:36.857340 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5871" for this suite. @ 01/12/25 22:42:36.864
• [1.168 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/12/25 22:42:36.89
  I0112 22:42:36.890107 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 22:42:36.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:36.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:36.938
  STEP: Creating secret with name secret-test-dd84af30-c214-4c60-a35a-c4b8445c39da @ 01/12/25 22:42:36.958
  STEP: Creating a pod to test consume secrets @ 01/12/25 22:42:36.998
  STEP: Saw pod success @ 01/12/25 22:42:49.105
  I0112 22:42:49.109380 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-b2f6de2f-7d32-46f0-aa81-3a1d4555071f container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 22:42:49.116
  I0112 22:42:49.148642 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5660" for this suite. @ 01/12/25 22:42:49.154
• [12.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/12/25 22:42:49.168
  I0112 22:42:49.168778 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename events @ 01/12/25 22:42:49.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:49.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:49.218
  STEP: Create set of events @ 01/12/25 22:42:49.223
  I0112 22:42:49.245874 23 core_events.go:198] created test-event-1
  I0112 22:42:49.266320 23 core_events.go:198] created test-event-2
  I0112 22:42:49.278657 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/12/25 22:42:49.278
  STEP: delete collection of events @ 01/12/25 22:42:49.282
  I0112 22:42:49.282221 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/12/25 22:42:49.323
  I0112 22:42:49.323353 23 core_events.go:230] requesting list of events to confirm quantity
  I0112 22:42:49.327251 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9076" for this suite. @ 01/12/25 22:42:49.331
• [0.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/12/25 22:42:49.354
  I0112 22:42:49.354104 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 22:42:49.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:49.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:49.392
  STEP: Creating projection with secret that has name secret-emptykey-test-cad58820-ad7c-4da3-af95-d4c34546e12b @ 01/12/25 22:42:49.399
  I0112 22:42:49.401655 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3515" for this suite. @ 01/12/25 22:42:49.405
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 01/12/25 22:42:49.42
  I0112 22:42:49.420675 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 22:42:49.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:49.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:49.463
  I0112 22:42:49.468542 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 create -f -'
  I0112 22:42:49.630000 23 builder.go:146] stderr: ""
  I0112 22:42:49.630119 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0112 22:42:49.630218 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 create -f -'
  I0112 22:42:49.790342 23 builder.go:146] stderr: ""
  I0112 22:42:49.790398 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/12/25 22:42:49.79
  I0112 22:42:50.795073 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 22:42:50.795184 23 framework.go:733] Found 1 / 1
  I0112 22:42:50.795248 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0112 22:42:50.800730 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 22:42:50.800800 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 22:42:50.800871 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 describe pod agnhost-primary-8lkn9'
  I0112 22:42:50.890890 23 builder.go:146] stderr: ""
  I0112 22:42:50.890963 23 builder.go:147] stdout: "Name:             agnhost-primary-8lkn9\nNamespace:        kubectl-8050\nPriority:         0\nService Account:  default\nNode:             ubuntu/172.17.202.11\nStart Time:       Sun, 12 Jan 2025 22:42:49 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: ec292f300be9858607bea31a9398b5bf0c8a8a11b6f85052883fcb41a49000b8\n                  cni.projectcalico.org/podIP: 10.1.243.217/32\n                  cni.projectcalico.org/podIPs: 10.1.243.217/32\nStatus:           Running\nIP:               10.1.243.217\nIPs:\n  IP:           10.1.243.217\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c703ff564ca0dbdd03ff534f6a2490de9db59c06f8a9f8f598b411e4eb3f5afb\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 12 Jan 2025 22:42:50 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mllh5 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-mllh5:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8050/agnhost-primary-8lkn9 to ubuntu\n  Normal  Pulled     0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0112 22:42:50.891040 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 describe rc agnhost-primary'
  I0112 22:42:50.977276 23 builder.go:146] stderr: ""
  I0112 22:42:50.977380 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8050\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-8lkn9\n"
  I0112 22:42:50.977465 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 describe service agnhost-primary'
  I0112 22:42:51.064726 23 builder.go:146] stderr: ""
  I0112 22:42:51.064841 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-8050\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.84\nIPs:                      10.152.183.84\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.1.243.217:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0112 22:42:51.069777 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 describe node ubuntu'
  I0112 22:42:51.178612 23 builder.go:146] stderr: ""
  I0112 22:42:51.178761 23 builder.go:147] stdout: "Name:               ubuntu\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ubuntu\n                    kubernetes.io/os=linux\n                    microk8s.io/cluster=true\n                    node.kubernetes.io/microk8s-controlplane=microk8s-controlplane\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 172.17.202.11/20\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.1.243.192\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 12 Jan 2025 22:12:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ubuntu\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 12 Jan 2025 22:42:42 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 12 Jan 2025 22:13:52 +0000   Sun, 12 Jan 2025 22:13:52 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 12 Jan 2025 22:40:46 +0000   Sun, 12 Jan 2025 22:12:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 12 Jan 2025 22:40:46 +0000   Sun, 12 Jan 2025 22:12:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 12 Jan 2025 22:40:46 +0000   Sun, 12 Jan 2025 22:12:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 12 Jan 2025 22:40:46 +0000   Sun, 12 Jan 2025 22:13:23 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.17.202.11\n  Hostname:    ubuntu\nCapacity:\n  cpu:                4\n  ephemeral-storage:  99472504Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8131332Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  98423928Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8028932Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 a1ac71774562422dade9903e828c9fc6\n  System UUID:                c475727a-6ceb-44f6-a2d0-a03ca7f058de\n  Boot ID:                    b21659f3-82c9-4d98-a74a-84b424514b27\n  Kernel Version:             6.8.0-51-generic\n  OS Image:                   Ubuntu 24.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.36\n  Kubelet Version:            v1.32.0\n  Kube-Proxy Version:         v1.32.0\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-5947598c79-jtqwt                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         29m\n  kube-system                 calico-node-7qkl4                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         29m\n  kube-system                 coredns-79b94494c7-cjncb                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     29m\n  kubectl-8050                agnhost-primary-8lkn9                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z8bgt    0 (0%)        0 (0%)      0 (0%)           0 (0%)         14m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                350m (8%)  0 (0%)\n  memory             70Mi (0%)  170Mi (2%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:              <none>\n"
  I0112 22:42:51.178848 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8050 describe namespace kubectl-8050'
  I0112 22:42:51.261589 23 builder.go:146] stderr: ""
  I0112 22:42:51.261656 23 builder.go:147] stdout: "Name:         kubectl-8050\nLabels:       e2e-framework=kubectl\n              e2e-run=50fb3fd7-9832-4cbc-823e-abd796aad631\n              kubernetes.io/metadata.name=kubectl-8050\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0112 22:42:51.261758 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8050" for this suite. @ 01/12/25 22:42:51.265
• [1.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 01/12/25 22:42:51.287
  I0112 22:42:51.287362 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 22:42:51.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:42:51.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:42:51.318
  STEP: Looking for a node to schedule job pods @ 01/12/25 22:42:51.329
  STEP: Creating a job @ 01/12/25 22:42:51.334
  STEP: Waiting for all the pods to be ready @ 01/12/25 22:42:51.349
  STEP: Fetch all running pods @ 01/12/25 22:42:55.365
  STEP: Evict all the Pods @ 01/12/25 22:42:55.369
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-bt659/job-4074 @ 01/12/25 22:42:55.369
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-5cwfr/job-4074 @ 01/12/25 22:42:55.369
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-nr6gr/job-4074 @ 01/12/25 22:42:55.369
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-bt659/job-4074 to be deleted @ 01/12/25 22:42:55.417
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-nr6gr/job-4074 to be deleted @ 01/12/25 22:42:55.428
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-5cwfr/job-4074 to be deleted @ 01/12/25 22:42:55.444
  STEP: Ensuring job reaches completions @ 01/12/25 22:42:59.462
  I0112 22:43:41.598196 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4074" for this suite. @ 01/12/25 22:43:41.601
• [50.334 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/12/25 22:43:41.621
  I0112 22:43:41.621327 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 22:43:41.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:43:41.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:43:41.682
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 22:43:41.688
  STEP: create the pod with lifecycle hook @ 01/12/25 22:43:43.724
  STEP: delete the pod with lifecycle hook @ 01/12/25 22:43:45.752
  STEP: check prestop hook @ 01/12/25 22:43:49.802
  I0112 22:43:49.814414 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-686" for this suite. @ 01/12/25 22:43:49.819
• [8.214 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/12/25 22:43:49.835
  I0112 22:43:49.835689 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 22:43:49.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:43:49.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:43:49.868
  I0112 22:43:49.899815 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2679" for this suite. @ 01/12/25 22:43:49.904
• [0.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 01/12/25 22:43:49.932
  I0112 22:43:49.932032 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 22:43:49.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:43:49.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:43:49.98
  STEP: Creating service test in namespace statefulset-1411 @ 01/12/25 22:43:49.984
  STEP: Creating a new StatefulSet @ 01/12/25 22:43:49.996
  I0112 22:43:50.031139 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I0112 22:44:00.035456 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 22:44:00.035545 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 22:44:00.035574 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0112 22:44:00.048066 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-1411 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 22:44:00.209814 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 22:44:00.209965 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 22:44:00.209993 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/12/25 22:44:10.22
  I0112 22:44:10.237853 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/12/25 22:44:10.237
  STEP: Updating Pods in reverse ordinal order @ 01/12/25 22:44:20.252
  I0112 22:44:20.257502 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-1411 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 22:44:20.411404 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 22:44:20.411458 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 22:44:20.411483 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 22:44:30.434062 23 wait.go:158] Waiting for StatefulSet statefulset-1411/ss2 to complete update
  I0112 22:44:30.434168 23 wait.go:165] Waiting for Pod statefulset-1411/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0112 22:44:30.434194 23 wait.go:165] Waiting for Pod statefulset-1411/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0112 22:44:40.435389 23 wait.go:158] Waiting for StatefulSet statefulset-1411/ss2 to complete update
  STEP: Rolling back to a previous revision @ 01/12/25 22:44:50.434
  I0112 22:44:50.435045 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-1411 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 22:44:50.602726 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 22:44:50.602790 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 22:44:50.602807 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 22:45:00.633880 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/12/25 22:45:10.643
  I0112 22:45:10.648312 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-1411 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 22:45:10.812820 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 22:45:10.812884 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 22:45:10.812906 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 22:45:20.831150 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1411
  I0112 22:45:20.835212 23 rest.go:152] Scaling statefulset ss2 to 0
  I0112 22:45:30.871980 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 22:45:30.876290 23 rest.go:90] Deleting statefulset ss2
  I0112 22:45:30.898361 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1411" for this suite. @ 01/12/25 22:45:30.903
• [100.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/12/25 22:45:30.93
  I0112 22:45:30.930079 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:45:30.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:45:30.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:45:30.964
  STEP: Creating secret with name s-test-opt-del-b7ce3087-55d8-4182-8df4-2b1d5e02c100 @ 01/12/25 22:45:30.98
  STEP: Creating secret with name s-test-opt-upd-b9ffdaa9-c7fd-44d0-9b05-74c6ffda48bd @ 01/12/25 22:45:30.993
  STEP: Creating the pod @ 01/12/25 22:45:31.013
  STEP: Deleting secret s-test-opt-del-b7ce3087-55d8-4182-8df4-2b1d5e02c100 @ 01/12/25 22:45:33.075
  STEP: Updating secret s-test-opt-upd-b9ffdaa9-c7fd-44d0-9b05-74c6ffda48bd @ 01/12/25 22:45:33.09
  STEP: Creating secret with name s-test-opt-create-91afb372-7c69-46f1-9f2e-b17accf47c57 @ 01/12/25 22:45:33.103
  STEP: waiting to observe update in volume @ 01/12/25 22:45:33.123
  I0112 22:45:35.160287 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8882" for this suite. @ 01/12/25 22:45:35.163
• [4.249 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/12/25 22:45:35.179
  I0112 22:45:35.179282 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 22:45:35.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:45:35.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:45:35.218
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/12/25 22:45:35.223
  I0112 22:45:35.239783 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0112 22:45:40.246532 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 22:45:40.246
  STEP: getting scale subresource @ 01/12/25 22:45:40.246
  STEP: updating a scale subresource @ 01/12/25 22:45:40.25
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/12/25 22:45:40.263
  STEP: Patch a scale subresource @ 01/12/25 22:45:40.268
  I0112 22:45:40.295553 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5061" for this suite. @ 01/12/25 22:45:40.311
• [5.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/12/25 22:45:40.357
  I0112 22:45:40.357481 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:45:40.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:45:40.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:45:40.44
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5066 @ 01/12/25 22:45:40.444
  STEP: changing the ExternalName service to type=ClusterIP @ 01/12/25 22:45:40.461
  STEP: creating replication controller externalname-service in namespace services-5066 @ 01/12/25 22:45:40.487
  I0112 22:45:40.522302      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5066, replica count: 2
  I0112 22:45:43.574568      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 22:45:43.574646 23 resource.go:361] Creating new exec pod
  I0112 22:45:46.597105 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-5066 exec execpodf7b7l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 22:45:46.752471 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.254) 80 port [tcp/http] succeeded!\n"
  I0112 22:45:46.752544 23 builder.go:147] stdout: "externalname-service-m48pk"
  I0112 22:45:46.752633 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-5066 exec execpodf7b7l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  I0112 22:45:46.902760 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  I0112 22:45:46.902798 23 builder.go:147] stdout: "externalname-service-sbcz9"
  I0112 22:45:46.902881 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0112 22:45:47.014916 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5066" for this suite. @ 01/12/25 22:45:47.021
• [6.680 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 01/12/25 22:45:47.038
  I0112 22:45:47.038474 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 22:45:47.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:45:47.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:45:47.1
  I0112 22:45:47.142502 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 22:46:47.147911 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/12/25 22:46:47.151
  I0112 22:46:47.151175 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/12/25 22:46:47.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:46:47.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:46:47.194
  STEP: Finding an available node @ 01/12/25 22:46:47.199
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/12/25 22:46:47.199
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/12/25 22:46:49.231
  I0112 22:46:49.266296 23 preemption.go:709] found a healthy node: ubuntu
  STEP: Adding a custom resource @ 01/12/25 22:46:49.271
  I0112 22:46:55.434861 23 preemption.go:828] pods created so far: [1 1 1]
  I0112 22:46:55.435073 23 preemption.go:829] length of pods created so far: 3
  I0112 22:46:57.457775 23 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 01/12/25 22:47:04.46
  STEP: Removing a custom resource @ 01/12/25 22:47:04.582
  STEP: Removing a custom resource @ 01/12/25 22:47:04.592
  I0112 22:47:04.603138 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6484" for this suite. @ 01/12/25 22:47:04.607
  I0112 22:47:04.623722 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2583" for this suite. @ 01/12/25 22:47:04.628
• [77.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/12/25 22:47:04.654
  I0112 22:47:04.654108 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:47:04.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:47:04.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:47:04.711
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 22:47:04.716
  STEP: Saw pod success @ 01/12/25 22:47:08.759
  I0112 22:47:08.763064 23 output.go:207] Trying to get logs from node ubuntu2 pod downwardapi-volume-4a7aafe1-669f-49f6-93fb-ee4f71948e17 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 22:47:08.775
  I0112 22:47:08.820089 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3249" for this suite. @ 01/12/25 22:47:08.824
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/12/25 22:47:08.839
  I0112 22:47:08.839022 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 22:47:08.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:47:08.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:47:08.872
  STEP: apply creating a deployment @ 01/12/25 22:47:08.876
  I0112 22:47:08.897632 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9983" for this suite. @ 01/12/25 22:47:08.902
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/12/25 22:47:08.915
  I0112 22:47:08.915898 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 22:47:08.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:47:08.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:47:08.954
  I0112 22:47:08.959064 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 22:47:15.486635 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5147" for this suite. @ 01/12/25 22:47:15.49
• [6.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 01/12/25 22:47:15.523
  I0112 22:47:15.523127 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 22:47:15.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:47:15.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:47:15.562
  I0112 22:47:15.608148 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 22:48:15.618179 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/12/25 22:48:15.624
  STEP: Adding a custom resource @ 01/12/25 22:48:15.624
  I0112 22:48:15.678382 23 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0112 22:48:15.712799 23 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/12/25 22:48:15.712
  I0112 22:48:15.849106 23 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0112 22:48:15.867997 23 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/12/25 22:48:15.868
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/12/25 22:48:19.901
  STEP: Removing a custom resource @ 01/12/25 22:48:23.997
  STEP: Removing a custom resource @ 01/12/25 22:48:24.014
  I0112 22:48:24.032910 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-932" for this suite. @ 01/12/25 22:48:24.037
• [68.529 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/12/25 22:48:24.052
  I0112 22:48:24.052880 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 22:48:24.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:24.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:24.119
  STEP: create the container @ 01/12/25 22:48:24.133
  W0112 22:48:24.149306      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/12/25 22:48:24.149
  STEP: get the container status @ 01/12/25 22:48:28.184
  STEP: the container should be terminated @ 01/12/25 22:48:28.189
  STEP: the termination message should be set @ 01/12/25 22:48:28.189
  I0112 22:48:28.189602 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/12/25 22:48:28.189
  I0112 22:48:28.238470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7579" for this suite. @ 01/12/25 22:48:28.243
• [4.215 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/12/25 22:48:28.267
  I0112 22:48:28.268023 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename disruption @ 01/12/25 22:48:28.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:28.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:28.308
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/12/25 22:48:28.312
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:48:28.325
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/12/25 22:48:30.339
  STEP: Waiting for all pods to be running @ 01/12/25 22:48:30.339
  I0112 22:48:30.343268 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 01/12/25 22:48:32.348
  STEP: Updating the pdb to allow a pod to be evicted @ 01/12/25 22:48:32.363
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:48:32.379
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/12/25 22:48:34.385
  STEP: Waiting for all pods to be running @ 01/12/25 22:48:34.385
  STEP: Waiting for the pdb to observed all healthy pods @ 01/12/25 22:48:34.389
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/12/25 22:48:34.437
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:48:34.626
  STEP: Waiting for all pods to be running @ 01/12/25 22:48:36.632
  STEP: locating a running pod @ 01/12/25 22:48:36.636
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/12/25 22:48:36.649
  STEP: Waiting for the pdb to be deleted @ 01/12/25 22:48:36.665
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/12/25 22:48:36.669
  STEP: Waiting for all pods to be running @ 01/12/25 22:48:36.669
  I0112 22:48:36.708245 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7187" for this suite. @ 01/12/25 22:48:36.713
• [8.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 01/12/25 22:48:36.73
  I0112 22:48:36.730206 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:48:36.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:36.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:36.788
  STEP: creating a Service @ 01/12/25 22:48:36.798
  STEP: watching for the Service to be added @ 01/12/25 22:48:36.848
  I0112 22:48:36.851508 23 service.go:3425] Found Service test-service-4qfn6 in namespace services-3057 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30322}]
  I0112 22:48:36.851610 23 service.go:3432] Service test-service-4qfn6 created
  STEP: Getting /status @ 01/12/25 22:48:36.851
  I0112 22:48:36.856153 23 service.go:3443] Service test-service-4qfn6 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/12/25 22:48:36.856
  STEP: watching for the Service to be patched @ 01/12/25 22:48:36.871
  I0112 22:48:36.874049 23 service.go:3466] observed Service test-service-4qfn6 in namespace services-3057 with annotations: map[] & LoadBalancer: {[]}
  I0112 22:48:36.874119 23 service.go:3469] Found Service test-service-4qfn6 in namespace services-3057 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000e09970 []}]}
  I0112 22:48:36.874148 23 service.go:3476] Service test-service-4qfn6 has service status patched
  STEP: updating the ServiceStatus @ 01/12/25 22:48:36.874
  I0112 22:48:36.891357 23 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/12/25 22:48:36.891
  I0112 22:48:36.893218 23 service.go:3507] Observed Service test-service-4qfn6 in namespace services-3057 with annotations: map[] & Conditions: []
  I0112 22:48:36.893290 23 service.go:3518] Observed Service test-service-4qfn6 in namespace services-3057 with annotations: map[patchedstatus:true] & Conditions: []
  I0112 22:48:36.893317 23 service.go:3514] Found Service test-service-4qfn6 in namespace services-3057 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 22:48:36.893333 23 service.go:3525] Service test-service-4qfn6 has service status updated
  STEP: patching the service @ 01/12/25 22:48:36.893
  STEP: watching for the Service to be patched @ 01/12/25 22:48:36.915
  I0112 22:48:36.917492 23 service.go:3548] observed Service test-service-4qfn6 in namespace services-3057 with labels: map[test-service-static:true]
  I0112 22:48:36.917581 23 service.go:3548] observed Service test-service-4qfn6 in namespace services-3057 with labels: map[test-service-static:true]
  I0112 22:48:36.917608 23 service.go:3548] observed Service test-service-4qfn6 in namespace services-3057 with labels: map[test-service-static:true]
  I0112 22:48:36.917696 23 service.go:3551] Found Service test-service-4qfn6 in namespace services-3057 with labels: map[test-service:patched test-service-static:true]
  I0112 22:48:36.917723 23 service.go:3558] Service test-service-4qfn6 patched
  STEP: deleting the service @ 01/12/25 22:48:36.917
  STEP: watching for the Service to be deleted @ 01/12/25 22:48:36.966
  I0112 22:48:36.968384 23 service.go:3582] Observed event: ADDED
  I0112 22:48:36.968422 23 service.go:3582] Observed event: MODIFIED
  I0112 22:48:36.968444 23 service.go:3582] Observed event: MODIFIED
  I0112 22:48:36.968503 23 service.go:3582] Observed event: MODIFIED
  I0112 22:48:36.968583 23 service.go:3578] Found Service test-service-4qfn6 in namespace services-3057 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0112 22:48:36.968600 23 service.go:3587] Service test-service-4qfn6 deleted
  I0112 22:48:36.968710 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3057" for this suite. @ 01/12/25 22:48:36.972
• [0.260 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/12/25 22:48:36.989
  I0112 22:48:36.989877 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 22:48:36.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:37.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:37.035
  I0112 22:48:37.064899 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7714" for this suite. @ 01/12/25 22:48:37.068
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/12/25 22:48:37.088
  I0112 22:48:37.088260 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 22:48:37.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:37.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:37.119
  I0112 22:48:37.202807 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7098" for this suite. @ 01/12/25 22:48:37.206
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/12/25 22:48:37.219
  I0112 22:48:37.219468 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 22:48:37.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:37.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:37.247
  STEP: Create set of pods @ 01/12/25 22:48:37.251
  I0112 22:48:37.266791 23 pods.go:871] created test-pod-1
  I0112 22:48:37.291882 23 pods.go:871] created test-pod-2
  I0112 22:48:37.320535 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/12/25 22:48:37.32
  STEP: waiting for all pods to be deleted @ 01/12/25 22:48:39.373
  I0112 22:48:39.378272 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0112 22:48:40.380276 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0112 22:48:41.377439 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0112 22:48:42.378104 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3160" for this suite. @ 01/12/25 22:48:42.383
• [5.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/12/25 22:48:42.422
  I0112 22:48:42.422554 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename taint-single-pod @ 01/12/25 22:48:42.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:48:42.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:48:42.537
  I0112 22:48:42.548527 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 22:49:42.549201 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0112 22:49:42.552846 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/12/25 22:49:42.552
  I0112 22:49:42.777297 23 taints.go:294] Pod is running on ubuntu. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/12/25 22:49:42.777
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 22:49:42.796
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/12/25 22:49:42.803
  I0112 22:49:42.803395 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0112 22:49:42.803416 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 22:49:42.862
  STEP: Waiting some time to make sure that toleration time passed. @ 01/12/25 22:49:42.867
  I0112 22:50:57.868124 23 taints.go:329] Pod wasn't evicted. Test successful
  I0112 22:50:57.868371 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4358" for this suite. @ 01/12/25 22:50:57.873
• [135.468 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/12/25 22:50:57.89
  I0112 22:50:57.891046 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:50:57.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:50:57.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:50:57.924
  STEP: Setting up server cert @ 01/12/25 22:50:57.983
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:50:58.196
  STEP: Deploying the webhook pod @ 01/12/25 22:50:58.213
  STEP: Wait for the deployment to be ready @ 01/12/25 22:50:58.24
  I0112 22:50:58.248919 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:51:00.264
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:51:00.315
  I0112 22:51:01.316130 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 22:51:01.323409 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3054-crds.webhook.example.com via the AdmissionRegistration API @ 01/12/25 22:51:01.842
  STEP: Creating a custom resource while v1 is storage version @ 01/12/25 22:51:01.867
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/12/25 22:51:03.895
  STEP: Patching the custom resource while v2 is storage version @ 01/12/25 22:51:03.91
  I0112 22:51:04.657873 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7680" for this suite. @ 01/12/25 22:51:04.664
  STEP: Destroying namespace "webhook-markers-4622" for this suite. @ 01/12/25 22:51:04.684
• [6.812 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/12/25 22:51:04.703
  I0112 22:51:04.703609 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 22:51:04.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:04.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:04.75
  I0112 22:51:04.756674 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 22:51:05.799674 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-225" for this suite. @ 01/12/25 22:51:05.803
• [1.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/12/25 22:51:05.82
  I0112 22:51:05.820113 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svc-latency @ 01/12/25 22:51:05.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:05.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:05.85
  I0112 22:51:05.854536 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-7192 @ 01/12/25 22:51:05.855
  I0112 22:51:05.868028      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-7192, replica count: 1
  I0112 22:51:06.919008      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 22:51:07.919517      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 22:51:08.046218 23 service_latency.go:356] Created: latency-svc-5vtmf
  I0112 22:51:08.062225 23 service_latency.go:363] Got endpoints: latency-svc-5vtmf [41.953423ms]
  I0112 22:51:08.087443 23 service_latency.go:356] Created: latency-svc-m2ctx
  I0112 22:51:08.106919 23 service_latency.go:363] Got endpoints: latency-svc-m2ctx [44.503113ms]
  I0112 22:51:08.123676 23 service_latency.go:356] Created: latency-svc-98hlm
  I0112 22:51:08.142515 23 service_latency.go:363] Got endpoints: latency-svc-98hlm [80.050862ms]
  I0112 22:51:08.171761 23 service_latency.go:356] Created: latency-svc-vcfbq
  I0112 22:51:08.202311 23 service_latency.go:363] Got endpoints: latency-svc-vcfbq [139.81101ms]
  I0112 22:51:08.212703 23 service_latency.go:356] Created: latency-svc-k6sjl
  I0112 22:51:08.244489 23 service_latency.go:363] Got endpoints: latency-svc-k6sjl [181.968132ms]
  I0112 22:51:08.253345 23 service_latency.go:356] Created: latency-svc-fjp6b
  I0112 22:51:08.293447 23 service_latency.go:363] Got endpoints: latency-svc-fjp6b [231.042625ms]
  I0112 22:51:08.300723 23 service_latency.go:356] Created: latency-svc-bgr7n
  I0112 22:51:08.317549 23 service_latency.go:363] Got endpoints: latency-svc-bgr7n [254.980424ms]
  I0112 22:51:08.344135 23 service_latency.go:356] Created: latency-svc-r86h7
  I0112 22:51:08.359081 23 service_latency.go:356] Created: latency-svc-l9829
  I0112 22:51:08.410324 23 service_latency.go:363] Got endpoints: latency-svc-r86h7 [347.758332ms]
  I0112 22:51:08.427427 23 service_latency.go:363] Got endpoints: latency-svc-l9829 [364.793861ms]
  I0112 22:51:08.456794 23 service_latency.go:356] Created: latency-svc-pqwh8
  I0112 22:51:08.472135 23 service_latency.go:363] Got endpoints: latency-svc-pqwh8 [409.538071ms]
  I0112 22:51:08.488250 23 service_latency.go:356] Created: latency-svc-pks7j
  I0112 22:51:08.518308 23 service_latency.go:363] Got endpoints: latency-svc-pks7j [455.641277ms]
  I0112 22:51:08.525113 23 service_latency.go:356] Created: latency-svc-q98cp
  I0112 22:51:08.562764 23 service_latency.go:363] Got endpoints: latency-svc-q98cp [500.10679ms]
  I0112 22:51:08.569593 23 service_latency.go:356] Created: latency-svc-8lrk2
  I0112 22:51:08.628277 23 service_latency.go:363] Got endpoints: latency-svc-8lrk2 [565.584813ms]
  I0112 22:51:08.655167 23 service_latency.go:356] Created: latency-svc-5gwsl
  I0112 22:51:08.687004 23 service_latency.go:363] Got endpoints: latency-svc-5gwsl [624.386265ms]
  I0112 22:51:08.709196 23 service_latency.go:356] Created: latency-svc-rs9x8
  I0112 22:51:08.733469 23 service_latency.go:363] Got endpoints: latency-svc-rs9x8 [670.781869ms]
  I0112 22:51:08.749141 23 service_latency.go:356] Created: latency-svc-nx954
  I0112 22:51:08.766082 23 service_latency.go:363] Got endpoints: latency-svc-nx954 [703.480531ms]
  I0112 22:51:08.780167 23 service_latency.go:356] Created: latency-svc-n5fnb
  I0112 22:51:08.797605 23 service_latency.go:363] Got endpoints: latency-svc-n5fnb [690.518586ms]
  I0112 22:51:08.812349 23 service_latency.go:356] Created: latency-svc-df2lz
  I0112 22:51:08.855086 23 service_latency.go:363] Got endpoints: latency-svc-df2lz [712.460893ms]
  I0112 22:51:08.873155 23 service_latency.go:356] Created: latency-svc-h24p9
  I0112 22:51:08.901624 23 service_latency.go:363] Got endpoints: latency-svc-h24p9 [699.20585ms]
  I0112 22:51:08.917207 23 service_latency.go:356] Created: latency-svc-8jzl9
  I0112 22:51:08.972601 23 service_latency.go:363] Got endpoints: latency-svc-8jzl9 [728.033227ms]
  I0112 22:51:08.998389 23 service_latency.go:356] Created: latency-svc-znlch
  I0112 22:51:09.017579 23 service_latency.go:363] Got endpoints: latency-svc-znlch [724.016144ms]
  I0112 22:51:09.034872 23 service_latency.go:356] Created: latency-svc-chg4q
  I0112 22:51:09.053335 23 service_latency.go:363] Got endpoints: latency-svc-chg4q [735.660096ms]
  I0112 22:51:09.069908 23 service_latency.go:356] Created: latency-svc-chsjt
  I0112 22:51:09.087247 23 service_latency.go:363] Got endpoints: latency-svc-chsjt [676.810844ms]
  I0112 22:51:09.104171 23 service_latency.go:356] Created: latency-svc-x5hxh
  I0112 22:51:09.129209 23 service_latency.go:363] Got endpoints: latency-svc-x5hxh [701.655441ms]
  I0112 22:51:09.135781 23 service_latency.go:356] Created: latency-svc-97jc5
  I0112 22:51:09.170061 23 service_latency.go:363] Got endpoints: latency-svc-97jc5 [697.879657ms]
  I0112 22:51:09.178021 23 service_latency.go:356] Created: latency-svc-9qz74
  I0112 22:51:09.195116 23 service_latency.go:363] Got endpoints: latency-svc-9qz74 [676.718046ms]
  I0112 22:51:09.219680 23 service_latency.go:356] Created: latency-svc-89c29
  I0112 22:51:09.235740 23 service_latency.go:363] Got endpoints: latency-svc-89c29 [672.897563ms]
  I0112 22:51:09.252247 23 service_latency.go:356] Created: latency-svc-kspw9
  I0112 22:51:09.269430 23 service_latency.go:363] Got endpoints: latency-svc-kspw9 [640.952899ms]
  I0112 22:51:09.297766 23 service_latency.go:356] Created: latency-svc-2kmh2
  I0112 22:51:09.313798 23 service_latency.go:363] Got endpoints: latency-svc-2kmh2 [626.686859ms]
  I0112 22:51:09.337653 23 service_latency.go:356] Created: latency-svc-fxsn6
  I0112 22:51:09.371025 23 service_latency.go:363] Got endpoints: latency-svc-fxsn6 [637.489914ms]
  I0112 22:51:09.378251 23 service_latency.go:356] Created: latency-svc-p6rhn
  I0112 22:51:09.402274 23 service_latency.go:363] Got endpoints: latency-svc-p6rhn [636.126421ms]
  I0112 22:51:09.436457 23 service_latency.go:356] Created: latency-svc-65vt6
  I0112 22:51:09.472825 23 service_latency.go:363] Got endpoints: latency-svc-65vt6 [675.111357ms]
  I0112 22:51:09.497957 23 service_latency.go:356] Created: latency-svc-wth49
  I0112 22:51:09.513862 23 service_latency.go:363] Got endpoints: latency-svc-wth49 [658.689126ms]
  I0112 22:51:09.548676 23 service_latency.go:356] Created: latency-svc-dtxqb
  I0112 22:51:09.574042 23 service_latency.go:363] Got endpoints: latency-svc-dtxqb [672.32267ms]
  I0112 22:51:09.584379 23 service_latency.go:356] Created: latency-svc-vm7qk
  I0112 22:51:09.616255 23 service_latency.go:363] Got endpoints: latency-svc-vm7qk [643.543191ms]
  I0112 22:51:09.631911 23 service_latency.go:356] Created: latency-svc-h9ztl
  I0112 22:51:09.656240 23 service_latency.go:363] Got endpoints: latency-svc-h9ztl [638.546913ms]
  I0112 22:51:09.672979 23 service_latency.go:356] Created: latency-svc-78jwl
  I0112 22:51:09.690260 23 service_latency.go:363] Got endpoints: latency-svc-78jwl [636.792121ms]
  I0112 22:51:09.706177 23 service_latency.go:356] Created: latency-svc-68hjb
  I0112 22:51:09.738836 23 service_latency.go:363] Got endpoints: latency-svc-68hjb [651.504559ms]
  I0112 22:51:09.745883 23 service_latency.go:356] Created: latency-svc-prrfv
  I0112 22:51:09.778268 23 service_latency.go:363] Got endpoints: latency-svc-prrfv [649.007969ms]
  I0112 22:51:09.794284 23 service_latency.go:356] Created: latency-svc-d8fpt
  I0112 22:51:09.822094 23 service_latency.go:363] Got endpoints: latency-svc-d8fpt [651.945456ms]
  I0112 22:51:09.844429 23 service_latency.go:356] Created: latency-svc-jsjcz
  I0112 22:51:09.882352 23 service_latency.go:363] Got endpoints: latency-svc-jsjcz [687.177409ms]
  I0112 22:51:09.906171 23 service_latency.go:356] Created: latency-svc-nb2dd
  I0112 22:51:09.947858 23 service_latency.go:363] Got endpoints: latency-svc-nb2dd [712.032904ms]
  I0112 22:51:09.969494 23 service_latency.go:356] Created: latency-svc-4jxg5
  I0112 22:51:10.002285 23 service_latency.go:363] Got endpoints: latency-svc-4jxg5 [732.785617ms]
  I0112 22:51:10.009769 23 service_latency.go:356] Created: latency-svc-t4vg4
  I0112 22:51:10.050435 23 service_latency.go:363] Got endpoints: latency-svc-t4vg4 [736.512701ms]
  I0112 22:51:10.064383 23 service_latency.go:356] Created: latency-svc-q6wg4
  I0112 22:51:10.097691 23 service_latency.go:363] Got endpoints: latency-svc-q6wg4 [726.595644ms]
  I0112 22:51:10.118395 23 service_latency.go:356] Created: latency-svc-x8lnx
  I0112 22:51:10.153228 23 service_latency.go:363] Got endpoints: latency-svc-x8lnx [750.859943ms]
  I0112 22:51:10.169197 23 service_latency.go:356] Created: latency-svc-trp7s
  I0112 22:51:10.203719 23 service_latency.go:363] Got endpoints: latency-svc-trp7s [730.832727ms]
  I0112 22:51:10.225420 23 service_latency.go:356] Created: latency-svc-87q4g
  I0112 22:51:10.263211 23 service_latency.go:363] Got endpoints: latency-svc-87q4g [749.173751ms]
  I0112 22:51:10.275501 23 service_latency.go:356] Created: latency-svc-7dw6f
  I0112 22:51:10.304272 23 service_latency.go:363] Got endpoints: latency-svc-7dw6f [730.126831ms]
  I0112 22:51:10.320161 23 service_latency.go:356] Created: latency-svc-6fmjx
  I0112 22:51:10.346248 23 service_latency.go:363] Got endpoints: latency-svc-6fmjx [729.906733ms]
  I0112 22:51:10.353832 23 service_latency.go:356] Created: latency-svc-mshvk
  I0112 22:51:10.371067 23 service_latency.go:363] Got endpoints: latency-svc-mshvk [714.763297ms]
  I0112 22:51:10.385431 23 service_latency.go:356] Created: latency-svc-qb4n6
  I0112 22:51:10.420077 23 service_latency.go:363] Got endpoints: latency-svc-qb4n6 [729.725834ms]
  I0112 22:51:10.434582 23 service_latency.go:356] Created: latency-svc-2b6tp
  I0112 22:51:10.464091 23 service_latency.go:363] Got endpoints: latency-svc-2b6tp [725.205955ms]
  I0112 22:51:10.498060 23 service_latency.go:356] Created: latency-svc-n4q25
  I0112 22:51:10.520883 23 service_latency.go:363] Got endpoints: latency-svc-n4q25 [742.507383ms]
  I0112 22:51:10.543234 23 service_latency.go:356] Created: latency-svc-8sc8h
  I0112 22:51:10.564708 23 service_latency.go:363] Got endpoints: latency-svc-8sc8h [742.532983ms]
  I0112 22:51:10.587428 23 service_latency.go:356] Created: latency-svc-7vvk5
  I0112 22:51:10.602874 23 service_latency.go:363] Got endpoints: latency-svc-7vvk5 [720.391377ms]
  I0112 22:51:10.618412 23 service_latency.go:356] Created: latency-svc-rdpwv
  I0112 22:51:10.664135 23 service_latency.go:363] Got endpoints: latency-svc-rdpwv [716.177395ms]
  I0112 22:51:10.680525 23 service_latency.go:356] Created: latency-svc-854f2
  I0112 22:51:10.716576 23 service_latency.go:363] Got endpoints: latency-svc-854f2 [714.188004ms]
  I0112 22:51:10.728175 23 service_latency.go:356] Created: latency-svc-jv89c
  I0112 22:51:10.745161 23 service_latency.go:363] Got endpoints: latency-svc-jv89c [694.627486ms]
  I0112 22:51:10.785196 23 service_latency.go:356] Created: latency-svc-zf74t
  I0112 22:51:10.811114 23 service_latency.go:363] Got endpoints: latency-svc-zf74t [713.306208ms]
  I0112 22:51:10.836623 23 service_latency.go:356] Created: latency-svc-q5mrv
  I0112 22:51:10.854147 23 service_latency.go:363] Got endpoints: latency-svc-q5mrv [700.79136ms]
  I0112 22:51:10.871031 23 service_latency.go:356] Created: latency-svc-qjxf6
  I0112 22:51:10.904803 23 service_latency.go:363] Got endpoints: latency-svc-qjxf6 [700.960159ms]
  I0112 22:51:10.920321 23 service_latency.go:356] Created: latency-svc-mrvqw
  I0112 22:51:10.929920 23 service_latency.go:356] Created: latency-svc-khgdq
  I0112 22:51:10.958972 23 service_latency.go:363] Got endpoints: latency-svc-mrvqw [695.654782ms]
  I0112 22:51:10.987399 23 service_latency.go:363] Got endpoints: latency-svc-khgdq [683.028734ms]
  I0112 22:51:10.993051 23 service_latency.go:356] Created: latency-svc-5p8cm
  I0112 22:51:11.026727 23 service_latency.go:363] Got endpoints: latency-svc-5p8cm [680.370446ms]
  I0112 22:51:11.033332 23 service_latency.go:356] Created: latency-svc-mr29w
  I0112 22:51:11.087786 23 service_latency.go:363] Got endpoints: latency-svc-mr29w [716.639794ms]
  I0112 22:51:11.095245 23 service_latency.go:356] Created: latency-svc-jsj2c
  I0112 22:51:11.128533 23 service_latency.go:363] Got endpoints: latency-svc-jsj2c [708.39133ms]
  I0112 22:51:11.146322 23 service_latency.go:356] Created: latency-svc-xkmcf
  I0112 22:51:11.175482 23 service_latency.go:363] Got endpoints: latency-svc-xkmcf [711.299019ms]
  I0112 22:51:11.198009 23 service_latency.go:356] Created: latency-svc-52ln8
  I0112 22:51:11.220915 23 service_latency.go:363] Got endpoints: latency-svc-52ln8 [699.861767ms]
  I0112 22:51:11.242567 23 service_latency.go:356] Created: latency-svc-6s5kn
  I0112 22:51:11.265731 23 service_latency.go:363] Got endpoints: latency-svc-6s5kn [700.930263ms]
  I0112 22:51:11.289043 23 service_latency.go:356] Created: latency-svc-z8cnm
  I0112 22:51:11.319809 23 service_latency.go:363] Got endpoints: latency-svc-z8cnm [716.768597ms]
  I0112 22:51:11.343319 23 service_latency.go:356] Created: latency-svc-9df24
  I0112 22:51:11.368775 23 service_latency.go:363] Got endpoints: latency-svc-9df24 [704.545749ms]
  I0112 22:51:11.385785 23 service_latency.go:356] Created: latency-svc-2sjkb
  I0112 22:51:11.428875 23 service_latency.go:363] Got endpoints: latency-svc-2sjkb [712.213218ms]
  I0112 22:51:11.453026 23 service_latency.go:356] Created: latency-svc-zlgkt
  I0112 22:51:11.469206 23 service_latency.go:363] Got endpoints: latency-svc-zlgkt [723.949969ms]
  I0112 22:51:11.497392 23 service_latency.go:356] Created: latency-svc-n8rz5
  I0112 22:51:11.522152 23 service_latency.go:363] Got endpoints: latency-svc-n8rz5 [710.934924ms]
  I0112 22:51:11.546004 23 service_latency.go:356] Created: latency-svc-ch6bk
  I0112 22:51:11.564548 23 service_latency.go:363] Got endpoints: latency-svc-ch6bk [710.323127ms]
  I0112 22:51:11.588807 23 service_latency.go:356] Created: latency-svc-jcbth
  I0112 22:51:11.605276 23 service_latency.go:363] Got endpoints: latency-svc-jcbth [700.381169ms]
  I0112 22:51:11.621511 23 service_latency.go:356] Created: latency-svc-s44cr
  I0112 22:51:11.646835 23 service_latency.go:363] Got endpoints: latency-svc-s44cr [687.758923ms]
  I0112 22:51:11.661646 23 service_latency.go:356] Created: latency-svc-fh2h5
  I0112 22:51:11.690027 23 service_latency.go:363] Got endpoints: latency-svc-fh2h5 [702.543361ms]
  I0112 22:51:11.697156 23 service_latency.go:356] Created: latency-svc-hvhrh
  I0112 22:51:11.713298 23 service_latency.go:363] Got endpoints: latency-svc-hvhrh [686.460729ms]
  I0112 22:51:11.729996 23 service_latency.go:356] Created: latency-svc-gvkh9
  I0112 22:51:11.746679 23 service_latency.go:363] Got endpoints: latency-svc-gvkh9 [658.825344ms]
  I0112 22:51:11.763980 23 service_latency.go:356] Created: latency-svc-n6lvs
  I0112 22:51:11.816373 23 service_latency.go:363] Got endpoints: latency-svc-n6lvs [687.699924ms]
  I0112 22:51:11.839499 23 service_latency.go:356] Created: latency-svc-njv7r
  I0112 22:51:11.865403 23 service_latency.go:363] Got endpoints: latency-svc-njv7r [689.819615ms]
  I0112 22:51:11.881051 23 service_latency.go:356] Created: latency-svc-mqs27
  I0112 22:51:11.911359 23 service_latency.go:363] Got endpoints: latency-svc-mqs27 [690.302613ms]
  I0112 22:51:11.934213 23 service_latency.go:356] Created: latency-svc-q8klh
  I0112 22:51:11.950606 23 service_latency.go:363] Got endpoints: latency-svc-q8klh [684.817636ms]
  I0112 22:51:11.966048 23 service_latency.go:356] Created: latency-svc-czhx9
  I0112 22:51:11.990074 23 service_latency.go:363] Got endpoints: latency-svc-czhx9 [670.182796ms]
  I0112 22:51:12.021233 23 service_latency.go:356] Created: latency-svc-dwl6l
  I0112 22:51:12.083957 23 service_latency.go:363] Got endpoints: latency-svc-dwl6l [715.09001ms]
  I0112 22:51:12.091635 23 service_latency.go:356] Created: latency-svc-t5dlw
  I0112 22:51:12.109210 23 service_latency.go:363] Got endpoints: latency-svc-t5dlw [680.210757ms]
  I0112 22:51:12.125036 23 service_latency.go:356] Created: latency-svc-lq9mp
  I0112 22:51:12.142731 23 service_latency.go:363] Got endpoints: latency-svc-lq9mp [673.428385ms]
  I0112 22:51:12.163261 23 service_latency.go:356] Created: latency-svc-c4w7z
  I0112 22:51:12.180179 23 service_latency.go:363] Got endpoints: latency-svc-c4w7z [657.931851ms]
  I0112 22:51:12.202073 23 service_latency.go:356] Created: latency-svc-vrbgd
  I0112 22:51:12.218819 23 service_latency.go:363] Got endpoints: latency-svc-vrbgd [654.208266ms]
  I0112 22:51:12.234604 23 service_latency.go:356] Created: latency-svc-zms69
  I0112 22:51:12.279054 23 service_latency.go:363] Got endpoints: latency-svc-zms69 [673.681385ms]
  I0112 22:51:12.287008 23 service_latency.go:356] Created: latency-svc-wdbpk
  I0112 22:51:12.309126 23 service_latency.go:363] Got endpoints: latency-svc-wdbpk [662.202734ms]
  I0112 22:51:12.324669 23 service_latency.go:356] Created: latency-svc-ssmb7
  I0112 22:51:12.346189 23 service_latency.go:363] Got endpoints: latency-svc-ssmb7 [656.10986ms]
  I0112 22:51:12.365054 23 service_latency.go:356] Created: latency-svc-5x8mx
  I0112 22:51:12.382660 23 service_latency.go:363] Got endpoints: latency-svc-5x8mx [669.252305ms]
  I0112 22:51:12.399491 23 service_latency.go:356] Created: latency-svc-r7bpv
  I0112 22:51:12.416354 23 service_latency.go:363] Got endpoints: latency-svc-r7bpv [669.547505ms]
  I0112 22:51:12.432222 23 service_latency.go:356] Created: latency-svc-5s4l2
  I0112 22:51:12.449833 23 service_latency.go:363] Got endpoints: latency-svc-5s4l2 [633.362956ms]
  I0112 22:51:12.465584 23 service_latency.go:356] Created: latency-svc-2qfp5
  I0112 22:51:12.483156 23 service_latency.go:363] Got endpoints: latency-svc-2qfp5 [617.667922ms]
  I0112 22:51:12.499136 23 service_latency.go:356] Created: latency-svc-5rr9b
  I0112 22:51:12.524843 23 service_latency.go:363] Got endpoints: latency-svc-5rr9b [613.405441ms]
  I0112 22:51:12.539869 23 service_latency.go:356] Created: latency-svc-vvsjg
  I0112 22:51:12.557995 23 service_latency.go:363] Got endpoints: latency-svc-vvsjg [607.342267ms]
  I0112 22:51:12.587790 23 service_latency.go:356] Created: latency-svc-ld5dd
  I0112 22:51:12.604443 23 service_latency.go:363] Got endpoints: latency-svc-ld5dd [614.290438ms]
  I0112 22:51:12.626055 23 service_latency.go:356] Created: latency-svc-d77q9
  I0112 22:51:12.644396 23 service_latency.go:363] Got endpoints: latency-svc-d77q9 [560.377463ms]
  I0112 22:51:12.660473 23 service_latency.go:356] Created: latency-svc-92cv7
  I0112 22:51:12.677507 23 service_latency.go:363] Got endpoints: latency-svc-92cv7 [568.209331ms]
  I0112 22:51:12.703342 23 service_latency.go:356] Created: latency-svc-j29jn
  I0112 22:51:12.753825 23 service_latency.go:363] Got endpoints: latency-svc-j29jn [611.010552ms]
  I0112 22:51:12.762511 23 service_latency.go:356] Created: latency-svc-d952d
  I0112 22:51:12.784212 23 service_latency.go:363] Got endpoints: latency-svc-d952d [603.941382ms]
  I0112 22:51:12.812734 23 service_latency.go:356] Created: latency-svc-bhvjp
  I0112 22:51:12.831132 23 service_latency.go:363] Got endpoints: latency-svc-bhvjp [612.213747ms]
  I0112 22:51:12.853830 23 service_latency.go:356] Created: latency-svc-58vh8
  I0112 22:51:12.870098 23 service_latency.go:363] Got endpoints: latency-svc-58vh8 [590.984936ms]
  I0112 22:51:12.883011 23 service_latency.go:356] Created: latency-svc-n9zvg
  I0112 22:51:12.902497 23 service_latency.go:363] Got endpoints: latency-svc-n9zvg [593.275826ms]
  I0112 22:51:12.916914 23 service_latency.go:356] Created: latency-svc-lv6b4
  I0112 22:51:12.939659 23 service_latency.go:363] Got endpoints: latency-svc-lv6b4 [593.411025ms]
  I0112 22:51:12.953648 23 service_latency.go:356] Created: latency-svc-8brg6
  I0112 22:51:12.969514 23 service_latency.go:363] Got endpoints: latency-svc-8brg6 [586.765753ms]
  I0112 22:51:12.985226 23 service_latency.go:356] Created: latency-svc-86skb
  I0112 22:51:13.004237 23 service_latency.go:363] Got endpoints: latency-svc-86skb [587.764649ms]
  I0112 22:51:13.020472 23 service_latency.go:356] Created: latency-svc-xrh9l
  I0112 22:51:13.037411 23 service_latency.go:363] Got endpoints: latency-svc-xrh9l [587.51965ms]
  I0112 22:51:13.053114 23 service_latency.go:356] Created: latency-svc-mqhxk
  I0112 22:51:13.068682 23 service_latency.go:363] Got endpoints: latency-svc-mqhxk [585.441259ms]
  I0112 22:51:13.085554 23 service_latency.go:356] Created: latency-svc-2jhbn
  I0112 22:51:13.109463 23 service_latency.go:363] Got endpoints: latency-svc-2jhbn [584.455564ms]
  I0112 22:51:13.117156 23 service_latency.go:356] Created: latency-svc-vmn64
  I0112 22:51:13.133237 23 service_latency.go:363] Got endpoints: latency-svc-vmn64 [575.143003ms]
  I0112 22:51:13.155271 23 service_latency.go:356] Created: latency-svc-5ptnz
  I0112 22:51:13.191521 23 service_latency.go:363] Got endpoints: latency-svc-5ptnz [586.957755ms]
  I0112 22:51:13.229466 23 service_latency.go:356] Created: latency-svc-rqczx
  I0112 22:51:13.259356 23 service_latency.go:363] Got endpoints: latency-svc-rqczx [614.88704ms]
  I0112 22:51:13.294828 23 service_latency.go:356] Created: latency-svc-29bm4
  I0112 22:51:13.316607 23 service_latency.go:363] Got endpoints: latency-svc-29bm4 [638.99824ms]
  I0112 22:51:13.335295 23 service_latency.go:356] Created: latency-svc-b6v69
  I0112 22:51:13.365159 23 service_latency.go:363] Got endpoints: latency-svc-b6v69 [611.192056ms]
  I0112 22:51:13.385081 23 service_latency.go:356] Created: latency-svc-cb5hz
  I0112 22:51:13.408354 23 service_latency.go:363] Got endpoints: latency-svc-cb5hz [624.055103ms]
  I0112 22:51:13.427419 23 service_latency.go:356] Created: latency-svc-txbjj
  I0112 22:51:13.448780 23 service_latency.go:363] Got endpoints: latency-svc-txbjj [617.51423ms]
  I0112 22:51:13.466662 23 service_latency.go:356] Created: latency-svc-tjkct
  I0112 22:51:13.495695 23 service_latency.go:363] Got endpoints: latency-svc-tjkct [625.501398ms]
  I0112 22:51:13.528795 23 service_latency.go:356] Created: latency-svc-glb8l
  I0112 22:51:13.557584 23 service_latency.go:363] Got endpoints: latency-svc-glb8l [655.005176ms]
  I0112 22:51:13.572108 23 service_latency.go:356] Created: latency-svc-9l7gc
  I0112 22:51:13.589399 23 service_latency.go:363] Got endpoints: latency-svc-9l7gc [649.661598ms]
  I0112 22:51:13.605519 23 service_latency.go:356] Created: latency-svc-zt7sm
  I0112 22:51:13.635171 23 service_latency.go:363] Got endpoints: latency-svc-zt7sm [665.559432ms]
  I0112 22:51:13.667302 23 service_latency.go:356] Created: latency-svc-9nlnz
  I0112 22:51:13.704283 23 service_latency.go:363] Got endpoints: latency-svc-9nlnz [699.95639ms]
  I0112 22:51:13.711026 23 service_latency.go:356] Created: latency-svc-z9gg6
  I0112 22:51:13.727549 23 service_latency.go:363] Got endpoints: latency-svc-z9gg6 [690.063431ms]
  I0112 22:51:13.746709 23 service_latency.go:356] Created: latency-svc-c5zp8
  I0112 22:51:13.763870 23 service_latency.go:363] Got endpoints: latency-svc-c5zp8 [695.08691ms]
  I0112 22:51:13.783893 23 service_latency.go:356] Created: latency-svc-ggjdv
  I0112 22:51:13.798599 23 service_latency.go:363] Got endpoints: latency-svc-ggjdv [689.018536ms]
  I0112 22:51:13.831000 23 service_latency.go:356] Created: latency-svc-j88zf
  I0112 22:51:13.865001 23 service_latency.go:363] Got endpoints: latency-svc-j88zf [731.649359ms]
  I0112 22:51:13.897525 23 service_latency.go:356] Created: latency-svc-xrj5l
  I0112 22:51:13.923019 23 service_latency.go:363] Got endpoints: latency-svc-xrj5l [731.400559ms]
  I0112 22:51:13.947173 23 service_latency.go:356] Created: latency-svc-d5ttf
  I0112 22:51:13.963281 23 service_latency.go:363] Got endpoints: latency-svc-d5ttf [703.750874ms]
  I0112 22:51:13.978891 23 service_latency.go:356] Created: latency-svc-htklm
  I0112 22:51:13.996916 23 service_latency.go:363] Got endpoints: latency-svc-htklm [680.243472ms]
  I0112 22:51:14.014101 23 service_latency.go:356] Created: latency-svc-dd26r
  I0112 22:51:14.033111 23 service_latency.go:363] Got endpoints: latency-svc-dd26r [667.791524ms]
  I0112 22:51:14.062285 23 service_latency.go:356] Created: latency-svc-sctbw
  I0112 22:51:14.087115 23 service_latency.go:363] Got endpoints: latency-svc-sctbw [678.674879ms]
  I0112 22:51:14.117011 23 service_latency.go:356] Created: latency-svc-zvxb8
  I0112 22:51:14.138576 23 service_latency.go:363] Got endpoints: latency-svc-zvxb8 [689.573035ms]
  I0112 22:51:14.152041 23 service_latency.go:356] Created: latency-svc-5vqqc
  I0112 22:51:14.179611 23 service_latency.go:363] Got endpoints: latency-svc-5vqqc [683.811959ms]
  I0112 22:51:14.194235 23 service_latency.go:356] Created: latency-svc-6xfng
  I0112 22:51:14.229074 23 service_latency.go:363] Got endpoints: latency-svc-6xfng [671.354512ms]
  I0112 22:51:14.236413 23 service_latency.go:356] Created: latency-svc-5288x
  I0112 22:51:14.258282 23 service_latency.go:363] Got endpoints: latency-svc-5288x [668.779323ms]
  I0112 22:51:14.265289 23 service_latency.go:356] Created: latency-svc-7m89p
  I0112 22:51:14.308439 23 service_latency.go:363] Got endpoints: latency-svc-7m89p [673.170205ms]
  I0112 22:51:14.317065 23 service_latency.go:356] Created: latency-svc-gs2mp
  I0112 22:51:14.342165 23 service_latency.go:363] Got endpoints: latency-svc-gs2mp [637.774553ms]
  I0112 22:51:14.349705 23 service_latency.go:356] Created: latency-svc-9ksj6
  I0112 22:51:14.384479 23 service_latency.go:363] Got endpoints: latency-svc-9ksj6 [656.848974ms]
  I0112 22:51:14.417891 23 service_latency.go:356] Created: latency-svc-zhwgc
  I0112 22:51:14.443481 23 service_latency.go:363] Got endpoints: latency-svc-zhwgc [679.49898ms]
  I0112 22:51:14.460294 23 service_latency.go:356] Created: latency-svc-z892g
  I0112 22:51:14.477007 23 service_latency.go:363] Got endpoints: latency-svc-z892g [678.321786ms]
  I0112 22:51:14.500349 23 service_latency.go:356] Created: latency-svc-cxqh6
  I0112 22:51:14.526634 23 service_latency.go:363] Got endpoints: latency-svc-cxqh6 [661.571356ms]
  I0112 22:51:14.547889 23 service_latency.go:356] Created: latency-svc-sstfk
  I0112 22:51:14.591588 23 service_latency.go:363] Got endpoints: latency-svc-sstfk [668.511128ms]
  I0112 22:51:14.608539 23 service_latency.go:356] Created: latency-svc-6bmvd
  I0112 22:51:14.653219 23 service_latency.go:363] Got endpoints: latency-svc-6bmvd [689.84754ms]
  I0112 22:51:14.669858 23 service_latency.go:356] Created: latency-svc-mg4pl
  I0112 22:51:14.686361 23 service_latency.go:363] Got endpoints: latency-svc-mg4pl [689.332342ms]
  I0112 22:51:14.702226 23 service_latency.go:356] Created: latency-svc-wltcb
  I0112 22:51:14.719481 23 service_latency.go:363] Got endpoints: latency-svc-wltcb [686.267755ms]
  I0112 22:51:14.734261 23 service_latency.go:356] Created: latency-svc-mc5tx
  I0112 22:51:14.758838 23 service_latency.go:363] Got endpoints: latency-svc-mc5tx [671.607916ms]
  I0112 22:51:14.777228 23 service_latency.go:356] Created: latency-svc-zd6zq
  I0112 22:51:14.793896 23 service_latency.go:363] Got endpoints: latency-svc-zd6zq [655.231285ms]
  I0112 22:51:14.809506 23 service_latency.go:356] Created: latency-svc-nfd7h
  I0112 22:51:14.827607 23 service_latency.go:363] Got endpoints: latency-svc-nfd7h [647.902415ms]
  I0112 22:51:14.843834 23 service_latency.go:356] Created: latency-svc-8hcsj
  I0112 22:51:14.881749 23 service_latency.go:363] Got endpoints: latency-svc-8hcsj [652.618194ms]
  I0112 22:51:14.889083 23 service_latency.go:356] Created: latency-svc-mtkvx
  I0112 22:51:14.905212 23 service_latency.go:363] Got endpoints: latency-svc-mtkvx [646.844619ms]
  I0112 22:51:14.921711 23 service_latency.go:356] Created: latency-svc-g62gd
  I0112 22:51:14.945461 23 service_latency.go:363] Got endpoints: latency-svc-g62gd [636.91096ms]
  I0112 22:51:14.962630 23 service_latency.go:356] Created: latency-svc-kglxn
  I0112 22:51:14.981357 23 service_latency.go:363] Got endpoints: latency-svc-kglxn [639.11365ms]
  I0112 22:51:14.997174 23 service_latency.go:356] Created: latency-svc-wp5s7
  I0112 22:51:15.023035 23 service_latency.go:363] Got endpoints: latency-svc-wp5s7 [638.484154ms]
  I0112 22:51:15.030695 23 service_latency.go:356] Created: latency-svc-fvggp
  I0112 22:51:15.046919 23 service_latency.go:363] Got endpoints: latency-svc-fvggp [603.343799ms]
  I0112 22:51:15.061289 23 service_latency.go:356] Created: latency-svc-dhqmd
  I0112 22:51:15.083418 23 service_latency.go:363] Got endpoints: latency-svc-dhqmd [606.341987ms]
  I0112 22:51:15.097841 23 service_latency.go:356] Created: latency-svc-9566r
  I0112 22:51:15.123707 23 service_latency.go:363] Got endpoints: latency-svc-9566r [597.012627ms]
  I0112 22:51:15.140742 23 service_latency.go:356] Created: latency-svc-7ffgj
  I0112 22:51:15.174124 23 service_latency.go:363] Got endpoints: latency-svc-7ffgj [582.464488ms]
  I0112 22:51:15.190437 23 service_latency.go:356] Created: latency-svc-q2v2h
  I0112 22:51:15.233153 23 service_latency.go:363] Got endpoints: latency-svc-q2v2h [579.8463ms]
  I0112 22:51:15.259169 23 service_latency.go:356] Created: latency-svc-mpwqt
  I0112 22:51:15.277538 23 service_latency.go:363] Got endpoints: latency-svc-mpwqt [591.083553ms]
  I0112 22:51:15.295058 23 service_latency.go:356] Created: latency-svc-pb2hr
  I0112 22:51:15.320990 23 service_latency.go:363] Got endpoints: latency-svc-pb2hr [601.426311ms]
  I0112 22:51:15.337535 23 service_latency.go:356] Created: latency-svc-45skn
  I0112 22:51:15.373502 23 service_latency.go:363] Got endpoints: latency-svc-45skn [614.516358ms]
  I0112 22:51:15.382113 23 service_latency.go:356] Created: latency-svc-77smd
  I0112 22:51:15.400275 23 service_latency.go:363] Got endpoints: latency-svc-77smd [606.247092ms]
  I0112 22:51:15.417889 23 service_latency.go:356] Created: latency-svc-rkrbf
  I0112 22:51:15.445291 23 service_latency.go:363] Got endpoints: latency-svc-rkrbf [617.599746ms]
  I0112 22:51:15.453205 23 service_latency.go:356] Created: latency-svc-mjnpw
  I0112 22:51:15.471372 23 service_latency.go:363] Got endpoints: latency-svc-mjnpw [589.529062ms]
  I0112 22:51:15.487595 23 service_latency.go:356] Created: latency-svc-zzz8n
  I0112 22:51:15.504581 23 service_latency.go:363] Got endpoints: latency-svc-zzz8n [599.284122ms]
  I0112 22:51:15.519399 23 service_latency.go:356] Created: latency-svc-fq6mp
  I0112 22:51:15.536638 23 service_latency.go:363] Got endpoints: latency-svc-fq6mp [591.118356ms]
  I0112 22:51:15.558514 23 service_latency.go:356] Created: latency-svc-wdln2
  I0112 22:51:15.592975 23 service_latency.go:363] Got endpoints: latency-svc-wdln2 [611.549373ms]
  I0112 22:51:15.601255 23 service_latency.go:356] Created: latency-svc-sq7wt
  I0112 22:51:15.632435 23 service_latency.go:363] Got endpoints: latency-svc-sq7wt [609.309282ms]
  I0112 22:51:15.639399 23 service_latency.go:356] Created: latency-svc-25m7w
  I0112 22:51:15.657693 23 service_latency.go:363] Got endpoints: latency-svc-25m7w [610.646676ms]
  I0112 22:51:15.674333 23 service_latency.go:356] Created: latency-svc-ds9ws
  I0112 22:51:15.691036 23 service_latency.go:363] Got endpoints: latency-svc-ds9ws [607.559989ms]
  I0112 22:51:15.726561 23 service_latency.go:356] Created: latency-svc-xkcl2
  I0112 22:51:15.781126 23 service_latency.go:363] Got endpoints: latency-svc-xkcl2 [657.377083ms]
  I0112 22:51:15.805284 23 service_latency.go:356] Created: latency-svc-dsqtr
  I0112 22:51:15.832719 23 service_latency.go:363] Got endpoints: latency-svc-dsqtr [658.494279ms]
  I0112 22:51:15.840557 23 service_latency.go:356] Created: latency-svc-vxxf6
  I0112 22:51:15.865368 23 service_latency.go:363] Got endpoints: latency-svc-vxxf6 [632.129288ms]
  I0112 22:51:15.888347 23 service_latency.go:356] Created: latency-svc-njxhm
  I0112 22:51:15.904977 23 service_latency.go:363] Got endpoints: latency-svc-njxhm [627.303607ms]
  I0112 22:51:15.936050 23 service_latency.go:356] Created: latency-svc-pcqcj
  I0112 22:51:15.953171 23 service_latency.go:363] Got endpoints: latency-svc-pcqcj [632.113288ms]
  I0112 22:51:15.969635 23 service_latency.go:356] Created: latency-svc-qn96b
  I0112 22:51:15.985279 23 service_latency.go:363] Got endpoints: latency-svc-qn96b [611.672572ms]
  I0112 22:51:16.009024 23 service_latency.go:356] Created: latency-svc-snk7d
  I0112 22:51:16.028618 23 service_latency.go:363] Got endpoints: latency-svc-snk7d [628.269204ms]
  I0112 22:51:16.044772 23 service_latency.go:356] Created: latency-svc-xwcww
  I0112 22:51:16.060993 23 service_latency.go:363] Got endpoints: latency-svc-xwcww [615.549757ms]
  I0112 22:51:16.081762 23 service_latency.go:356] Created: latency-svc-lsx6t
  I0112 22:51:16.099346 23 service_latency.go:363] Got endpoints: latency-svc-lsx6t [627.911006ms]
  I0112 22:51:16.118622 23 service_latency.go:356] Created: latency-svc-9fh9j
  I0112 22:51:16.135850 23 service_latency.go:363] Got endpoints: latency-svc-9fh9j [631.201793ms]
  I0112 22:51:16.151953 23 service_latency.go:356] Created: latency-svc-qk25w
  I0112 22:51:16.176087 23 service_latency.go:363] Got endpoints: latency-svc-qk25w [639.38846ms]
  I0112 22:51:16.199773 23 service_latency.go:356] Created: latency-svc-pmxgs
  I0112 22:51:16.244299 23 service_latency.go:363] Got endpoints: latency-svc-pmxgs [651.220712ms]
  I0112 22:51:16.261638 23 service_latency.go:356] Created: latency-svc-t7ln8
  I0112 22:51:16.279947 23 service_latency.go:363] Got endpoints: latency-svc-t7ln8 [647.429228ms]
  I0112 22:51:16.301738 23 service_latency.go:356] Created: latency-svc-drw68
  I0112 22:51:16.320978 23 service_latency.go:363] Got endpoints: latency-svc-drw68 [663.190663ms]
  I0112 22:51:16.335753 23 service_latency.go:356] Created: latency-svc-lv9j7
  I0112 22:51:16.369215 23 service_latency.go:363] Got endpoints: latency-svc-lv9j7 [678.112302ms]
  I0112 22:51:16.384827 23 service_latency.go:356] Created: latency-svc-nf9m7
  I0112 22:51:16.425745 23 service_latency.go:363] Got endpoints: latency-svc-nf9m7 [644.555841ms]
  I0112 22:51:16.433986 23 service_latency.go:356] Created: latency-svc-c2bw5
  I0112 22:51:16.460272 23 service_latency.go:363] Got endpoints: latency-svc-c2bw5 [627.486212ms]
  I0112 22:51:16.467786 23 service_latency.go:356] Created: latency-svc-724m7
  I0112 22:51:16.494085 23 service_latency.go:363] Got endpoints: latency-svc-724m7 [628.630408ms]
  I0112 22:51:16.527091 23 service_latency.go:356] Created: latency-svc-c2j9f
  I0112 22:51:16.560626 23 service_latency.go:363] Got endpoints: latency-svc-c2j9f [655.544298ms]
  I0112 22:51:16.567723 23 service_latency.go:356] Created: latency-svc-bfrn7
  I0112 22:51:16.593589 23 service_latency.go:363] Got endpoints: latency-svc-bfrn7 [640.325661ms]
  I0112 22:51:16.607500 23 service_latency.go:356] Created: latency-svc-h72jj
  I0112 22:51:16.631595 23 service_latency.go:363] Got endpoints: latency-svc-h72jj [646.233237ms]
  I0112 22:51:16.647069 23 service_latency.go:356] Created: latency-svc-sg42z
  I0112 22:51:16.670107 23 service_latency.go:363] Got endpoints: latency-svc-sg42z [641.377058ms]
  I0112 22:51:16.696182 23 service_latency.go:356] Created: latency-svc-gksxb
  I0112 22:51:16.721605 23 service_latency.go:363] Got endpoints: latency-svc-gksxb [660.540878ms]
  I0112 22:51:16.728254 23 service_latency.go:356] Created: latency-svc-pfk2f
  I0112 22:51:16.744696 23 service_latency.go:363] Got endpoints: latency-svc-pfk2f [645.246741ms]
  I0112 22:51:16.760559 23 service_latency.go:356] Created: latency-svc-wngk5
  I0112 22:51:16.777574 23 service_latency.go:363] Got endpoints: latency-svc-wngk5 [641.643857ms]
  I0112 22:51:16.793696 23 service_latency.go:356] Created: latency-svc-jpp64
  I0112 22:51:16.811195 23 service_latency.go:363] Got endpoints: latency-svc-jpp64 [634.948184ms]
  I0112 22:51:16.825832 23 service_latency.go:356] Created: latency-svc-5p5f4
  I0112 22:51:16.838493 23 service_latency.go:363] Got endpoints: latency-svc-5p5f4 [594.083852ms]
  I0112 22:51:16.838705 23 service_latency.go:114] Latencies: [44.503113ms 80.050862ms 139.81101ms 181.968132ms 231.042625ms 254.980424ms 347.758332ms 364.793861ms 409.538071ms 455.641277ms 500.10679ms 560.377463ms 565.584813ms 568.209331ms 575.143003ms 579.8463ms 582.464488ms 584.455564ms 585.441259ms 586.765753ms 586.957755ms 587.51965ms 587.764649ms 589.529062ms 590.984936ms 591.083553ms 591.118356ms 593.275826ms 593.411025ms 594.083852ms 597.012627ms 599.284122ms 601.426311ms 603.343799ms 603.941382ms 606.247092ms 606.341987ms 607.342267ms 607.559989ms 609.309282ms 610.646676ms 611.010552ms 611.192056ms 611.549373ms 611.672572ms 612.213747ms 613.405441ms 614.290438ms 614.516358ms 614.88704ms 615.549757ms 617.51423ms 617.599746ms 617.667922ms 624.055103ms 624.386265ms 625.501398ms 626.686859ms 627.303607ms 627.486212ms 627.911006ms 628.269204ms 628.630408ms 631.201793ms 632.113288ms 632.129288ms 633.362956ms 634.948184ms 636.126421ms 636.792121ms 636.91096ms 637.489914ms 637.774553ms 638.484154ms 638.546913ms 638.99824ms 639.11365ms 639.38846ms 640.325661ms 640.952899ms 641.377058ms 641.643857ms 643.543191ms 644.555841ms 645.246741ms 646.233237ms 646.844619ms 647.429228ms 647.902415ms 649.007969ms 649.661598ms 651.220712ms 651.504559ms 651.945456ms 652.618194ms 654.208266ms 655.005176ms 655.231285ms 655.544298ms 656.10986ms 656.848974ms 657.377083ms 657.931851ms 658.494279ms 658.689126ms 658.825344ms 660.540878ms 661.571356ms 662.202734ms 663.190663ms 665.559432ms 667.791524ms 668.511128ms 668.779323ms 669.252305ms 669.547505ms 670.182796ms 670.781869ms 671.354512ms 671.607916ms 672.32267ms 672.897563ms 673.170205ms 673.428385ms 673.681385ms 675.111357ms 676.718046ms 676.810844ms 678.112302ms 678.321786ms 678.674879ms 679.49898ms 680.210757ms 680.243472ms 680.370446ms 683.028734ms 683.811959ms 684.817636ms 686.267755ms 686.460729ms 687.177409ms 687.699924ms 687.758923ms 689.018536ms 689.332342ms 689.573035ms 689.819615ms 689.84754ms 690.063431ms 690.302613ms 690.518586ms 694.627486ms 695.08691ms 695.654782ms 697.879657ms 699.20585ms 699.861767ms 699.95639ms 700.381169ms 700.79136ms 700.930263ms 700.960159ms 701.655441ms 702.543361ms 703.480531ms 703.750874ms 704.545749ms 708.39133ms 710.323127ms 710.934924ms 711.299019ms 712.032904ms 712.213218ms 712.460893ms 713.306208ms 714.188004ms 714.763297ms 715.09001ms 716.177395ms 716.639794ms 716.768597ms 720.391377ms 723.949969ms 724.016144ms 725.205955ms 726.595644ms 728.033227ms 729.725834ms 729.906733ms 730.126831ms 730.832727ms 731.400559ms 731.649359ms 732.785617ms 735.660096ms 736.512701ms 742.507383ms 742.532983ms 749.173751ms 750.859943ms]
  I0112 22:51:16.838765 23 service_latency.go:118] 50 %ile: 656.848974ms
  I0112 22:51:16.838783 23 service_latency.go:119] 90 %ile: 716.768597ms
  I0112 22:51:16.838798 23 service_latency.go:120] 99 %ile: 749.173751ms
  I0112 22:51:16.838845 23 service_latency.go:121] Total sample count: 200
  I0112 22:51:16.839046 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-7192" for this suite. @ 01/12/25 22:51:16.844
• [11.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/12/25 22:51:16.869
  I0112 22:51:16.869240 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename limitrange @ 01/12/25 22:51:16.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:16.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:16.916
  STEP: Creating a LimitRange @ 01/12/25 22:51:16.93
  STEP: Setting up watch @ 01/12/25 22:51:16.93
  STEP: Submitting a LimitRange @ 01/12/25 22:51:17.033
  STEP: Verifying LimitRange creation was observed @ 01/12/25 22:51:17.054
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/12/25 22:51:17.054
  I0112 22:51:17.061056 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0112 22:51:17.061170 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/12/25 22:51:17.061
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/12/25 22:51:17.085
  I0112 22:51:17.091621 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0112 22:51:17.091772 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/12/25 22:51:17.091
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/12/25 22:51:17.127
  I0112 22:51:17.132452 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0112 22:51:17.132497 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/12/25 22:51:17.132
  STEP: Failing to create a Pod with more than max resources @ 01/12/25 22:51:17.135
  STEP: Updating a LimitRange @ 01/12/25 22:51:17.138
  STEP: Verifying LimitRange updating is effective @ 01/12/25 22:51:17.156
  STEP: Creating a Pod with less than former min resources @ 01/12/25 22:51:19.16
  STEP: Failing to create a Pod with more than max resources @ 01/12/25 22:51:19.175
  STEP: Deleting a LimitRange @ 01/12/25 22:51:19.177
  STEP: Verifying the LimitRange was deleted @ 01/12/25 22:51:19.196
  I0112 22:51:24.201297 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/12/25 22:51:24.201
  I0112 22:51:24.221073 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9014" for this suite. @ 01/12/25 22:51:24.224
• [7.401 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/12/25 22:51:24.27
  I0112 22:51:24.270085 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename podtemplate @ 01/12/25 22:51:24.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:24.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:24.332
  I0112 22:51:24.402814 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4486" for this suite. @ 01/12/25 22:51:24.406
• [0.166 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/12/25 22:51:24.436
  I0112 22:51:24.436725 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 22:51:24.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:24.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:24.485
  STEP: Deleting RuntimeClass runtimeclass-4640-delete-me @ 01/12/25 22:51:24.514
  STEP: Waiting for the RuntimeClass to disappear @ 01/12/25 22:51:24.538
  I0112 22:51:24.549758 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4640" for this suite. @ 01/12/25 22:51:24.554
• [0.131 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/12/25 22:51:24.567
  I0112 22:51:24.567835 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename podtemplate @ 01/12/25 22:51:24.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:24.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:24.605
  STEP: Create set of pod templates @ 01/12/25 22:51:24.609
  I0112 22:51:24.624434 23 podtemplates.go:143] created test-podtemplate-1
  I0112 22:51:24.646235 23 podtemplates.go:143] created test-podtemplate-2
  I0112 22:51:24.668494 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/12/25 22:51:24.668
  STEP: delete collection of pod templates @ 01/12/25 22:51:24.672
  I0112 22:51:24.672129 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/12/25 22:51:24.731
  I0112 22:51:24.731584 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0112 22:51:24.735256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7310" for this suite. @ 01/12/25 22:51:24.739
• [0.213 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/12/25 22:51:24.781
  I0112 22:51:24.781258 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 22:51:24.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:24.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:24.821
  I0112 22:51:26.880128 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3047" for this suite. @ 01/12/25 22:51:26.884
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/12/25 22:51:26.897
  I0112 22:51:26.897598 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 22:51:26.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:26.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:26.949
  STEP: Creating configMap configmap-9703/configmap-test-57948a0e-d3cc-46e0-a055-2e4871dfd6da @ 01/12/25 22:51:26.953
  STEP: Creating a pod to test consume configMaps @ 01/12/25 22:51:26.972
  STEP: Saw pod success @ 01/12/25 22:51:31.012
  I0112 22:51:31.031730 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-ecb42d04-9950-4332-9bcd-6c7bfe29e0a0 container env-test: <nil>
  STEP: delete the pod @ 01/12/25 22:51:31.044
  I0112 22:51:31.120280 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9703" for this suite. @ 01/12/25 22:51:31.124
• [4.247 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/12/25 22:51:31.144
  I0112 22:51:31.144418 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:51:31.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:31.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:31.235
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 22:51:31.239
  STEP: Saw pod success @ 01/12/25 22:51:35.276
  I0112 22:51:35.281246 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-07b45d4c-06c7-443f-8b79-1e31373d5bab container client-container: <nil>
  STEP: delete the pod @ 01/12/25 22:51:35.29
  I0112 22:51:35.338966 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4447" for this suite. @ 01/12/25 22:51:35.343
• [4.213 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/12/25 22:51:35.358
  I0112 22:51:35.358048 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 22:51:35.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:35.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:35.427
  STEP: reading a file in the container @ 01/12/25 22:51:37.491
  I0112 22:51:37.491232 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1222 pod-service-account-86fb3fea-f820-46e4-a410-f5e342d98622 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/12/25 22:51:37.675
  I0112 22:51:37.676042 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1222 pod-service-account-86fb3fea-f820-46e4-a410-f5e342d98622 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/12/25 22:51:37.81
  I0112 22:51:37.810115 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1222 pod-service-account-86fb3fea-f820-46e4-a410-f5e342d98622 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0112 22:51:37.961946 23 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-1222"
  I0112 22:51:37.964911 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1222" for this suite. @ 01/12/25 22:51:37.969
• [2.625 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/12/25 22:51:37.982
  I0112 22:51:37.982896 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 22:51:37.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:38.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:38.031
  I0112 22:51:38.035433 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I0112 22:51:38.046577 23 deployment.go:1200] Waiting for observed generation 1
  I0112 22:51:40.058067 23 deployment.go:1205] Waiting for all required pods to come up
  I0112 22:51:40.065065 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/12/25 22:51:40.065
  I0112 22:51:42.088739 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0112 22:51:42.097470 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0112 22:51:42.115319 23 deployment.go:314] Updating deployment webserver-deployment
  I0112 22:51:42.115394 23 deployment.go:1224] Waiting for observed generation 2
  I0112 22:51:44.124663 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0112 22:51:44.127722 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0112 22:51:44.131674 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0112 22:51:44.144666 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0112 22:51:44.144741 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0112 22:51:44.148699 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0112 22:51:44.156720 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0112 22:51:44.156792 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0112 22:51:44.187145 23 deployment.go:314] Updating deployment webserver-deployment
  I0112 22:51:44.187224 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0112 22:51:44.196428 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0112 22:51:46.202117 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0112 22:51:46.217702 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62a618e9-b30d-495a-b53e-9fff1f3e7b5e",
      ResourceVersion: (string) (len=5) "11468",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 22:51:46.228031 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
      ResourceVersion: (string) (len=5) "11460",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "62a618e9-b30d-495a-b53e-9fff1f3e7b5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 61 36 31 38  65 39 2d 62 33 30 64 2d  |\"62a618e9-b30d-|
              00000120  34 39 35 61 2d 62 35 33  65 2d 39 66 66 66 31 66  |495a-b53e-9fff1f|
              00000130  33 65 37 62 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e7b5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 22:51:46.230083 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0112 22:51:46.230467 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
      ResourceVersion: (string) (len=5) "11445",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "62a618e9-b30d-495a-b53e-9fff1f3e7b5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 61 36 31 38  65 39 2d 62 33 30 64 2d  |\"62a618e9-b30d-|
              00000120  34 39 35 61 2d 62 35 33  65 2d 39 66 66 66 31 66  |495a-b53e-9fff1f|
              00000130  33 65 37 62 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e7b5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 22:51:46.245770 23 deployment.go:68] Pod "webserver-deployment-685b768f58-52fp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-52fp5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acbe72d5-3501-4a7b-8139-2846c6f8f978",
      ResourceVersion: (string) (len=5) "11422",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d9927",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d9927",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.249818 23 deployment.go:68] Pod "webserver-deployment-685b768f58-56ssd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-56ssd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be5e0102-f442-4485-b4e7-3467cd2cefad",
      ResourceVersion: (string) (len=5) "11476",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q9t69",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q9t69",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q9t69",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.254437 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6jt57" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6jt57",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f359b6b-7f5a-4929-9ca0-041e89ec06fb",
      ResourceVersion: (string) (len=5) "11428",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bdllq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bdllq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bdllq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.258320 23 deployment.go:68] Pod "webserver-deployment-685b768f58-74zst" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-74zst",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d74cc83-ad1a-45f8-afd4-1b15e4e5cc62",
      ResourceVersion: (string) (len=5) "11245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "78fa59857d84e85a05d5d6e7d72fcd82ababfda4539f58c8be192833c93c15b4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.77/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.77/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 37  37 5c 22 7d 22 3a 7b 22  |.1.152.77\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5kn7g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5kn7g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3a5d42824236247db0654f11ddcd3fd88fbd97ce7f917d447970405fff6b8be2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5kn7g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.263227 23 deployment.go:68] Pod "webserver-deployment-685b768f58-79wwh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-79wwh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e3bba35-0ac0-44c8-9bc3-0908503798c1",
      ResourceVersion: (string) (len=5) "11396",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c42k2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c42k2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.266358 23 deployment.go:68] Pod "webserver-deployment-685b768f58-9pmnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9pmnf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f147ad75-a936-4803-9bda-2ac91d315a24",
      ResourceVersion: (string) (len=5) "11254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fe9061ab39650b0029852a7a76dc4152ac09d91d1c8ce80f3b42d25eb6e5892d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.195/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.195/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 31  39 35 5c 22 7d 22 3a 7b  |.1.243.195\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74wfz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74wfz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://07ba3967c49b29c243528b523e5f28ee824f8246d2ee767be5513269764414a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-74wfz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.271271 23 deployment.go:68] Pod "webserver-deployment-685b768f58-9wtqg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-9wtqg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08481b5e-bda1-45fd-bc89-68bcd23cec90",
      ResourceVersion: (string) (len=5) "11461",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mgqpz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mgqpz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mgqpz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.276596 23 deployment.go:68] Pod "webserver-deployment-685b768f58-b7vtr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-b7vtr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73c51ac9-3008-4781-a0e3-23f3a0c8b1a8",
      ResourceVersion: (string) (len=5) "11423",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jdzrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jdzrk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.281129 23 deployment.go:68] Pod "webserver-deployment-685b768f58-bjkmh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bjkmh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b077b380-f24c-405c-88e1-8dbcd0f60fd7",
      ResourceVersion: (string) (len=5) "11252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.85/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "baf15b8ae8951765178860c6bc1df6f14baa004fedfe87267e96c59f3f3b1933",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.85/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 38  35 5c 22 7d 22 3a 7b 22  |.1.152.85\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ggkx8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ggkx8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319100,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f2ce01768471ed0c742dfaf91040dc0589c78d414f447b197f5bbf59fdfc4d1e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ggkx8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.287882 23 deployment.go:68] Pod "webserver-deployment-685b768f58-bqvhb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bqvhb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f919637-7437-483a-9642-836419c6f014",
      ResourceVersion: (string) (len=5) "11467",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8dqhd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8dqhd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8dqhd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.294193 23 deployment.go:68] Pod "webserver-deployment-685b768f58-hrq6z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hrq6z",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea66d2c9-2094-4864-9a18-5a7b94d3ab83",
      ResourceVersion: (string) (len=5) "11238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d96fe203f9a935dbe03f8b531635f1849d9004da92e1436ceb37aba74ff8c4d5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 38  34 5c 22 7d 22 3a 7b 22  |.1.152.84\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d9kw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d9kw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://53cc27c65bcddaf48e483478d04ba1309e3141c4f6e307b0ac4c9040687c52f1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d9kw7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.300116 23 deployment.go:68] Pod "webserver-deployment-685b768f58-jswnb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-jswnb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e59410f4-8ba7-420b-a859-a888e84d071c",
      ResourceVersion: (string) (len=5) "11478",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6q8q9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6q8q9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6q8q9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.307100 23 deployment.go:68] Pod "webserver-deployment-685b768f58-mhcqw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-mhcqw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9093b3f3-84cf-421c-af25-9a91407b92db",
      ResourceVersion: (string) (len=5) "11250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0cedecc889c308e65b3b756b3f498fd941b01bc9a5857480d7b16a5e87ad205d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.198/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.198/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 31  39 38 5c 22 7d 22 3a 7b  |.1.243.198\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qfk5j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qfk5j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319100,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6e5d80710673aa7f4928775a439d7f44e0e3adc4222982facae33f60af9a9255",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qfk5j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.318278 23 deployment.go:68] Pod "webserver-deployment-685b768f58-n2rpc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n2rpc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aaad30dc-4d79-439f-aa93-cc2612891795",
      ResourceVersion: (string) (len=5) "11458",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8df0ceae102e97df474290c29d3bd163fb860484b200f2f3b3c3011f19b13259",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.202/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.202/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rww7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rww7l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rww7l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.324617 23 deployment.go:68] Pod "webserver-deployment-685b768f58-n5pg8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-n5pg8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a204cec4-4e16-4541-b2ad-31390946d3f5",
      ResourceVersion: (string) (len=5) "11249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.83/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d239ff635714d188e734653b92111194c1a99d706786601f85ad25078c1c4791",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 38  33 5c 22 7d 22 3a 7b 22  |.1.152.83\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4h7bm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4h7bm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c474670ba7323109dbcf665234afb56101d2cc710a3f433f037c5ba3a16c166",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4h7bm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.334949 23 deployment.go:68] Pod "webserver-deployment-685b768f58-pv7d2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pv7d2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ccc7036-b686-4a2b-a7cf-62d491cfde50",
      ResourceVersion: (string) (len=5) "11241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fc9e5e6424a8f5fe71dc53987f54191139c2140b54eb882a8cf220fbaa83608d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.82/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.82/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 38  32 5c 22 7d 22 3a 7b 22  |.1.152.82\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bj4bj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bj4bj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://cac436f18a900f1b376c42639cfcd98e57b45b1a201983468f495e6cd136d5da",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bj4bj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.340765 23 deployment.go:68] Pod "webserver-deployment-685b768f58-sgc8k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sgc8k",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f73f5e60-7932-4cc0-aab1-34622a7abcc2",
      ResourceVersion: (string) (len=5) "11406",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8b9v2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8b9v2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8b9v2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.348915 23 deployment.go:68] Pod "webserver-deployment-685b768f58-vxqh4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vxqh4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "062b7e7c-38f1-488f-ba7b-18b70e0e128b",
      ResourceVersion: (string) (len=5) "11437",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xsxr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xsxr9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xsxr9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.356984 23 deployment.go:68] Pod "webserver-deployment-685b768f58-wlsmh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wlsmh",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fce43e0-d923-4091-b8fa-47c93161adfd",
      ResourceVersion: (string) (len=5) "11257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e7f3322b458d36691c9d332bc53f6dc20e18f3853558d6687a5f3bf7c64d81ac",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.196/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.196/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 31  39 36 5c 22 7d 22 3a 7b  |.1.243.196\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9g4fx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9g4fx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://790f33d23f68ae41cb668fd134f61d6577ec8f40d0a6ab9e07a534cfbaf2d7cb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9g4fx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.366097 23 deployment.go:68] Pod "webserver-deployment-685b768f58-wqzkn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wqzkn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0359247d-29b3-4db1-a107-725e4bf9fe52",
      ResourceVersion: (string) (len=5) "11457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "97f6c316-3dd9-47f3-9b88-34917c0b11d4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  66 36 63 33 31 36 2d 33  |d\":\"97f6c316-3|
              00000090  64 64 39 2d 34 37 66 33  2d 39 62 38 38 2d 33 34  |dd9-47f3-9b88-34|
              000000a0  39 31 37 63 30 62 31 31  64 34 5c 22 7d 22 3a 7b  |917c0b11d4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rmb47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rmb47",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rmb47",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.375240 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6cxrk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6cxrk",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bb22825-39ff-45f6-809c-9da7bd432d80",
      ResourceVersion: (string) (len=5) "11325",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "99f5bf779a3a6d940a457402a4fd0878adc64bda49f8eb88637522741d0b868f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.78/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fcml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fcml",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4fcml",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.395839 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-7dnh5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-7dnh5",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3553dd3f-07e7-4f0c-8233-f445d45733b0",
      ResourceVersion: (string) (len=5) "11408",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5z249",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5z249",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.399189 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-b67sc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-b67sc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c6073df-f745-4dc3-8d4d-95017ef6a08d",
      ResourceVersion: (string) (len=5) "11414",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-llnl7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-llnl7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-llnl7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.406063 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bn4vd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bn4vd",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88d708e9-aab7-4f0c-a0ac-77ee7f668bac",
      ResourceVersion: (string) (len=5) "11386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zj8qq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zj8qq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.408849 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fc4lg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fc4lg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a9bd6ee-3f75-4bc6-a289-6208288dba4c",
      ResourceVersion: (string) (len=5) "11469",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6t6t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6t6t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c6t6t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.422232 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-gm5bz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-gm5bz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e17b8d3-30b9-401b-8bda-f9f300da6e1a",
      ResourceVersion: (string) (len=5) "11452",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wzr4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wzr4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wzr4q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.428872 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hwtc2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hwtc2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5b4b0273-1385-4ec3-a802-f0be34301232",
      ResourceVersion: (string) (len=5) "11432",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2cqt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2cqt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.434552 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-k8lc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-k8lc9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ce63b21-97fa-447f-bfee-da0a39fd9c5b",
      ResourceVersion: (string) (len=5) "11326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7920d1f4ec7d6d710a0de5b6cadfdf4a8811cbc98e955a3b20e7a2a9062bf1f6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.199/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.199/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rfcp8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rfcp8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rfcp8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.446792 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kctth" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kctth",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fe26249-4ab7-4614-b277-e18bd27632e8",
      ResourceVersion: (string) (len=5) "11332",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9cc0007087cd4d16ef21185731d6378de25fce6d11fc36a651ed3c716ad5e040",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.200/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.200/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lq5zn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lq5zn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lq5zn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.457292 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mkbsr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mkbsr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd010847-02e5-4e3a-9498-9b5719f92411",
      ResourceVersion: (string) (len=5) "11448",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z2pzd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z2pzd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z2pzd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.461362 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ttrzc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ttrzc",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "843bb8af-6221-4a81-a064-38f05e90d7bf",
      ResourceVersion: (string) (len=5) "11346",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.86/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c7557f666fd0799065279b045ed54e3094724f18d589e6f9b12366c78594e9e8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.86/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cn5h2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cn5h2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cn5h2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.465303 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-whrx8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-whrx8",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af4b0a17-4140-4c73-a364-573f6d467fbc",
      ResourceVersion: (string) (len=5) "11355",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7db8909d6e22daba49f50f1d369badcf86a55b3c63569493a20f709f6ba3c21a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.201/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.201/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wtwp8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wtwp8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wtwp8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.470051 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zstkr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zstkr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-5031",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fac93daa-2316-4f30-a126-96c1319b5ad6",
      ResourceVersion: (string) (len=5) "11459",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "30d12aba1806da945654f18f55214f00bef1f3fd224bd665d55253e4f056b05c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.79/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.79/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d7e9ad9d-2db3-4f9b-8421-bccb7ac3bb7e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 37  65 39 61 64 39 64 2d 32  |d\":\"d7e9ad9d-2|
              00000090  64 62 33 2d 34 66 39 62  2d 38 34 32 31 2d 62 63  |db3-4f9b-8421-bc|
              000000a0  63 62 37 61 63 33 62 62  37 65 5c 22 7d 22 3a 7b  |cb7ac3bb7e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7jzg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7jzg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x7jzg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:46.475776 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5031" for this suite. @ 01/12/25 22:51:46.482
• [8.639 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/12/25 22:51:46.622
  I0112 22:51:46.622849 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 22:51:46.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:46.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:46.899
  I0112 22:51:46.911508 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0112 22:51:47.067235 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0112 22:51:52.071072 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 22:51:52.071
  I0112 22:51:52.071177 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0112 22:51:52.089068 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0112 22:51:52.096993 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0112 22:51:54.146822 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0112 22:51:54.175459 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6ff565599d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 22:51:56.232350 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 22, 51, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 22, 51, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6ff565599d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 22:51:58.180729 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0112 22:51:58.194450 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-611",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd1d5aea-7295-4248-a026-fe6dc68b01df",
      ResourceVersion: (string) (len=5) "11862",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319116,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 22:51:58.202751 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-611",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c11ec6f5-b476-4a77-9505-bd343214c0bf",
      ResourceVersion: (string) (len=5) "11778",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cd1d5aea-7295-4248-a026-fe6dc68b01df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 64 31 64 35 61  65 61 2d 37 32 39 35 2d  |\"cd1d5aea-7295-|
              00000120  34 32 34 38 2d 61 30 32  36 2d 66 65 36 64 63 36  |4248-a026-fe6dc6|
              00000130  38 62 30 31 64 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8b01df\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 22:51:58.205120 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0112 22:51:58.205565 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-611",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12ba8da9-184c-41bc-9b16-0a9686b43a3f",
      ResourceVersion: (string) (len=5) "11851",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319106,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cd1d5aea-7295-4248-a026-fe6dc68b01df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 64 31 64 35 61 65  |"uid\":\"cd1d5ae|
              000000b0  61 2d 37 32 39 35 2d 34  32 34 38 2d 61 30 32 36  |a-7295-4248-a026|
              000000c0  2d 66 65 36 64 63 36 38  62 30 31 64 66 5c 22 7d  |-fe6dc68b01df\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 22:51:58.215204 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-pp97s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-pp97s",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=14) "deployment-611",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a3e95c4-f2b0-433d-a624-817330ddf83f",
      ResourceVersion: (string) (len=5) "11776",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.214/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b908c8c7ed2eb1364a15243a51ebaa8227ee2337450891900a365cc4a6ed7ae7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.214/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "c11ec6f5-b476-4a77-9505-bd343214c0bf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 31  31 65 63 36 66 35 2d 62  |d\":\"c11ec6f5-b|
              00000090  34 37 36 2d 34 61 37 37  2d 39 35 30 35 2d 62 64  |476-4a77-9505-bd|
              000000a0  33 34 33 32 31 34 63 30  62 66 5c 22 7d 22 3a 7b  |343214c0bf\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  31 34 5c 22 7d 22 3a 7b  |.1.243.214\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6d8j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6d8j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872319112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872319112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872319113,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://1d3b8047399993316e93c7e490c21907ed1cadc6a8617f1f1f12ebf19a71d690",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s6d8j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 22:51:58.219905 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-611" for this suite. @ 01/12/25 22:51:58.224
• [11.624 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/12/25 22:51:58.246
  I0112 22:51:58.246672 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:51:58.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:51:58.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:51:58.299
  STEP: Setting up server cert @ 01/12/25 22:51:58.356
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:51:58.665
  STEP: Deploying the webhook pod @ 01/12/25 22:51:58.685
  STEP: Wait for the deployment to be ready @ 01/12/25 22:51:58.712
  I0112 22:51:58.721130 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:52:00.733
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:52:00.758
  I0112 22:52:01.758485 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/12/25 22:52:01.765
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 22:52:01.765
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/12/25 22:52:01.788
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/12/25 22:52:02.848
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 22:52:02.848
  STEP: Having no error when timeout is longer than webhook latency @ 01/12/25 22:52:03.956
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 22:52:03.956
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/12/25 22:52:09.041
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/12/25 22:52:09.041
  I0112 22:52:14.279397 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6725" for this suite. @ 01/12/25 22:52:14.283
  STEP: Destroying namespace "webhook-markers-1515" for this suite. @ 01/12/25 22:52:14.31
• [16.086 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/12/25 22:52:14.332
  I0112 22:52:14.332611 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:52:14.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:14.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:14.416
  STEP: Creating configMap with name projected-configmap-test-volume-563d1d50-87ac-4a18-bfde-04eb8eed385f @ 01/12/25 22:52:14.42
  STEP: Creating a pod to test consume configMaps @ 01/12/25 22:52:14.432
  STEP: Saw pod success @ 01/12/25 22:52:18.49
  I0112 22:52:18.495180 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-82b2ff8d-b8eb-460d-8988-8b61f8ac1173 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 22:52:18.503
  I0112 22:52:18.546523 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1710" for this suite. @ 01/12/25 22:52:18.551
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/12/25 22:52:18.567
  I0112 22:52:18.567066 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename disruption @ 01/12/25 22:52:18.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:18.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:18.608
  STEP: Creating a kubernetes client @ 01/12/25 22:52:18.612
  I0112 22:52:18.612806 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename disruption-2 @ 01/12/25 22:52:18.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:18.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:18.648
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:52:18.68
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:52:20.701
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:52:22.724
  STEP: listing a collection of PDBs across all namespaces @ 01/12/25 22:52:24.729
  STEP: listing a collection of PDBs in namespace disruption-248 @ 01/12/25 22:52:24.732
  STEP: deleting a collection of PDBs @ 01/12/25 22:52:24.736
  STEP: Waiting for the PDB collection to be deleted @ 01/12/25 22:52:24.76
  I0112 22:52:24.764099 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5005" for this suite. @ 01/12/25 22:52:24.767
  I0112 22:52:24.781171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-248" for this suite. @ 01/12/25 22:52:24.785
• [6.240 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/12/25 22:52:24.807
  I0112 22:52:24.807309 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 22:52:24.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:24.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:24.842
  I0112 22:52:26.872753 23 delete.go:62] Deleting pod "var-expansion-2e37b627-9ecf-43cf-adb6-5f8ec872e197" in namespace "var-expansion-6673"
  I0112 22:52:26.885687 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-2e37b627-9ecf-43cf-adb6-5f8ec872e197" to be fully deleted
  I0112 22:52:30.902169 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6673" for this suite. @ 01/12/25 22:52:30.907
• [6.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/12/25 22:52:30.931
  I0112 22:52:30.931348 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 22:52:30.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:30.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:30.968
  STEP: Creating simple DaemonSet "daemon-set" @ 01/12/25 22:52:31.004
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 22:52:31.016
  I0112 22:52:31.025768 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:52:31.025845 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:52:32.027494 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:52:32.027557 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:52:33.030043 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 22:52:33.030173 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/12/25 22:52:33.035
  I0112 22:52:33.041022 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/12/25 22:52:33.041
  I0112 22:52:33.059886 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/12/25 22:52:33.06
  I0112 22:52:33.062527 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0112 22:52:33.062902 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.063108 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.063264 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.063349 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.063450 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1196 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 22:52:33.063491 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/12/25 22:52:33.063
  STEP: watching for the daemon set status to be patched @ 01/12/25 22:52:33.078
  I0112 22:52:33.081074 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0112 22:52:33.081289 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.081502 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.081665 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.081816 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.081864 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1196 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0112 22:52:33.082044 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0112 22:52:33.082094 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1196 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0112 22:52:33.082117 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 22:52:33.086
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1196, will wait for the garbage collector to delete the pods @ 01/12/25 22:52:33.086
  I0112 22:52:33.155899 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.405353ms
  I0112 22:52:33.257203 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.303173ms
  I0112 22:52:35.861297 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:52:35.861351 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 22:52:35.864690 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12279"},"items":null}

  I0112 22:52:35.868036 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12279"},"items":null}

  I0112 22:52:35.878915 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1196" for this suite. @ 01/12/25 22:52:35.883
• [4.968 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/12/25 22:52:35.899
  I0112 22:52:35.899278 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 22:52:35.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:35.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:35.937
  STEP: creating the pod @ 01/12/25 22:52:35.94
  STEP: submitting the pod to kubernetes @ 01/12/25 22:52:35.94
  W0112 22:52:35.956800      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 01/12/25 22:52:37.97
  STEP: updating the pod @ 01/12/25 22:52:37.975
  I0112 22:52:38.500024 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-6ae4e099-6c94-4a9c-af05-3c65795a3ee2"
  I0112 22:52:42.518059 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-363" for this suite. @ 01/12/25 22:52:42.523
• [6.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/12/25 22:52:42.54
  I0112 22:52:42.540818 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/12/25 22:52:42.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:42.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:42.577
  STEP: create the deployment @ 01/12/25 22:52:42.582
  W0112 22:52:42.603236      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/12/25 22:52:42.603
  STEP: delete the deployment @ 01/12/25 22:52:43.109
  STEP: wait for all rs to be garbage collected @ 01/12/25 22:52:43.134
  STEP: expected 0 rs, got 1 rs @ 01/12/25 22:52:43.141
  STEP: expected 0 pods, got 2 pods @ 01/12/25 22:52:43.15
  STEP: Gathering metrics @ 01/12/25 22:52:43.646
  W0112 22:52:43.653606      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 22:52:43.653702 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 22:52:43.654025 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1295" for this suite. @ 01/12/25 22:52:43.658
• [1.132 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/12/25 22:52:43.673
  I0112 22:52:43.673376 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 22:52:43.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:43.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:43.717
  STEP: validating api versions @ 01/12/25 22:52:43.72
  I0112 22:52:43.720224 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-6422 api-versions'
  I0112 22:52:43.784904 23 builder.go:146] stderr: ""
  I0112 22:52:43.785001 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0112 22:52:43.785128 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6422" for this suite. @ 01/12/25 22:52:43.789
• [0.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/12/25 22:52:43.82
  I0112 22:52:43.820084 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename podtemplate @ 01/12/25 22:52:43.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:43.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:43.869
  STEP: Create a pod template @ 01/12/25 22:52:43.881
  STEP: Replace a pod template @ 01/12/25 22:52:43.9
  I0112 22:52:43.914646 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0112 22:52:43.914792 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7576" for this suite. @ 01/12/25 22:52:43.918
• [0.111 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 01/12/25 22:52:43.93
  I0112 22:52:43.930876 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 22:52:43.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:43.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:43.97
  STEP: Looking for a node to schedule job pod @ 01/12/25 22:52:43.973
  STEP: Creating a job @ 01/12/25 22:52:43.977
  STEP: Ensuring job fails @ 01/12/25 22:52:43.989
  I0112 22:52:50.007004 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8788" for this suite. @ 01/12/25 22:52:50.011
• [6.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/12/25 22:52:50.024
  I0112 22:52:50.024998 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 22:52:50.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:52:50.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:52:50.058
  I0112 22:52:50.092730 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 22:52:50.111
  I0112 22:52:50.120322 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:52:50.120474 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:52:51.121902 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:52:51.122042 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:52:52.122207 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 22:52:52.122276 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/12/25 22:52:52.141
  STEP: Check that daemon pods images are updated. @ 01/12/25 22:52:52.161
  I0112 22:52:52.166113 23 daemon_set.go:1193] Wrong image for pod: daemon-set-jvvpm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 22:52:52.166176 23 daemon_set.go:1193] Wrong image for pod: daemon-set-w8fhf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 22:52:53.166323 23 daemon_set.go:1193] Wrong image for pod: daemon-set-w8fhf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 22:52:54.167533 23 daemon_set.go:1193] Wrong image for pod: daemon-set-w8fhf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 22:52:55.167045 23 daemon_set.go:1198] Pod daemon-set-tqwtd is not available
  I0112 22:52:55.167120 23 daemon_set.go:1193] Wrong image for pod: daemon-set-w8fhf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0112 22:52:57.166605 23 daemon_set.go:1198] Pod daemon-set-xv248 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/12/25 22:52:57.171
  I0112 22:52:57.182761 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 22:52:57.182796 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 22:52:58.184021 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 22:52:58.184080 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 22:52:58.205
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5207, will wait for the garbage collector to delete the pods @ 01/12/25 22:52:58.205
  I0112 22:52:58.274546 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.51186ms
  I0112 22:52:58.374871 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.323702ms
  I0112 22:53:00.779498 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 22:53:00.779551 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 22:53:00.782691 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12614"},"items":null}

  I0112 22:53:00.786080 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12614"},"items":null}

  I0112 22:53:00.796436 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5207" for this suite. @ 01/12/25 22:53:00.801
• [10.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/12/25 22:53:00.818
  I0112 22:53:00.818257 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 22:53:00.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:00.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:00.863
  I0112 22:53:02.918834 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6620" for this suite. @ 01/12/25 22:53:02.923
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/12/25 22:53:02.938
  I0112 22:53:02.938723 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename limitrange @ 01/12/25 22:53:02.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:02.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:02.973
  STEP: Creating LimitRange "e2e-limitrange-l72nv" in namespace "limitrange-5300" @ 01/12/25 22:53:02.978
  STEP: Creating another limitRange in another namespace @ 01/12/25 22:53:02.991
  I0112 22:53:03.025774 23 limit_range.go:299] Namespace "e2e-limitrange-l72nv-2377" created
  I0112 22:53:03.025855 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-l72nv" in namespace "e2e-limitrange-l72nv-2377"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-l72nv" @ 01/12/25 22:53:03.042
  I0112 22:53:03.046133 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-l72nv" in "limitrange-5300" namespace @ 01/12/25 22:53:03.046
  I0112 22:53:03.059571 23 limit_range.go:335] LimitRange "e2e-limitrange-l72nv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-l72nv" by Collection with labelSelector: "e2e-limitrange-l72nv=patched" @ 01/12/25 22:53:03.059
  STEP: Confirm that the limitRange "e2e-limitrange-l72nv" has been deleted @ 01/12/25 22:53:03.083
  I0112 22:53:03.083441 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0112 22:53:03.087109 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-l72nv=patched"
  I0112 22:53:03.087164 23 limit_range.go:344] LimitRange "e2e-limitrange-l72nv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-l72nv" @ 01/12/25 22:53:03.087
  I0112 22:53:03.091179 23 limit_range.go:350] Found 1 limitRange
  I0112 22:53:03.091306 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5300" for this suite. @ 01/12/25 22:53:03.095
  STEP: Destroying namespace "e2e-limitrange-l72nv-2377" for this suite. @ 01/12/25 22:53:03.109
• [0.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/12/25 22:53:03.126
  I0112 22:53:03.126342 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 22:53:03.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:03.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:03.157
  STEP: Creating configMap that has name configmap-test-emptyKey-eca2fed4-a20e-49cd-a98e-271975242d37 @ 01/12/25 22:53:03.163
  I0112 22:53:03.166148 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2211" for this suite. @ 01/12/25 22:53:03.17
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 01/12/25 22:53:03.185
  I0112 22:53:03.185456 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 22:53:03.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:03.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:03.225
  STEP: Creating a Serviceaccount "e2e-sa-s6nph" in namespace "svcaccounts-451" @ 01/12/25 22:53:03.242
  STEP: Creating a ServiceaccountToken "e2e-sa-s6nph" in namespace "svcaccounts-451" @ 01/12/25 22:53:03.254
  STEP: Creating a TokenReview for "e2e-sa-s6nph" in namespace "svcaccounts-451" @ 01/12/25 22:53:03.26
  I0112 22:53:03.262538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-451" for this suite. @ 01/12/25 22:53:03.266
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/12/25 22:53:03.279
  I0112 22:53:03.279429 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:53:03.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:03.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:03.324
  STEP: creating service endpoint-test2 in namespace services-521 @ 01/12/25 22:53:03.327
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[] @ 01/12/25 22:53:03.35
  I0112 22:53:03.354782 23 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0112 22:53:04.369243 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-521 @ 01/12/25 22:53:04.369
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[pod1:[80]] @ 01/12/25 22:53:06.405
  I0112 22:53:06.418636 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/12/25 22:53:06.418
  I0112 22:53:06.418715 23 resource.go:361] Creating new exec pod
  I0112 22:53:09.443016 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-521 exec execpod695tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0112 22:53:09.616448 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.142) 80 port [tcp/http] succeeded!\n"
  I0112 22:53:09.616508 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 22:53:09.616604 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-521 exec execpod695tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 80'
  I0112 22:53:09.779200 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.142 80\nConnection to 10.152.183.142 80 port [tcp/http] succeeded!\n"
  I0112 22:53:09.779280 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-521 @ 01/12/25 22:53:09.779
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/12/25 22:53:11.815
  I0112 22:53:11.832849 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/12/25 22:53:11.832
  I0112 22:53:12.833209 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-521 exec execpod695tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0112 22:53:12.999864 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.142) 80 port [tcp/http] succeeded!\n"
  I0112 22:53:12.999923 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 22:53:13.000116 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-521 exec execpod695tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 80'
  I0112 22:53:13.151427 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.142 80\nConnection to 10.152.183.142 80 port [tcp/http] succeeded!\n"
  I0112 22:53:13.151570 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-521 @ 01/12/25 22:53:13.151
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[pod2:[80]] @ 01/12/25 22:53:13.206
  I0112 22:53:14.246078 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/12/25 22:53:14.246
  I0112 22:53:15.247514 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-521 exec execpod695tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0112 22:53:15.416212 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.142) 80 port [tcp/http] succeeded!\n"
  I0112 22:53:15.416285 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 22:53:15.416393 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-521 exec execpod695tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.142 80'
  I0112 22:53:15.571997 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.142 80\nConnection to 10.152.183.142 80 port [tcp/http] succeeded!\n"
  I0112 22:53:15.572086 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-521 @ 01/12/25 22:53:15.572
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-521 to expose endpoints map[] @ 01/12/25 22:53:15.661
  I0112 22:53:16.683486 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-521 exposes endpoints map[]
  I0112 22:53:16.727768 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-521" for this suite. @ 01/12/25 22:53:16.732
• [13.476 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/12/25 22:53:16.755
  I0112 22:53:16.755188 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:53:16.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:16.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:16.822
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 22:53:16.825
  STEP: Saw pod success @ 01/12/25 22:53:20.865
  I0112 22:53:20.868730 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-6255bb57-72ed-4ebc-97b8-61cde3e76904 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 22:53:20.875
  I0112 22:53:20.908727 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4247" for this suite. @ 01/12/25 22:53:20.913
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/12/25 22:53:20.928
  I0112 22:53:20.928702 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 22:53:20.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:53:20.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:53:20.972
  STEP: Creating a cronjob @ 01/12/25 22:53:20.976
  STEP: Ensuring more than one job is running at a time @ 01/12/25 22:53:20.99
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/12/25 22:55:00.994
  STEP: Removing cronjob @ 01/12/25 22:55:00.998
  I0112 22:55:01.019649 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7615" for this suite. @ 01/12/25 22:55:01.023
• [100.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/12/25 22:55:01.039
  I0112 22:55:01.039846 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:55:01.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:01.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:01.124
  STEP: Creating projection with secret that has name projected-secret-test-map-df37d0bb-3e8a-4a84-8063-52ff877be414 @ 01/12/25 22:55:01.129
  STEP: Creating a pod to test consume secrets @ 01/12/25 22:55:01.194
  STEP: Saw pod success @ 01/12/25 22:55:05.223
  I0112 22:55:05.227312 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-secrets-245d3a5f-9a1b-4656-9dd7-c0690caddb6b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 22:55:05.239
  I0112 22:55:05.287078 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7454" for this suite. @ 01/12/25 22:55:05.292
• [4.283 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 01/12/25 22:55:05.323
  I0112 22:55:05.323379 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:55:05.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:05.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:05.355
  STEP: creating service multiprotocol-test in namespace services-4951 @ 01/12/25 22:55:05.359
  STEP: creating pod pod1 in namespace services-4951 @ 01/12/25 22:55:05.384
  STEP: Creating pod pod1 in namespace services-4951 @ 01/12/25 22:55:05.384
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4951 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/12/25 22:55:07.436
  I0112 22:55:07.450345 23 service.go:4553] successfully validated that service multiprotocol-test in namespace services-4951 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/12/25 22:55:07.45
  I0112 22:55:07.450436 23 resource.go:361] Creating new exec pod
  I0112 22:55:09.475220 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80'
  I0112 22:55:09.632598 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.171 80\nConnection to 10.152.183.171 80 port [tcp/http] succeeded!\n"
  I0112 22:55:09.632665 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 22:55:09.632780 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.171 80'
  I0112 22:55:11.785143 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.171 80\n"
  I0112 22:55:11.785236 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/12/25 22:55:11.785
  I0112 22:55:11.803497 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80'
  I0112 22:55:11.993173 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.171 80\nConnection to 10.152.183.171 80 port [tcp/http] succeeded!\n"
  I0112 22:55:11.993280 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 22:55:11.993415 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.171 80'
  I0112 22:55:14.136535 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.171 80\n"
  I0112 22:55:14.136615 23 builder.go:147] stdout: ""
  I0112 22:55:14.136697 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.171 80'
  I0112 22:55:16.312490 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.171 80\n"
  I0112 22:55:16.312570 23 builder.go:147] stdout: ""
  I0112 22:55:16.312674 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.171 80'
  I0112 22:55:18.475479 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.171 80\n"
  I0112 22:55:18.475558 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/12/25 22:55:18.475
  I0112 22:55:18.494597 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.171 80'
  I0112 22:55:20.658451 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.171 80\n"
  I0112 22:55:20.658523 23 builder.go:147] stdout: "pod1"
  I0112 22:55:20.658635 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80'
  I0112 22:55:22.817664 23 builder.go:135] rc: 1
  I0112 22:55:22.817759 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.171 80
  nc: connect to 10.152.183.171 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0112 22:55:22.818015 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80'
  I0112 22:55:24.969777 23 builder.go:135] rc: 1
  I0112 22:55:24.969877 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.171 80
  nc: connect to 10.152.183.171 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0112 22:55:24.970010 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80'
  I0112 22:55:27.138158 23 builder.go:135] rc: 1
  I0112 22:55:27.138276 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-4951 exec execpodsvdh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.171 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.171 80
  nc: connect to 10.152.183.171 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0112 22:55:27.138787 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4951" for this suite. @ 01/12/25 22:55:27.143
• [21.837 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/12/25 22:55:27.16
  I0112 22:55:27.160768 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 22:55:27.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:27.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:27.201
  I0112 22:55:27.205872 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 22:55:27.214579 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0112 22:55:27.218641 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 22:55:27.225630 23 predicates.go:957] concurrent-28945374-jkmmn from cronjob-7615 started at 2025-01-12 22:54:00 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.225687 23 predicates.go:959] 	Container c ready: true, restart count 0
  I0112 22:55:27.225701 23 predicates.go:957] concurrent-28945375-ttnv9 from cronjob-7615 started at 2025-01-12 22:55:00 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.225710 23 predicates.go:959] 	Container c ready: true, restart count 0
  I0112 22:55:27.225719 23 predicates.go:957] calico-kube-controllers-5947598c79-mcsbb from kube-system started at 2025-01-12 22:49:43 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.225727 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 22:55:27.225735 23 predicates.go:957] calico-node-7qkl4 from kube-system started at 2025-01-12 22:13:28 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.225742 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 22:55:27.225750 23 predicates.go:957] pod1 from services-4951 started at 2025-01-12 22:55:05 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.225758 23 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0112 22:55:27.225767 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z8bgt from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 22:55:27.225775 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 22:55:27.225783 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 22:55:27.225806 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 22:55:27.236001 23 predicates.go:957] calico-node-dn6q6 from kube-system started at 2025-01-12 22:13:29 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.236051 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 22:55:27.236066 23 predicates.go:957] coredns-79b94494c7-hs9qg from kube-system started at 2025-01-12 22:49:43 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.236075 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 22:55:27.236084 23 predicates.go:957] execpodsvdh6 from services-4951 started at 2025-01-12 22:55:07 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.236092 23 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0112 22:55:27.236100 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 22:27:44 +0000 UTC (1 container statuses recorded)
  I0112 22:55:27.236108 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 22:55:27.236116 23 predicates.go:957] sonobuoy-e2e-job-d35ab0f1f1cc4190 from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 22:55:27.236124 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 22:55:27.236151 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 22:55:27.236160 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z4bgx from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 22:55:27.236205 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 22:55:27.236215 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/12/25 22:55:27.236
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/12/25 22:55:29.271
  STEP: Trying to apply a random label on the found node. @ 01/12/25 22:55:29.307
  STEP: verifying the node has the label kubernetes.io/e2e-5aa32477-c62b-496f-9891-45bc7569279c 42 @ 01/12/25 22:55:29.328
  STEP: Trying to relaunch the pod, now with labels. @ 01/12/25 22:55:29.334
  STEP: removing the label kubernetes.io/e2e-5aa32477-c62b-496f-9891-45bc7569279c off the node ubuntu @ 01/12/25 22:55:31.363
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5aa32477-c62b-496f-9891-45bc7569279c @ 01/12/25 22:55:31.383
  I0112 22:55:31.390518 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1423" for this suite. @ 01/12/25 22:55:31.394
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/12/25 22:55:31.416
  I0112 22:55:31.416797 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename disruption @ 01/12/25 22:55:31.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:31.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:31.48
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:55:31.498
  STEP: Updating PodDisruptionBudget status @ 01/12/25 22:55:33.503
  STEP: Waiting for all pods to be running @ 01/12/25 22:55:33.527
  I0112 22:55:33.531254 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 01/12/25 22:55:35.534
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:55:35.556
  STEP: Patching PodDisruptionBudget status @ 01/12/25 22:55:35.566
  STEP: Waiting for the pdb to be processed @ 01/12/25 22:55:35.583
  I0112 22:55:35.587528 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7903" for this suite. @ 01/12/25 22:55:35.592
• [4.196 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/12/25 22:55:35.612
  I0112 22:55:35.612679 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 22:55:35.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:35.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:35.663
  STEP: set up a multi version CRD @ 01/12/25 22:55:35.676
  I0112 22:55:35.677460 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: rename a version @ 01/12/25 22:55:39.35
  STEP: check the new version name is served @ 01/12/25 22:55:39.38
  STEP: check the old version name is removed @ 01/12/25 22:55:40.179
  STEP: check the other version is not changed @ 01/12/25 22:55:40.904
  I0112 22:55:43.649018 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1905" for this suite. @ 01/12/25 22:55:43.659
• [8.063 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/12/25 22:55:43.676
  I0112 22:55:43.676181 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 22:55:43.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:43.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:43.718
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 22:55:43.723
  STEP: Saw pod success @ 01/12/25 22:55:47.759
  I0112 22:55:47.763618 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-2d5df335-d28a-4ff4-bff7-cc78aa2a1fde container client-container: <nil>
  STEP: delete the pod @ 01/12/25 22:55:47.769
  I0112 22:55:47.801156 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4319" for this suite. @ 01/12/25 22:55:47.805
• [4.144 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/12/25 22:55:47.82
  I0112 22:55:47.820134 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 22:55:47.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:47.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:47.865
  STEP: Creating a pod to test substitution in container's command @ 01/12/25 22:55:47.869
  STEP: Saw pod success @ 01/12/25 22:55:51.906
  I0112 22:55:51.911670 23 output.go:207] Trying to get logs from node ubuntu pod var-expansion-9ec2e322-dbfb-4783-8a6e-a641687e414a container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 22:55:51.919
  I0112 22:55:51.966271 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7967" for this suite. @ 01/12/25 22:55:51.969
• [4.174 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/12/25 22:55:51.993
  I0112 22:55:51.993718 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 22:55:51.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:55:52.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:55:52.036
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3906 @ 01/12/25 22:55:52.04
  STEP: changing the ExternalName service to type=NodePort @ 01/12/25 22:55:52.052
  STEP: creating replication controller externalname-service in namespace services-3906 @ 01/12/25 22:55:52.09
  I0112 22:55:52.129718      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3906, replica count: 2
  I0112 22:55:55.180923      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 22:55:55.181007 23 resource.go:361] Creating new exec pod
  I0112 22:55:58.208774 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 22:55:58.363965 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0112 22:55:58.364074 23 builder.go:147] stdout: ""
  I0112 22:55:59.209204 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 22:55:59.362112 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0112 22:55:59.362202 23 builder.go:147] stdout: ""
  I0112 22:56:00.209122 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 22:56:00.367708 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0112 22:56:00.367799 23 builder.go:147] stdout: ""
  I0112 22:56:01.209805 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 22:56:01.370653 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0112 22:56:01.370727 23 builder.go:147] stdout: ""
  I0112 22:56:02.209364 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0112 22:56:02.359026 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0112 22:56:02.359155 23 builder.go:147] stdout: "externalname-service-zkbkt"
  I0112 22:56:02.359262 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 80'
  I0112 22:56:02.513267 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.109 80\nConnection to 10.152.183.109 80 port [tcp/http] succeeded!\n"
  I0112 22:56:02.513326 23 builder.go:147] stdout: "externalname-service-zkbkt"
  I0112 22:56:02.513449 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 30118'
  I0112 22:56:02.666002 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 30118\nConnection to 172.17.202.11 30118 port [tcp/*] succeeded!\n"
  I0112 22:56:02.666107 23 builder.go:147] stdout: ""
  I0112 22:56:03.514536 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 30118'
  I0112 22:56:03.666362 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 30118\nConnection to 172.17.202.11 30118 port [tcp/*] succeeded!\n"
  I0112 22:56:03.666401 23 builder.go:147] stdout: ""
  I0112 22:56:04.514299 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 30118'
  I0112 22:56:04.670881 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 30118\nConnection to 172.17.202.11 30118 port [tcp/*] succeeded!\n"
  I0112 22:56:04.670988 23 builder.go:147] stdout: "externalname-service-zkbkt"
  I0112 22:56:04.671090 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-3906 exec execpod5nj7g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 30118'
  I0112 22:56:04.829035 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 30118\nConnection to 172.17.207.20 30118 port [tcp/*] succeeded!\n"
  I0112 22:56:04.829103 23 builder.go:147] stdout: "externalname-service-8qqpw"
  I0112 22:56:04.829201 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0112 22:56:04.897220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3906" for this suite. @ 01/12/25 22:56:04.901
• [12.922 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/12/25 22:56:04.915
  I0112 22:56:04.915809 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename proxy @ 01/12/25 22:56:04.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:04.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:04.988
  I0112 22:56:04.992778 23 proxy.go:387] Creating pod...
  I0112 22:56:07.017411 23 proxy.go:411] Creating service...
  I0112 22:56:07.042845 23 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=DELETE
  I0112 22:56:07.048043 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 22:56:07.048095 23 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=OPTIONS
  I0112 22:56:07.053190 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 22:56:07.053249 23 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=PATCH
  I0112 22:56:07.058213 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 22:56:07.058299 23 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=POST
  I0112 22:56:07.063331 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 22:56:07.063414 23 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=PUT
  I0112 22:56:07.067802 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 22:56:07.067874 23 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=DELETE
  I0112 22:56:07.075362 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 22:56:07.075422 23 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0112 22:56:07.081475 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 22:56:07.081531 23 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=PATCH
  I0112 22:56:07.088337 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 22:56:07.088406 23 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=POST
  I0112 22:56:07.094429 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 22:56:07.094486 23 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=PUT
  I0112 22:56:07.100528 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 22:56:07.100616 23 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=GET
  I0112 22:56:07.104711 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0112 22:56:07.104797 23 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=GET
  I0112 22:56:07.110569 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0112 22:56:07.110661 23 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/pods/agnhost/proxy?method=HEAD
  I0112 22:56:07.114255 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0112 22:56:07.114328 23 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-378/services/e2e-proxy-test-service/proxy?method=HEAD
  I0112 22:56:07.120393 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0112 22:56:07.120595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-378" for this suite. @ 01/12/25 22:56:07.125
• [2.224 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/12/25 22:56:07.139
  I0112 22:56:07.139686 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 22:56:07.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:07.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:07.175
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/12/25 22:56:07.18
  STEP: Saw pod success @ 01/12/25 22:56:11.211
  I0112 22:56:11.215498 23 output.go:207] Trying to get logs from node ubuntu pod pod-8b957f55-ecc2-4224-a89c-babd2047ccac container test-container: <nil>
  STEP: delete the pod @ 01/12/25 22:56:11.223
  I0112 22:56:11.261089 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5755" for this suite. @ 01/12/25 22:56:11.267
• [4.141 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/12/25 22:56:11.28
  I0112 22:56:11.280946 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 22:56:11.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:11.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:11.32
  STEP: Creating configMap with name projected-configmap-test-volume-map-6dddc423-6c65-4c11-a23f-e64b4b0a080f @ 01/12/25 22:56:11.332
  STEP: Creating a pod to test consume configMaps @ 01/12/25 22:56:11.354
  STEP: Saw pod success @ 01/12/25 22:56:15.389
  I0112 22:56:15.393280 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-aee70b9f-9a7e-42c1-8e0f-7d0970a82d38 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 22:56:15.4
  I0112 22:56:15.451838 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9038" for this suite. @ 01/12/25 22:56:15.456
• [4.202 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/12/25 22:56:15.483
  I0112 22:56:15.483238 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 22:56:15.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:15.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:15.524
  STEP: Creating a pod to test env composition @ 01/12/25 22:56:15.528
  STEP: Saw pod success @ 01/12/25 22:56:19.56
  I0112 22:56:19.565583 23 output.go:207] Trying to get logs from node ubuntu pod var-expansion-8a04ab66-b14c-4b98-bcb4-f60a5aa2b7f3 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 22:56:19.575
  I0112 22:56:19.624498 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-132" for this suite. @ 01/12/25 22:56:19.628
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/12/25 22:56:19.65
  I0112 22:56:19.650697 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 22:56:19.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:19.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:19.692
  I0112 22:56:19.695669 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  W0112 22:56:22.247296      23 warnings.go:70] unknown field "alpha"
  W0112 22:56:22.247355      23 warnings.go:70] unknown field "beta"
  W0112 22:56:22.247363      23 warnings.go:70] unknown field "delta"
  W0112 22:56:22.247369      23 warnings.go:70] unknown field "epsilon"
  W0112 22:56:22.247376      23 warnings.go:70] unknown field "gamma"
  I0112 22:56:22.823231 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3341" for this suite. @ 01/12/25 22:56:22.828
• [3.192 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 01/12/25 22:56:22.842
  I0112 22:56:22.842790 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 22:56:22.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:22.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:22.88
  STEP: Creating a test headless service @ 01/12/25 22:56:22.885
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6536 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6536;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6536 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6536;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6536.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6536.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6536.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6536.svc;check="$$(dig +notcp +noall +answer +search 173.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.173_udp@PTR;check="$$(dig +tcp +noall +answer +search 173.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.173_tcp@PTR;sleep 1; done
   @ 01/12/25 22:56:22.946
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6536 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6536;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6536 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6536;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6536.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6536.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6536.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6536.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6536.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6536.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6536.svc;check="$$(dig +notcp +noall +answer +search 173.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.173_udp@PTR;check="$$(dig +tcp +noall +answer +search 173.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.173_tcp@PTR;sleep 1; done
   @ 01/12/25 22:56:22.946
  STEP: creating a pod to probe DNS @ 01/12/25 22:56:22.946
  STEP: submitting the pod to kubernetes @ 01/12/25 22:56:22.946
  STEP: retrieving the pod @ 01/12/25 22:56:25.006
  STEP: looking for the results for each expected name from probers @ 01/12/25 22:56:25.012
  I0112 22:56:25.019777 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.026517 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.032624 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6536 from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.037577 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6536 from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.042906 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6536.svc from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.047213 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6536.svc from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.077478 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.082256 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.086499 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6536 from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.090436 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6536 from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.094160 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6536.svc from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.097646 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6536.svc from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:25.119980 23 dns_common.go:506] Lookups using dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6536 agnhost_tcp@dns-test-service.dns-6536 agnhost_udp@dns-test-service.dns-6536.svc agnhost_tcp@dns-test-service.dns-6536.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6536 jessie_tcp@dns-test-service.dns-6536 jessie_udp@dns-test-service.dns-6536.svc jessie_tcp@dns-test-service.dns-6536.svc]

  I0112 22:56:25.125894 23 dns_common.go:514] Pod client logs for webserver: 
  I0112 22:56:25.131886 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0112 22:56:25.137767 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0112 22:56:30.019287 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:30.023223 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:30.026863 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6536 from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:30.030707 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6536 from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:30.034236 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6536.svc from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:30.039189 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6536.svc from pod dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5: the server could not find the requested resource (get pods dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5)
  I0112 22:56:30.128272 23 dns_common.go:506] Lookups using dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6536 agnhost_tcp@dns-test-service.dns-6536 agnhost_udp@dns-test-service.dns-6536.svc agnhost_tcp@dns-test-service.dns-6536.svc]

  I0112 22:56:30.135867 23 dns_common.go:514] Pod client logs for webserver: 
  I0112 22:56:30.143082 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0112 22:56:30.152482 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0112 22:56:35.139245 23 dns_common.go:546] DNS probes using dns-6536/dns-test-2d5c6d04-3607-4652-af08-ed1b323bd5d5 succeeded

  STEP: deleting the pod @ 01/12/25 22:56:35.139
  STEP: deleting the test service @ 01/12/25 22:56:35.195
  STEP: deleting the test headless service @ 01/12/25 22:56:35.359
  I0112 22:56:35.389265 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6536" for this suite. @ 01/12/25 22:56:35.393
• [12.573 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/12/25 22:56:35.416
  I0112 22:56:35.416331 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 22:56:35.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:56:35.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:56:35.505
  STEP: Creating resourceQuota "e2e-rq-status-fkrqm" @ 01/12/25 22:56:35.513
  I0112 22:56:35.528554 23 resource_quota.go:1102] Resource quota "e2e-rq-status-fkrqm" reports spec: hard cpu limit of 500m
  I0112 22:56:35.528632 23 resource_quota.go:1104] Resource quota "e2e-rq-status-fkrqm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-fkrqm" /status @ 01/12/25 22:56:35.528
  STEP: Confirm /status for "e2e-rq-status-fkrqm" resourceQuota via watch @ 01/12/25 22:56:35.563
  I0112 22:56:35.565393 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-fkrqm" in namespace "resourcequota-1032" with hard status: v1.ResourceList(nil)
  I0112 22:56:35.565468 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-fkrqm" in namespace "resourcequota-1032" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0112 22:56:35.565484 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-fkrqm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/12/25 22:56:35.568
  I0112 22:56:35.579007 23 resource_quota.go:1152] Resource quota "e2e-rq-status-fkrqm" reports spec: hard cpu limit of 1
  I0112 22:56:35.579038 23 resource_quota.go:1153] Resource quota "e2e-rq-status-fkrqm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-fkrqm" /status @ 01/12/25 22:56:35.579
  STEP: Confirm /status for "e2e-rq-status-fkrqm" resourceQuota via watch @ 01/12/25 22:56:35.59
  I0112 22:56:35.591784 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-fkrqm" in namespace "resourcequota-1032" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0112 22:56:35.591877 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-fkrqm" in namespace "resourcequota-1032" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0112 22:56:35.591895 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-fkrqm" /status was patched
  STEP: Get "e2e-rq-status-fkrqm" /status @ 01/12/25 22:56:35.591
  I0112 22:56:35.595755 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-fkrqm" reports status: hard cpu of 1
  I0112 22:56:35.595815 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-fkrqm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-fkrqm" /status before checking Spec is unchanged @ 01/12/25 22:56:35.599
  I0112 22:56:35.621154 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-fkrqm" reports status: hard cpu of 2
  I0112 22:56:35.621224 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-fkrqm" reports status: hard memory of 2Gi
  I0112 22:56:35.622855 23 resource_quota.go:1229] observed resourceQuota "e2e-rq-status-fkrqm" in namespace "resourcequota-1032" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0112 22:56:35.622952 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-fkrqm" in namespace "resourcequota-1032" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0112 22:56:35.626459 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d4870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d48a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d48d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:56:40.630380 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e2d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:56:45.633165 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d49d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d4a08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d4a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:56:50.629696 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b13f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:56:55.630612 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1530), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1560), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1590), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:00.630282 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:05.632901 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1698), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b16e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1710), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:10.626751 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e5d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:15.633050 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:20.632352 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e7c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e7f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:25.631402 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b19c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1a10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:30.630507 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00401e9a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:35.630400 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1b30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1b60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1b90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:40.630497 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1c68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1c98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1cc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:45.628337 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1da0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1dd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b1e00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:50.632403 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b0060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b0090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046b00f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:57:55.630695 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-fkrqm" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fkrqm", GenerateName:"", Namespace:"resourcequota-1032", SelfLink:"", UID:"346b6006-9733-4153-9425-ba76899beff9", ResourceVersion:"13815", Generation:0, CreationTimestamp:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fkrqm"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d4060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d4090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 12, 22, 56, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047d40d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0112 22:58:00.631318 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-fkrqm" Spec was unchanged and /status reset
  I0112 22:58:00.631579 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1032" for this suite. @ 01/12/25 22:58:00.637
• [85.239 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/12/25 22:58:00.655
  I0112 22:58:00.655517 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:58:00.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:00.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:00.698
  STEP: Setting up server cert @ 01/12/25 22:58:00.757
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:58:00.988
  STEP: Deploying the webhook pod @ 01/12/25 22:58:01.003
  STEP: Wait for the deployment to be ready @ 01/12/25 22:58:01.035
  I0112 22:58:01.044098 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:58:03.058
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:58:03.09
  I0112 22:58:04.091018 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/12/25 22:58:04.098
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/12/25 22:58:04.1
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/12/25 22:58:04.1
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/12/25 22:58:04.1
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/12/25 22:58:04.102
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/12/25 22:58:04.102
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/12/25 22:58:04.104
  I0112 22:58:04.229870 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3998" for this suite. @ 01/12/25 22:58:04.235
  STEP: Destroying namespace "webhook-markers-7551" for this suite. @ 01/12/25 22:58:04.249
• [3.626 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/12/25 22:58:04.282
  I0112 22:58:04.282160 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 22:58:04.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:04.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:04.369
  I0112 22:58:04.374095 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/12/25 22:58:05.676
  I0112 22:58:05.676892 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-4624 --namespace=crd-publish-openapi-4624 create -f -'
  I0112 22:58:07.852865 23 builder.go:146] stderr: ""
  I0112 22:58:07.853018 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7184-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0112 22:58:07.853114 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-4624 --namespace=crd-publish-openapi-4624 delete e2e-test-crd-publish-openapi-7184-crds test-cr'
  I0112 22:58:07.962981 23 builder.go:146] stderr: ""
  I0112 22:58:07.963039 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7184-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0112 22:58:07.963095 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-4624 --namespace=crd-publish-openapi-4624 apply -f -'
  I0112 22:58:08.058824 23 builder.go:146] stderr: ""
  I0112 22:58:08.058880 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7184-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0112 22:58:08.058949 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-4624 --namespace=crd-publish-openapi-4624 delete e2e-test-crd-publish-openapi-7184-crds test-cr'
  I0112 22:58:08.157986 23 builder.go:146] stderr: ""
  I0112 22:58:08.158044 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7184-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/12/25 22:58:08.158
  I0112 22:58:08.158135 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-4624 explain e2e-test-crd-publish-openapi-7184-crds'
  I0112 22:58:08.233726 23 builder.go:146] stderr: ""
  I0112 22:58:08.233822 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7184-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0112 22:58:09.669515 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4624" for this suite. @ 01/12/25 22:58:09.679
• [5.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/12/25 22:58:09.703
  I0112 22:58:09.703983 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 22:58:09.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:09.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:09.758
  I0112 22:58:13.821108 23 security_context.go:538] Got logs for pod "busybox-privileged-false-df43f638-b26e-47c2-9bd0-5f860a53fbf8": "ip: RTNETLINK answers: Operation not permitted\n"
  I0112 22:58:13.821256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5229" for this suite. @ 01/12/25 22:58:13.824
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/12/25 22:58:13.842
  I0112 22:58:13.842762 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 22:58:13.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:13.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:13.874
  STEP: Create a ReplicaSet @ 01/12/25 22:58:13.879
  STEP: Verify that the required pods have come up @ 01/12/25 22:58:13.9
  I0112 22:58:13.904333 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0112 22:58:18.909868 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/12/25 22:58:18.91
  I0112 22:58:18.913544 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/12/25 22:58:18.913
  STEP: DeleteCollection of the ReplicaSets @ 01/12/25 22:58:18.918
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/12/25 22:58:18.941
  I0112 22:58:18.947078 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8550" for this suite. @ 01/12/25 22:58:18.951
• [5.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/12/25 22:58:18.977
  I0112 22:58:18.978034 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename events @ 01/12/25 22:58:18.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:19.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:19.183
  STEP: creating a test event @ 01/12/25 22:58:19.187
  STEP: listing events in all namespaces @ 01/12/25 22:58:19.284
  STEP: listing events in test namespace @ 01/12/25 22:58:19.29
  STEP: listing events with field selection filtering on source @ 01/12/25 22:58:19.297
  STEP: listing events with field selection filtering on reportingController @ 01/12/25 22:58:19.302
  STEP: getting the test event @ 01/12/25 22:58:19.307
  STEP: patching the test event @ 01/12/25 22:58:19.312
  STEP: getting the test event @ 01/12/25 22:58:19.338
  STEP: updating the test event @ 01/12/25 22:58:19.344
  STEP: getting the test event @ 01/12/25 22:58:19.363
  STEP: deleting the test event @ 01/12/25 22:58:19.367
  STEP: listing events in all namespaces @ 01/12/25 22:58:19.398
  STEP: listing events in test namespace @ 01/12/25 22:58:19.403
  I0112 22:58:19.408290 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4479" for this suite. @ 01/12/25 22:58:19.414
• [0.451 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/12/25 22:58:19.429
  I0112 22:58:19.429244 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename subpath @ 01/12/25 22:58:19.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:19.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:19.489
  STEP: Setting up data @ 01/12/25 22:58:19.494
  STEP: Creating pod pod-subpath-test-secret-mhs7 @ 01/12/25 22:58:19.534
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 22:58:19.534
  STEP: Saw pod success @ 01/12/25 22:58:43.663
  I0112 22:58:43.667405 23 output.go:207] Trying to get logs from node ubuntu pod pod-subpath-test-secret-mhs7 container test-container-subpath-secret-mhs7: <nil>
  STEP: delete the pod @ 01/12/25 22:58:43.675
  STEP: Deleting pod pod-subpath-test-secret-mhs7 @ 01/12/25 22:58:43.704
  I0112 22:58:43.704199 23 delete.go:62] Deleting pod "pod-subpath-test-secret-mhs7" in namespace "subpath-2513"
  I0112 22:58:43.708706 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2513" for this suite. @ 01/12/25 22:58:43.713
• [24.297 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/12/25 22:58:43.726
  I0112 22:58:43.726921 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 22:58:43.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:43.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:43.767
  STEP: Setting up server cert @ 01/12/25 22:58:43.818
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 22:58:44.034
  STEP: Deploying the webhook pod @ 01/12/25 22:58:44.058
  STEP: Wait for the deployment to be ready @ 01/12/25 22:58:44.085
  I0112 22:58:44.095477 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 22:58:46.106
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 22:58:46.128
  I0112 22:58:47.129294 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/12/25 22:58:47.327
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 22:58:47.357
  STEP: Deleting the collection of validation webhooks @ 01/12/25 22:58:47.385
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 22:58:47.499
  I0112 22:58:47.626309 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8317" for this suite. @ 01/12/25 22:58:47.63
  STEP: Destroying namespace "webhook-markers-239" for this suite. @ 01/12/25 22:58:47.645
• [3.951 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/12/25 22:58:47.678
  I0112 22:58:47.678390 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/12/25 22:58:47.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:47.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:47.725
  STEP: Cleaning up the secret @ 01/12/25 22:58:49.808
  STEP: Cleaning up the configmap @ 01/12/25 22:58:49.824
  STEP: Cleaning up the pod @ 01/12/25 22:58:49.858
  I0112 22:58:49.903301 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4866" for this suite. @ 01/12/25 22:58:49.908
• [2.259 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/12/25 22:58:49.937
  I0112 22:58:49.937678 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename apf @ 01/12/25 22:58:49.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:49.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:49.972
  STEP: getting /apis @ 01/12/25 22:58:49.977
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/12/25 22:58:49.981
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/12/25 22:58:49.983
  STEP: creating @ 01/12/25 22:58:49.984
  STEP: getting @ 01/12/25 22:58:50.024
  STEP: listing @ 01/12/25 22:58:50.028
  STEP: watching @ 01/12/25 22:58:50.031
  I0112 22:58:50.032035 23 flowcontrol.go:394] starting watch
  STEP: patching @ 01/12/25 22:58:50.033
  STEP: updating @ 01/12/25 22:58:50.051
  I0112 22:58:50.091908 23 flowcontrol.go:422] waiting for watch events with expected annotations
  I0112 22:58:50.091997 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  I0112 22:58:50.092064 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/12/25 22:58:50.092
  STEP: patching /status @ 01/12/25 22:58:50.095
  STEP: updating /status @ 01/12/25 22:58:50.107
  STEP: deleting @ 01/12/25 22:58:50.147
  STEP: deleting a collection @ 01/12/25 22:58:50.168
  I0112 22:58:50.208129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-150" for this suite. @ 01/12/25 22:58:50.211
• [0.291 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/12/25 22:58:50.228
  I0112 22:58:50.228692 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/12/25 22:58:50.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 22:58:50.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 22:58:50.273
  I0112 22:58:50.278306 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 22:59:50.280059 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0112 22:59:50.284305 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/12/25 22:59:50.284
  I0112 22:59:50.522624 23 taints.go:463] Pod1 is running on ubuntu. Tainting Node
  I0112 22:59:52.761525 23 taints.go:471] Pod2 is running on ubuntu. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/12/25 22:59:52.761
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 22:59:52.778
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/12/25 22:59:52.784
  I0112 22:59:59.057691 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0112 23:00:19.100560 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/12/25 23:00:19.124
  I0112 23:00:19.128631 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3654" for this suite. @ 01/12/25 23:00:19.133
• [88.929 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 01/12/25 23:00:19.157
  I0112 23:00:19.157728 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 23:00:19.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:00:19.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:00:19.22
  STEP: Creating Indexed job @ 01/12/25 23:00:19.225
  STEP: Ensuring job reaches completions @ 01/12/25 23:00:19.239
  STEP: Ensuring pods with index for job exist @ 01/12/25 23:00:29.277
  I0112 23:00:29.283640 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3545" for this suite. @ 01/12/25 23:00:29.288
• [10.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 01/12/25 23:00:29.304
  I0112 23:00:29.304276 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:00:29.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:00:29.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:00:29.345
  STEP: Creating a pod to test downward api env vars @ 01/12/25 23:00:29.35
  STEP: Saw pod success @ 01/12/25 23:00:33.38
  I0112 23:00:33.383767 23 output.go:207] Trying to get logs from node ubuntu pod downward-api-e62d7fec-d16d-4155-804f-12e06781ae51 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:00:33.396
  I0112 23:00:33.437600 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6577" for this suite. @ 01/12/25 23:00:33.442
• [4.166 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/12/25 23:00:33.47
  I0112 23:00:33.470243 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:00:33.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:00:33.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:00:33.5
  I0112 23:00:33.520406 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-666" for this suite. @ 01/12/25 23:00:33.524
• [0.068 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/12/25 23:00:33.538
  I0112 23:00:33.538494 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:00:33.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:00:33.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:00:33.572
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:00:33.577
  STEP: Saw pod success @ 01/12/25 23:00:37.608
  I0112 23:00:37.614044 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-9a3d8d52-a339-4620-a929-ce8016bd605a container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:00:37.623
  I0112 23:00:37.655100 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4725" for this suite. @ 01/12/25 23:00:37.66
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/12/25 23:00:37.676
  I0112 23:00:37.676508 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename subpath @ 01/12/25 23:00:37.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:00:37.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:00:37.712
  STEP: Setting up data @ 01/12/25 23:00:37.723
  STEP: Creating pod pod-subpath-test-projected-gv9g @ 01/12/25 23:00:37.746
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 23:00:37.746
  STEP: Saw pod success @ 01/12/25 23:01:01.84
  I0112 23:01:01.847544 23 output.go:207] Trying to get logs from node ubuntu pod pod-subpath-test-projected-gv9g container test-container-subpath-projected-gv9g: <nil>
  STEP: delete the pod @ 01/12/25 23:01:01.86
  STEP: Deleting pod pod-subpath-test-projected-gv9g @ 01/12/25 23:01:01.922
  I0112 23:01:01.922505 23 delete.go:62] Deleting pod "pod-subpath-test-projected-gv9g" in namespace "subpath-1705"
  I0112 23:01:01.926731 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1705" for this suite. @ 01/12/25 23:01:01.931
• [24.277 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/12/25 23:01:01.953
  I0112 23:01:01.953298 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:01:01.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:01.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:01.996
  STEP: Counting existing ResourceQuota @ 01/12/25 23:01:02.001
  STEP: Creating a ResourceQuota @ 01/12/25 23:01:07.006
  STEP: Ensuring resource quota status is calculated @ 01/12/25 23:01:07.02
  STEP: Creating a Service @ 01/12/25 23:01:09.027
  STEP: Creating a NodePort Service @ 01/12/25 23:01:09.063
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/12/25 23:01:09.112
  STEP: Ensuring resource quota status captures service creation @ 01/12/25 23:01:09.175
  STEP: Deleting Services @ 01/12/25 23:01:11.181
  STEP: Ensuring resource quota status released usage @ 01/12/25 23:01:11.281
  I0112 23:01:13.286804 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1622" for this suite. @ 01/12/25 23:01:13.291
• [11.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/12/25 23:01:13.315
  I0112 23:01:13.315273 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:01:13.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:13.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:13.347
  STEP: Creating configMap with name configmap-test-volume-5bf9a3e6-7774-4980-9543-006b59261441 @ 01/12/25 23:01:13.352
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:01:13.364
  STEP: Saw pod success @ 01/12/25 23:01:17.393
  I0112 23:01:17.398104 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-0e4887e1-6635-4a3c-a4bf-f06d8c626208 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:01:17.404
  I0112 23:01:17.435065 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1144" for this suite. @ 01/12/25 23:01:17.439
• [4.139 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 01/12/25 23:01:17.453
  I0112 23:01:17.453917 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:01:17.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:17.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:17.496
  STEP: Creating a pod to test downward api env vars @ 01/12/25 23:01:17.501
  STEP: Saw pod success @ 01/12/25 23:01:21.54
  I0112 23:01:21.544601 23 output.go:207] Trying to get logs from node ubuntu pod downward-api-1e148f29-4e88-45db-a3ca-fbf2ec025353 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:01:21.553
  I0112 23:01:21.586395 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7339" for this suite. @ 01/12/25 23:01:21.59
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/12/25 23:01:21.608
  I0112 23:01:21.608303 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 23:01:21.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:21.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:21.657
  STEP: creating the policy @ 01/12/25 23:01:21.674
  STEP: waiting until the marker is denied @ 01/12/25 23:01:21.706
  STEP: testing a replicated Deployment to be allowed @ 01/12/25 23:01:22.66
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/12/25 23:01:22.777
  I0112 23:01:23.175842 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6267" for this suite. @ 01/12/25 23:01:23.186
• [1.638 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/12/25 23:01:23.246
  I0112 23:01:23.246805 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 23:01:23.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:23.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:23.314
  STEP: Read namespace status @ 01/12/25 23:01:23.318
  I0112 23:01:23.323731 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/12/25 23:01:23.323
  I0112 23:01:23.349208 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/12/25 23:01:23.349
  I0112 23:01:23.381088 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0112 23:01:23.381233 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6524" for this suite. @ 01/12/25 23:01:23.386
• [0.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/12/25 23:01:23.436
  I0112 23:01:23.436354 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:01:23.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:23.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:23.528
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/12/25 23:01:23.531
  STEP: Saw pod success @ 01/12/25 23:01:27.568
  I0112 23:01:27.574747 23 output.go:207] Trying to get logs from node ubuntu pod pod-c692ad39-a233-4aeb-93e1-3967058eefd2 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:01:27.585
  I0112 23:01:27.626494 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4696" for this suite. @ 01/12/25 23:01:27.631
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/12/25 23:01:27.646
  I0112 23:01:27.646550 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:01:27.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:27.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:27.698
  STEP: Creating configMap with name configmap-projected-all-test-volume-e3c3a9ba-e36b-4cd2-8b65-b9c35bd58848 @ 01/12/25 23:01:27.702
  STEP: Creating secret with name secret-projected-all-test-volume-187b7da4-f464-4820-814e-5e0efffbd323 @ 01/12/25 23:01:27.716
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/12/25 23:01:27.735
  W0112 23:01:27.751505      23 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 01/12/25 23:01:31.768
  I0112 23:01:31.772745 23 output.go:207] Trying to get logs from node ubuntu pod projected-volume-49ee2346-4ac5-47a4-8431-27b961a7fba7 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:01:31.779
  I0112 23:01:31.810341 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1965" for this suite. @ 01/12/25 23:01:31.815
• [4.182 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/12/25 23:01:31.828
  I0112 23:01:31.828276 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename subpath @ 01/12/25 23:01:31.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:31.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:31.866
  STEP: Setting up data @ 01/12/25 23:01:31.871
  STEP: Creating pod pod-subpath-test-configmap-c28n @ 01/12/25 23:01:31.9
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 23:01:31.9
  STEP: Saw pod success @ 01/12/25 23:01:55.998
  I0112 23:01:56.003540 23 output.go:207] Trying to get logs from node ubuntu pod pod-subpath-test-configmap-c28n container test-container-subpath-configmap-c28n: <nil>
  STEP: delete the pod @ 01/12/25 23:01:56.013
  STEP: Deleting pod pod-subpath-test-configmap-c28n @ 01/12/25 23:01:56.048
  I0112 23:01:56.048164 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-c28n" in namespace "subpath-947"
  I0112 23:01:56.051746 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-947" for this suite. @ 01/12/25 23:01:56.056
• [24.250 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/12/25 23:01:56.078
  I0112 23:01:56.078400 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:01:56.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:56.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:56.126
  STEP: Creating a ResourceQuota @ 01/12/25 23:01:56.131
  STEP: Getting a ResourceQuota @ 01/12/25 23:01:56.142
  STEP: Updating a ResourceQuota @ 01/12/25 23:01:56.147
  STEP: Verifying a ResourceQuota was modified @ 01/12/25 23:01:56.167
  STEP: Deleting a ResourceQuota @ 01/12/25 23:01:56.171
  STEP: Verifying the deleted ResourceQuota @ 01/12/25 23:01:56.189
  I0112 23:01:56.193781 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6865" for this suite. @ 01/12/25 23:01:56.198
• [0.135 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/12/25 23:01:56.213
  I0112 23:01:56.213473 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:01:56.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:56.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:56.245
  STEP: Creating configMap with name configmap-test-upd-39048d98-b41d-4a29-9530-e076ea3699b8 @ 01/12/25 23:01:56.254
  STEP: Creating the pod @ 01/12/25 23:01:56.266
  STEP: Waiting for pod with text data @ 01/12/25 23:01:58.293
  STEP: Waiting for pod with binary data @ 01/12/25 23:01:58.299
  I0112 23:01:58.306065 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9168" for this suite. @ 01/12/25 23:01:58.309
• [2.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/12/25 23:01:58.326
  I0112 23:01:58.326534 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename ingressclass @ 01/12/25 23:01:58.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:58.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:58.359
  STEP: getting /apis @ 01/12/25 23:01:58.363
  STEP: getting /apis/networking.k8s.io @ 01/12/25 23:01:58.368
  STEP: getting /apis/networking.k8s.iov1 @ 01/12/25 23:01:58.37
  STEP: creating @ 01/12/25 23:01:58.371
  STEP: getting @ 01/12/25 23:01:58.407
  STEP: listing @ 01/12/25 23:01:58.411
  STEP: watching @ 01/12/25 23:01:58.415
  I0112 23:01:58.415121 23 ingressclass.go:348] starting watch
  STEP: patching @ 01/12/25 23:01:58.416
  STEP: updating @ 01/12/25 23:01:58.429
  I0112 23:01:58.443116 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0112 23:01:58.443287 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/12/25 23:01:58.443
  STEP: deleting a collection @ 01/12/25 23:01:58.464
  I0112 23:01:58.495640 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3756" for this suite. @ 01/12/25 23:01:58.5
• [0.188 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/12/25 23:01:58.514
  I0112 23:01:58.514653 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/12/25 23:01:58.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:58.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:58.556
  STEP: getting /apis @ 01/12/25 23:01:58.56
  STEP: getting /apis/storage.k8s.io @ 01/12/25 23:01:58.565
  STEP: getting /apis/storage.k8s.io/v1 @ 01/12/25 23:01:58.566
  STEP: creating @ 01/12/25 23:01:58.568
  STEP: watching @ 01/12/25 23:01:58.609
  I0112 23:01:58.609335 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/12/25 23:01:58.633
  STEP: listing in namespace @ 01/12/25 23:01:58.637
  STEP: listing across namespaces @ 01/12/25 23:01:58.642
  STEP: patching @ 01/12/25 23:01:58.646
  STEP: updating @ 01/12/25 23:01:58.666
  I0112 23:01:58.678763 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0112 23:01:58.678970 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/12/25 23:01:58.679
  STEP: deleting a collection @ 01/12/25 23:01:58.699
  I0112 23:01:58.735244 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2766" for this suite. @ 01/12/25 23:01:58.739
• [0.237 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/12/25 23:01:58.752
  I0112 23:01:58.752177 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 23:01:58.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:01:58.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:01:58.792
  STEP: Waiting for pod completion @ 01/12/25 23:01:58.821
  I0112 23:02:02.849045 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1614" for this suite. @ 01/12/25 23:02:02.854
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/12/25 23:02:02.869
  I0112 23:02:02.869293 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 23:02:02.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:02.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:02.911
  STEP: Creating a pod to test substitution in container's args @ 01/12/25 23:02:02.917
  STEP: Saw pod success @ 01/12/25 23:02:06.95
  I0112 23:02:06.954704 23 output.go:207] Trying to get logs from node ubuntu pod var-expansion-fd7926ca-855b-4a65-95eb-8849807ef390 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:02:06.961
  I0112 23:02:06.992541 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9392" for this suite. @ 01/12/25 23:02:06.997
• [4.143 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 01/12/25 23:02:07.011
  I0112 23:02:07.011980 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 23:02:07.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:07.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:07.049
  STEP: Creating a job @ 01/12/25 23:02:07.053
  STEP: Ensuring active pods == parallelism @ 01/12/25 23:02:07.066
  STEP: Orphaning one of the Job's Pods @ 01/12/25 23:02:09.076
  I0112 23:02:09.600681 23 pod_client.go:173] Successfully updated pod "adopt-release-b4xtl"
  STEP: Checking that the Job readopts the Pod @ 01/12/25 23:02:09.6
  STEP: Removing the labels from the Job's Pod @ 01/12/25 23:02:11.611
  I0112 23:02:12.131560 23 pod_client.go:173] Successfully updated pod "adopt-release-b4xtl"
  STEP: Checking that the Job releases the Pod @ 01/12/25 23:02:12.131
  I0112 23:02:14.142054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5355" for this suite. @ 01/12/25 23:02:14.147
• [7.151 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/12/25 23:02:14.162
  I0112 23:02:14.162867 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 23:02:14.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:14.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:14.198
  I0112 23:02:14.231519 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0112 23:02:14.243640 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0112 23:02:14.249890 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:02:14.249964 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:02:15.253517 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:02:15.253556 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:02:16.256844 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 23:02:16.256966 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0112 23:02:16.257001 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0112 23:02:16.277243 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0112 23:02:18.292086 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0112 23:02:18.321458 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0112 23:02:18.321520 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0112 23:02:18.325661 23 daemon_set.go:1193] Wrong image for pod: daemon-set-967qx. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0112 23:02:18.325716 23 daemon_set.go:1198] Pod daemon-set-967qx is not available
  I0112 23:02:22.326433 23 daemon_set.go:1198] Pod daemon-set-46dv8 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 23:02:22.339
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5341, will wait for the garbage collector to delete the pods @ 01/12/25 23:02:22.339
  I0112 23:02:22.421787 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 26.324913ms
  I0112 23:02:22.522663 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.874951ms
  I0112 23:02:24.626343 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:02:24.626400 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 23:02:24.629439 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15737"},"items":null}

  I0112 23:02:24.632301 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15737"},"items":null}

  I0112 23:02:24.644690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5341" for this suite. @ 01/12/25 23:02:24.649
• [10.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/12/25 23:02:24.662
  I0112 23:02:24.662816 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename disruption @ 01/12/25 23:02:24.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:24.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:24.71
  STEP: Waiting for the pdb to be processed @ 01/12/25 23:02:24.727
  STEP: Waiting for all pods to be running @ 01/12/25 23:02:26.851
  I0112 23:02:26.856070 23 disruption.go:691] running pods: 0 < 3
  I0112 23:02:28.859989 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2024" for this suite. @ 01/12/25 23:02:28.864
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/12/25 23:02:28.88
  I0112 23:02:28.880437 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 23:02:28.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:28.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:28.924
  STEP: create the container @ 01/12/25 23:02:28.928
  W0112 23:02:28.949105      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/12/25 23:02:28.949
  STEP: get the container status @ 01/12/25 23:02:31.968
  STEP: the container should be terminated @ 01/12/25 23:02:31.974
  STEP: the termination message should be set @ 01/12/25 23:02:31.974
  I0112 23:02:31.974168 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/12/25 23:02:31.974
  I0112 23:02:32.016179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7546" for this suite. @ 01/12/25 23:02:32.022
• [3.159 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/12/25 23:02:32.039
  I0112 23:02:32.039614 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:02:32.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:32.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:32.078
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/12/25 23:02:32.084
  STEP: Saw pod success @ 01/12/25 23:02:36.125
  I0112 23:02:36.130078 23 output.go:207] Trying to get logs from node ubuntu pod pod-a6a03d42-2141-4c46-89a3-353cb0a8a996 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:02:36.143
  I0112 23:02:36.188822 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9798" for this suite. @ 01/12/25 23:02:36.194
• [4.171 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/12/25 23:02:36.215
  I0112 23:02:36.215187 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:02:36.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:36.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:36.251
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/12/25 23:02:36.255
  STEP: Saw pod success @ 01/12/25 23:02:40.294
  I0112 23:02:40.298570 23 output.go:207] Trying to get logs from node ubuntu pod pod-21f22e1e-39d0-4aa1-95c6-fe60d67b090c container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:02:40.304
  I0112 23:02:40.356393 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-449" for this suite. @ 01/12/25 23:02:40.361
• [4.160 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/12/25 23:02:40.375
  I0112 23:02:40.375547 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 23:02:40.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:40.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:40.408
  STEP: referencing a single matching pod @ 01/12/25 23:02:42.633
  STEP: referencing matching pods with named port @ 01/12/25 23:02:42.641
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/12/25 23:02:42.649
  STEP: recreating EndpointSlices after they've been deleted @ 01/12/25 23:02:42.657
  I0112 23:02:42.693646 23 endpointslice.go:938] EndpointSlice for Service endpointslice-8643/example-named-port not found
  I0112 23:02:44.698156 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8643" for this suite. @ 01/12/25 23:02:44.702
• [4.340 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/12/25 23:02:44.716
  I0112 23:02:44.716134 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pv @ 01/12/25 23:02:44.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:44.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:44.748
  STEP: Creating initial PV and PVC @ 01/12/25 23:02:44.76
  I0112 23:02:44.760635 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3439" @ 01/12/25 23:02:44.786
  STEP: Listing PVCs in namespace "pv-3439" @ 01/12/25 23:02:44.791
  STEP: Patching the PV "pv-3439-22h9t" @ 01/12/25 23:02:44.796
  STEP: Patching the PVC "pvc-xkzgp" @ 01/12/25 23:02:44.821
  STEP: Getting PV "pv-3439-22h9t" @ 01/12/25 23:02:44.84
  STEP: Getting PVC "pvc-xkzgp" @ 01/12/25 23:02:44.844
  STEP: Deleting PVC "pvc-xkzgp" @ 01/12/25 23:02:44.849
  STEP: Confirm deletion of PVC "pvc-xkzgp" @ 01/12/25 23:02:44.868
  STEP: Deleting PV "pv-3439-22h9t" @ 01/12/25 23:02:46.879
  STEP: Confirm deletion of PV "pv-3439-22h9t" @ 01/12/25 23:02:46.896
  STEP: Recreating another PV & PVC @ 01/12/25 23:02:48.904
  I0112 23:02:48.904843 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3439-gncks" @ 01/12/25 23:02:48.938
  STEP: Updating the PVC "pvc-j65lx" @ 01/12/25 23:02:48.983
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-j65lx=updated" @ 01/12/25 23:02:49.049
  STEP: Deleting PVC "pvc-j65lx" via DeleteCollection @ 01/12/25 23:02:49.053
  STEP: Confirm deletion of PVC "pvc-j65lx" @ 01/12/25 23:02:49.068
  STEP: Deleting PV "pv-3439-gncks" via DeleteCollection @ 01/12/25 23:02:51.076
  STEP: Confirm deletion of PV "pv-3439-gncks" @ 01/12/25 23:02:51.09
  I0112 23:02:53.100153 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0112 23:02:53.100205 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-j65lx"
  I0112 23:02:53.104256 23 pv.go:193] Deleting PersistentVolume "pv-3439-gncks"
  I0112 23:02:53.111876 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3439" for this suite. @ 01/12/25 23:02:53.116
• [8.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/12/25 23:02:53.131
  I0112 23:02:53.131478 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:02:53.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:53.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:53.183
  STEP: Setting up server cert @ 01/12/25 23:02:53.233
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:02:53.673
  STEP: Deploying the webhook pod @ 01/12/25 23:02:53.698
  STEP: Wait for the deployment to be ready @ 01/12/25 23:02:53.722
  I0112 23:02:53.729479 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0112 23:02:55.749608 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 2, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 2, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 2, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 2, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/12/25 23:02:57.754
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:02:57.777
  I0112 23:02:58.777813 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/12/25 23:02:58.784
  STEP: create a configmap that should be updated by the webhook @ 01/12/25 23:02:58.805
  I0112 23:02:58.934752 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1420" for this suite. @ 01/12/25 23:02:58.941
  STEP: Destroying namespace "webhook-markers-4052" for this suite. @ 01/12/25 23:02:58.966
• [5.879 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/12/25 23:02:59.011
  I0112 23:02:59.011147 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:02:59.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:02:59.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:02:59.067
  STEP: Creating projection with secret that has name projected-secret-test-map-ba4233f0-8f54-40bd-ab07-575e2a471bff @ 01/12/25 23:02:59.072
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:02:59.094
  STEP: Saw pod success @ 01/12/25 23:03:03.128
  I0112 23:03:03.133433 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-secrets-1ecc0eb4-248f-4b35-99ce-2d31d047b3e0 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:03:03.14
  I0112 23:03:03.172655 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2355" for this suite. @ 01/12/25 23:03:03.177
• [4.180 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/12/25 23:03:03.191
  I0112 23:03:03.191482 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 23:03:03.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:03.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:03.233
  STEP: creating the pod @ 01/12/25 23:03:03.238
  STEP: waiting for pod running @ 01/12/25 23:03:03.255
  STEP: creating a file in subpath @ 01/12/25 23:03:05.266
  I0112 23:03:05.271368 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-4918 PodName:var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:03:05.271440 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:03:05.271537 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4918/pods/var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/12/25 23:03:05.357
  I0112 23:03:05.361832 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-4918 PodName:var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:03:05.361903 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:03:05.361996 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-4918/pods/var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/12/25 23:03:05.443
  I0112 23:03:05.970593 23 pod_client.go:173] Successfully updated pod "var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165"
  STEP: waiting for annotated pod running @ 01/12/25 23:03:05.97
  STEP: deleting the pod gracefully @ 01/12/25 23:03:05.976
  I0112 23:03:05.976393 23 delete.go:62] Deleting pod "var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165" in namespace "var-expansion-4918"
  I0112 23:03:05.991963 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-a44fba86-b8c2-4911-ba43-82a5d05e7165" to be fully deleted
  I0112 23:03:40.094702 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4918" for this suite. @ 01/12/25 23:03:40.099
• [36.932 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/12/25 23:03:40.123
  I0112 23:03:40.123463 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:03:40.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:40.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:40.173
  I0112 23:03:40.258326 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4242" for this suite. @ 01/12/25 23:03:40.262
• [0.152 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/12/25 23:03:40.275
  I0112 23:03:40.275917 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:03:40.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:40.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:40.319
  STEP: Setting up server cert @ 01/12/25 23:03:40.387
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:03:40.769
  STEP: Deploying the webhook pod @ 01/12/25 23:03:40.788
  STEP: Wait for the deployment to be ready @ 01/12/25 23:03:40.81
  I0112 23:03:40.818695 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:03:42.833
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:03:42.864
  I0112 23:03:43.865245 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 23:03:43.872148 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5896-crds.webhook.example.com via the AdmissionRegistration API @ 01/12/25 23:03:44.389
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/12/25 23:03:44.414
  I0112 23:03:47.150372 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2104" for this suite. @ 01/12/25 23:03:47.154
  STEP: Destroying namespace "webhook-markers-3928" for this suite. @ 01/12/25 23:03:47.17
• [6.908 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/12/25 23:03:47.184
  I0112 23:03:47.184207 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:03:47.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:47.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:47.227
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/12/25 23:03:47.232
  STEP: Saw pod success @ 01/12/25 23:03:51.267
  I0112 23:03:51.270787 23 output.go:207] Trying to get logs from node ubuntu pod pod-3eb5aa24-b44b-4b15-ba09-d34b6cb24cdb container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:03:51.277
  I0112 23:03:51.315875 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2511" for this suite. @ 01/12/25 23:03:51.319
• [4.149 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/12/25 23:03:51.333
  I0112 23:03:51.333693 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 23:03:51.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:51.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:51.368
  I0112 23:03:51.373894 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:03:54.461219 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4732" for this suite. @ 01/12/25 23:03:54.466
• [3.159 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/12/25 23:03:54.493
  I0112 23:03:54.493676 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 23:03:54.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:54.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:54.535
  I0112 23:03:54.540169 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:03:55.121833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9489" for this suite. @ 01/12/25 23:03:55.126
• [0.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 01/12/25 23:03:55.146
  I0112 23:03:55.146171 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 23:03:55.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:03:55.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:03:55.226
  STEP: Creating a test headless service @ 01/12/25 23:03:55.23
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-2325.svc.cluster.local;sleep 1; done
   @ 01/12/25 23:03:55.254
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2325.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2325.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2325.svc.cluster.local;sleep 1; done
   @ 01/12/25 23:03:55.254
  STEP: creating a pod to probe DNS @ 01/12/25 23:03:55.254
  STEP: submitting the pod to kubernetes @ 01/12/25 23:03:55.254
  STEP: retrieving the pod @ 01/12/25 23:03:57.315
  STEP: looking for the results for each expected name from probers @ 01/12/25 23:03:57.322
  I0112 23:03:57.328327 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.332872 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.337497 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.341427 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.346065 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.351325 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.356173 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.360663 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:03:57.360756 23 dns_common.go:506] Lookups using dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2325.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local jessie_udp@dns-test-service-2.dns-2325.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2325.svc.cluster.local]

  I0112 23:03:57.368490 23 dns_common.go:514] Pod client logs for webserver: 
  I0112 23:03:57.375809 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0112 23:03:57.384125 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0112 23:04:02.331450 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:02.339332 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:02.345552 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:02.350299 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:02.368089 23 dns_common.go:506] Lookups using dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-2325.svc.cluster.local]

  I0112 23:04:02.375807 23 dns_common.go:514] Pod client logs for webserver: 
  I0112 23:04:02.383160 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0112 23:04:02.390358 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0112 23:04:07.328560 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:07.333526 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:07.338198 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local from pod dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16: the server could not find the requested resource (get pods dns-test-9c07480c-280b-420a-a98d-b97b315a5a16)
  I0112 23:04:07.361443 23 dns_common.go:506] Lookups using dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2325.svc.cluster.local agnhost_udp@dns-test-service-2.dns-2325.svc.cluster.local]

  I0112 23:04:07.373041 23 dns_common.go:514] Pod client logs for webserver: 
  I0112 23:04:07.380307 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0112 23:04:07.387831 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0112 23:04:12.361868 23 dns_common.go:546] DNS probes using dns-2325/dns-test-9c07480c-280b-420a-a98d-b97b315a5a16 succeeded

  STEP: deleting the pod @ 01/12/25 23:04:12.362
  STEP: deleting the test headless service @ 01/12/25 23:04:12.416
  I0112 23:04:12.518011 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2325" for this suite. @ 01/12/25 23:04:12.523
• [17.395 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/12/25 23:04:12.541
  I0112 23:04:12.541679 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:04:12.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:04:12.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:04:12.585
  STEP: Creating secret with name secret-test-7228cd80-a272-4780-9f2a-07a143dcafb3 @ 01/12/25 23:04:12.588
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:04:12.598
  STEP: Saw pod success @ 01/12/25 23:04:16.632
  I0112 23:04:16.636313 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-d1316919-d3c8-43ce-b145-176c38dfb7e4 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:04:16.642
  I0112 23:04:16.673064 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4440" for this suite. @ 01/12/25 23:04:16.677
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/12/25 23:04:16.691
  I0112 23:04:16.691903 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 23:04:16.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:04:16.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:04:16.775
  I0112 23:04:18.812867 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9282" for this suite. @ 01/12/25 23:04:18.817
• [2.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/12/25 23:04:18.832
  I0112 23:04:18.832436 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename security-context @ 01/12/25 23:04:18.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:04:18.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:04:18.866
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/12/25 23:04:18.87
  STEP: Saw pod success @ 01/12/25 23:04:22.903
  I0112 23:04:22.906868 23 output.go:207] Trying to get logs from node ubuntu pod security-context-c4901f22-c1c9-48f4-8d4b-b6d0ec11f310 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:04:22.912
  I0112 23:04:22.940621 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7922" for this suite. @ 01/12/25 23:04:22.944
• [4.126 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/12/25 23:04:22.958
  I0112 23:04:22.958504 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 23:04:22.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:04:22.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:04:22.999
  I0112 23:04:23.002949 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-4669b204-cee2-40a5-8c11-4bc7f853d55c
  I0112 23:04:23.027083 23 resource.go:87] Pod name my-hostname-basic-4669b204-cee2-40a5-8c11-4bc7f853d55c: Found 0 pods out of 1
  I0112 23:04:28.032577 23 resource.go:87] Pod name my-hostname-basic-4669b204-cee2-40a5-8c11-4bc7f853d55c: Found 1 pods out of 1
  I0112 23:04:28.032638 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-4669b204-cee2-40a5-8c11-4bc7f853d55c" is running
  I0112 23:04:28.037153 23 replica_set.go:220] Pod "my-hostname-basic-4669b204-cee2-40a5-8c11-4bc7f853d55c-s2c4r" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:04:23 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:04:23 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:04:23 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:04:23 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:04:23 +0000 UTC Reason: Message:}])
  I0112 23:04:28.037204 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/12/25 23:04:28.037
  I0112 23:04:28.052111 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7100" for this suite. @ 01/12/25 23:04:28.057
• [5.113 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 01/12/25 23:04:28.071
  I0112 23:04:28.071615 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-preemption @ 01/12/25 23:04:28.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:04:28.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:04:28.127
  I0112 23:04:28.222718 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0112 23:05:28.228185 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/12/25 23:05:28.232
  STEP: Adding a custom resource @ 01/12/25 23:05:28.232
  I0112 23:05:28.270321 23 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0112 23:05:28.295514 23 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/12/25 23:05:28.295
  I0112 23:05:28.344378 23 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0112 23:05:28.379119 23 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/12/25 23:05:28.379
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/12/25 23:05:30.402
  STEP: Removing a custom resource @ 01/12/25 23:05:34.553
  STEP: Removing a custom resource @ 01/12/25 23:05:34.571
  I0112 23:05:34.590269 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-585" for this suite. @ 01/12/25 23:05:34.594
• [66.536 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/12/25 23:05:34.608
  I0112 23:05:34.608634 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:05:34.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:05:34.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:05:34.65
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:05:34.655
  STEP: Saw pod success @ 01/12/25 23:05:38.701
  I0112 23:05:38.706018 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-367fa4c8-cbfa-4ed3-881a-c7461a2f5ad4 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:05:38.714
  I0112 23:05:38.753894 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9342" for this suite. @ 01/12/25 23:05:38.759
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/12/25 23:05:38.774
  I0112 23:05:38.774347 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:05:38.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:05:38.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:05:38.809
  STEP: Counting existing ResourceQuota @ 01/12/25 23:05:55.818
  STEP: Creating a ResourceQuota @ 01/12/25 23:06:00.822
  STEP: Ensuring resource quota status is calculated @ 01/12/25 23:06:00.836
  STEP: Creating a ConfigMap @ 01/12/25 23:06:02.841
  STEP: Ensuring resource quota status captures configMap creation @ 01/12/25 23:06:02.867
  STEP: Deleting a ConfigMap @ 01/12/25 23:06:04.872
  STEP: Ensuring resource quota status released usage @ 01/12/25 23:06:04.885
  I0112 23:06:06.891415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5521" for this suite. @ 01/12/25 23:06:06.896
• [28.149 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/12/25 23:06:06.923
  I0112 23:06:06.923212 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:06:06.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:06:06.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:06:06.979
  STEP: Counting existing ResourceQuota @ 01/12/25 23:06:06.99
  STEP: Creating a ResourceQuota @ 01/12/25 23:06:11.994
  STEP: Ensuring resource quota status is calculated @ 01/12/25 23:06:12.007
  STEP: Creating a ReplicaSet @ 01/12/25 23:06:14.013
  STEP: Ensuring resource quota status captures replicaset creation @ 01/12/25 23:06:14.056
  STEP: Deleting a ReplicaSet @ 01/12/25 23:06:16.06
  STEP: Ensuring resource quota status released usage @ 01/12/25 23:06:16.075
  I0112 23:06:18.082188 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8067" for this suite. @ 01/12/25 23:06:18.087
• [11.182 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 01/12/25 23:06:18.105
  I0112 23:06:18.105192 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename csinodes @ 01/12/25 23:06:18.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:06:18.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:06:18.14
  STEP: Creating initial csiNode "e2e-csinode-x85nk" @ 01/12/25 23:06:18.149
  STEP: Getting initial csiNode "e2e-csinode-x85nk" @ 01/12/25 23:06:18.166
  STEP: Patching initial csiNode: "e2e-csinode-x85nk" @ 01/12/25 23:06:18.171
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-x85nk=patched" @ 01/12/25 23:06:18.191
  STEP: Delete initial csiNode: "e2e-csinode-x85nk" @ 01/12/25 23:06:18.196
  STEP: Confirm deletion of csiNode "e2e-csinode-x85nk" @ 01/12/25 23:06:18.216
  STEP: Creating replacement csiNode "e2e-csinode-66cnk" @ 01/12/25 23:06:18.221
  STEP: Getting replacement csiNode "e2e-csinode-66cnk" @ 01/12/25 23:06:18.234
  STEP: Updating replacement csiNode "e2e-csinode-66cnk" @ 01/12/25 23:06:18.238
  STEP: DeleteCollection of CSINodes with "e2e-csinode-66cnk=updated" label @ 01/12/25 23:06:18.255
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-66cnk=updated" @ 01/12/25 23:06:18.272
  I0112 23:06:18.275441 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-4433" for this suite. @ 01/12/25 23:06:18.279
• [0.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/12/25 23:06:18.292
  I0112 23:06:18.292450 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 23:06:18.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:06:18.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:06:18.325
  STEP: Updating Namespace "namespaces-6171" @ 01/12/25 23:06:18.329
  I0112 23:06:18.346174 23 namespace.go:389] Namespace "namespaces-6171" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"50fb3fd7-9832-4cbc-823e-abd796aad631", "kubernetes.io/metadata.name":"namespaces-6171", "namespaces-6171":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0112 23:06:18.346360 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6171" for this suite. @ 01/12/25 23:06:18.35
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/12/25 23:06:18.363
  I0112 23:06:18.363440 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/12/25 23:06:18.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:06:18.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:06:18.405
  STEP: create the rc1 @ 01/12/25 23:06:18.413
  STEP: create the rc2 @ 01/12/25 23:06:18.426
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/12/25 23:06:26.443
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/12/25 23:06:35.044
  STEP: wait for the rc to be deleted @ 01/12/25 23:06:35.363
  I0112 23:06:40.391487 23 garbage_collector.go:762] 74 pods remaining
  I0112 23:06:40.391562 23 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I0112 23:06:40.391589 23 garbage_collector.go:770] 
  STEP: Gathering metrics @ 01/12/25 23:06:45.4
  W0112 23:06:45.419862      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 23:06:45.419908 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 23:06:45.420468 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2627m" in namespace "gc-7225"
  I0112 23:06:45.755246 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26lrk" in namespace "gc-7225"
  I0112 23:06:45.960646 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2dvt6" in namespace "gc-7225"
  I0112 23:06:46.169463 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2gd7d" in namespace "gc-7225"
  I0112 23:06:46.351695 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wfl9" in namespace "gc-7225"
  I0112 23:06:46.523787 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wmc4" in namespace "gc-7225"
  I0112 23:06:46.748269 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-46bk9" in namespace "gc-7225"
  I0112 23:06:46.882323 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4b5zv" in namespace "gc-7225"
  I0112 23:06:46.949808 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tlq9" in namespace "gc-7225"
  I0112 23:06:47.049208 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55btv" in namespace "gc-7225"
  I0112 23:06:47.197501 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5p6j7" in namespace "gc-7225"
  I0112 23:06:47.396525 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qh97" in namespace "gc-7225"
  I0112 23:06:47.480102 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xlfc" in namespace "gc-7225"
  I0112 23:06:47.627756 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-77s8r" in namespace "gc-7225"
  I0112 23:06:47.703304 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bf62" in namespace "gc-7225"
  I0112 23:06:47.866133 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7xsfp" in namespace "gc-7225"
  I0112 23:06:47.973191 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8nhqp" in namespace "gc-7225"
  I0112 23:06:48.159437 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vgbz" in namespace "gc-7225"
  I0112 23:06:48.291140 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8ztdc" in namespace "gc-7225"
  I0112 23:06:48.445447 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cp7t" in namespace "gc-7225"
  I0112 23:06:48.547252 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9sht9" in namespace "gc-7225"
  I0112 23:06:48.702683 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zzm8" in namespace "gc-7225"
  I0112 23:06:48.813692 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b78gs" in namespace "gc-7225"
  I0112 23:06:49.020628 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b9j6w" in namespace "gc-7225"
  I0112 23:06:49.160236 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhwzd" in namespace "gc-7225"
  I0112 23:06:49.334911 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvb58" in namespace "gc-7225"
  I0112 23:06:49.441544 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bw9bt" in namespace "gc-7225"
  I0112 23:06:49.528075 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cc8jk" in namespace "gc-7225"
  I0112 23:06:49.634899 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cd6zs" in namespace "gc-7225"
  I0112 23:06:49.776157 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvp95" in namespace "gc-7225"
  I0112 23:06:49.872912 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-czddb" in namespace "gc-7225"
  I0112 23:06:50.006391 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d22dv" in namespace "gc-7225"
  I0112 23:06:50.157860 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dn4k6" in namespace "gc-7225"
  I0112 23:06:50.249798 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvt87" in namespace "gc-7225"
  I0112 23:06:50.448583 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f6jw8" in namespace "gc-7225"
  I0112 23:06:50.633849 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f9rfn" in namespace "gc-7225"
  I0112 23:06:50.765421 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwx5p" in namespace "gc-7225"
  I0112 23:06:50.852550 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gl7b8" in namespace "gc-7225"
  I0112 23:06:51.004009 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gl7xg" in namespace "gc-7225"
  I0112 23:06:51.105466 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqpb2" in namespace "gc-7225"
  I0112 23:06:51.201957 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hprzf" in namespace "gc-7225"
  I0112 23:06:51.301651 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hsrc9" in namespace "gc-7225"
  I0112 23:06:51.454614 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j7d2x" in namespace "gc-7225"
  I0112 23:06:51.550826 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jf4w6" in namespace "gc-7225"
  I0112 23:06:51.674346 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jklsl" in namespace "gc-7225"
  I0112 23:06:51.796106 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jspkl" in namespace "gc-7225"
  I0112 23:06:51.902446 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-knhc2" in namespace "gc-7225"
  I0112 23:06:52.091393 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kwl6m" in namespace "gc-7225"
  I0112 23:06:52.239210 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l688k" in namespace "gc-7225"
  I0112 23:06:52.337986 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l6xzp" in namespace "gc-7225"
  I0112 23:06:52.434969 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7225" for this suite. @ 01/12/25 23:06:52.446
• [34.108 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/12/25 23:06:52.471
  I0112 23:06:52.471798 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 23:06:52.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:06:52.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:06:52.544
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/12/25 23:06:52.551
  I0112 23:06:52.552558 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:06:54.171490 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:06:59.976138 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5755" for this suite. @ 01/12/25 23:06:59.986
• [7.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/12/25 23:07:00.001
  I0112 23:07:00.001628 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:07:00.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:00.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:00.037
  STEP: creating service in namespace services-2502 @ 01/12/25 23:07:00.042
  STEP: creating service affinity-clusterip-transition in namespace services-2502 @ 01/12/25 23:07:00.042
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2502 @ 01/12/25 23:07:00.087
  I0112 23:07:00.123744      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2502, replica count: 3
  I0112 23:07:03.174150      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:07:03.180573 23 resource.go:361] Creating new exec pod
  I0112 23:07:06.213153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2502 exec execpod-affinity8wgpd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0112 23:07:06.409488 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.109) 80 port [tcp/http] succeeded!\n"
  I0112 23:07:06.409552 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:07:06.409646 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2502 exec execpod-affinity8wgpd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.109 80'
  I0112 23:07:06.572269 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.109 80\nConnection to 10.152.183.109 80 port [tcp/http] succeeded!\n"
  I0112 23:07:06.572330 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:07:06.589439 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2502 exec execpod-affinity8wgpd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.109:80/ ; done'
  I0112 23:07:06.884957 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n"
  I0112 23:07:06.885054 23 builder.go:147] stdout: "\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-6mtwv\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-6mtwv\naffinity-clusterip-transition-6mtwv\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-6mtwv\naffinity-clusterip-transition-6mtwv\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-6mtwv\naffinity-clusterip-transition-4x8vb\naffinity-clusterip-transition-4x8vb"
  I0112 23:07:06.885083 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885095 23 service.go:242] Received response from host: affinity-clusterip-transition-6mtwv
  I0112 23:07:06.885106 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:06.885121 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885138 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885159 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885199 23 service.go:242] Received response from host: affinity-clusterip-transition-6mtwv
  I0112 23:07:06.885215 23 service.go:242] Received response from host: affinity-clusterip-transition-6mtwv
  I0112 23:07:06.885230 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885259 23 service.go:242] Received response from host: affinity-clusterip-transition-6mtwv
  I0112 23:07:06.885278 23 service.go:242] Received response from host: affinity-clusterip-transition-6mtwv
  I0112 23:07:06.885291 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885300 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885311 23 service.go:242] Received response from host: affinity-clusterip-transition-6mtwv
  I0112 23:07:06.885319 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.885344 23 service.go:242] Received response from host: affinity-clusterip-transition-4x8vb
  I0112 23:07:06.902503 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2502 exec execpod-affinity8wgpd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.109:80/ ; done'
  I0112 23:07:07.186765 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.109:80/\n"
  I0112 23:07:07.186858 23 builder.go:147] stdout: "\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7\naffinity-clusterip-transition-hqhk7"
  I0112 23:07:07.186897 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.186967 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.186984 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187001 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187018 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187033 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187059 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187105 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187122 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187131 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187142 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187156 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187256 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187266 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187275 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187283 23 service.go:242] Received response from host: affinity-clusterip-transition-hqhk7
  I0112 23:07:07.187361 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2502, will wait for the garbage collector to delete the pods @ 01/12/25 23:07:07.231
  I0112 23:07:07.308393 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 18.730023ms
  I0112 23:07:07.408591 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.194125ms
  I0112 23:07:10.764054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2502" for this suite. @ 01/12/25 23:07:10.768
• [10.784 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/12/25 23:07:10.785
  I0112 23:07:10.785325 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:07:10.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:10.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:10.842
  STEP: Creating a pod to test downward api env vars @ 01/12/25 23:07:10.846
  STEP: Saw pod success @ 01/12/25 23:07:14.887
  I0112 23:07:14.892880 23 output.go:207] Trying to get logs from node ubuntu pod downward-api-4d6c8d62-9952-43a9-ba7a-fd4f152b8ffe container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:07:14.91
  I0112 23:07:14.951403 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8165" for this suite. @ 01/12/25 23:07:14.956
• [4.185 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/12/25 23:07:14.97
  I0112 23:07:14.970816 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:07:14.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:15.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:15.01
  STEP: Creating configMap with name configmap-test-volume-map-d429b424-f3ab-4e89-8038-db4dae5751f5 @ 01/12/25 23:07:15.015
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:07:15.027
  STEP: Saw pod success @ 01/12/25 23:07:19.058
  I0112 23:07:19.062679 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-6aa24d2f-13be-4a46-963c-1d3b15303e96 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:07:19.069
  I0112 23:07:19.097512 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8364" for this suite. @ 01/12/25 23:07:19.101
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 01/12/25 23:07:19.116
  I0112 23:07:19.116764 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 23:07:19.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:19.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:19.157
  STEP: Creating a job @ 01/12/25 23:07:19.161
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/12/25 23:07:19.174
  STEP: patching /status @ 01/12/25 23:07:21.183
  STEP: updating /status @ 01/12/25 23:07:21.199
  STEP: get /status @ 01/12/25 23:07:21.211
  I0112 23:07:21.216089 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6739" for this suite. @ 01/12/25 23:07:21.221
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/12/25 23:07:21.25
  I0112 23:07:21.250539 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:07:21.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:21.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:21.284
  STEP: Creating secret with name secret-test-3d835163-6518-430c-9311-7d0e89390f54 @ 01/12/25 23:07:21.289
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:07:21.303
  STEP: Saw pod success @ 01/12/25 23:07:25.334
  I0112 23:07:25.338802 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-775d3d16-95ca-4d68-8c98-ace0d5992965 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:07:25.347
  I0112 23:07:25.394492 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8421" for this suite. @ 01/12/25 23:07:25.399
• [4.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/12/25 23:07:25.422
  I0112 23:07:25.422324 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 23:07:25.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:25.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:25.46
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/12/25 23:07:25.469
  I0112 23:07:25.470131 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:07:27.043632 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:07:32.432288 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7918" for this suite. @ 01/12/25 23:07:32.441
• [7.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 01/12/25 23:07:32.456
  I0112 23:07:32.456100 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 23:07:32.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:32.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:32.491
  STEP: Creating a test headless service @ 01/12/25 23:07:32.498
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6663.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-6663.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 01/12/25 23:07:32.51
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6663.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6663.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/12/25 23:07:32.51
  STEP: creating a pod to probe DNS @ 01/12/25 23:07:32.51
  STEP: submitting the pod to kubernetes @ 01/12/25 23:07:32.51
  STEP: retrieving the pod @ 01/12/25 23:07:36.575
  STEP: looking for the results for each expected name from probers @ 01/12/25 23:07:36.581
  I0112 23:07:36.604372 23 dns_common.go:546] DNS probes using dns-6663/dns-test-1737d535-ead5-4f67-a8eb-465cc9583068 succeeded

  STEP: deleting the pod @ 01/12/25 23:07:36.604
  STEP: deleting the test headless service @ 01/12/25 23:07:36.69
  I0112 23:07:36.764232 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6663" for this suite. @ 01/12/25 23:07:36.768
• [4.325 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/12/25 23:07:36.781
  I0112 23:07:36.781232 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:07:36.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:36.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:36.811
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:07:36.815
  STEP: Saw pod success @ 01/12/25 23:07:40.844
  I0112 23:07:40.849457 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-7479bf05-c7a1-4b47-90f9-8d65574d228e container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:07:40.856
  I0112 23:07:40.890141 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2786" for this suite. @ 01/12/25 23:07:40.895
• [4.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/12/25 23:07:40.909
  I0112 23:07:40.909479 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 23:07:40.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:07:40.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:07:40.942
  I0112 23:07:40.948395 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 23:07:40.957803 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0112 23:07:40.962306 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 23:07:40.971838 23 predicates.go:957] calico-node-7qkl4 from kube-system started at 2025-01-12 22:13:28 +0000 UTC (1 container statuses recorded)
  I0112 23:07:40.971905 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 23:07:40.971920 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z8bgt from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:07:40.971946 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:07:40.971955 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 23:07:40.971964 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 23:07:40.981377 23 predicates.go:957] calico-kube-controllers-5947598c79-clnft from kube-system started at 2025-01-12 22:59:52 +0000 UTC (1 container statuses recorded)
  I0112 23:07:40.981465 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 23:07:40.981493 23 predicates.go:957] calico-node-dn6q6 from kube-system started at 2025-01-12 22:13:29 +0000 UTC (1 container statuses recorded)
  I0112 23:07:40.981503 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 23:07:40.981512 23 predicates.go:957] coredns-79b94494c7-hs9qg from kube-system started at 2025-01-12 22:49:43 +0000 UTC (1 container statuses recorded)
  I0112 23:07:40.981521 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 23:07:40.981531 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 22:27:44 +0000 UTC (1 container statuses recorded)
  I0112 23:07:40.981539 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 23:07:40.981548 23 predicates.go:957] sonobuoy-e2e-job-d35ab0f1f1cc4190 from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:07:40.981556 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 23:07:40.981565 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:07:40.981573 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z4bgx from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:07:40.981582 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:07:40.981590 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/12/25 23:07:40.981
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/12/25 23:07:43.012
  STEP: Trying to apply a random label on the found node. @ 01/12/25 23:07:43.062
  STEP: verifying the node has the label kubernetes.io/e2e-f806e789-7725-40f3-8c35-0d93c89794f2 95 @ 01/12/25 23:07:43.083
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/12/25 23:07:43.089
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.17.202.11 on the node which pod4 resides and expect not scheduled @ 01/12/25 23:07:45.112
  STEP: removing the label kubernetes.io/e2e-f806e789-7725-40f3-8c35-0d93c89794f2 off the node ubuntu @ 01/12/25 23:12:45.134
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f806e789-7725-40f3-8c35-0d93c89794f2 @ 01/12/25 23:12:45.154
  I0112 23:12:45.158794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1950" for this suite. @ 01/12/25 23:12:45.163
• [304.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/12/25 23:12:45.179
  I0112 23:12:45.179105 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 23:12:45.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:12:45.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:12:45.213
  STEP: Creating a ForbidConcurrent cronjob @ 01/12/25 23:12:45.218
  STEP: Ensuring a job is scheduled @ 01/12/25 23:12:45.23
  STEP: Ensuring exactly one is scheduled @ 01/12/25 23:13:01.238
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/12/25 23:13:01.244
  STEP: Ensuring no more jobs are scheduled @ 01/12/25 23:13:01.251
  STEP: Removing cronjob @ 01/12/25 23:13:01.257
  I0112 23:13:01.274293 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5843" for this suite. @ 01/12/25 23:13:01.282
• [16.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/12/25 23:13:01.294
  I0112 23:13:01.294698 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:13:01.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:01.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:01.341
  STEP: Setting up server cert @ 01/12/25 23:13:01.395
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:13:01.773
  STEP: Deploying the webhook pod @ 01/12/25 23:13:01.796
  STEP: Wait for the deployment to be ready @ 01/12/25 23:13:01.83
  I0112 23:13:01.837149 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:13:03.851
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:13:03.886
  I0112 23:13:04.887275 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/12/25 23:13:04.894
  STEP: create the configmap with a random name @ 01/12/25 23:13:04.926
  STEP: verify the configmap is mutated @ 01/12/25 23:13:04.945
  STEP: create the configmap with 'skip-me' name @ 01/12/25 23:13:04.946
  I0112 23:13:05.088478 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6233" for this suite. @ 01/12/25 23:13:05.093
  STEP: Destroying namespace "webhook-markers-2476" for this suite. @ 01/12/25 23:13:05.116
• [3.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/12/25 23:13:05.133
  I0112 23:13:05.133507 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 23:13:05.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:05.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:05.165
  I0112 23:13:05.169215 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/12/25 23:13:06.519
  I0112 23:13:06.519432 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-3596 --namespace=crd-publish-openapi-3596 create -f -'
  I0112 23:13:08.660834 23 builder.go:146] stderr: ""
  I0112 23:13:08.660920 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6460-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0112 23:13:08.661014 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-3596 --namespace=crd-publish-openapi-3596 delete e2e-test-crd-publish-openapi-6460-crds test-cr'
  I0112 23:13:08.761871 23 builder.go:146] stderr: ""
  I0112 23:13:08.761962 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6460-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0112 23:13:08.762009 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-3596 --namespace=crd-publish-openapi-3596 apply -f -'
  I0112 23:13:08.860771 23 builder.go:146] stderr: ""
  I0112 23:13:08.861085 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6460-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0112 23:13:08.861202 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-3596 --namespace=crd-publish-openapi-3596 delete e2e-test-crd-publish-openapi-6460-crds test-cr'
  I0112 23:13:08.955018 23 builder.go:146] stderr: ""
  I0112 23:13:08.955080 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6460-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/12/25 23:13:08.955
  I0112 23:13:08.955186 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-3596 explain e2e-test-crd-publish-openapi-6460-crds'
  I0112 23:13:09.037022 23 builder.go:146] stderr: ""
  I0112 23:13:09.037089 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6460-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0112 23:13:10.470398 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3596" for this suite. @ 01/12/25 23:13:10.483
• [5.365 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/12/25 23:13:10.498
  I0112 23:13:10.498647 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename hostport @ 01/12/25 23:13:10.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:10.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:10.581
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/12/25 23:13:10.59
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.17.207.20 on the node which pod1 resides and expect scheduled @ 01/12/25 23:13:12.617
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.17.207.20 but use UDP protocol on the node which pod2 resides @ 01/12/25 23:13:14.646
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/12/25 23:13:18.712
  I0112 23:13:18.712506 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.17.207.20 http://127.0.0.1:54323/hostname] Namespace:hostport-4254 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:13:18.712524 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:13:18.712598 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-4254/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.17.207.20+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.17.207.20, port: 54323 @ 01/12/25 23:13:18.805
  I0112 23:13:18.805095 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.17.207.20:54323/hostname] Namespace:hostport-4254 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:13:18.805118 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:13:18.805166 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-4254/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.17.207.20%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.17.207.20, port: 54323 UDP @ 01/12/25 23:13:18.893
  I0112 23:13:18.893144 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.17.207.20 54323] Namespace:hostport-4254 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:13:18.893163 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:13:18.893207 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-4254/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.17.207.20+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0112 23:13:23.971116 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4254" for this suite. @ 01/12/25 23:13:23.975
• [13.490 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/12/25 23:13:23.988
  I0112 23:13:23.988697 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 23:13:23.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:24.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:24.025
  I0112 23:13:24.028546 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0112 23:13:24.040556 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0112 23:13:24.049591 23 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0112 23:13:26.057570 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0112 23:13:26.061018 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0112 23:13:26.076721 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0112 23:13:26.076793 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0112 23:13:26.345916 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d57c331b-cd2b-448e-ba58-f22f9493727b",
      ResourceVersion: (string) (len=5) "20716",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 23:13:26.353435 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c6a5c7c-5021-4946-9d3d-4c0b89a77159",
      ResourceVersion: (string) (len=5) "20715",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d57c331b-cd2b-448e-ba58-f22f9493727b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 37 63 33 33  31 62 2d 63 64 32 62 2d  |\"d57c331b-cd2b-|
              00000120  34 34 38 65 2d 62 61 35  38 2d 66 32 32 66 39 34  |448e-ba58-f22f94|
              00000130  39 33 37 32 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |93727b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 23:13:26.355466 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0112 23:13:26.355715 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e5b9b96-79e5-43a7-a5e5-4f4bfb6ee614",
      ResourceVersion: (string) (len=5) "20704",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d57c331b-cd2b-448e-ba58-f22f9493727b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 37 63 33 33  31 62 2d 63 64 32 62 2d  |\"d57c331b-cd2b-|
              00000120  34 34 38 65 2d 62 61 35  38 2d 66 32 32 66 39 34  |448e-ba58-f22f94|
              00000130  39 33 37 32 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |93727b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 23:13:26.362584 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-k49rc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-k49rc",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-3101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23d46d65-c790-4413-98bb-41dd526b7f3e",
      ResourceVersion: (string) (len=5) "20714",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "9c6a5c7c-5021-4946-9d3d-4c0b89a77159",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  36 61 35 63 37 63 2d 35  |d\":\"9c6a5c7c-5|
              00000090  30 32 31 2d 34 39 34 36  2d 39 64 33 64 2d 34 63  |021-4946-9d3d-4c|
              000000a0  30 62 38 39 61 37 37 31  35 39 5c 22 7d 22 3a 7b  |0b89a77159\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qmlht",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qmlht",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qmlht",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 23:13:26.367005 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3101" for this suite. @ 01/12/25 23:13:26.372
• [2.397 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 01/12/25 23:13:26.386
  I0112 23:13:26.386267 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 23:13:26.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:26.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:26.418
  STEP: Creating service test in namespace statefulset-3234 @ 01/12/25 23:13:26.423
  STEP: Creating statefulset ss in namespace statefulset-3234 @ 01/12/25 23:13:26.433
  I0112 23:13:26.471138 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 23:13:36.472369 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/12/25 23:13:36.479
  STEP: updating a scale subresource @ 01/12/25 23:13:36.483
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/12/25 23:13:36.503
  STEP: Patch a scale subresource @ 01/12/25 23:13:36.507
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/12/25 23:13:36.527
  I0112 23:13:36.531615 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3234
  I0112 23:13:36.537536 23 rest.go:152] Scaling statefulset ss to 0
  I0112 23:13:46.578619 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 23:13:46.582837 23 rest.go:90] Deleting statefulset ss
  I0112 23:13:46.605483 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3234" for this suite. @ 01/12/25 23:13:46.61
• [20.240 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/12/25 23:13:46.626
  I0112 23:13:46.626684 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:13:46.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:46.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:46.673
  STEP: Creating configMap with name projected-configmap-test-volume-map-f64706f3-dedf-4da3-a63b-927bdb88a5f1 @ 01/12/25 23:13:46.677
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:13:46.688
  STEP: Saw pod success @ 01/12/25 23:13:50.72
  I0112 23:13:50.724500 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-434f7e4c-6e57-4c59-b3bb-6038b82ec866 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:13:50.738
  I0112 23:13:50.772203 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7953" for this suite. @ 01/12/25 23:13:50.776
• [4.164 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/12/25 23:13:50.79
  I0112 23:13:50.790975 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 23:13:50.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:50.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:50.852
  I0112 23:13:50.857733 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  W0112 23:13:50.858691      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003f3d810 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0112 23:13:53.401304      23 warnings.go:70] unknown field "alpha"
  W0112 23:13:53.401368      23 warnings.go:70] unknown field "beta"
  W0112 23:13:53.401381      23 warnings.go:70] unknown field "delta"
  W0112 23:13:53.401395      23 warnings.go:70] unknown field "epsilon"
  W0112 23:13:53.401409      23 warnings.go:70] unknown field "gamma"
  I0112 23:13:53.969760 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9733" for this suite. @ 01/12/25 23:13:53.975
• [3.199 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/12/25 23:13:53.99
  I0112 23:13:53.990551 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:13:53.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:54.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:54.03
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/12/25 23:13:54.036
  STEP: Saw pod success @ 01/12/25 23:13:58.072
  I0112 23:13:58.078764 23 output.go:207] Trying to get logs from node ubuntu pod pod-c7203bff-1570-44fc-b50e-351e39013f26 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:13:58.088
  I0112 23:13:58.122337 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6069" for this suite. @ 01/12/25 23:13:58.127
• [4.151 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/12/25 23:13:58.141
  I0112 23:13:58.141695 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:13:58.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:13:58.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:13:58.176
  STEP: creating all guestbook components @ 01/12/25 23:13:58.181
  I0112 23:13:58.181165 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0112 23:13:58.181335 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 create -f -'
  I0112 23:13:58.346403 23 builder.go:146] stderr: ""
  I0112 23:13:58.346488 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0112 23:13:58.346545 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0112 23:13:58.346668 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 create -f -'
  I0112 23:13:58.518186 23 builder.go:146] stderr: ""
  I0112 23:13:58.518263 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0112 23:13:58.518308 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0112 23:13:58.518466 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 create -f -'
  I0112 23:13:58.721474 23 builder.go:146] stderr: ""
  I0112 23:13:58.721554 23 builder.go:147] stdout: "service/frontend created\n"
  I0112 23:13:58.721738 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0112 23:13:58.722042 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 create -f -'
  I0112 23:13:58.837766 23 builder.go:146] stderr: ""
  I0112 23:13:58.837840 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0112 23:13:58.837961 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0112 23:13:58.838280 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 create -f -'
  I0112 23:13:59.047418 23 builder.go:146] stderr: ""
  I0112 23:13:59.047488 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0112 23:13:59.047684 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0112 23:13:59.047976 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 create -f -'
  I0112 23:13:59.231965 23 builder.go:146] stderr: ""
  I0112 23:13:59.232039 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/12/25 23:13:59.232
  I0112 23:13:59.232093 23 kubectl.go:2269] Waiting for all frontend pods to be Running.
  I0112 23:14:04.282569 23 kubectl.go:2273] Waiting for frontend to serve content.
  I0112 23:14:04.293277 23 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0112 23:14:04.304560 23 kubectl.go:2283] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/12/25 23:14:04.312
  I0112 23:14:04.312869 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 delete --grace-period=0 --force -f -'
  I0112 23:14:04.437843 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:14:04.437905 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 23:14:04.437
  I0112 23:14:04.438053 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 delete --grace-period=0 --force -f -'
  I0112 23:14:04.559710 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:14:04.559766 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 23:14:04.559
  I0112 23:14:04.559924 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 delete --grace-period=0 --force -f -'
  I0112 23:14:04.674832 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:14:04.674909 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 23:14:04.675
  I0112 23:14:04.675072 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 delete --grace-period=0 --force -f -'
  I0112 23:14:04.763713 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:14:04.763773 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 23:14:04.763
  I0112 23:14:04.763896 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 delete --grace-period=0 --force -f -'
  I0112 23:14:04.961744 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:14:04.961817 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/12/25 23:14:04.962
  I0112 23:14:04.962118 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-8007 delete --grace-period=0 --force -f -'
  I0112 23:14:05.086116 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:14:05.086194 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0112 23:14:05.086339 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8007" for this suite. @ 01/12/25 23:14:05.092
• [6.977 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/12/25 23:14:05.119
  I0112 23:14:05.119716 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:14:05.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:05.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:05.23
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/12/25 23:14:05.237
  STEP: Saw pod success @ 01/12/25 23:14:09.33
  I0112 23:14:09.336011 23 output.go:207] Trying to get logs from node ubuntu pod pod-af67301b-9ed2-41c8-8577-2440ba92fa44 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:14:09.344
  I0112 23:14:09.380383 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-321" for this suite. @ 01/12/25 23:14:09.385
• [4.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/12/25 23:14:09.4
  I0112 23:14:09.400586 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:14:09.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:09.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:09.449
  STEP: Creating projection with secret that has name projected-secret-test-d0d003d6-a800-4841-b190-c3c0fbadd4db @ 01/12/25 23:14:09.453
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:14:09.472
  STEP: Saw pod success @ 01/12/25 23:14:13.502
  I0112 23:14:13.506427 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-secrets-1748ccc4-d7e6-4691-9b95-70e0f8e9165e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:14:13.514
  I0112 23:14:13.549327 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3855" for this suite. @ 01/12/25 23:14:13.553
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/12/25 23:14:13.577
  I0112 23:14:13.577178 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:14:13.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:13.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:13.619
  STEP: Creating the pod @ 01/12/25 23:14:13.624
  I0112 23:14:16.200656 23 pod_client.go:173] Successfully updated pod "labelsupdate8055ca15-2c7f-4537-beba-653fcb0fcdbd"
  I0112 23:14:20.229426 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8103" for this suite. @ 01/12/25 23:14:20.233
• [6.671 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 01/12/25 23:14:20.248
  I0112 23:14:20.248127 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:14:20.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:20.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:20.289
  STEP: validating cluster-info @ 01/12/25 23:14:20.293
  I0112 23:14:20.293457 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-4040 cluster-info'
  I0112 23:14:20.369752 23 builder.go:146] stderr: ""
  I0112 23:14:20.369820 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0112 23:14:20.369898 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4040" for this suite. @ 01/12/25 23:14:20.375
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/12/25 23:14:20.39
  I0112 23:14:20.390106 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:14:20.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:20.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:20.44
  I0112 23:14:20.444033 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: creating the pod @ 01/12/25 23:14:20.444
  STEP: submitting the pod to kubernetes @ 01/12/25 23:14:20.444
  I0112 23:14:22.567471 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1158" for this suite. @ 01/12/25 23:14:22.572
• [2.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/12/25 23:14:22.594
  I0112 23:14:22.594978 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:14:22.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:22.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:22.635
  STEP: Creating secret with name secret-test-0ec68a01-ed0e-402a-be9b-d90a2cd96625 @ 01/12/25 23:14:22.683
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:14:22.695
  STEP: Saw pod success @ 01/12/25 23:14:26.727
  I0112 23:14:26.732695 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-7f3e9465-6202-4764-8f00-f076f85e4765 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:14:26.741
  I0112 23:14:26.772188 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9850" for this suite. @ 01/12/25 23:14:26.777
  STEP: Destroying namespace "secret-namespace-2375" for this suite. @ 01/12/25 23:14:26.791
• [4.211 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/12/25 23:14:26.806
  I0112 23:14:26.806128 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-webhook @ 01/12/25 23:14:26.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:26.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:26.85
  STEP: Setting up server cert @ 01/12/25 23:14:26.855
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/12/25 23:14:27.379
  STEP: Deploying the custom resource conversion webhook pod @ 01/12/25 23:14:27.396
  STEP: Wait for the deployment to be ready @ 01/12/25 23:14:27.429
  I0112 23:14:27.437849 23 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:14:29.45
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:14:29.472
  I0112 23:14:30.472875 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0112 23:14:30.483815 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Creating a v1 custom resource @ 01/12/25 23:14:33.052
  STEP: Create a v2 custom resource @ 01/12/25 23:14:33.1
  STEP: List CRs in v1 @ 01/12/25 23:14:33.121
  STEP: List CRs in v2 @ 01/12/25 23:14:33.131
  I0112 23:14:33.777548 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5101" for this suite. @ 01/12/25 23:14:33.781
• [7.003 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 01/12/25 23:14:33.809
  I0112 23:14:33.809267 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:14:33.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:33.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:33.916
  STEP: starting the proxy server @ 01/12/25 23:14:33.92
  I0112 23:14:33.920448 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-4225 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/12/25 23:14:33.986
  I0112 23:14:33.996636 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0112 23:14:33.999337 23 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:39089

  I0112 23:14:33.999356 23 kubectl.go:2226] kubectl proxy stderr: W0112 23:14:33.986042     563 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4225" for this suite. @ 01/12/25 23:14:34.001
• [0.205 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/12/25 23:14:34.014
  I0112 23:14:34.014786 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 23:14:34.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:34.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:34.064
  I0112 23:14:38.105024 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1468" for this suite. @ 01/12/25 23:14:38.109
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/12/25 23:14:38.124
  I0112 23:14:38.124486 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:14:38.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:38.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:38.158
  STEP: Creating the pod @ 01/12/25 23:14:38.162
  I0112 23:14:40.735536 23 pod_client.go:173] Successfully updated pod "annotationupdate20ae128c-c033-44e1-ab8e-65278e43c09e"
  I0112 23:14:42.753249 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4473" for this suite. @ 01/12/25 23:14:42.757
• [4.650 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/12/25 23:14:42.774
  I0112 23:14:42.774612 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:14:42.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:14:42.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:14:42.811
  STEP: Creating configMap with name cm-test-opt-del-5ee1bf9c-869b-48ab-91cd-86919e47337a @ 01/12/25 23:14:42.82
  STEP: Creating configMap with name cm-test-opt-upd-44dedf47-ed97-4ec7-9fa8-9ddc94ba051d @ 01/12/25 23:14:42.833
  STEP: Creating the pod @ 01/12/25 23:14:42.845
  STEP: Deleting configmap cm-test-opt-del-5ee1bf9c-869b-48ab-91cd-86919e47337a @ 01/12/25 23:14:46.913
  STEP: Updating configmap cm-test-opt-upd-44dedf47-ed97-4ec7-9fa8-9ddc94ba051d @ 01/12/25 23:14:46.93
  STEP: Creating configMap with name cm-test-opt-create-094a0f29-f440-4c27-9c59-f879e74c5736 @ 01/12/25 23:14:46.942
  STEP: waiting to observe update in volume @ 01/12/25 23:14:46.954
  I0112 23:16:13.459798 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8704" for this suite. @ 01/12/25 23:16:13.464
• [90.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/12/25 23:16:13.479
  I0112 23:16:13.479303 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:16:13.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:13.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:13.522
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/12/25 23:16:13.526
  STEP: Saw pod success @ 01/12/25 23:16:17.556
  I0112 23:16:17.560877 23 output.go:207] Trying to get logs from node ubuntu pod pod-8746d34a-39ac-436e-9855-7faeef34cc01 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:16:17.57
  I0112 23:16:17.607600 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8972" for this suite. @ 01/12/25 23:16:17.611
• [4.147 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/12/25 23:16:17.625
  I0112 23:16:17.625975 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:16:17.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:17.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:17.658
  STEP: Creating a pod to test downward api env vars @ 01/12/25 23:16:17.663
  STEP: Saw pod success @ 01/12/25 23:16:21.694
  I0112 23:16:21.697606 23 output.go:207] Trying to get logs from node ubuntu pod downward-api-edb99c1f-cef7-4a13-ab99-a71678f545e9 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:16:21.704
  I0112 23:16:21.752332 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1943" for this suite. @ 01/12/25 23:16:21.756
• [4.144 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/12/25 23:16:21.769
  I0112 23:16:21.769707 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 23:16:21.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:21.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:21.801
  I0112 23:16:25.839252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5209" for this suite. @ 01/12/25 23:16:25.843
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/12/25 23:16:25.859
  I0112 23:16:25.859952 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename watch @ 01/12/25 23:16:25.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:25.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:25.902
  STEP: creating a watch on configmaps with label A @ 01/12/25 23:16:25.906
  STEP: creating a watch on configmaps with label B @ 01/12/25 23:16:25.908
  STEP: creating a watch on configmaps with label A or B @ 01/12/25 23:16:25.91
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/12/25 23:16:25.912
  I0112 23:16:25.925007 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21904 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:25.925186 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21904 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/12/25 23:16:25.925
  I0112 23:16:25.941190 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21905 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:25.941369 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21905 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/12/25 23:16:25.941
  I0112 23:16:25.958806 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21906 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:25.958970 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21906 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/12/25 23:16:25.959
  I0112 23:16:25.974817 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21907 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:25.975004 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6791  5407ac18-17d9-4e99-8d0c-4ecb6d2c95b0 21907 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/12/25 23:16:25.975
  I0112 23:16:25.987198 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6791  14290520-920b-4800-b9b3-5204bf4c8abe 21908 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:25.987343 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6791  14290520-920b-4800-b9b3-5204bf4c8abe 21908 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/12/25 23:16:35.987
  I0112 23:16:36.003385 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6791  14290520-920b-4800-b9b3-5204bf4c8abe 21941 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:36.003481 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6791  14290520-920b-4800-b9b3-5204bf4c8abe 21941 0 2025-01-12 23:16:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-12 23:16:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:16:46.007500 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6791" for this suite. @ 01/12/25 23:16:46.013
• [20.181 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/12/25 23:16:46.041
  I0112 23:16:46.041497 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:16:46.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:46.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:46.086
  STEP: creating service in namespace services-1775 @ 01/12/25 23:16:46.09
  STEP: creating service affinity-nodeport-transition in namespace services-1775 @ 01/12/25 23:16:46.09
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1775 @ 01/12/25 23:16:46.123
  I0112 23:16:46.161075      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1775, replica count: 3
  I0112 23:16:49.212526      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:16:49.225351 23 resource.go:361] Creating new exec pod
  I0112 23:16:52.252560 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1775 exec execpod-affinity8t6b7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0112 23:16:52.416522 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.177) 80 port [tcp/http] succeeded!\n"
  I0112 23:16:52.416600 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:16:52.416741 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1775 exec execpod-affinity8t6b7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.177 80'
  I0112 23:16:52.573720 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.177 80\nConnection to 10.152.183.177 80 port [tcp/http] succeeded!\n"
  I0112 23:16:52.573804 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:16:52.573951 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1775 exec execpod-affinity8t6b7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 30872'
  I0112 23:16:52.733251 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 30872\nConnection to 172.17.202.11 30872 port [tcp/*] succeeded!\n"
  I0112 23:16:52.733367 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:16:52.733451 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1775 exec execpod-affinity8t6b7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 30872'
  I0112 23:16:52.903091 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 30872\nConnection to 172.17.207.20 30872 port [tcp/*] succeeded!\n"
  I0112 23:16:52.903164 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:16:52.918676 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1775 exec execpod-affinity8t6b7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.17.202.11:30872/ ; done'
  I0112 23:16:53.162337 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n"
  I0112 23:16:53.162407 23 builder.go:147] stdout: "\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-9w276\naffinity-nodeport-transition-9w276\naffinity-nodeport-transition-9w276\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-9w276\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-c58mf\naffinity-nodeport-transition-9w276\naffinity-nodeport-transition-c58mf"
  I0112 23:16:53.162426 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162437 23 service.go:242] Received response from host: affinity-nodeport-transition-9w276
  I0112 23:16:53.162449 23 service.go:242] Received response from host: affinity-nodeport-transition-9w276
  I0112 23:16:53.162458 23 service.go:242] Received response from host: affinity-nodeport-transition-9w276
  I0112 23:16:53.162470 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.162486 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.162502 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162523 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162536 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162551 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162567 23 service.go:242] Received response from host: affinity-nodeport-transition-9w276
  I0112 23:16:53.162610 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162628 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.162644 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.162664 23 service.go:242] Received response from host: affinity-nodeport-transition-9w276
  I0112 23:16:53.162680 23 service.go:242] Received response from host: affinity-nodeport-transition-c58mf
  I0112 23:16:53.180012 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1775 exec execpod-affinity8t6b7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.17.202.11:30872/ ; done'
  I0112 23:16:53.426161 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:30872/\n"
  I0112 23:16:53.426234 23 builder.go:147] stdout: "\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx\naffinity-nodeport-transition-hl7sx"
  I0112 23:16:53.426265 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426279 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426289 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426299 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426308 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426319 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426328 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426337 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426347 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426356 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426365 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426373 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426382 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426391 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426400 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426409 23 service.go:242] Received response from host: affinity-nodeport-transition-hl7sx
  I0112 23:16:53.426464 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1775, will wait for the garbage collector to delete the pods @ 01/12/25 23:16:53.461
  I0112 23:16:53.534408 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 18.978678ms
  I0112 23:16:53.635507 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.099287ms
  I0112 23:16:56.480013 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1775" for this suite. @ 01/12/25 23:16:56.483
• [10.452 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 01/12/25 23:16:56.493
  I0112 23:16:56.494093 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 23:16:56.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:56.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:56.521
  STEP: Creating ServiceAccount "e2e-sa-fjgfb"  @ 01/12/25 23:16:56.524
  I0112 23:16:56.553408 23 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-fjgfb"  @ 01/12/25 23:16:56.553
  I0112 23:16:56.582980 23 service_accounts.go:868] AutomountServiceAccountToken: true
  I0112 23:16:56.583208 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7735" for this suite. @ 01/12/25 23:16:56.59
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/12/25 23:16:56.608
  I0112 23:16:56.608754 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 23:16:56.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:56.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:56.652
  STEP: Creating ReplicationController "e2e-rc-rxddd" @ 01/12/25 23:16:56.664
  I0112 23:16:56.678814 23 rc.go:792] Get Replication Controller "e2e-rc-rxddd" to confirm replicas
  I0112 23:16:57.679204 23 rc.go:792] Get Replication Controller "e2e-rc-rxddd" to confirm replicas
  I0112 23:16:57.685341 23 rc.go:801] Found 1 replicas for "e2e-rc-rxddd" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-rxddd" @ 01/12/25 23:16:57.685
  STEP: Updating a scale subresource @ 01/12/25 23:16:57.69
  STEP: Verifying replicas where modified for replication controller "e2e-rc-rxddd" @ 01/12/25 23:16:57.706
  I0112 23:16:57.706492 23 rc.go:792] Get Replication Controller "e2e-rc-rxddd" to confirm replicas
  I0112 23:16:58.707296 23 rc.go:792] Get Replication Controller "e2e-rc-rxddd" to confirm replicas
  I0112 23:16:58.711561 23 rc.go:801] Found 2 replicas for "e2e-rc-rxddd" replication controller
  I0112 23:16:58.711775 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2800" for this suite. @ 01/12/25 23:16:58.716
• [2.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 01/12/25 23:16:58.729
  I0112 23:16:58.729413 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 23:16:58.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:16:58.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:16:58.759
  STEP: Creating service test in namespace statefulset-2476 @ 01/12/25 23:16:58.764
  STEP: Creating stateful set ss in namespace statefulset-2476 @ 01/12/25 23:16:58.783
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2476 @ 01/12/25 23:16:58.816
  I0112 23:16:58.820183 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 23:17:08.822493 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/12/25 23:17:08.822
  I0112 23:17:08.826605 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 23:17:09.015668 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 23:17:09.015741 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 23:17:09.015765 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 23:17:09.019297 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0112 23:17:19.023847 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 23:17:19.024007 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 23:17:19.063252 23 resource.go:168] POD   NODE    PHASE    GRACE  CONDITIONS
  I0112 23:17:19.063375 23 resource.go:175] ss-0  ubuntu  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:16:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:16:58 +0000 UTC  }]
  I0112 23:17:19.063400 23 resource.go:178] 
  I0112 23:17:19.063420 23 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 1
  I0112 23:17:20.067598 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.995851139s
  I0112 23:17:21.071764 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.991531255s
  I0112 23:17:22.077202 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.986547257s
  I0112 23:17:23.084876 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.981968027s
  I0112 23:17:24.092486 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.974289622s
  I0112 23:17:25.100883 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.966753489s
  I0112 23:17:26.106328 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.958159448s
  I0112 23:17:27.111539 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.952971627s
  I0112 23:17:28.120690 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 947.606785ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2476 @ 01/12/25 23:17:29.121
  I0112 23:17:29.125789 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 23:17:29.282607 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0112 23:17:29.282671 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 23:17:29.282701 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 23:17:29.282789 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 23:17:29.473543 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0112 23:17:29.473666 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 23:17:29.473687 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 23:17:29.473794 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0112 23:17:29.631612 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0112 23:17:29.631674 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0112 23:17:29.631689 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0112 23:17:29.635675 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:17:29.635720 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:17:29.635737 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/12/25 23:17:29.635
  I0112 23:17:29.639698 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 23:17:29.801319 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 23:17:29.801378 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 23:17:29.801397 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 23:17:29.801477 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 23:17:29.966546 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 23:17:29.966603 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 23:17:29.966619 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 23:17:29.966676 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=statefulset-2476 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0112 23:17:30.126623 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0112 23:17:30.126700 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0112 23:17:30.126722 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0112 23:17:30.126767 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0112 23:17:30.131089 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0112 23:17:40.139396 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0112 23:17:40.139450 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0112 23:17:40.139464 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0112 23:17:40.162208 23 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I0112 23:17:40.162310 23 resource.go:175] ss-0  ubuntu   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:16:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:16:58 +0000 UTC  }]
  I0112 23:17:40.162351 23 resource.go:175] ss-1  ubuntu2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC  }]
  I0112 23:17:40.162392 23 resource.go:175] ss-2  ubuntu   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC  }]
  I0112 23:17:40.162442 23 resource.go:178] 
  I0112 23:17:40.162458 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0112 23:17:41.172299 23 resource.go:168] POD   NODE     PHASE      GRACE  CONDITIONS
  I0112 23:17:41.172445 23 resource.go:175] ss-0  ubuntu   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:16:58 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:16:58 +0000 UTC  }]
  I0112 23:17:41.172495 23 resource.go:175] ss-1  ubuntu2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC  }]
  I0112 23:17:41.172535 23 resource.go:175] ss-2  ubuntu   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:30 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:17:19 +0000 UTC  }]
  I0112 23:17:41.172554 23 resource.go:178] 
  I0112 23:17:41.172574 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0112 23:17:42.177651 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.98411323s
  I0112 23:17:43.181516 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.979203911s
  I0112 23:17:44.186060 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.975404051s
  I0112 23:17:45.191682 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.970172388s
  I0112 23:17:46.196016 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.965132099s
  I0112 23:17:47.201509 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.961130069s
  I0112 23:17:48.206526 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.95489215s
  I0112 23:17:49.210888 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 950.315981ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2476 @ 01/12/25 23:17:50.211
  I0112 23:17:50.215814 23 rest.go:152] Scaling statefulset ss to 0
  I0112 23:17:50.224568 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 23:17:50.229286 23 statefulset.go:138] Deleting all statefulset in ns statefulset-2476
  I0112 23:17:50.233560 23 rest.go:152] Scaling statefulset ss to 0
  I0112 23:17:50.240676 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 23:17:50.244716 23 rest.go:90] Deleting statefulset ss
  I0112 23:17:50.266375 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2476" for this suite. @ 01/12/25 23:17:50.271
• [51.563 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/12/25 23:17:50.293
  I0112 23:17:50.293160 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:17:50.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:17:50.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:17:50.326
  STEP: Setting up server cert @ 01/12/25 23:17:50.384
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:17:50.674
  STEP: Deploying the webhook pod @ 01/12/25 23:17:50.699
  STEP: Wait for the deployment to be ready @ 01/12/25 23:17:50.734
  I0112 23:17:50.742654 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:17:52.757
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:17:52.783
  I0112 23:17:53.784146 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/12/25 23:17:53.797
  STEP: verifying the validating webhook match conditions @ 01/12/25 23:17:53.815
  STEP: updating the validating webhook match conditions @ 01/12/25 23:17:53.819
  STEP: verifying the validating webhook match conditions @ 01/12/25 23:17:53.834
  I0112 23:17:53.963122 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3532" for this suite. @ 01/12/25 23:17:53.967
  STEP: Destroying namespace "webhook-markers-759" for this suite. @ 01/12/25 23:17:53.983
• [3.712 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/12/25 23:17:54.005
  I0112 23:17:54.005597 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:17:54.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:17:54.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:17:54.061
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/12/25 23:17:54.066
  STEP: Saw pod success @ 01/12/25 23:17:58.106
  I0112 23:17:58.113284 23 output.go:207] Trying to get logs from node ubuntu pod pod-39a4c4b0-1a3e-4d3c-a24a-932a3f48d8cb container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:17:58.129
  I0112 23:17:58.169380 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1032" for this suite. @ 01/12/25 23:17:58.174
• [4.182 seconds]
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/12/25 23:17:58.187
  I0112 23:17:58.187644 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:17:58.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:17:58.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:17:58.233
  STEP: creating a ConfigMap @ 01/12/25 23:17:58.236
  STEP: fetching the ConfigMap @ 01/12/25 23:17:58.249
  STEP: patching the ConfigMap @ 01/12/25 23:17:58.253
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/12/25 23:17:58.265
  STEP: deleting the ConfigMap by collection with a label selector @ 01/12/25 23:17:58.269
  STEP: listing all ConfigMaps in test namespace @ 01/12/25 23:17:58.283
  I0112 23:17:58.286705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6251" for this suite. @ 01/12/25 23:17:58.29
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/12/25 23:17:58.305
  I0112 23:17:58.305295 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename certificates @ 01/12/25 23:17:58.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:17:58.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:17:58.345
  STEP: getting /apis @ 01/12/25 23:17:58.936
  STEP: getting /apis/certificates.k8s.io @ 01/12/25 23:17:58.941
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/12/25 23:17:58.942
  STEP: creating @ 01/12/25 23:17:58.944
  STEP: getting @ 01/12/25 23:17:58.987
  STEP: listing @ 01/12/25 23:17:58.99
  STEP: watching @ 01/12/25 23:17:58.994
  I0112 23:17:58.994291 23 certificates.go:316] starting watch
  STEP: patching @ 01/12/25 23:17:58.996
  STEP: updating @ 01/12/25 23:17:59.009
  I0112 23:17:59.024449 23 certificates.go:332] waiting for watch events with expected annotations
  I0112 23:17:59.024580 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/12/25 23:17:59.024
  STEP: patching /approval @ 01/12/25 23:17:59.029
  STEP: updating /approval @ 01/12/25 23:17:59.06
  STEP: getting /status @ 01/12/25 23:17:59.079
  STEP: patching /status @ 01/12/25 23:17:59.084
  STEP: updating /status @ 01/12/25 23:17:59.099
  STEP: deleting @ 01/12/25 23:17:59.117
  STEP: deleting a collection @ 01/12/25 23:17:59.15
  I0112 23:17:59.192835 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-449" for this suite. @ 01/12/25 23:17:59.2
• [0.926 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/12/25 23:17:59.231
  I0112 23:17:59.231655 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 23:17:59.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:17:59.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:17:59.277
  I0112 23:17:59.304785 23 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0112 23:18:04.310393 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 23:18:04.31
  I0112 23:18:04.310537 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/12/25 23:18:04.33
  I0112 23:18:04.343820 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2175",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b17285da-4e2f-4da8-afd1-e016cd36faf0",
      ResourceVersion: (string) (len=5) "22659",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320684,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 23:18:04.350681 23 deployment.go:42] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0112 23:18:04.350766 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0112 23:18:04.351209 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2175",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81cc0996-cce7-4c3d-9692-b9da4fc9b213",
      ResourceVersion: (string) (len=5) "22660",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320679,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b17285da-4e2f-4da8-afd1-e016cd36faf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 62 31 37 32 38 35 64  |"uid\":\"b17285d|
              00000040  61 2d 34 65 32 66 2d 34  64 61 38 2d 61 66 64 31  |a-4e2f-4da8-afd1|
              00000050  2d 65 30 31 36 63 64 33  36 66 61 66 30 5c 22 7d  |-e016cd36faf0\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 23:18:04.359759 23 deployment.go:68] Pod "test-cleanup-controller-9fcwf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-9fcwf",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2175",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "867d6370-d179-4c12-ab52-6af2f8205214",
      ResourceVersion: (string) (len=5) "22636",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320679,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.208/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "78d962b525479466a93b1d5c2db8dfe57a6207e8236879cc59dd72e6474af720",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.208/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "81cc0996-cce7-4c3d-9692-b9da4fc9b213",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  38 31 63 63 30 39 39 36  |uid\":\"81cc0996|
              00000080  2d 63 63 65 37 2d 34 63  33 64 2d 39 36 39 32 2d  |-cce7-4c3d-9692-|
              00000090  62 39 64 61 34 66 63 39  62 32 31 33 5c 22 7d 22  |b9da4fc9b213\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  30 38 5c 22 7d 22 3a 7b  |.1.243.208\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zx7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zx7v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320680,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872320679,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.208",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.208"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872320679,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872320680,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://28d0922fc00e5be896ddc3a03c875b72ed502dd45bb3eef5d701b2abbe1fd361",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5zx7v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 23:18:04.364474 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2175" for this suite. @ 01/12/25 23:18:04.37
• [5.170 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/12/25 23:18:04.401
  I0112 23:18:04.401874 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 23:18:04.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:18:04.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:18:04.491
  STEP: Creating a ReplaceConcurrent cronjob @ 01/12/25 23:18:04.495
  STEP: Ensuring a job is scheduled @ 01/12/25 23:18:04.522
  STEP: Ensuring exactly one is scheduled @ 01/12/25 23:19:00.529
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/12/25 23:19:00.533
  STEP: Ensuring the job is replaced with a new one @ 01/12/25 23:19:00.537
  STEP: Removing cronjob @ 01/12/25 23:20:00.542
  I0112 23:20:00.567072 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4316" for this suite. @ 01/12/25 23:20:00.571
• [116.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/12/25 23:20:00.607
  I0112 23:20:00.607716 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename subpath @ 01/12/25 23:20:00.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:20:00.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:20:00.676
  STEP: Setting up data @ 01/12/25 23:20:00.68
  STEP: Creating pod pod-subpath-test-downwardapi-z5fh @ 01/12/25 23:20:00.71
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 23:20:00.71
  STEP: Saw pod success @ 01/12/25 23:20:24.8
  I0112 23:20:24.806789 23 output.go:207] Trying to get logs from node ubuntu pod pod-subpath-test-downwardapi-z5fh container test-container-subpath-downwardapi-z5fh: <nil>
  STEP: delete the pod @ 01/12/25 23:20:24.823
  STEP: Deleting pod pod-subpath-test-downwardapi-z5fh @ 01/12/25 23:20:24.854
  I0112 23:20:24.854724 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-z5fh" in namespace "subpath-8754"
  I0112 23:20:24.858738 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8754" for this suite. @ 01/12/25 23:20:24.863
• [24.277 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 01/12/25 23:20:24.885
  I0112 23:20:24.885425 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename containers @ 01/12/25 23:20:24.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:20:24.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:20:24.917
  STEP: Creating a pod to test override command @ 01/12/25 23:20:24.93
  STEP: Saw pod success @ 01/12/25 23:20:28.964
  I0112 23:20:28.971104 23 output.go:207] Trying to get logs from node ubuntu pod client-containers-3ec1459c-05ab-45cf-aa47-7eb9f747feb7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:20:28.981
  I0112 23:20:29.032992 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5259" for this suite. @ 01/12/25 23:20:29.039
• [4.172 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/12/25 23:20:29.057
  I0112 23:20:29.057480 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 23:20:29.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:20:29.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:20:29.094
  I0112 23:20:29.098250 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 23:20:29.106783 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0112 23:20:29.111048 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 23:20:29.122425 23 predicates.go:957] replace-28945399-v7bqg from cronjob-4316 started at 2025-01-12 23:19:00 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.122487 23 predicates.go:959] 	Container c ready: true, restart count 0
  I0112 23:20:29.122506 23 predicates.go:957] replace-28945400-rxdxx from cronjob-4316 started at 2025-01-12 23:20:00 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.122518 23 predicates.go:959] 	Container c ready: true, restart count 0
  I0112 23:20:29.122530 23 predicates.go:957] calico-node-7qkl4 from kube-system started at 2025-01-12 22:13:28 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.122542 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 23:20:29.122554 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z8bgt from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:20:29.122565 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:20:29.122576 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 23:20:29.122588 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 23:20:29.129798 23 predicates.go:957] calico-kube-controllers-5947598c79-clnft from kube-system started at 2025-01-12 22:59:52 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.129864 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 23:20:29.129877 23 predicates.go:957] calico-node-dn6q6 from kube-system started at 2025-01-12 22:13:29 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.129886 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 23:20:29.129895 23 predicates.go:957] coredns-79b94494c7-hs9qg from kube-system started at 2025-01-12 22:49:43 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.129903 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 23:20:29.129914 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 22:27:44 +0000 UTC (1 container statuses recorded)
  I0112 23:20:29.129922 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 23:20:29.129972 23 predicates.go:957] sonobuoy-e2e-job-d35ab0f1f1cc4190 from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:20:29.129982 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 23:20:29.129990 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:20:29.129999 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z4bgx from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:20:29.130007 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:20:29.130015 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ubuntu @ 01/12/25 23:20:29.151
  STEP: verifying the node has the label node ubuntu2 @ 01/12/25 23:20:29.171
  I0112 23:20:29.187697 23 predicates.go:372] Pod replace-28945399-v7bqg requesting resource cpu=0m on Node ubuntu
  I0112 23:20:29.187751 23 predicates.go:372] Pod replace-28945400-rxdxx requesting resource cpu=0m on Node ubuntu
  I0112 23:20:29.187772 23 predicates.go:372] Pod calico-kube-controllers-5947598c79-clnft requesting resource cpu=0m on Node ubuntu2
  I0112 23:20:29.187788 23 predicates.go:372] Pod calico-node-7qkl4 requesting resource cpu=250m on Node ubuntu
  I0112 23:20:29.187804 23 predicates.go:372] Pod calico-node-dn6q6 requesting resource cpu=250m on Node ubuntu2
  I0112 23:20:29.187819 23 predicates.go:372] Pod coredns-79b94494c7-hs9qg requesting resource cpu=100m on Node ubuntu2
  I0112 23:20:29.187863 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ubuntu2
  I0112 23:20:29.187883 23 predicates.go:372] Pod sonobuoy-e2e-job-d35ab0f1f1cc4190 requesting resource cpu=0m on Node ubuntu2
  I0112 23:20:29.187904 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z4bgx requesting resource cpu=0m on Node ubuntu2
  I0112 23:20:29.187922 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z8bgt requesting resource cpu=0m on Node ubuntu
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/12/25 23:20:29.187
  I0112 23:20:29.188002 23 predicates.go:382] Creating a pod which consumes cpu=2625m on Node ubuntu
  I0112 23:20:29.205983 23 predicates.go:382] Creating a pod which consumes cpu=2555m on Node ubuntu2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/12/25 23:20:31.248
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863.181a154d9248b498], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6213/filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863 to ubuntu] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863.181a154dc38c57f7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863.181a154dc810a7ee], Reason = [Created], Message = [Created container: filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863.181a154dd067947e], Reason = [Started], Message = [Started container filler-pod-31fdc92d-4b34-42d5-93e7-e10c9f616863] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7835500e-cc0e-42ba-819d-7a5744996717.181a154d94ce337a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6213/filler-pod-7835500e-cc0e-42ba-819d-7a5744996717 to ubuntu2] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7835500e-cc0e-42ba-819d-7a5744996717.181a154dc5cf2376], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7835500e-cc0e-42ba-819d-7a5744996717.181a154dcab18a91], Reason = [Created], Message = [Created container: filler-pod-7835500e-cc0e-42ba-819d-7a5744996717] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7835500e-cc0e-42ba-819d-7a5744996717.181a154dd43e7bc7], Reason = [Started], Message = [Started container filler-pod-7835500e-cc0e-42ba-819d-7a5744996717] @ 01/12/25 23:20:31.254
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.181a154e0c916d30], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 01/12/25 23:20:31.284
  STEP: removing the label node off the node ubuntu @ 01/12/25 23:20:32.275
  STEP: verifying the node doesn't have the label node @ 01/12/25 23:20:32.3
  STEP: removing the label node off the node ubuntu2 @ 01/12/25 23:20:32.305
  STEP: verifying the node doesn't have the label node @ 01/12/25 23:20:32.324
  I0112 23:20:32.330014 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6213" for this suite. @ 01/12/25 23:20:32.334
• [3.291 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/12/25 23:20:32.348
  I0112 23:20:32.348416 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 23:20:32.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:20:32.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:20:32.394
  STEP: creating the pod with failed condition @ 01/12/25 23:20:32.398
  STEP: updating the pod @ 01/12/25 23:22:32.419
  I0112 23:22:32.938150 23 pod_client.go:173] Successfully updated pod "var-expansion-a5503b4b-3e88-49bc-a23a-d05d7352a73b"
  STEP: waiting for pod running @ 01/12/25 23:22:32.938
  STEP: deleting the pod gracefully @ 01/12/25 23:22:34.949
  I0112 23:22:34.949403 23 delete.go:62] Deleting pod "var-expansion-a5503b4b-3e88-49bc-a23a-d05d7352a73b" in namespace "var-expansion-9753"
  I0112 23:22:34.965737 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-a5503b4b-3e88-49bc-a23a-d05d7352a73b" to be fully deleted
  I0112 23:23:07.076745 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9753" for this suite. @ 01/12/25 23:23:07.08
• [154.747 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/12/25 23:23:07.095
  I0112 23:23:07.095812 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 23:23:07.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:07.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:07.129
  STEP: Performing setup for networking test in namespace pod-network-test-4687 @ 01/12/25 23:23:07.134
  STEP: creating a selector @ 01/12/25 23:23:07.134
  STEP: Creating the service pods in kubernetes @ 01/12/25 23:23:07.134
  I0112 23:23:07.134155 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/12/25 23:23:21.249
  I0112 23:23:23.279770 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 23:23:23.279836 23 networking.go:42] Breadth first check of 10.1.243.252 on host 172.17.202.11...
  I0112 23:23:23.284170 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.213:9080/dial?request=hostname&protocol=udp&host=10.1.243.252&port=8081&tries=1'] Namespace:pod-network-test-4687 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:23:23.284277 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:23:23.284397 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4687/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.243.252%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0112 23:23:23.366542 23 utils.go:356] Waiting for responses: map[]
  I0112 23:23:23.366588 23 utils.go:360] reached 10.1.243.252 after 0/1 tries
  I0112 23:23:23.366603 23 networking.go:42] Breadth first check of 10.1.152.120 on host 172.17.207.20...
  I0112 23:23:23.370213 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.213:9080/dial?request=hostname&protocol=udp&host=10.1.152.120&port=8081&tries=1'] Namespace:pod-network-test-4687 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:23:23.370267 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:23:23.370314 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4687/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.213%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.152.120%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0112 23:23:23.439970 23 utils.go:356] Waiting for responses: map[]
  I0112 23:23:23.440044 23 utils.go:360] reached 10.1.152.120 after 0/1 tries
  I0112 23:23:23.440069 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0112 23:23:23.440216 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4687" for this suite. @ 01/12/25 23:23:23.444
• [16.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 01/12/25 23:23:23.458
  I0112 23:23:23.458494 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:23:23.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:23.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:23.491
  STEP: creating the pod @ 01/12/25 23:23:23.496
  I0112 23:23:23.496126 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 create -f -'
  I0112 23:23:23.650440 23 builder.go:146] stderr: ""
  I0112 23:23:23.650538 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/12/25 23:23:25.66
  I0112 23:23:25.660121 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 label pods pause testing-label=testing-label-value'
  I0112 23:23:25.747797 23 builder.go:146] stderr: ""
  I0112 23:23:25.747907 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/12/25 23:23:25.747
  I0112 23:23:25.748021 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 get pod pause -L testing-label'
  I0112 23:23:25.823887 23 builder.go:146] stderr: ""
  I0112 23:23:25.823990 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/12/25 23:23:25.824
  I0112 23:23:25.824086 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 label pods pause testing-label-'
  I0112 23:23:25.924284 23 builder.go:146] stderr: ""
  I0112 23:23:25.924358 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/12/25 23:23:25.924
  I0112 23:23:25.924463 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 get pod pause -L testing-label'
  I0112 23:23:26.007374 23 builder.go:146] stderr: ""
  I0112 23:23:26.007471 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 01/12/25 23:23:26.007
  I0112 23:23:26.007705 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 delete --grace-period=0 --force -f -'
  I0112 23:23:26.128456 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:23:26.128589 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0112 23:23:26.128710 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 get rc,svc -l name=pause --no-headers'
  I0112 23:23:26.213165 23 builder.go:146] stderr: "No resources found in kubectl-2804 namespace.\n"
  I0112 23:23:26.213235 23 builder.go:147] stdout: ""
  I0112 23:23:26.213305 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2804 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0112 23:23:26.281263 23 builder.go:146] stderr: ""
  I0112 23:23:26.281338 23 builder.go:147] stdout: ""
  I0112 23:23:26.281437 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2804" for this suite. @ 01/12/25 23:23:26.285
• [2.841 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/12/25 23:23:26.299
  I0112 23:23:26.299819 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 23:23:26.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:26.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:26.335
  STEP: Creating namespace "e2e-ns-wgqjx" @ 01/12/25 23:23:26.339
  I0112 23:23:26.392229 23 namespace.go:411] Namespace "e2e-ns-wgqjx-7519" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wgqjx-7519" @ 01/12/25 23:23:26.392
  I0112 23:23:26.430197 23 namespace.go:434] Namespace "e2e-ns-wgqjx-7519" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wgqjx-7519" @ 01/12/25 23:23:26.43
  I0112 23:23:26.452425 23 namespace.go:463] Namespace "e2e-ns-wgqjx-7519" has []v1.FinalizerName{"kubernetes"}
  I0112 23:23:26.452643 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-754" for this suite. @ 01/12/25 23:23:26.459
  STEP: Destroying namespace "e2e-ns-wgqjx-7519" for this suite. @ 01/12/25 23:23:26.476
• [0.205 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/12/25 23:23:26.505
  I0112 23:23:26.505802 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:23:26.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:26.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:26.57
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-443a9369-9693-4540-805c-1d52f3cef686 @ 01/12/25 23:23:26.582
  STEP: Creating the pod @ 01/12/25 23:23:26.595
  STEP: Updating configmap projected-configmap-test-upd-443a9369-9693-4540-805c-1d52f3cef686 @ 01/12/25 23:23:28.649
  STEP: waiting to observe update in volume @ 01/12/25 23:23:28.684
  I0112 23:23:30.700244 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5056" for this suite. @ 01/12/25 23:23:30.705
• [4.215 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 01/12/25 23:23:30.721
  I0112 23:23:30.721048 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 23:23:30.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:30.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:30.774
  STEP: getting /apis @ 01/12/25 23:23:30.808
  STEP: getting /apis/admissionregistration.k8s.io @ 01/12/25 23:23:30.814
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/12/25 23:23:30.815
  STEP: creating @ 01/12/25 23:23:30.817
  STEP: getting @ 01/12/25 23:23:30.877
  STEP: listing @ 01/12/25 23:23:30.881
  STEP: watching @ 01/12/25 23:23:30.884
  I0112 23:23:30.885015 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 01/12/25 23:23:30.886
  STEP: updating @ 01/12/25 23:23:30.898
  I0112 23:23:30.921083 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 01/12/25 23:23:30.921
  STEP: deleting a collection @ 01/12/25 23:23:30.939
  I0112 23:23:30.970582 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7205" for this suite. @ 01/12/25 23:23:30.975
• [0.275 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/12/25 23:23:30.996
  I0112 23:23:30.996231 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename security-context-test @ 01/12/25 23:23:30.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:31.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:31.038
  I0112 23:23:37.084054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6934" for this suite. @ 01/12/25 23:23:37.087
• [6.106 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/12/25 23:23:37.102
  I0112 23:23:37.102779 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:23:37.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:37.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:37.146
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:23:37.152
  STEP: Saw pod success @ 01/12/25 23:23:41.185
  I0112 23:23:41.189412 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-b489f764-4ce4-447b-98ba-dbe0264f5bf4 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:23:41.196
  I0112 23:23:41.228598 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9345" for this suite. @ 01/12/25 23:23:41.233
• [4.145 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/12/25 23:23:41.247
  I0112 23:23:41.247518 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 23:23:41.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:41.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:41.281
  I0112 23:23:41.285651 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:23:44.406502 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4322" for this suite. @ 01/12/25 23:23:44.411
• [3.179 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/12/25 23:23:44.426
  I0112 23:23:44.426302 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl-logs @ 01/12/25 23:23:44.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:44.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:44.478
  STEP: creating a pod @ 01/12/25 23:23:44.499
  I0112 23:23:44.499892 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0112 23:23:44.595652 23 builder.go:146] stderr: ""
  I0112 23:23:44.595727 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/12/25 23:23:44.595
  I0112 23:23:44.595852 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0112 23:23:46.609460 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/12/25 23:23:46.609
  I0112 23:23:46.609604 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 logs logs-generator logs-generator'
  I0112 23:23:46.721419 23 builder.go:146] stderr: ""
  I0112 23:23:46.721521 23 builder.go:147] stdout: "I0112 23:23:45.463416       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/mtzs 288\nI0112 23:23:45.663796       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/d9d 366\nI0112 23:23:45.864553       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/fm2 364\nI0112 23:23:46.064454       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qhv 248\nI0112 23:23:46.264017       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/8lhz 409\nI0112 23:23:46.464412       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/6hzj 234\nI0112 23:23:46.663945       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mh2 585\n"
  STEP: limiting log lines @ 01/12/25 23:23:46.721
  I0112 23:23:46.721642 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 logs logs-generator logs-generator --tail=1'
  I0112 23:23:46.812028 23 builder.go:146] stderr: ""
  I0112 23:23:46.812103 23 builder.go:147] stdout: "I0112 23:23:46.663945       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mh2 585\n"
  I0112 23:23:46.812127 23 logs.go:180] got output "I0112 23:23:46.663945       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mh2 585\n"
  STEP: limiting log bytes @ 01/12/25 23:23:46.812
  I0112 23:23:46.812264 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 logs logs-generator logs-generator --limit-bytes=1'
  I0112 23:23:46.913399 23 builder.go:146] stderr: ""
  I0112 23:23:46.913512 23 builder.go:147] stdout: "I"
  I0112 23:23:46.913527 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/12/25 23:23:46.913
  I0112 23:23:46.913601 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 logs logs-generator logs-generator --tail=1 --timestamps'
  I0112 23:23:47.009607 23 builder.go:146] stderr: ""
  I0112 23:23:47.009675 23 builder.go:147] stdout: "2025-01-12T23:23:46.864658467Z I0112 23:23:46.864395       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/4wx 441\n"
  I0112 23:23:47.009691 23 logs.go:192] got output "2025-01-12T23:23:46.864658467Z I0112 23:23:46.864395       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/4wx 441\n"
  STEP: restricting to a time range @ 01/12/25 23:23:47.009
  I0112 23:23:49.511524 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 logs logs-generator logs-generator --since=1s'
  I0112 23:23:49.618150 23 builder.go:146] stderr: ""
  I0112 23:23:49.618220 23 builder.go:147] stdout: "I0112 23:23:48.663525       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/6q7z 448\nI0112 23:23:48.864316       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/7td9 351\nI0112 23:23:49.063693       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/4rh 289\nI0112 23:23:49.264331       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/sl5 528\nI0112 23:23:49.463611       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/95lf 209\n"
  I0112 23:23:49.618272 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 logs logs-generator logs-generator --since=24h'
  I0112 23:23:49.725088 23 builder.go:146] stderr: ""
  I0112 23:23:49.725194 23 builder.go:147] stdout: "I0112 23:23:45.463416       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/mtzs 288\nI0112 23:23:45.663796       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/d9d 366\nI0112 23:23:45.864553       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/fm2 364\nI0112 23:23:46.064454       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qhv 248\nI0112 23:23:46.264017       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/8lhz 409\nI0112 23:23:46.464412       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/6hzj 234\nI0112 23:23:46.663945       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/mh2 585\nI0112 23:23:46.864395       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/4wx 441\nI0112 23:23:47.063972       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/fdf 238\nI0112 23:23:47.263569       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/49hr 496\nI0112 23:23:47.464400       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/jdb 338\nI0112 23:23:47.664093       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/6lnr 490\nI0112 23:23:47.863478       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/7xdw 254\nI0112 23:23:48.064085       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/vf2 451\nI0112 23:23:48.263672       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/jmxl 433\nI0112 23:23:48.464157       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/59xr 400\nI0112 23:23:48.663525       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/6q7z 448\nI0112 23:23:48.864316       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/7td9 351\nI0112 23:23:49.063693       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/4rh 289\nI0112 23:23:49.264331       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/sl5 528\nI0112 23:23:49.463611       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/95lf 209\nI0112 23:23:49.664000       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/fnw2 343\n"
  I0112 23:23:49.725316 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-logs-2023 delete pod logs-generator'
  I0112 23:23:50.580019 23 builder.go:146] stderr: ""
  I0112 23:23:50.580082 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0112 23:23:50.580211 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2023" for this suite. @ 01/12/25 23:23:50.584
• [6.180 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/12/25 23:23:50.606
  I0112 23:23:50.606722 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 23:23:50.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:50.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:50.638
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/12/25 23:23:50.683
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 23:23:50.697
  I0112 23:23:50.704327 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:23:50.704397 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:23:51.707832 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:23:51.707914 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:23:52.705588 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 23:23:52.705644 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/12/25 23:23:52.708
  I0112 23:23:52.737518 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0112 23:23:52.737575 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/12/25 23:23:52.737
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 23:23:53.747
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5723, will wait for the garbage collector to delete the pods @ 01/12/25 23:23:53.747
  I0112 23:23:53.822201 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.452018ms
  I0112 23:23:53.922723 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.520358ms
  I0112 23:23:56.328147 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:23:56.328232 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 23:23:56.332240 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23826"},"items":null}

  I0112 23:23:56.336763 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23826"},"items":null}

  I0112 23:23:56.350499 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5723" for this suite. @ 01/12/25 23:23:56.355
• [5.762 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/12/25 23:23:56.369
  I0112 23:23:56.369358 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:23:56.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:23:56.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:23:56.404
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:23:56.408
  STEP: Saw pod success @ 01/12/25 23:24:00.443
  I0112 23:24:00.447329 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-6ff98021-5378-4b6a-b649-5309b37ff70c container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:24:00.454
  I0112 23:24:00.484673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-187" for this suite. @ 01/12/25 23:24:00.489
• [4.134 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/12/25 23:24:00.503
  I0112 23:24:00.503415 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:24:00.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:00.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:00.553
  STEP: Creating a ResourceQuota with terminating scope @ 01/12/25 23:24:00.557
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 23:24:00.568
  STEP: Creating a ResourceQuota with not terminating scope @ 01/12/25 23:24:02.573
  STEP: Ensuring ResourceQuota status is calculated @ 01/12/25 23:24:02.587
  STEP: Creating a long running pod @ 01/12/25 23:24:04.595
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/12/25 23:24:04.639
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/12/25 23:24:06.646
  STEP: Deleting the pod @ 01/12/25 23:24:08.651
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 23:24:08.677
  STEP: Creating a terminating pod @ 01/12/25 23:24:10.681
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/12/25 23:24:10.708
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/12/25 23:24:12.712
  STEP: Deleting the pod @ 01/12/25 23:24:14.717
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 23:24:14.747
  I0112 23:24:16.755044 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9878" for this suite. @ 01/12/25 23:24:16.762
• [16.276 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 01/12/25 23:24:16.779
  I0112 23:24:16.779795 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename volumeattachment @ 01/12/25 23:24:16.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:16.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:16.812
  STEP: Create VolumeAttachment "va-e2e-tv7mn" on node "ubuntu2" @ 01/12/25 23:24:16.826
  STEP: Patch VolumeAttachment "va-e2e-tv7mn" on node "ubuntu2" @ 01/12/25 23:24:16.837
  STEP: Reading "va-e2e-tv7mn" Status @ 01/12/25 23:24:16.85
  STEP: Patching "va-e2e-tv7mn" Status @ 01/12/25 23:24:16.855
  I0112 23:24:16.870344 23 volume_attachment.go:224] "va-e2e-tv7mn" Status.Attached: true
  STEP: Updating "va-e2e-tv7mn" Status @ 01/12/25 23:24:16.87
  I0112 23:24:16.899742 23 volume_attachment.go:240] "va-e2e-tv7mn" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-tv7mn" on node "ubuntu2" @ 01/12/25 23:24:16.899
  STEP: Confirm deletion of VolumeAttachment "va-e2e-tv7mn" on node "ubuntu2" @ 01/12/25 23:24:16.912
  I0112 23:24:16.915730 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5107" for this suite. @ 01/12/25 23:24:16.923
• [0.160 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/12/25 23:24:16.94
  I0112 23:24:16.940503 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 23:24:16.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:16.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:16.974
  STEP: set up a multi version CRD @ 01/12/25 23:24:16.978
  I0112 23:24:16.979496 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: mark a version not serverd @ 01/12/25 23:24:20.496
  STEP: check the unserved version gets removed @ 01/12/25 23:24:20.523
  STEP: check the other version is not changed @ 01/12/25 23:24:21.336
  I0112 23:24:24.106836 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-836" for this suite. @ 01/12/25 23:24:24.118
• [7.192 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/12/25 23:24:24.132
  I0112 23:24:24.132953 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 23:24:24.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:24.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:24.166
  I0112 23:24:24.261891 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-400" for this suite. @ 01/12/25 23:24:24.267
• [0.148 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/12/25 23:24:24.281
  I0112 23:24:24.281159 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 23:24:24.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:24.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:24.318
  I0112 23:24:24.323878 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/12/25 23:24:25.639
  I0112 23:24:25.639607 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 create -f -'
  I0112 23:24:27.765456 23 builder.go:146] stderr: ""
  I0112 23:24:27.765516 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0112 23:24:27.765567 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 delete e2e-test-crd-publish-openapi-1898-crds test-foo'
  I0112 23:24:27.856247 23 builder.go:146] stderr: ""
  I0112 23:24:27.856344 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0112 23:24:27.856409 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 apply -f -'
  I0112 23:24:27.954365 23 builder.go:146] stderr: ""
  I0112 23:24:27.954466 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0112 23:24:27.954542 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 delete e2e-test-crd-publish-openapi-1898-crds test-foo'
  I0112 23:24:28.057402 23 builder.go:146] stderr: ""
  I0112 23:24:28.057482 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1898-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/12/25 23:24:28.057
  I0112 23:24:28.057606 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 create -f -'
  I0112 23:24:28.148560 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/12/25 23:24:28.148
  I0112 23:24:28.148726 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 create -f -'
  I0112 23:24:28.239460 23 builder.go:135] rc: 1
  I0112 23:24:28.239639 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 apply -f -'
  I0112 23:24:28.342698 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/12/25 23:24:28.342
  I0112 23:24:28.342914 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 create -f -'
  I0112 23:24:28.436050 23 builder.go:135] rc: 1
  I0112 23:24:28.436155 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 --namespace=crd-publish-openapi-7766 apply -f -'
  I0112 23:24:28.520620 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/12/25 23:24:28.52
  I0112 23:24:28.520765 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 explain e2e-test-crd-publish-openapi-1898-crds'
  I0112 23:24:28.586973 23 builder.go:146] stderr: ""
  I0112 23:24:28.587087 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1898-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/12/25 23:24:28.587
  I0112 23:24:28.587538 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 explain e2e-test-crd-publish-openapi-1898-crds.metadata'
  I0112 23:24:28.673597 23 builder.go:146] stderr: ""
  I0112 23:24:28.673836 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1898-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0112 23:24:28.674106 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 explain e2e-test-crd-publish-openapi-1898-crds.spec'
  I0112 23:24:28.750423 23 builder.go:146] stderr: ""
  I0112 23:24:28.750517 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1898-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0112 23:24:28.750651 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 explain e2e-test-crd-publish-openapi-1898-crds.spec.bars'
  I0112 23:24:28.816903 23 builder.go:146] stderr: ""
  I0112 23:24:28.816995 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1898-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/12/25 23:24:28.817
  I0112 23:24:28.817218 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-7766 explain e2e-test-crd-publish-openapi-1898-crds.spec.bars2'
  I0112 23:24:28.886388 23 builder.go:135] rc: 1
  I0112 23:24:30.250471 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7766" for this suite. @ 01/12/25 23:24:30.26
• [6.003 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 01/12/25 23:24:30.283
  I0112 23:24:30.283537 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename cronjob @ 01/12/25 23:24:30.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:30.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:30.314
  STEP: Creating a cronjob @ 01/12/25 23:24:30.318
  STEP: creating @ 01/12/25 23:24:30.318
  STEP: getting @ 01/12/25 23:24:30.33
  STEP: listing @ 01/12/25 23:24:30.335
  STEP: watching @ 01/12/25 23:24:30.34
  I0112 23:24:30.340109 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 01/12/25 23:24:30.341
  STEP: cluster-wide watching @ 01/12/25 23:24:30.346
  I0112 23:24:30.346391 23 cronjob.go:407] starting watch
  STEP: patching @ 01/12/25 23:24:30.348
  STEP: updating @ 01/12/25 23:24:30.361
  I0112 23:24:30.377422 23 cronjob.go:431] waiting for watch events with expected annotations
  I0112 23:24:30.377519 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 01/12/25 23:24:30.377
  STEP: updating /status @ 01/12/25 23:24:30.389
  STEP: get /status @ 01/12/25 23:24:30.397
  STEP: deleting @ 01/12/25 23:24:30.401
  STEP: deleting a collection @ 01/12/25 23:24:30.428
  I0112 23:24:30.447076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1761" for this suite. @ 01/12/25 23:24:30.451
• [0.180 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/12/25 23:24:30.463
  I0112 23:24:30.463724 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename aggregator @ 01/12/25 23:24:30.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:24:30.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:24:30.495
  I0112 23:24:30.507779 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Registering the sample API server. @ 01/12/25 23:24:30.508
  I0112 23:24:30.772539 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0112 23:24:30.842091 23 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0112 23:24:32.941274 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:34.945408 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:36.948380 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:38.950146 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:40.946322 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:42.947758 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:44.947105 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:46.946214 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:48.946346 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:50.948426 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:52.946476 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:54.945993 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:56.947120 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:24:58.946323 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:00.946326 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:02.946697 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:04.946501 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:06.948541 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:08.948539 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:10.948882 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:12.947470 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:14.946277 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:16.949380 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:18.947066 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:20.947282 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:22.946091 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 24, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:25:25.075197 23 aggregator.go:755] Waited 114.436239ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/12/25 23:25:25.129
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/12/25 23:25:25.134
  STEP: List APIServices @ 01/12/25 23:25:25.15
  I0112 23:25:25.156520 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/12/25 23:25:25.156
  I0112 23:25:25.179703 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/12/25 23:25:25.179
  I0112 23:25:25.199879 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 12, 23, 25, 24, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/12/25 23:25:25.2
  I0112 23:25:25.204598 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-12 23:25:24 +0000 UTC Passed all checks passed}
  I0112 23:25:25.204659 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 23:25:25.204675 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/12/25 23:25:25.204
  I0112 23:25:25.225549 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1600663874" @ 01/12/25 23:25:25.225
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/12/25 23:25:25.24
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/12/25 23:25:25.251
  STEP: Patch APIService Status @ 01/12/25 23:25:25.255
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/12/25 23:25:25.291
  I0112 23:25:25.295402 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-12 23:25:24 +0000 UTC Passed all checks passed}
  I0112 23:25:25.295465 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0112 23:25:25.295480 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0112 23:25:25.295495 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/12/25 23:25:25.295
  STEP: Confirm that the generated APIService has been deleted @ 01/12/25 23:25:25.314
  I0112 23:25:25.314189 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0112 23:25:25.319649 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0112 23:25:25.319704 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0112 23:25:25.633065 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4520" for this suite. @ 01/12/25 23:25:25.638
• [55.195 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/12/25 23:25:25.658
  I0112 23:25:25.659008 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 23:25:25.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:25:25.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:25:25.696
  STEP: Creating a test namespace @ 01/12/25 23:25:25.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:25:25.721
  STEP: Creating a service in the namespace @ 01/12/25 23:25:25.725
  STEP: Deleting the namespace @ 01/12/25 23:25:25.744
  STEP: Waiting for the namespace to be removed. @ 01/12/25 23:25:25.769
  STEP: Recreating the namespace @ 01/12/25 23:25:31.774
  STEP: Verifying there is no service in the namespace @ 01/12/25 23:25:31.813
  I0112 23:25:31.817683 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9831" for this suite. @ 01/12/25 23:25:31.821
  STEP: Destroying namespace "nsdeletetest-4007" for this suite. @ 01/12/25 23:25:31.841
  I0112 23:25:31.845602 23 framework.go:370] Namespace nsdeletetest-4007 was already deleted
  STEP: Destroying namespace "nsdeletetest-6194" for this suite. @ 01/12/25 23:25:31.845
• [6.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/12/25 23:25:31.859
  I0112 23:25:31.859851 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:25:31.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:25:31.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:25:31.9
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:25:31.904
  STEP: Saw pod success @ 01/12/25 23:25:35.944
  I0112 23:25:35.949081 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-f9c24af5-50b3-4abd-9a30-68fa97aec681 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:25:35.962
  I0112 23:25:36.002743 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2482" for this suite. @ 01/12/25 23:25:36.008
• [4.191 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/12/25 23:25:36.051
  I0112 23:25:36.051279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:25:36.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:25:36.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:25:36.096
  STEP: creating a secret @ 01/12/25 23:25:36.1
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/12/25 23:25:36.118
  STEP: patching the secret @ 01/12/25 23:25:36.123
  STEP: deleting the secret using a LabelSelector @ 01/12/25 23:25:36.14
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/12/25 23:25:36.155
  I0112 23:25:36.159866 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4811" for this suite. @ 01/12/25 23:25:36.164
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/12/25 23:25:36.187
  I0112 23:25:36.187400 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 23:25:36.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:25:36.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:25:36.219
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/12/25 23:25:36.244
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/12/25 23:25:56.354
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/12/25 23:25:56.359
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/12/25 23:25:56.368
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/12/25 23:25:56.368
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/12/25 23:25:56.421
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/12/25 23:25:59.45
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/12/25 23:26:00.46
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/12/25 23:26:00.47
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/12/25 23:26:00.47
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/12/25 23:26:00.526
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/12/25 23:26:01.536
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/12/25 23:26:03.55
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/12/25 23:26:03.559
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/12/25 23:26:03.559
  I0112 23:26:03.606805 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3564" for this suite. @ 01/12/25 23:26:03.612
• [27.440 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/12/25 23:26:03.627
  I0112 23:26:03.627620 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:26:03.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:03.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:03.662
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:26:03.667
  STEP: Saw pod success @ 01/12/25 23:26:07.696
  I0112 23:26:07.700739 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-8f2d8a89-a6da-4f1b-bf01-64971af193e3 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:26:07.707
  I0112 23:26:07.743164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3393" for this suite. @ 01/12/25 23:26:07.747
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/12/25 23:26:07.762
  I0112 23:26:07.762854 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/12/25 23:26:07.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:07.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:07.797
  STEP: creating a policy with variables @ 01/12/25 23:26:07.816
  STEP: waiting until the marker is denied @ 01/12/25 23:26:07.848
  STEP: testing a replicated Deployment to be allowed @ 01/12/25 23:26:08.778
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/12/25 23:26:08.954
  I0112 23:26:09.410505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-799" for this suite. @ 01/12/25 23:26:09.415
• [1.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 01/12/25 23:26:09.521
  I0112 23:26:09.521629 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename containers @ 01/12/25 23:26:09.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:09.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:09.609
  I0112 23:26:11.667545 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4881" for this suite. @ 01/12/25 23:26:11.671
• [2.163 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/12/25 23:26:11.684
  I0112 23:26:11.684717 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 23:26:11.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:11.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:11.73
  I0112 23:26:13.827817 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-676" for this suite. @ 01/12/25 23:26:13.832
• [2.161 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/12/25 23:26:13.846
  I0112 23:26:13.846376 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:26:13.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:13.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:13.882
  STEP: Creating projection with secret that has name projected-secret-test-dd5692ea-ed6a-463e-ad21-9d2e6d017796 @ 01/12/25 23:26:13.887
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:26:13.9
  STEP: Saw pod success @ 01/12/25 23:26:17.931
  I0112 23:26:17.935370 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-secrets-22966494-cc91-41a1-8938-9bb0cb57dd7a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:26:17.942
  I0112 23:26:17.975110 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3018" for this suite. @ 01/12/25 23:26:17.978
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/12/25 23:26:17.991
  I0112 23:26:17.991506 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 23:26:17.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:18.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:18.036
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 23:26:18.045
  STEP: create the pod with lifecycle hook @ 01/12/25 23:26:20.083
  STEP: check poststart hook @ 01/12/25 23:26:22.108
  STEP: delete the pod with lifecycle hook @ 01/12/25 23:26:22.125
  I0112 23:26:26.171207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2833" for this suite. @ 01/12/25 23:26:26.175
• [8.200 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/12/25 23:26:26.191
  I0112 23:26:26.191857 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 23:26:26.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:26.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:26.26
  I0112 23:26:26.264474 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:26:29.347105 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8569" for this suite. @ 01/12/25 23:26:29.352
• [3.177 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/12/25 23:26:29.369
  I0112 23:26:29.369249 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 23:26:29.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:26:29.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:26:29.403
  STEP: Creating pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874 @ 01/12/25 23:26:29.408
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 23:26:31.436
  I0112 23:26:31.441144 23 container_probe.go:1749] Initial restart count of pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 is 0
  I0112 23:26:31.446368 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:33.454433 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:35.461424 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:37.468524 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:39.476371 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:41.482403 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:43.487885 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:45.493288 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:47.498623 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:49.504888 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:51.510408 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:53.516832 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:55.524640 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:57.528669 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:26:59.536923 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:01.542746 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:03.549028 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:05.556527 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:07.561151 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:09.566416 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:11.573226 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:13.578303 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:15.586012 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:17.592295 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:19.599352 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:21.605836 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:23.611493 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:25.617461 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:27.627569 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:29.635774 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:31.642480 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:33.647676 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:35.655431 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:37.661873 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:39.670575 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:41.676114 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:43.681121 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:45.686850 23 container_probe.go:1759] Get pod test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 in namespace container-probe-2874
  I0112 23:27:45.687010 23 container_probe.go:1763] Restart count of pod container-probe-2874/test-grpc-519fde9b-98ed-4acf-ab3a-e7e2a3112b59 is now 1 (1m14.245794472s elapsed)
  STEP: deleting the pod @ 01/12/25 23:27:45.687
  I0112 23:27:45.717525 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2874" for this suite. @ 01/12/25 23:27:45.722
• [76.370 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/12/25 23:27:45.739
  I0112 23:27:45.739254 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:27:45.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:27:45.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:27:45.795
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:27:45.809
  STEP: Saw pod success @ 01/12/25 23:27:49.84
  I0112 23:27:49.845097 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-a5e0782b-8209-4b9e-81f9-5445b64da9ae container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:27:49.857
  I0112 23:27:49.888044 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5947" for this suite. @ 01/12/25 23:27:49.892
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/12/25 23:27:49.906
  I0112 23:27:49.906889 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:27:49.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:27:49.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:27:49.94
  STEP: Setting up server cert @ 01/12/25 23:27:49.998
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:27:50.37
  STEP: Deploying the webhook pod @ 01/12/25 23:27:50.386
  STEP: Wait for the deployment to be ready @ 01/12/25 23:27:50.419
  I0112 23:27:50.425504 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:27:52.436
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:27:52.46
  I0112 23:27:53.460572 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/12/25 23:27:53.469
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/12/25 23:27:53.495
  I0112 23:27:53.495765 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0112 23:27:53.614577 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8044" for this suite. @ 01/12/25 23:27:53.619
  STEP: Destroying namespace "webhook-markers-1075" for this suite. @ 01/12/25 23:27:53.634
• [3.742 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/12/25 23:27:53.649
  I0112 23:27:53.649482 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 23:27:53.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:27:53.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:27:53.695
  STEP: Performing setup for networking test in namespace pod-network-test-9470 @ 01/12/25 23:27:53.699
  STEP: creating a selector @ 01/12/25 23:27:53.699
  STEP: Creating the service pods in kubernetes @ 01/12/25 23:27:53.699
  I0112 23:27:53.699660 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/12/25 23:28:07.814
  I0112 23:28:09.842435 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 23:28:09.842508 23 networking.go:42] Breadth first check of 10.1.243.232 on host 172.17.202.11...
  I0112 23:28:09.847341 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.226:9080/dial?request=hostname&protocol=http&host=10.1.243.232&port=8083&tries=1'] Namespace:pod-network-test-9470 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:28:09.847426 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:28:09.847501 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9470/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.226%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.243.232%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0112 23:28:09.931764 23 utils.go:356] Waiting for responses: map[]
  I0112 23:28:09.931836 23 utils.go:360] reached 10.1.243.232 after 0/1 tries
  I0112 23:28:09.931858 23 networking.go:42] Breadth first check of 10.1.152.116 on host 172.17.207.20...
  I0112 23:28:09.936189 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.243.226:9080/dial?request=hostname&protocol=http&host=10.1.152.116&port=8083&tries=1'] Namespace:pod-network-test-9470 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:28:09.936255 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:28:09.936299 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9470/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.243.226%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.152.116%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0112 23:28:10.040847 23 utils.go:356] Waiting for responses: map[]
  I0112 23:28:10.040894 23 utils.go:360] reached 10.1.152.116 after 0/1 tries
  I0112 23:28:10.040914 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0112 23:28:10.041068 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9470" for this suite. @ 01/12/25 23:28:10.044
• [16.417 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/12/25 23:28:10.066
  I0112 23:28:10.066816 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sched-pred @ 01/12/25 23:28:10.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:10.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:10.111
  I0112 23:28:10.116413 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0112 23:28:10.124999 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0112 23:28:10.130039 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu before test
  I0112 23:28:10.147067 23 predicates.go:957] calico-node-7qkl4 from kube-system started at 2025-01-12 22:13:28 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.147140 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 23:28:10.147158 23 predicates.go:957] netserver-0 from pod-network-test-9470 started at 2025-01-12 23:27:53 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.147171 23 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0112 23:28:10.147183 23 predicates.go:957] test-container-pod from pod-network-test-9470 started at 2025-01-12 23:28:07 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.147212 23 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0112 23:28:10.147244 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z8bgt from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:28:10.147256 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:28:10.147267 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0112 23:28:10.147278 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node ubuntu2 before test
  I0112 23:28:10.155713 23 predicates.go:957] calico-kube-controllers-5947598c79-clnft from kube-system started at 2025-01-12 22:59:52 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.155780 23 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0112 23:28:10.155812 23 predicates.go:957] calico-node-dn6q6 from kube-system started at 2025-01-12 22:13:29 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.155835 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0112 23:28:10.155847 23 predicates.go:957] coredns-79b94494c7-hs9qg from kube-system started at 2025-01-12 22:49:43 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.155858 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0112 23:28:10.155887 23 predicates.go:957] netserver-1 from pod-network-test-9470 started at 2025-01-12 23:27:53 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.155901 23 predicates.go:959] 	Container webserver ready: true, restart count 0
  I0112 23:28:10.155915 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-12 22:27:44 +0000 UTC (1 container statuses recorded)
  I0112 23:28:10.155954 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0112 23:28:10.155972 23 predicates.go:957] sonobuoy-e2e-job-d35ab0f1f1cc4190 from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:28:10.155990 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0112 23:28:10.156005 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:28:10.156019 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3c9406b0017c4274-z4bgx from sonobuoy started at 2025-01-12 22:27:52 +0000 UTC (2 container statuses recorded)
  I0112 23:28:10.156034 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0112 23:28:10.156049 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/12/25 23:28:10.156
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.181a15b8e6fba8a8], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 01/12/25 23:28:10.223
  I0112 23:28:11.200804 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2745" for this suite. @ 01/12/25 23:28:11.205
• [1.154 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/12/25 23:28:11.22
  I0112 23:28:11.220728 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:28:11.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:11.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:11.252
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:28:11.265
  STEP: Saw pod success @ 01/12/25 23:28:15.297
  I0112 23:28:15.302424 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-2ee4aeff-2690-4156-9fbd-01d8e752117b container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:28:15.311
  I0112 23:28:15.349176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4815" for this suite. @ 01/12/25 23:28:15.353
• [4.146 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/12/25 23:28:15.367
  I0112 23:28:15.367047 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:28:15.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:15.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:15.4
  STEP: Setting up server cert @ 01/12/25 23:28:15.522
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:28:16.067
  STEP: Deploying the webhook pod @ 01/12/25 23:28:16.087
  STEP: Wait for the deployment to be ready @ 01/12/25 23:28:16.123
  I0112 23:28:16.130857 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:28:18.143
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:28:18.177
  I0112 23:28:19.177906 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/12/25 23:28:19.189
  I0112 23:28:19.341015 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1387" for this suite. @ 01/12/25 23:28:19.345
  STEP: Destroying namespace "webhook-markers-8067" for this suite. @ 01/12/25 23:28:19.367
• [4.034 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/12/25 23:28:19.401
  I0112 23:28:19.401539 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename conformance-tests @ 01/12/25 23:28:19.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:19.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:19.439
  STEP: Getting node addresses @ 01/12/25 23:28:19.443
  I0112 23:28:19.443789 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0112 23:28:19.449267 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8882" for this suite. @ 01/12/25 23:28:19.452
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/12/25 23:28:19.464
  I0112 23:28:19.464599 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:28:19.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:19.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:19.511
  STEP: Creating configMap with name projected-configmap-test-volume-9fdcd988-1f97-474c-a7b3-a58c6aaf3eb8 @ 01/12/25 23:28:19.518
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:28:19.535
  STEP: Saw pod success @ 01/12/25 23:28:23.569
  I0112 23:28:23.574061 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-2243d788-fbae-46a9-99c4-0c04cd436ab9 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:28:23.579
  I0112 23:28:23.640579 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1571" for this suite. @ 01/12/25 23:28:23.647
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/12/25 23:28:23.663
  I0112 23:28:23.663389 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:28:23.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:23.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:23.709
  STEP: Saw pod success @ 01/12/25 23:28:29.829
  I0112 23:28:29.835686 23 output.go:207] Trying to get logs from node ubuntu pod client-envvars-a2c13463-2167-4794-a41e-197cdfee6ec9 container env3cont: <nil>
  STEP: delete the pod @ 01/12/25 23:28:29.844
  I0112 23:28:29.885014 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4533" for this suite. @ 01/12/25 23:28:29.889
• [6.240 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/12/25 23:28:29.903
  I0112 23:28:29.903553 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 23:28:29.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:29.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:29.935
  STEP: apply creating a deployment @ 01/12/25 23:28:29.942
  I0112 23:28:29.960727 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8033" for this suite. @ 01/12/25 23:28:29.965
• [0.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/12/25 23:28:29.978
  I0112 23:28:29.978362 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/12/25 23:28:29.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:30.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:30.022
  STEP: create the rc @ 01/12/25 23:28:30.033
  W0112 23:28:30.047436      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/12/25 23:28:35.057
  STEP: wait for all pods to be garbage collected @ 01/12/25 23:28:35.097
  STEP: Gathering metrics @ 01/12/25 23:28:40.111
  W0112 23:28:40.119727      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 23:28:40.119790 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 23:28:40.120106 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-280" for this suite. @ 01/12/25 23:28:40.124
• [10.160 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/12/25 23:28:40.138
  I0112 23:28:40.138768 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:28:40.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:40.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:40.197
  STEP: creating pod @ 01/12/25 23:28:40.201
  I0112 23:28:42.237042 23 pods.go:83] Pod pod-hostip-dba45743-a6cc-44ab-ad94-8f1db63c7a7a has hostIP: 172.17.202.11
  I0112 23:28:42.237259 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-89" for this suite. @ 01/12/25 23:28:42.242
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/12/25 23:28:42.259
  I0112 23:28:42.259316 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:28:42.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:42.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:42.3
  STEP: Creating projection with secret that has name projected-secret-test-90214ba6-f411-4762-aa58-0b96a67e05ac @ 01/12/25 23:28:42.304
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:28:42.317
  STEP: Saw pod success @ 01/12/25 23:28:46.352
  I0112 23:28:46.359219 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-secrets-3e8d2a24-8cbb-48d3-be67-4f2de584a515 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:28:46.368
  I0112 23:28:46.409814 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6846" for this suite. @ 01/12/25 23:28:46.414
• [4.178 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/12/25 23:28:46.437
  I0112 23:28:46.437503 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 23:28:46.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:28:46.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:28:46.478
  STEP: Creating pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184 @ 01/12/25 23:28:46.482
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 23:28:48.506
  I0112 23:28:48.510460 23 container_probe.go:1749] Initial restart count of pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 is 0
  I0112 23:28:48.514866 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:28:50.520399 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:28:52.528145 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:28:54.537293 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:28:56.543001 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:28:58.548137 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:00.554332 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:02.567259 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:04.573164 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:06.577918 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:08.583248 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:10.589384 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:12.594609 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:14.600974 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:16.607748 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:18.615049 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:20.620095 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:22.626061 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:24.630559 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:26.634868 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:28.639568 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:30.646240 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:32.650813 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:34.656357 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:36.663097 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:38.668861 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:40.676750 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:42.681257 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:44.685403 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:46.690430 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:48.697033 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:50.705470 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:52.711203 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:54.716241 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:56.720816 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:29:58.726448 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:00.732195 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:02.736662 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:04.744619 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:06.749775 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:08.756311 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:10.762467 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:12.768070 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:14.774505 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:16.780694 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:18.784525 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:20.789423 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:22.795159 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:24.800115 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:26.805692 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:28.811482 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:30.816984 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:32.821958 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:34.827304 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:36.834165 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:38.838767 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:40.845291 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:42.850411 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:44.855882 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:46.862097 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:48.871308 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:50.877445 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:52.881913 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:54.888205 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:56.893089 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:30:58.898221 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:00.904742 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:02.910649 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:04.915967 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:06.922732 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:08.927814 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:10.933973 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:12.940690 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:14.946064 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:16.950703 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:18.956163 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:20.960924 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:22.965037 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:24.970917 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:26.977720 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:28.982912 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:30.988480 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:32.993176 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:34.998842 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:37.004249 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:39.009793 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:41.015272 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:43.019791 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:45.024462 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:47.029254 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:49.034269 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:51.039677 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:53.047486 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:55.053355 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:57.058861 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:31:59.065187 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:01.072062 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:03.076642 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:05.083413 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:07.090200 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:09.095832 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:11.100922 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:13.105017 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:15.109021 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:17.114306 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:19.120302 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:21.125669 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:23.130237 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:25.134793 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:27.139249 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:29.143892 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:31.150192 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:33.156320 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:35.161821 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:37.168291 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:39.174859 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:41.180551 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:43.185330 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:45.190590 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  I0112 23:32:47.198507 23 container_probe.go:1759] Get pod busybox-7c719d82-fdb8-4930-83a4-b5401a8e3455 in namespace container-probe-1184
  STEP: deleting the pod @ 01/12/25 23:32:49.199
  I0112 23:32:49.237559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1184" for this suite. @ 01/12/25 23:32:49.242
• [242.820 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/12/25 23:32:49.257
  I0112 23:32:49.257410 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:32:49.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:32:49.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:32:49.292
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 23:32:49.297
  I0112 23:32:49.297887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-6979 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0112 23:32:49.393625 23 builder.go:146] stderr: ""
  I0112 23:32:49.393739 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/12/25 23:32:49.393
  I0112 23:32:49.393879 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-6979 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0112 23:32:49.484721 23 builder.go:146] stderr: ""
  I0112 23:32:49.484785 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 23:32:49.484
  I0112 23:32:49.489478 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-6979 delete pods e2e-test-httpd-pod'
  I0112 23:32:51.153586 23 builder.go:146] stderr: ""
  I0112 23:32:51.153659 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0112 23:32:51.153789 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6979" for this suite. @ 01/12/25 23:32:51.158
• [1.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/12/25 23:32:51.174
  I0112 23:32:51.174802 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename apf @ 01/12/25 23:32:51.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:32:51.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:32:51.204
  STEP: getting /apis @ 01/12/25 23:32:51.208
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/12/25 23:32:51.213
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/12/25 23:32:51.214
  STEP: creating @ 01/12/25 23:32:51.216
  STEP: getting @ 01/12/25 23:32:51.25
  STEP: listing @ 01/12/25 23:32:51.254
  STEP: watching @ 01/12/25 23:32:51.258
  I0112 23:32:51.258502 23 flowcontrol.go:620] starting watch
  STEP: patching @ 01/12/25 23:32:51.26
  STEP: updating @ 01/12/25 23:32:51.284
  I0112 23:32:51.301080 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/12/25 23:32:51.301
  STEP: patching /status @ 01/12/25 23:32:51.304
  STEP: updating /status @ 01/12/25 23:32:51.323
  STEP: deleting @ 01/12/25 23:32:51.346
  STEP: deleting a collection @ 01/12/25 23:32:51.378
  I0112 23:32:51.410025 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8674" for this suite. @ 01/12/25 23:32:51.414
• [0.260 seconds]
------------------------------
SSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 01/12/25 23:32:51.435
  I0112 23:32:51.435260 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename volumeattachment @ 01/12/25 23:32:51.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:32:51.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:32:51.517
  STEP: Create VolumeAttachment "va-e2e-d4slk" on node "ubuntu" @ 01/12/25 23:32:51.538
  STEP: Get VolumeAttachment "va-e2e-d4slk" on node "ubuntu" @ 01/12/25 23:32:51.548
  STEP: Patch VolumeAttachment "va-e2e-d4slk" on node "ubuntu" @ 01/12/25 23:32:51.552
  STEP: List VolumeAttachments with "va-e2e-d4slk=patched" label @ 01/12/25 23:32:51.577
  STEP: Delete VolumeAttachment "va-e2e-d4slk" on node "ubuntu" @ 01/12/25 23:32:51.581
  STEP: Confirm deletion of VolumeAttachment "va-e2e-d4slk" on node "ubuntu" @ 01/12/25 23:32:51.594
  STEP: Create VolumeAttachment "va-e2e-gcwnw" on node "ubuntu" @ 01/12/25 23:32:51.602
  STEP: Update the VolumeAttachment "va-e2e-gcwnw" on node "ubuntu" with label "va-e2e=updated" @ 01/12/25 23:32:51.631
  STEP: Create VolumeAttachment "va-e2e-64wn9" on node "ubuntu2" @ 01/12/25 23:32:51.659
  STEP: Update the VolumeAttachment "va-e2e-64wn9" on node "ubuntu2" with label "va-e2e=updated" @ 01/12/25 23:32:51.686
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/12/25 23:32:51.709
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/12/25 23:32:51.749
  I0112 23:32:51.753188 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9461" for this suite. @ 01/12/25 23:32:51.757
• [0.337 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/12/25 23:32:51.772
  I0112 23:32:51.772667 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:32:51.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:32:51.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:32:51.802
  STEP: Creating configMap with name configmap-test-volume-map-d348772e-b3ac-4155-b630-6ddc08ae1bec @ 01/12/25 23:32:51.807
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:32:51.82
  STEP: Saw pod success @ 01/12/25 23:32:55.849
  I0112 23:32:55.853478 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-7e595aec-0234-4c16-a880-edac4ebc384c container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:32:55.867
  I0112 23:32:55.901163 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4457" for this suite. @ 01/12/25 23:32:55.905
• [4.147 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/12/25 23:32:55.919
  I0112 23:32:55.919312 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 23:32:55.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:32:55.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:32:55.961
  STEP: Given a ReplicationController is created @ 01/12/25 23:32:55.966
  STEP: When the matched label of one of its pods change @ 01/12/25 23:32:55.978
  I0112 23:32:55.982084 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0112 23:33:00.989475 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/12/25 23:33:01.012
  I0112 23:33:02.022481 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2188" for this suite. @ 01/12/25 23:33:02.027
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/12/25 23:33:02.05
  I0112 23:33:02.050330 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:33:02.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:02.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:02.079
  STEP: Creating configMap with name projected-configmap-test-volume-facbfa43-0eb1-44de-b17b-cc42072c0122 @ 01/12/25 23:33:02.083
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:33:02.103
  STEP: Saw pod success @ 01/12/25 23:33:06.149
  I0112 23:33:06.155317 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-8e8508fb-5526-4bd3-82f3-2520fdb4055f container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:33:06.161
  I0112 23:33:06.220186 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4998" for this suite. @ 01/12/25 23:33:06.224
• [4.188 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/12/25 23:33:06.238
  I0112 23:33:06.238279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:33:06.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:06.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:06.278
  STEP: Creating the pod @ 01/12/25 23:33:06.285
  I0112 23:33:08.844479 23 pod_client.go:173] Successfully updated pod "labelsupdate799fca32-1f3b-4b16-a0b6-30eb4be25c44"
  I0112 23:33:12.874413 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1975" for this suite. @ 01/12/25 23:33:12.878
• [6.663 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 01/12/25 23:33:12.901
  I0112 23:33:12.901719 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 23:33:12.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:12.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:12.949
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/12/25 23:33:12.953
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/12/25 23:33:12.953
  STEP: creating a pod to probe DNS @ 01/12/25 23:33:12.953
  STEP: submitting the pod to kubernetes @ 01/12/25 23:33:12.953
  STEP: retrieving the pod @ 01/12/25 23:33:16.986
  STEP: looking for the results for each expected name from probers @ 01/12/25 23:33:16.992
  I0112 23:33:17.013782 23 dns_common.go:546] DNS probes using dns-1314/dns-test-190e027a-2245-46a1-ac95-b0fb87e9135f succeeded

  STEP: deleting the pod @ 01/12/25 23:33:17.013
  I0112 23:33:17.049122 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1314" for this suite. @ 01/12/25 23:33:17.053
• [4.171 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/12/25 23:33:17.072
  I0112 23:33:17.073024 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename var-expansion @ 01/12/25 23:33:17.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:17.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:17.106
  STEP: Creating a pod to test substitution in volume subpath @ 01/12/25 23:33:17.111
  STEP: Saw pod success @ 01/12/25 23:33:21.153
  I0112 23:33:21.157260 23 output.go:207] Trying to get logs from node ubuntu pod var-expansion-5ddcc6b9-517d-46d3-b677-a599bab9890d container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:33:21.163
  I0112 23:33:21.196148 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7817" for this suite. @ 01/12/25 23:33:21.2
• [4.144 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/12/25 23:33:21.216
  I0112 23:33:21.216620 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:33:21.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:21.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:21.258
  STEP: Creating secret with name secret-test-map-b8c9396f-9f20-4126-bd36-a82f049f2155 @ 01/12/25 23:33:21.263
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:33:21.275
  STEP: Saw pod success @ 01/12/25 23:33:25.303
  I0112 23:33:25.307052 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-2edc0341-8db7-46fb-8313-0b4166b4890b container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:33:25.313
  I0112 23:33:25.343830 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7687" for this suite. @ 01/12/25 23:33:25.347
• [4.145 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/12/25 23:33:25.361
  I0112 23:33:25.361885 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:33:25.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:25.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:25.4
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:33:25.404
  STEP: Saw pod success @ 01/12/25 23:33:29.44
  I0112 23:33:29.447857 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-ee5f72ed-fe99-4024-8aed-7ee70b4706ac container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:33:29.457
  I0112 23:33:29.489489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7325" for this suite. @ 01/12/25 23:33:29.494
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/12/25 23:33:29.515
  I0112 23:33:29.515943 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:33:29.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:29.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:29.559
  STEP: Creating the pod @ 01/12/25 23:33:29.563
  I0112 23:33:32.133866 23 pod_client.go:173] Successfully updated pod "annotationupdate4f7ba8bc-0259-4eb0-bd5c-3bf9692a2c61"
  I0112 23:33:34.151603 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5140" for this suite. @ 01/12/25 23:33:34.156
• [4.664 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/12/25 23:33:34.18
  I0112 23:33:34.180529 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:33:34.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:33:34.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:33:34.219
  STEP: creating a replication controller @ 01/12/25 23:33:34.235
  I0112 23:33:34.235113 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 create -f -'
  I0112 23:33:34.391776 23 builder.go:146] stderr: ""
  I0112 23:33:34.391840 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 23:33:34.391
  I0112 23:33:34.392108 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:34.484592 23 builder.go:146] stderr: ""
  I0112 23:33:34.484657 23 builder.go:147] stdout: "update-demo-nautilus-85dmf update-demo-nautilus-btv5c "
  I0112 23:33:34.484764 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:34.574681 23 builder.go:146] stderr: ""
  I0112 23:33:34.574778 23 builder.go:147] stdout: ""
  I0112 23:33:34.574803 23 kubectl.go:2499] update-demo-nautilus-85dmf is created but not running
  I0112 23:33:39.577070 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:39.702064 23 builder.go:146] stderr: ""
  I0112 23:33:39.702128 23 builder.go:147] stdout: "update-demo-nautilus-85dmf update-demo-nautilus-btv5c "
  I0112 23:33:39.702194 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:39.812876 23 builder.go:146] stderr: ""
  I0112 23:33:39.812968 23 builder.go:147] stdout: ""
  I0112 23:33:39.812992 23 kubectl.go:2499] update-demo-nautilus-85dmf is created but not running
  I0112 23:33:44.813296 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:44.933433 23 builder.go:146] stderr: ""
  I0112 23:33:44.933507 23 builder.go:147] stdout: "update-demo-nautilus-85dmf update-demo-nautilus-btv5c "
  I0112 23:33:44.933577 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:45.020875 23 builder.go:146] stderr: ""
  I0112 23:33:45.020997 23 builder.go:147] stdout: ""
  I0112 23:33:45.021016 23 kubectl.go:2499] update-demo-nautilus-85dmf is created but not running
  I0112 23:33:50.024035 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:50.107134 23 builder.go:146] stderr: ""
  I0112 23:33:50.107235 23 builder.go:147] stdout: "update-demo-nautilus-85dmf update-demo-nautilus-btv5c "
  I0112 23:33:50.107314 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:50.186249 23 builder.go:146] stderr: ""
  I0112 23:33:50.186319 23 builder.go:147] stdout: "true"
  I0112 23:33:50.186385 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:33:50.261814 23 builder.go:146] stderr: ""
  I0112 23:33:50.261897 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:33:50.261947 23 kubectl.go:2390] validating pod update-demo-nautilus-85dmf
  I0112 23:33:50.267277 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:33:50.267379 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:33:50.267394 23 kubectl.go:2517] update-demo-nautilus-85dmf is verified up and running
  I0112 23:33:50.267447 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-btv5c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:50.344562 23 builder.go:146] stderr: ""
  I0112 23:33:50.344617 23 builder.go:147] stdout: "true"
  I0112 23:33:50.344720 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-btv5c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:33:50.419991 23 builder.go:146] stderr: ""
  I0112 23:33:50.420060 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:33:50.420116 23 kubectl.go:2390] validating pod update-demo-nautilus-btv5c
  I0112 23:33:50.426307 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:33:50.426400 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:33:50.426414 23 kubectl.go:2517] update-demo-nautilus-btv5c is verified up and running
  STEP: scaling down the replication controller @ 01/12/25 23:33:50.426
  I0112 23:33:50.428495 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0112 23:33:50.428613 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0112 23:33:51.539441 23 builder.go:146] stderr: ""
  I0112 23:33:51.539484 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 23:33:51.539
  I0112 23:33:51.539596 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:51.622848 23 builder.go:146] stderr: ""
  I0112 23:33:51.622920 23 builder.go:147] stdout: "update-demo-nautilus-85dmf update-demo-nautilus-btv5c "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/12/25 23:33:51.622
  I0112 23:33:56.627204 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:56.703784 23 builder.go:146] stderr: ""
  I0112 23:33:56.703838 23 builder.go:147] stdout: "update-demo-nautilus-85dmf "
  I0112 23:33:56.703903 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:56.780889 23 builder.go:146] stderr: ""
  I0112 23:33:56.780988 23 builder.go:147] stdout: "true"
  I0112 23:33:56.781054 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:33:56.858865 23 builder.go:146] stderr: ""
  I0112 23:33:56.858964 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:33:56.858990 23 kubectl.go:2390] validating pod update-demo-nautilus-85dmf
  I0112 23:33:56.863880 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:33:56.863988 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:33:56.864011 23 kubectl.go:2517] update-demo-nautilus-85dmf is verified up and running
  STEP: scaling up the replication controller @ 01/12/25 23:33:56.864
  I0112 23:33:56.865901 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0112 23:33:56.866035 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0112 23:33:57.970892 23 builder.go:146] stderr: ""
  I0112 23:33:57.970996 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 23:33:57.971
  I0112 23:33:57.971157 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:33:58.077592 23 builder.go:146] stderr: ""
  I0112 23:33:58.077665 23 builder.go:147] stdout: "update-demo-nautilus-5kpxl update-demo-nautilus-85dmf "
  I0112 23:33:58.077720 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-5kpxl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:33:58.149704 23 builder.go:146] stderr: ""
  I0112 23:33:58.149774 23 builder.go:147] stdout: ""
  I0112 23:33:58.149797 23 kubectl.go:2499] update-demo-nautilus-5kpxl is created but not running
  I0112 23:34:03.151038 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:34:03.242850 23 builder.go:146] stderr: ""
  I0112 23:34:03.242904 23 builder.go:147] stdout: "update-demo-nautilus-5kpxl update-demo-nautilus-85dmf "
  I0112 23:34:03.243010 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-5kpxl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:34:03.326074 23 builder.go:146] stderr: ""
  I0112 23:34:03.326168 23 builder.go:147] stdout: "true"
  I0112 23:34:03.326265 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-5kpxl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:34:03.412992 23 builder.go:146] stderr: ""
  I0112 23:34:03.413066 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:34:03.413090 23 kubectl.go:2390] validating pod update-demo-nautilus-5kpxl
  I0112 23:34:03.419173 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:34:03.419263 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:34:03.419277 23 kubectl.go:2517] update-demo-nautilus-5kpxl is verified up and running
  I0112 23:34:03.419358 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:34:03.501053 23 builder.go:146] stderr: ""
  I0112 23:34:03.501140 23 builder.go:147] stdout: "true"
  I0112 23:34:03.501217 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods update-demo-nautilus-85dmf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:34:03.577975 23 builder.go:146] stderr: ""
  I0112 23:34:03.578043 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:34:03.578066 23 kubectl.go:2390] validating pod update-demo-nautilus-85dmf
  I0112 23:34:03.582180 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:34:03.582271 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:34:03.582297 23 kubectl.go:2517] update-demo-nautilus-85dmf is verified up and running
  STEP: using delete to clean up resources @ 01/12/25 23:34:03.582
  I0112 23:34:03.582402 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 delete --grace-period=0 --force -f -'
  I0112 23:34:03.671404 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:34:03.671484 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0112 23:34:03.671559 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get rc,svc -l name=update-demo --no-headers'
  I0112 23:34:03.813894 23 builder.go:146] stderr: "No resources found in kubectl-5027 namespace.\n"
  I0112 23:34:03.814012 23 builder.go:147] stdout: ""
  I0112 23:34:03.814072 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-5027 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0112 23:34:03.915550 23 builder.go:146] stderr: ""
  I0112 23:34:03.915592 23 builder.go:147] stdout: ""
  I0112 23:34:03.915816 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5027" for this suite. @ 01/12/25 23:34:03.921
• [29.805 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/12/25 23:34:03.992
  I0112 23:34:03.992858 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 23:34:03.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:04.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:04.034
  STEP: Creating replication controller my-hostname-basic-7ba24e58-c21e-4036-95b2-e3fc774e2b3e @ 01/12/25 23:34:04.039
  I0112 23:34:04.070342 23 resource.go:87] Pod name my-hostname-basic-7ba24e58-c21e-4036-95b2-e3fc774e2b3e: Found 0 pods out of 1
  I0112 23:34:09.077151 23 resource.go:87] Pod name my-hostname-basic-7ba24e58-c21e-4036-95b2-e3fc774e2b3e: Found 1 pods out of 1
  I0112 23:34:09.077211 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-7ba24e58-c21e-4036-95b2-e3fc774e2b3e" are running
  I0112 23:34:09.081727 23 rc.go:523] Pod "my-hostname-basic-7ba24e58-c21e-4036-95b2-e3fc774e2b3e-q467f" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:34:05 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:34:04 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:34:05 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:34:05 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-12 23:34:04 +0000 UTC Reason: Message:}])
  I0112 23:34:09.081813 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/12/25 23:34:09.081
  I0112 23:34:09.095918 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3440" for this suite. @ 01/12/25 23:34:09.1
• [5.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/12/25 23:34:09.123
  I0112 23:34:09.123522 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:34:09.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:09.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:09.165
  STEP: Counting existing ResourceQuota @ 01/12/25 23:34:09.168
  STEP: Creating a ResourceQuota @ 01/12/25 23:34:14.173
  STEP: Ensuring resource quota status is calculated @ 01/12/25 23:34:14.189
  STEP: Creating a Pod that fits quota @ 01/12/25 23:34:16.194
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/12/25 23:34:16.229
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/12/25 23:34:18.234
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/12/25 23:34:18.238
  STEP: Ensuring a pod cannot update its resource requirements @ 01/12/25 23:34:18.242
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/12/25 23:34:18.247
  STEP: Deleting the pod @ 01/12/25 23:34:20.256
  STEP: Ensuring resource quota status released the pod usage @ 01/12/25 23:34:20.29
  I0112 23:34:22.296879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2303" for this suite. @ 01/12/25 23:34:22.303
• [13.196 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 01/12/25 23:34:22.319
  I0112 23:34:22.320019 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename job @ 01/12/25 23:34:22.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:22.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:22.358
  STEP: Creating a suspended job @ 01/12/25 23:34:22.366
  STEP: Patching the Job @ 01/12/25 23:34:22.385
  STEP: Watching for Job to be patched @ 01/12/25 23:34:22.429
  I0112 23:34:22.432235 23 job.go:1309] Event ADDED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w] and annotations: map[]
  I0112 23:34:22.432368 23 job.go:1309] Event MODIFIED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w] and annotations: map[]
  I0112 23:34:22.432405 23 job.go:1312] Event MODIFIED found for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[]
  STEP: Updating the job @ 01/12/25 23:34:22.432
  STEP: Watching for Job to be updated @ 01/12/25 23:34:22.449
  I0112 23:34:22.451483 23 job.go:1312] Event MODIFIED found for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  I0112 23:34:22.451556 23 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/12/25 23:34:22.451
  I0112 23:34:22.455201 23 job.go:1187] Job: e2e-jxd7w as labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched]
  STEP: Waiting for job to complete @ 01/12/25 23:34:22.455
  STEP: Delete a job collection with a labelselector @ 01/12/25 23:34:32.495
  STEP: Watching for Job to be deleted @ 01/12/25 23:34:32.514
  I0112 23:34:32.516232 23 job.go:1309] Event MODIFIED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  I0112 23:34:32.516331 23 job.go:1309] Event MODIFIED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  I0112 23:34:32.516371 23 job.go:1309] Event MODIFIED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  I0112 23:34:32.516656 23 job.go:1309] Event MODIFIED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  I0112 23:34:32.516698 23 job.go:1309] Event MODIFIED observed for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  I0112 23:34:32.516728 23 job.go:1312] Event DELETED found for Job e2e-jxd7w in namespace job-4890 with labels: map[e2e-job-label:e2e-jxd7w e2e-jxd7w:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/12/25 23:34:32.516
  I0112 23:34:32.520656 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4890" for this suite. @ 01/12/25 23:34:32.559
• [10.276 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/12/25 23:34:32.596
  I0112 23:34:32.596638 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/12/25 23:34:32.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:32.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:32.666
  STEP: mirroring a new custom Endpoint @ 01/12/25 23:34:32.707
  I0112 23:34:32.723470 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/12/25 23:34:34.728
  I0112 23:34:34.760450 23 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 01/12/25 23:34:36.765
  I0112 23:34:36.781756 23 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0112 23:34:38.788164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7285" for this suite. @ 01/12/25 23:34:38.794
• [6.211 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/12/25 23:34:38.808
  I0112 23:34:38.808116 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename lease-test @ 01/12/25 23:34:38.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:38.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:38.852
  I0112 23:34:38.961790 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5718" for this suite. @ 01/12/25 23:34:38.965
• [0.169 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/12/25 23:34:38.977
  I0112 23:34:38.977570 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:34:38.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:39.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:39.016
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/12/25 23:34:39.02
  STEP: Saw pod success @ 01/12/25 23:34:43.054
  I0112 23:34:43.061292 23 output.go:207] Trying to get logs from node ubuntu pod pod-a6d0f6b1-d44e-4610-86c3-02be53f8c3e6 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:34:43.069
  I0112 23:34:43.102172 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2760" for this suite. @ 01/12/25 23:34:43.106
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 01/12/25 23:34:43.121
  I0112 23:34:43.121387 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename containers @ 01/12/25 23:34:43.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:43.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:43.161
  STEP: Creating a pod to test override all @ 01/12/25 23:34:43.166
  STEP: Saw pod success @ 01/12/25 23:34:47.207
  I0112 23:34:47.213257 23 output.go:207] Trying to get logs from node ubuntu pod client-containers-8041af4f-345e-4137-ba32-c7a014af3cd9 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:34:47.222
  I0112 23:34:47.257158 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-151" for this suite. @ 01/12/25 23:34:47.264
• [4.158 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/12/25 23:34:47.279
  I0112 23:34:47.279286 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:34:47.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:47.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:47.313
  STEP: Creating configMap with name projected-configmap-test-volume-map-2a4ed491-f8e8-44d7-a5f9-87f845445f38 @ 01/12/25 23:34:47.324
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:34:47.337
  STEP: Saw pod success @ 01/12/25 23:34:51.369
  I0112 23:34:51.373691 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-22925ccc-8532-42f0-b918-d131b9feb16d container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:34:51.38
  I0112 23:34:51.414628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9225" for this suite. @ 01/12/25 23:34:51.419
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 01/12/25 23:34:51.432
  I0112 23:34:51.432401 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 23:34:51.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:34:51.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:34:51.471
  STEP: Creating service test in namespace statefulset-1504 @ 01/12/25 23:34:51.475
  STEP: Creating a new StatefulSet @ 01/12/25 23:34:51.487
  I0112 23:34:51.531714 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I0112 23:35:01.537558 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:35:01.537607 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:35:01.537622 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/12/25 23:35:01.551
  I0112 23:35:01.575204 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/12/25 23:35:01.575
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/12/25 23:35:11.59
  STEP: Performing a canary update @ 01/12/25 23:35:11.59
  I0112 23:35:11.610695 23 statefulset.go:2510] Updating stateful set ss2
  I0112 23:35:11.620591 23 wait.go:74] Waiting for Pod statefulset-1504/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/12/25 23:35:21.625
  I0112 23:35:21.848518 23 wait.go:40] Found 2 stateful pods, waiting for 3
  I0112 23:35:31.849707 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:35:31.849836 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:35:31.849874 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/12/25 23:35:31.86
  I0112 23:35:31.878499 23 statefulset.go:2510] Updating stateful set ss2
  I0112 23:35:31.888180 23 wait.go:74] Waiting for Pod statefulset-1504/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0112 23:35:41.910355 23 statefulset.go:2510] Updating stateful set ss2
  I0112 23:35:41.920146 23 wait.go:56] Waiting for StatefulSet statefulset-1504/ss2 to complete update
  I0112 23:35:41.920250 23 wait.go:63] Waiting for Pod statefulset-1504/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0112 23:35:51.930661 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1504
  I0112 23:35:51.936013 23 rest.go:152] Scaling statefulset ss2 to 0
  I0112 23:36:01.966134 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0112 23:36:01.970099 23 rest.go:90] Deleting statefulset ss2
  I0112 23:36:01.992666 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1504" for this suite. @ 01/12/25 23:36:01.998
• [70.601 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/12/25 23:36:02.033
  I0112 23:36:02.033806 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 23:36:02.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:02.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:02.074
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 23:36:02.085
  STEP: create the pod with lifecycle hook @ 01/12/25 23:36:04.113
  STEP: check poststart hook @ 01/12/25 23:36:06.141
  STEP: delete the pod with lifecycle hook @ 01/12/25 23:36:06.149
  I0112 23:36:10.178802 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1089" for this suite. @ 01/12/25 23:36:10.184
• [8.165 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/12/25 23:36:10.198
  I0112 23:36:10.198966 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename init-container @ 01/12/25 23:36:10.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:10.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:10.232
  STEP: creating the pod @ 01/12/25 23:36:10.237
  I0112 23:36:10.237483 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0112 23:36:14.110388 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6387" for this suite. @ 01/12/25 23:36:14.116
• [3.938 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/12/25 23:36:14.137
  I0112 23:36:14.137043 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:36:14.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:14.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:14.182
  STEP: creating a replication controller @ 01/12/25 23:36:14.188
  I0112 23:36:14.188713 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 create -f -'
  I0112 23:36:14.352597 23 builder.go:146] stderr: ""
  I0112 23:36:14.352662 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/12/25 23:36:14.352
  I0112 23:36:14.352770 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:36:14.436034 23 builder.go:146] stderr: ""
  I0112 23:36:14.436096 23 builder.go:147] stdout: "update-demo-nautilus-67vzn update-demo-nautilus-6chvx "
  I0112 23:36:14.436152 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods update-demo-nautilus-67vzn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:36:14.519047 23 builder.go:146] stderr: ""
  I0112 23:36:14.519113 23 builder.go:147] stdout: ""
  I0112 23:36:14.519129 23 kubectl.go:2499] update-demo-nautilus-67vzn is created but not running
  I0112 23:36:19.520836 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0112 23:36:19.618704 23 builder.go:146] stderr: ""
  I0112 23:36:19.618783 23 builder.go:147] stdout: "update-demo-nautilus-67vzn update-demo-nautilus-6chvx "
  I0112 23:36:19.618860 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods update-demo-nautilus-67vzn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:36:19.699604 23 builder.go:146] stderr: ""
  I0112 23:36:19.699701 23 builder.go:147] stdout: "true"
  I0112 23:36:19.699785 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods update-demo-nautilus-67vzn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:36:19.776297 23 builder.go:146] stderr: ""
  I0112 23:36:19.776354 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:36:19.776370 23 kubectl.go:2390] validating pod update-demo-nautilus-67vzn
  I0112 23:36:19.780900 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:36:19.780995 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:36:19.781012 23 kubectl.go:2517] update-demo-nautilus-67vzn is verified up and running
  I0112 23:36:19.781058 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods update-demo-nautilus-6chvx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0112 23:36:19.847951 23 builder.go:146] stderr: ""
  I0112 23:36:19.848024 23 builder.go:147] stdout: "true"
  I0112 23:36:19.848093 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods update-demo-nautilus-6chvx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0112 23:36:19.916893 23 builder.go:146] stderr: ""
  I0112 23:36:19.917019 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0112 23:36:19.917034 23 kubectl.go:2390] validating pod update-demo-nautilus-6chvx
  I0112 23:36:19.922232 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0112 23:36:19.922325 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0112 23:36:19.922364 23 kubectl.go:2517] update-demo-nautilus-6chvx is verified up and running
  STEP: using delete to clean up resources @ 01/12/25 23:36:19.922
  I0112 23:36:19.922483 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 delete --grace-period=0 --force -f -'
  I0112 23:36:20.018198 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0112 23:36:20.018272 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0112 23:36:20.018337 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get rc,svc -l name=update-demo --no-headers'
  I0112 23:36:20.135920 23 builder.go:146] stderr: "No resources found in kubectl-757 namespace.\n"
  I0112 23:36:20.136225 23 builder.go:147] stdout: ""
  I0112 23:36:20.136302 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-757 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0112 23:36:20.241389 23 builder.go:146] stderr: ""
  I0112 23:36:20.241465 23 builder.go:147] stdout: ""
  I0112 23:36:20.241588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-757" for this suite. @ 01/12/25 23:36:20.247
• [6.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/12/25 23:36:20.263
  I0112 23:36:20.263743 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename proxy @ 01/12/25 23:36:20.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:20.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:20.316
  I0112 23:36:20.319975 23 proxy.go:293] Creating pod...
  I0112 23:36:22.369513 23 proxy.go:317] Creating service...
  I0112 23:36:22.392337 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/DELETE
  I0112 23:36:22.397405 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 23:36:22.397498 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/GET
  I0112 23:36:22.402993 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0112 23:36:22.403145 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/HEAD
  I0112 23:36:22.408311 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0112 23:36:22.408379 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/OPTIONS
  I0112 23:36:22.413571 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 23:36:22.413695 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/PATCH
  I0112 23:36:22.418577 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 23:36:22.418658 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/POST
  I0112 23:36:22.423430 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 23:36:22.423486 23 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/pods/agnhost/proxy/some/path/with/PUT
  I0112 23:36:22.428114 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 23:36:22.428222 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/DELETE
  I0112 23:36:22.435327 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0112 23:36:22.435449 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/GET
  I0112 23:36:22.442491 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0112 23:36:22.442553 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/HEAD
  I0112 23:36:22.449117 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0112 23:36:22.449201 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/OPTIONS
  I0112 23:36:22.455895 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0112 23:36:22.456037 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/PATCH
  I0112 23:36:22.462385 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0112 23:36:22.462460 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/POST
  I0112 23:36:22.468886 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0112 23:36:22.468999 23 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-772/services/test-service/proxy/some/path/with/PUT
  I0112 23:36:22.475425 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0112 23:36:22.475599 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-772" for this suite. @ 01/12/25 23:36:22.48
• [2.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/12/25 23:36:22.493
  I0112 23:36:22.493611 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 23:36:22.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:22.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:22.524
  I0112 23:36:26.561638 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4428" for this suite. @ 01/12/25 23:36:26.566
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/12/25 23:36:26.582
  I0112 23:36:26.582126 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:36:26.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:26.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:26.64
  STEP: Creating configMap configmap-491/configmap-test-c1454062-850c-4ff2-99ab-3a4ca685f931 @ 01/12/25 23:36:26.652
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:36:26.665
  STEP: Saw pod success @ 01/12/25 23:36:30.7
  I0112 23:36:30.706492 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-c0ee31b1-27da-4189-951b-4b79289b88be container env-test: <nil>
  STEP: delete the pod @ 01/12/25 23:36:30.718
  I0112 23:36:30.758631 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-491" for this suite. @ 01/12/25 23:36:30.762
• [4.201 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/12/25 23:36:30.783
  I0112 23:36:30.783098 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/12/25 23:36:30.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:30.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:30.818
  I0112 23:36:30.829346 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5878" for this suite. @ 01/12/25 23:36:30.834
• [0.073 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/12/25 23:36:30.856
  I0112 23:36:30.856179 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replication-controller @ 01/12/25 23:36:30.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:30.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:30.897
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/12/25 23:36:30.903
  STEP: When a replication controller with a matching selector is created @ 01/12/25 23:36:32.932
  STEP: Then the orphan pod is adopted @ 01/12/25 23:36:32.945
  I0112 23:36:33.958226 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7211" for this suite. @ 01/12/25 23:36:33.963
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/12/25 23:36:33.984
  I0112 23:36:33.984102 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:36:33.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:34.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:34.034
  STEP: Setting up server cert @ 01/12/25 23:36:34.095
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:36:34.556
  STEP: Deploying the webhook pod @ 01/12/25 23:36:34.572
  STEP: Wait for the deployment to be ready @ 01/12/25 23:36:34.596
  I0112 23:36:34.603692 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:36:36.623
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:36:36.653
  I0112 23:36:37.653425 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/12/25 23:36:37.66
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/12/25 23:36:37.689
  STEP: Creating a dummy validating-webhook-configuration object @ 01/12/25 23:36:37.71
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/12/25 23:36:37.726
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/12/25 23:36:37.739
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/12/25 23:36:37.756
  I0112 23:36:37.933368 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-105" for this suite. @ 01/12/25 23:36:37.937
  STEP: Destroying namespace "webhook-markers-3514" for this suite. @ 01/12/25 23:36:37.95
• [3.993 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/12/25 23:36:37.977
  I0112 23:36:37.977625 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:36:37.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:38.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:38.018
  STEP: creating service in namespace services-1729 @ 01/12/25 23:36:38.021
  STEP: creating service affinity-clusterip in namespace services-1729 @ 01/12/25 23:36:38.021
  STEP: creating replication controller affinity-clusterip in namespace services-1729 @ 01/12/25 23:36:38.043
  I0112 23:36:38.077212      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1729, replica count: 3
  I0112 23:36:41.127900      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:36:41.135087 23 resource.go:361] Creating new exec pod
  I0112 23:36:44.166123 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1729 exec execpod-affinitylfh4v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0112 23:36:44.315132 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.126) 80 port [tcp/http] succeeded!\n"
  I0112 23:36:44.315201 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:36:44.315322 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1729 exec execpod-affinitylfh4v -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
  I0112 23:36:44.485819 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
  I0112 23:36:44.485896 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:36:44.486092 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1729 exec execpod-affinitylfh4v -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.126:80/ ; done'
  I0112 23:36:44.762910 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.126:80/\n"
  I0112 23:36:44.763067 23 builder.go:147] stdout: "\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj\naffinity-clusterip-5g8vj"
  I0112 23:36:44.763098 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763118 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763137 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763157 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763174 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763193 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763211 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763230 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763257 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763275 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763293 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763316 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763334 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763352 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763371 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763390 23 service.go:242] Received response from host: affinity-clusterip-5g8vj
  I0112 23:36:44.763499 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1729, will wait for the garbage collector to delete the pods @ 01/12/25 23:36:44.805
  I0112 23:36:44.888407 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 27.149171ms
  I0112 23:36:44.989331 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.921621ms
  I0112 23:36:48.435865 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1729" for this suite. @ 01/12/25 23:36:48.44
• [10.477 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/12/25 23:36:48.454
  I0112 23:36:48.454417 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:36:48.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:48.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:48.504
  STEP: creating a Pod with a static label @ 01/12/25 23:36:48.512
  STEP: watching for Pod to be ready @ 01/12/25 23:36:48.53
  I0112 23:36:48.532341 23 pods.go:945] observed Pod pod-test in namespace pods-3159 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0112 23:36:48.543911 23 pods.go:945] observed Pod pod-test in namespace pods-3159 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  }]
  I0112 23:36:48.569189 23 pods.go:945] observed Pod pod-test in namespace pods-3159 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  }]
  I0112 23:36:49.126301 23 pods.go:945] observed Pod pod-test in namespace pods-3159 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  }]
  I0112 23:36:50.027024 23 pods.go:948] Found Pod pod-test in namespace pods-3159 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:50 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-12 23:36:48 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/12/25 23:36:50.031
  STEP: getting the Pod and ensuring that it's patched @ 01/12/25 23:36:50.051
  STEP: replacing the Pod's status Ready condition to False @ 01/12/25 23:36:50.057
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/12/25 23:36:50.077
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/12/25 23:36:50.078
  STEP: watching for the Pod to be deleted @ 01/12/25 23:36:50.096
  I0112 23:36:50.098703 23 pods.go:1058] observed event type MODIFIED
  I0112 23:36:52.048584 23 pods.go:1058] observed event type MODIFIED
  I0112 23:36:52.311515 23 pods.go:1058] observed event type MODIFIED
  I0112 23:36:52.454978 23 pods.go:1058] observed event type MODIFIED
  I0112 23:36:53.068235 23 pods.go:1058] observed event type MODIFIED
  I0112 23:36:53.108228 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3159" for this suite. @ 01/12/25 23:36:53.115
• [4.688 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/12/25 23:36:53.143
  I0112 23:36:53.143393 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:36:53.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:53.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:53.192
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/12/25 23:36:53.204
  STEP: Saw pod success @ 01/12/25 23:36:57.235
  I0112 23:36:57.240304 23 output.go:207] Trying to get logs from node ubuntu pod pod-1647ec09-3b59-4b54-aaf8-57e31dce49ee container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:36:57.248
  I0112 23:36:57.281783 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8697" for this suite. @ 01/12/25 23:36:57.286
• [4.156 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/12/25 23:36:57.3
  I0112 23:36:57.300275 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 23:36:57.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:36:57.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:36:57.355
  I0112 23:36:57.376276 23 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0112 23:37:02.381486 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 23:37:02.381
  I0112 23:37:02.381669 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0112 23:37:04.387318 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0112 23:37:04.408260 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0112 23:37:06.417661 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0112 23:37:06.425171 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0112 23:37:06.432141 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0112 23:37:06.449191 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0112 23:37:06.449259 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0112 23:37:08.461778 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0112 23:37:08.473987 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0112 23:37:08.482582 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0112 23:37:08.482676 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:37:10.492609 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0112 23:37:10.492691 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:37:12.491327 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0112 23:37:12.491392 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:37:14.493493 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0112 23:37:14.493619 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:37:16.491166 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0112 23:37:16.491290 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 12, 23, 37, 8, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 12, 23, 37, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0112 23:37:18.492790 23 deployment.go:95] 
  I0112 23:37:18.492879 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I0112 23:37:18.504790 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4924",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "475b2370-c6f1-41af-9d13-b47c2246c9a2",
      ResourceVersion: (string) (len=5) "28163",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872321824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0112 23:37:18.512330 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4924",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "540be5d2-2808-4d02-87c3-f75218d7edb1",
      ResourceVersion: (string) (len=5) "28151",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872321826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "475b2370-c6f1-41af-9d13-b47c2246c9a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 37 35 62 32 33  37 30 2d 63 36 66 31 2d  |\"475b2370-c6f1-|
              00000120  34 31 61 66 2d 39 64 31  33 2d 62 34 37 63 32 32  |41af-9d13-b47c22|
              00000130  34 36 63 39 61 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |46c9a2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 23:37:18.514138 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0112 23:37:18.514473 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4924",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9daa4da-977f-4763-bc5c-27cf9dbca18a",
      ResourceVersion: (string) (len=5) "28160",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872321817,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "475b2370-c6f1-41af-9d13-b47c2246c9a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321817,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 37 35 62 32 33 37 30  2d 63 36 66 31 2d 34 31  |475b2370-c6f1-41|
              000000c0  61 66 2d 39 64 31 33 2d  62 34 37 63 32 32 34 36  |af-9d13-b47c2246|
              000000d0  63 39 61 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c9a2\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321838,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 23:37:18.517301 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4924",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb601cd7-ac99-425e-a6fc-c3fb4dd0fe2a",
      ResourceVersion: (string) (len=5) "28118",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872321824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "475b2370-c6f1-41af-9d13-b47c2246c9a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 37 35 62 32 33  37 30 2d 63 36 66 31 2d  |\"475b2370-c6f1-|
              00000120  34 31 61 66 2d 39 64 31  33 2d 62 34 37 63 32 32  |41af-9d13-b47c22|
              00000130  34 36 63 39 61 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |46c9a2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0112 23:37:18.524099 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-pmqqx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-pmqqx",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4924",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ecad71e-5f85-4e43-89b8-b9d9eaea562b",
      ResourceVersion: (string) (len=5) "28131",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872321826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "20ddbe83c633b85c57b5885f6619d98008addb354c37d750e6284217bca929be",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.231/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.231/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "540be5d2-2808-4d02-87c3-f75218d7edb1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  30 62 65 35 64 32 2d 32  |d\":\"540be5d2-2|
              00000090  38 30 38 2d 34 64 30 32  2d 38 37 63 33 2d 66 37  |808-4d02-87c3-f7|
              000000a0  35 32 31 38 64 37 65 64  62 31 5c 22 7d 22 3a 7b  |5218d7edb1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  33 31 5c 22 7d 22 3a 7b  |.1.243.231\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pqkfj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pqkfj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872321826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872321826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872321827,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://c934bd8dbc188554fe6163c11e89cbd2d9017e976d491aab30fc0f2c15a561d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pqkfj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0112 23:37:18.528868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4924" for this suite. @ 01/12/25 23:37:18.533
• [21.250 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/12/25 23:37:18.55
  I0112 23:37:18.550349 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:37:18.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:18.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:18.604
  STEP: creating the pod @ 01/12/25 23:37:18.609
  STEP: setting up watch @ 01/12/25 23:37:18.609
  STEP: submitting the pod to kubernetes @ 01/12/25 23:37:18.715
  STEP: verifying the pod is in kubernetes @ 01/12/25 23:37:18.729
  STEP: verifying pod creation was observed @ 01/12/25 23:37:18.733
  STEP: deleting the pod gracefully @ 01/12/25 23:37:20.752
  STEP: verifying pod deletion was observed @ 01/12/25 23:37:20.768
  I0112 23:37:23.192982 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5513" for this suite. @ 01/12/25 23:37:23.197
• [4.662 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/12/25 23:37:23.212
  I0112 23:37:23.212211 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:37:23.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:23.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:23.245
  STEP: Counting existing ResourceQuota @ 01/12/25 23:37:23.252
  STEP: Creating a ResourceQuota @ 01/12/25 23:37:28.257
  STEP: Ensuring resource quota status is calculated @ 01/12/25 23:37:28.292
  STEP: Creating a ReplicationController @ 01/12/25 23:37:30.296
  STEP: Ensuring resource quota status captures replication controller creation @ 01/12/25 23:37:30.323
  STEP: Deleting a ReplicationController @ 01/12/25 23:37:32.328
  STEP: Ensuring resource quota status released usage @ 01/12/25 23:37:32.344
  I0112 23:37:34.348845 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4461" for this suite. @ 01/12/25 23:37:34.352
• [11.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/12/25 23:37:34.365
  I0112 23:37:34.365033 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:37:34.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:34.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:34.442
  STEP: Creating configMap with name configmap-test-volume-map-036ce831-01b3-459a-b4fc-f45884389097 @ 01/12/25 23:37:34.445
  STEP: Creating a pod to test consume configMaps @ 01/12/25 23:37:34.458
  STEP: Saw pod success @ 01/12/25 23:37:38.49
  I0112 23:37:38.493486 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-83edcfa5-a695-4090-8411-c184e762251a container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:37:38.499
  I0112 23:37:38.528863 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2027" for this suite. @ 01/12/25 23:37:38.533
• [4.183 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/12/25 23:37:38.547
  I0112 23:37:38.547816 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:37:38.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:38.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:38.596
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7022 @ 01/12/25 23:37:38.61
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/12/25 23:37:38.634
  STEP: creating service externalsvc in namespace services-7022 @ 01/12/25 23:37:38.634
  STEP: creating replication controller externalsvc in namespace services-7022 @ 01/12/25 23:37:38.696
  I0112 23:37:38.725211      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7022, replica count: 2
  I0112 23:37:41.777015      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/12/25 23:37:41.782
  I0112 23:37:41.810232 23 resource.go:361] Creating new exec pod
  I0112 23:37:43.832821 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-7022 exec execpod7fs6x -- /bin/sh -x -c nslookup clusterip-service.services-7022.svc.cluster.local'
  I0112 23:37:44.080586 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-7022.svc.cluster.local\n"
  I0112 23:37:44.080700 23 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nclusterip-service.services-7022.svc.cluster.local\tcanonical name = externalsvc.services-7022.svc.cluster.local.\nName:\texternalsvc.services-7022.svc.cluster.local\nAddress: 10.152.183.169\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7022, will wait for the garbage collector to delete the pods @ 01/12/25 23:37:44.081
  I0112 23:37:44.151734 23 resources.go:139] Deleting ReplicationController externalsvc took: 15.651628ms
  I0112 23:37:44.252856 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.120735ms
  I0112 23:37:47.495080 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0112 23:37:47.519619 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7022" for this suite. @ 01/12/25 23:37:47.524
• [9.001 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/12/25 23:37:47.549
  I0112 23:37:47.549684 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:37:47.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:47.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:47.599
  STEP: Setting up server cert @ 01/12/25 23:37:47.663
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:37:48.116
  STEP: Deploying the webhook pod @ 01/12/25 23:37:48.14
  STEP: Wait for the deployment to be ready @ 01/12/25 23:37:48.19
  I0112 23:37:48.198802 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:37:50.217
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:37:50.242
  I0112 23:37:51.243033 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/12/25 23:37:51.25
  STEP: create a pod that should be updated by the webhook @ 01/12/25 23:37:51.271
  I0112 23:37:51.452381 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4455" for this suite. @ 01/12/25 23:37:51.457
  STEP: Destroying namespace "webhook-markers-7823" for this suite. @ 01/12/25 23:37:51.482
• [3.950 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/12/25 23:37:51.499
  I0112 23:37:51.499366 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:37:51.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:51.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:51.534
  STEP: Setting up server cert @ 01/12/25 23:37:51.577
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:37:51.991
  STEP: Deploying the webhook pod @ 01/12/25 23:37:52.004
  STEP: Wait for the deployment to be ready @ 01/12/25 23:37:52.03
  I0112 23:37:52.036717 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:37:54.052
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:37:54.084
  I0112 23:37:55.084990 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 23:37:55.092634 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5823-crds.webhook.example.com via the AdmissionRegistration API @ 01/12/25 23:37:55.614
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/12/25 23:37:55.636
  I0112 23:37:58.313140 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7459" for this suite. @ 01/12/25 23:37:58.317
  STEP: Destroying namespace "webhook-markers-4903" for this suite. @ 01/12/25 23:37:58.338
• [6.854 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/12/25 23:37:58.353
  I0112 23:37:58.353953 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:37:58.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:37:58.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:37:58.395
  STEP: Setting up server cert @ 01/12/25 23:37:58.443
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:37:58.633
  STEP: Deploying the webhook pod @ 01/12/25 23:37:58.648
  STEP: Wait for the deployment to be ready @ 01/12/25 23:37:58.685
  I0112 23:37:58.695512 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:38:00.708
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:38:00.73
  I0112 23:38:01.731523 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/12/25 23:38:01.742
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 23:38:01.766
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/12/25 23:38:01.775
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 23:38:01.792
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/12/25 23:38:01.818
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/12/25 23:38:01.861
  I0112 23:38:01.988393 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9299" for this suite. @ 01/12/25 23:38:01.993
  STEP: Destroying namespace "webhook-markers-8412" for this suite. @ 01/12/25 23:38:02.007
• [3.678 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 01/12/25 23:38:02.032
  I0112 23:38:02.032244 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 23:38:02.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:02.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:02.073
  I0112 23:38:02.111891 23 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0112 23:38:02.112007 23 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0112 23:38:02.123041 23 service_accounts.go:282] created pod pod-service-account-mountsa
  I0112 23:38:02.123103 23 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0112 23:38:02.139738 23 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0112 23:38:02.139797 23 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0112 23:38:02.175411 23 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0112 23:38:02.175510 23 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0112 23:38:02.253289 23 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0112 23:38:02.253711 23 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0112 23:38:02.314545 23 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0112 23:38:02.314604 23 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0112 23:38:02.363450 23 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0112 23:38:02.363516 23 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0112 23:38:02.404971 23 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0112 23:38:02.405016 23 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0112 23:38:02.481559 23 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0112 23:38:02.481632 23 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0112 23:38:02.481854 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-48" for this suite. @ 01/12/25 23:38:02.49
• [0.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 01/12/25 23:38:02.624
  I0112 23:38:02.624281 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/12/25 23:38:02.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:02.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:02.836
  STEP: Creating a test externalName service @ 01/12/25 23:38:02.872
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6949.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6949.svc.cluster.local; sleep 1; done
   @ 01/12/25 23:38:02.975
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6949.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6949.svc.cluster.local; sleep 1; done
   @ 01/12/25 23:38:02.975
  STEP: creating a pod to probe DNS @ 01/12/25 23:38:02.975
  STEP: submitting the pod to kubernetes @ 01/12/25 23:38:02.975
  STEP: retrieving the pod @ 01/12/25 23:38:07.084
  STEP: looking for the results for each expected name from probers @ 01/12/25 23:38:07.088
  I0112 23:38:07.100753 23 dns_common.go:571] DNS probes using dns-test-fe806205-8afb-41d6-bfb0-e6fca0b19593 succeeded

  STEP: changing the externalName to bar.example.com @ 01/12/25 23:38:07.1
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6949.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6949.svc.cluster.local; sleep 1; done
   @ 01/12/25 23:38:07.119
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6949.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6949.svc.cluster.local; sleep 1; done
   @ 01/12/25 23:38:07.119
  STEP: creating a second pod to probe DNS @ 01/12/25 23:38:07.119
  STEP: submitting the pod to kubernetes @ 01/12/25 23:38:07.119
  STEP: retrieving the pod @ 01/12/25 23:38:11.166
  STEP: looking for the results for each expected name from probers @ 01/12/25 23:38:11.169
  I0112 23:38:11.178471 23 dns_common.go:571] DNS probes using dns-test-45ed90e9-07fc-4013-9e21-bf6a0dfbeeda succeeded

  STEP: changing the service to type=ClusterIP @ 01/12/25 23:38:11.178
  W0112 23:38:11.206002      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6949.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-6949.svc.cluster.local; sleep 1; done
   @ 01/12/25 23:38:11.206
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6949.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6949.svc.cluster.local; sleep 1; done
   @ 01/12/25 23:38:11.206
  STEP: creating a third pod to probe DNS @ 01/12/25 23:38:11.206
  STEP: submitting the pod to kubernetes @ 01/12/25 23:38:11.21
  STEP: retrieving the pod @ 01/12/25 23:38:13.235
  STEP: looking for the results for each expected name from probers @ 01/12/25 23:38:13.239
  I0112 23:38:13.251173 23 dns_common.go:571] DNS probes using dns-test-990d35d9-19ec-43ae-801d-69792f535f9e succeeded

  STEP: deleting the pod @ 01/12/25 23:38:13.251
  STEP: deleting the pod @ 01/12/25 23:38:13.283
  STEP: deleting the pod @ 01/12/25 23:38:13.33
  STEP: deleting the test externalName service @ 01/12/25 23:38:13.466
  I0112 23:38:13.521720 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6949" for this suite. @ 01/12/25 23:38:13.526
• [10.912 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/12/25 23:38:13.536
  I0112 23:38:13.536966 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:38:13.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:13.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:13.582
  STEP: Setting up server cert @ 01/12/25 23:38:13.648
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:38:13.941
  STEP: Deploying the webhook pod @ 01/12/25 23:38:13.954
  STEP: Wait for the deployment to be ready @ 01/12/25 23:38:13.98
  I0112 23:38:13.989146 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:38:16.008
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:38:16.041
  I0112 23:38:17.041791 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/12/25 23:38:17.05
  STEP: verifying the mutating webhook match conditions @ 01/12/25 23:38:17.063
  STEP: updating the mutating webhook match conditions @ 01/12/25 23:38:17.068
  STEP: verifying the mutating webhook match conditions @ 01/12/25 23:38:17.091
  I0112 23:38:17.215004 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8553" for this suite. @ 01/12/25 23:38:17.222
  STEP: Destroying namespace "webhook-markers-3505" for this suite. @ 01/12/25 23:38:17.241
• [3.721 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/12/25 23:38:17.258
  I0112 23:38:17.258393 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:38:17.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:17.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:17.31
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/12/25 23:38:17.317
  STEP: Saw pod success @ 01/12/25 23:38:21.361
  I0112 23:38:21.365817 23 output.go:207] Trying to get logs from node ubuntu pod pod-579f9d87-0e8c-4e3a-b232-3613678a5fb8 container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:38:21.374
  I0112 23:38:21.410446 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9746" for this suite. @ 01/12/25 23:38:21.417
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 01/12/25 23:38:21.437
  I0112 23:38:21.437622 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:38:21.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:21.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:21.487
  STEP: Creating a pod to test downward api env vars @ 01/12/25 23:38:21.494
  STEP: Saw pod success @ 01/12/25 23:38:25.531
  I0112 23:38:25.538142 23 output.go:207] Trying to get logs from node ubuntu pod downward-api-83874ace-3fca-4d1e-b99d-c63ccbce3092 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:38:25.548
  I0112 23:38:25.587912 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5347" for this suite. @ 01/12/25 23:38:25.592
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/12/25 23:38:25.607
  I0112 23:38:25.607986 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename disruption @ 01/12/25 23:38:25.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:25.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:25.656
  STEP: creating the pdb @ 01/12/25 23:38:25.661
  STEP: Waiting for the pdb to be processed @ 01/12/25 23:38:25.672
  STEP: updating the pdb @ 01/12/25 23:38:27.677
  STEP: Waiting for the pdb to be processed @ 01/12/25 23:38:27.695
  STEP: patching the pdb @ 01/12/25 23:38:29.701
  STEP: Waiting for the pdb to be processed @ 01/12/25 23:38:29.726
  STEP: Waiting for the pdb to be deleted @ 01/12/25 23:38:31.758
  I0112 23:38:31.763250 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6172" for this suite. @ 01/12/25 23:38:31.768
• [6.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/12/25 23:38:31.783
  I0112 23:38:31.784004 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/12/25 23:38:31.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:31.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:31.831
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:38:31.835
  STEP: Saw pod success @ 01/12/25 23:38:35.866
  I0112 23:38:35.870441 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-5a14a9bc-cb33-404b-8609-b4db2f6400af container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:38:35.879
  I0112 23:38:35.921907 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5279" for this suite. @ 01/12/25 23:38:35.926
• [4.165 seconds]
------------------------------
SS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/12/25 23:38:35.949
  I0112 23:38:35.949345 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename csi-storageclass @ 01/12/25 23:38:35.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:35.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:36.001
  STEP: Creating a StorageClass @ 01/12/25 23:38:36.009
  STEP: Get StorageClass "e2e-p7f9d" @ 01/12/25 23:38:36.033
  STEP: Patching the StorageClass "e2e-p7f9d" @ 01/12/25 23:38:36.037
  STEP: Delete StorageClass "e2e-p7f9d" @ 01/12/25 23:38:36.052
  STEP: Confirm deletion of StorageClass "e2e-p7f9d" @ 01/12/25 23:38:36.064
  STEP: Create a replacement StorageClass @ 01/12/25 23:38:36.068
  STEP: Updating StorageClass "e2e-v2-tjjpf" @ 01/12/25 23:38:36.083
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-tjjpf=updated" @ 01/12/25 23:38:36.098
  STEP: Deleting StorageClass "e2e-v2-tjjpf" via DeleteCollection @ 01/12/25 23:38:36.104
  STEP: Confirm deletion of StorageClass "e2e-v2-tjjpf" @ 01/12/25 23:38:36.119
  I0112 23:38:36.122918 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1223" for this suite. @ 01/12/25 23:38:36.127
• [0.195 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/12/25 23:38:36.144
  I0112 23:38:36.144716 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:38:36.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:36.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:36.193
  STEP: creating service nodeport-test with type=NodePort in namespace services-2038 @ 01/12/25 23:38:36.197
  STEP: creating replication controller nodeport-test in namespace services-2038 @ 01/12/25 23:38:36.234
  I0112 23:38:36.248204      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-2038, replica count: 2
  I0112 23:38:39.300302      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:38:39.300418 23 resource.go:361] Creating new exec pod
  I0112 23:38:42.338456 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 23:38:42.512079 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.225) 80 port [tcp/http] succeeded!\n"
  I0112 23:38:42.512148 23 builder.go:147] stdout: ""
  I0112 23:38:43.339311 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 23:38:43.525972 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.225) 80 port [tcp/http] succeeded!\n"
  I0112 23:38:43.526053 23 builder.go:147] stdout: ""
  I0112 23:38:44.339302 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 23:38:44.499846 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.225) 80 port [tcp/http] succeeded!\n"
  I0112 23:38:44.499908 23 builder.go:147] stdout: ""
  I0112 23:38:45.338750 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 23:38:45.508353 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.225) 80 port [tcp/http] succeeded!\n"
  I0112 23:38:45.508443 23 builder.go:147] stdout: ""
  I0112 23:38:46.338565 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0112 23:38:46.513688 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.225) 80 port [tcp/http] succeeded!\n"
  I0112 23:38:46.513756 23 builder.go:147] stdout: "nodeport-test-sm9vt"
  I0112 23:38:46.513844 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.225 80'
  I0112 23:38:46.676352 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.225 80\nConnection to 10.152.183.225 80 port [tcp/http] succeeded!\n"
  I0112 23:38:46.676450 23 builder.go:147] stdout: "nodeport-test-sm9vt"
  I0112 23:38:46.676565 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 32052'
  I0112 23:38:46.829769 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 32052\nConnection to 172.17.202.11 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:46.829832 23 builder.go:147] stdout: ""
  I0112 23:38:47.677125 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 32052'
  I0112 23:38:47.841907 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 32052\nConnection to 172.17.202.11 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:47.841961 23 builder.go:147] stdout: ""
  I0112 23:38:48.677175 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 32052'
  I0112 23:38:48.851575 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 32052\nConnection to 172.17.202.11 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:48.851712 23 builder.go:147] stdout: ""
  I0112 23:38:49.676881 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 32052'
  I0112 23:38:49.868884 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 172.17.202.11 32052\nConnection to 172.17.202.11 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:49.868979 23 builder.go:147] stdout: ""
  I0112 23:38:50.677072 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 32052'
  I0112 23:38:50.842113 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 32052\nConnection to 172.17.202.11 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:50.842201 23 builder.go:147] stdout: "nodeport-test-sm9vt"
  I0112 23:38:50.842302 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 32052'
  I0112 23:38:51.013522 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 32052\nConnection to 172.17.207.20 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:51.013653 23 builder.go:147] stdout: ""
  I0112 23:38:51.843001 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-2038 exec execpodww9vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 32052'
  I0112 23:38:52.018021 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 32052\nConnection to 172.17.207.20 32052 port [tcp/*] succeeded!\n"
  I0112 23:38:52.018092 23 builder.go:147] stdout: "nodeport-test-lvck8"
  I0112 23:38:52.018411 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2038" for this suite. @ 01/12/25 23:38:52.024
• [15.895 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/12/25 23:38:52.039
  I0112 23:38:52.039451 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 23:38:52.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:38:52.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:38:52.084
  STEP: Creating pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054 @ 01/12/25 23:38:52.102
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 23:38:54.133
  I0112 23:38:54.137706 23 container_probe.go:1749] Initial restart count of pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 is 0
  I0112 23:38:54.142400 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:38:56.148404 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:38:58.155166 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:00.163491 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:02.168815 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:04.174671 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:06.180471 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:08.186290 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:10.191891 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:12.197415 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:14.203328 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:14.203419 23 container_probe.go:1763] Restart count of pod container-probe-1054/liveness-e11de83f-c15f-41ac-92f0-e287f18af804 is now 1 (20.065619311s elapsed)
  I0112 23:39:16.210132 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:18.214850 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:20.222407 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:22.227776 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:24.234330 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:26.242235 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:28.248651 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:30.254112 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:32.259898 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:34.265024 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:34.265083 23 container_probe.go:1763] Restart count of pod container-probe-1054/liveness-e11de83f-c15f-41ac-92f0-e287f18af804 is now 2 (40.127305314s elapsed)
  I0112 23:39:36.271558 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:38.276601 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:40.282681 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:42.287406 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:44.292892 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:46.299522 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:48.306610 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:50.312699 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:52.318770 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:54.325410 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:54.325469 23 container_probe.go:1763] Restart count of pod container-probe-1054/liveness-e11de83f-c15f-41ac-92f0-e287f18af804 is now 3 (1m0.187690566s elapsed)
  I0112 23:39:56.331052 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:39:58.336870 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:00.342134 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:02.348069 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:04.356713 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:06.362809 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:08.371368 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:10.377178 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:12.382591 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:14.387838 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:14.387894 23 container_probe.go:1763] Restart count of pod container-probe-1054/liveness-e11de83f-c15f-41ac-92f0-e287f18af804 is now 4 (1m20.250116325s elapsed)
  I0112 23:40:16.393081 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:18.401446 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:20.410238 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:22.417256 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:24.426166 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:26.431680 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:28.436723 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:30.445284 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:32.450467 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:34.455065 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:36.461073 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:38.467163 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:40.473822 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:42.480328 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:44.489729 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:46.495439 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:48.501532 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:50.509291 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:52.515763 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:54.521052 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:56.529511 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:40:58.533479 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:00.540770 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:02.546596 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:04.553419 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:06.559361 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:08.566267 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:10.571495 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:12.576704 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:14.583524 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:16.591698 23 container_probe.go:1759] Get pod liveness-e11de83f-c15f-41ac-92f0-e287f18af804 in namespace container-probe-1054
  I0112 23:41:16.591807 23 container_probe.go:1763] Restart count of pod container-probe-1054/liveness-e11de83f-c15f-41ac-92f0-e287f18af804 is now 5 (2m22.454026345s elapsed)
  STEP: deleting the pod @ 01/12/25 23:41:16.592
  I0112 23:41:16.654880 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1054" for this suite. @ 01/12/25 23:41:16.664
• [144.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/12/25 23:41:16.687
  I0112 23:41:16.687475 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename proxy @ 01/12/25 23:41:16.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:41:16.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:41:16.73
  STEP: starting an echo server on multiple ports @ 01/12/25 23:41:16.772
  STEP: creating replication controller proxy-service-gkrk5 in namespace proxy-769 @ 01/12/25 23:41:16.772
  I0112 23:41:16.816199      23 runners.go:193] Created replication controller with name: proxy-service-gkrk5, namespace: proxy-769, replica count: 1
  I0112 23:41:17.867295      23 runners.go:193] proxy-service-gkrk5 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:41:18.867924      23 runners.go:193] proxy-service-gkrk5 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:41:18.874541 23 proxy.go:230] setup took 2.139077717s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/12/25 23:41:18.874
  I0112 23:41:18.886705 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 11.572152ms)
  I0112 23:41:18.889165 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 14.138041ms)
  I0112 23:41:18.894293 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 19.187519ms)
  I0112 23:41:18.894434 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 19.370518ms)
  I0112 23:41:18.896349 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 21.578709ms)
  I0112 23:41:18.900208 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 25.400493ms)
  I0112 23:41:18.903205 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 27.906983ms)
  I0112 23:41:18.903215 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 28.064383ms)
  I0112 23:41:18.903260 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 28.380281ms)
  I0112 23:41:18.903199 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 28.215882ms)
  I0112 23:41:18.903267 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 28.40458ms)
  I0112 23:41:18.903295 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 28.045582ms)
  I0112 23:41:18.903250 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 28.057182ms)
  I0112 23:41:18.903298 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 28.136282ms)
  I0112 23:41:18.920048 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 44.780812ms)
  I0112 23:41:18.920390 23 proxy.go:558] (0) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 45.412809ms)
  I0112 23:41:18.926419 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 5.821275ms)
  I0112 23:41:18.928289 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.525768ms)
  I0112 23:41:18.928297 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 7.503368ms)
  I0112 23:41:18.928475 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 7.767167ms)
  I0112 23:41:18.928812 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.205065ms)
  I0112 23:41:18.929656 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 8.992663ms)
  I0112 23:41:18.929979 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.40296ms)
  I0112 23:41:18.932007 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 11.305453ms)
  I0112 23:41:18.932060 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 11.305152ms)
  I0112 23:41:18.932007 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 11.242653ms)
  I0112 23:41:18.932968 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 12.256949ms)
  I0112 23:41:18.933886 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 13.425744ms)
  I0112 23:41:18.933883 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 13.117245ms)
  I0112 23:41:18.934152 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 13.470044ms)
  I0112 23:41:18.936767 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 16.127733ms)
  I0112 23:41:18.936847 23 proxy.go:558] (1) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 16.166032ms)
  I0112 23:41:18.943418 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 6.404673ms)
  I0112 23:41:18.943429 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 6.532873ms)
  I0112 23:41:18.943726 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 6.559672ms)
  I0112 23:41:18.944359 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 7.24977ms)
  I0112 23:41:18.946686 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 9.766059ms)
  I0112 23:41:18.946713 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 9.64196ms)
  I0112 23:41:18.946687 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 9.55446ms)
  I0112 23:41:18.947526 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 10.452457ms)
  I0112 23:41:18.948625 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 11.577651ms)
  I0112 23:41:18.948635 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 11.485052ms)
  I0112 23:41:18.948665 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 11.532452ms)
  I0112 23:41:18.948690 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 11.524752ms)
  I0112 23:41:18.949390 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.282549ms)
  I0112 23:41:18.949427 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 12.436648ms)
  I0112 23:41:18.949431 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 12.381548ms)
  I0112 23:41:18.949443 23 proxy.go:558] (2) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 12.354748ms)
  I0112 23:41:18.955738 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 6.188074ms)
  I0112 23:41:18.956364 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 6.574372ms)
  I0112 23:41:18.957170 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.431169ms)
  I0112 23:41:18.959217 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 9.51536ms)
  I0112 23:41:18.959591 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 9.775559ms)
  I0112 23:41:18.961307 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 11.702451ms)
  I0112 23:41:18.961302 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 11.637451ms)
  I0112 23:41:18.962985 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 13.265545ms)
  I0112 23:41:18.963006 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 13.525543ms)
  I0112 23:41:18.962985 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 13.260945ms)
  I0112 23:41:18.962999 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 13.342844ms)
  I0112 23:41:18.964207 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 14.429239ms)
  I0112 23:41:18.964205 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 14.444939ms)
  I0112 23:41:18.964243 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 14.474239ms)
  I0112 23:41:18.964244 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 14.447639ms)
  I0112 23:41:18.965330 23 proxy.go:558] (3) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 15.745034ms)
  I0112 23:41:18.972413 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 6.717572ms)
  I0112 23:41:18.974028 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.355465ms)
  I0112 23:41:18.974068 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.447964ms)
  I0112 23:41:18.974047 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 8.533264ms)
  I0112 23:41:18.974151 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 8.509565ms)
  I0112 23:41:18.976619 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 10.924454ms)
  I0112 23:41:18.979993 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 14.434839ms)
  I0112 23:41:18.981563 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 15.899734ms)
  I0112 23:41:18.981563 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 15.880334ms)
  I0112 23:41:18.981589 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 15.894433ms)
  I0112 23:41:18.982892 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 17.281627ms)
  I0112 23:41:18.982943 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 17.342927ms)
  I0112 23:41:18.982972 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 17.513427ms)
  I0112 23:41:18.984703 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 19.075719ms)
  I0112 23:41:18.989721 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 24.329298ms)
  I0112 23:41:18.989772 23 proxy.go:558] (4) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 24.378598ms)
  I0112 23:41:18.994551 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 4.68348ms)
  I0112 23:41:18.997715 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.559968ms)
  I0112 23:41:18.997721 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 7.538569ms)
  I0112 23:41:18.997719 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.760568ms)
  I0112 23:41:18.997752 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 7.616668ms)
  I0112 23:41:18.997757 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 7.533469ms)
  I0112 23:41:18.998776 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 8.652863ms)
  I0112 23:41:18.999668 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 9.798759ms)
  I0112 23:41:19.000969 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 10.970554ms)
  I0112 23:41:19.001166 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 11.164953ms)
  I0112 23:41:19.001783 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 11.548252ms)
  I0112 23:41:19.002096 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 11.997349ms)
  I0112 23:41:19.002096 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 12.013049ms)
  I0112 23:41:19.002142 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 12.087549ms)
  I0112 23:41:19.004397 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 14.223141ms)
  I0112 23:41:19.004402 23 proxy.go:558] (5) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 14.35574ms)
  I0112 23:41:19.009990 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 5.414177ms)
  I0112 23:41:19.010011 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 5.024379ms)
  I0112 23:41:19.009990 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 5.199778ms)
  I0112 23:41:19.013095 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.364965ms)
  I0112 23:41:19.013184 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 8.371065ms)
  I0112 23:41:19.015019 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 10.027958ms)
  I0112 23:41:19.015020 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 10.350156ms)
  I0112 23:41:19.015073 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 10.154157ms)
  I0112 23:41:19.017413 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 12.650947ms)
  I0112 23:41:19.017423 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 12.459248ms)
  I0112 23:41:19.017732 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 12.854146ms)
  I0112 23:41:19.018097 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.267944ms)
  I0112 23:41:19.019624 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 14.596039ms)
  I0112 23:41:19.019624 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 14.621639ms)
  I0112 23:41:19.019689 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 14.856538ms)
  I0112 23:41:19.020552 23 proxy.go:558] (6) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 15.652634ms)
  I0112 23:41:19.025240 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 4.495181ms)
  I0112 23:41:19.025983 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 5.249878ms)
  I0112 23:41:19.027984 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 7.14687ms)
  I0112 23:41:19.027984 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.350669ms)
  I0112 23:41:19.029339 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 8.465564ms)
  I0112 23:41:19.029596 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 8.669964ms)
  I0112 23:41:19.029625 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 8.747763ms)
  I0112 23:41:19.031993 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 11.036654ms)
  I0112 23:41:19.032027 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 11.356553ms)
  I0112 23:41:19.033407 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.584847ms)
  I0112 23:41:19.033495 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 12.592348ms)
  I0112 23:41:19.034031 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 13.215844ms)
  I0112 23:41:19.034062 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 13.159245ms)
  I0112 23:41:19.034460 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 13.556944ms)
  I0112 23:41:19.034461 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 13.592543ms)
  I0112 23:41:19.034903 23 proxy.go:558] (7) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 14.144341ms)
  I0112 23:41:19.039605 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 4.561181ms)
  I0112 23:41:19.040128 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 4.996279ms)
  I0112 23:41:19.042277 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 7.056771ms)
  I0112 23:41:19.042277 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 7.078171ms)
  I0112 23:41:19.042333 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.095171ms)
  I0112 23:41:19.042968 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 7.730468ms)
  I0112 23:41:19.042998 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 7.765368ms)
  I0112 23:41:19.044723 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.526761ms)
  I0112 23:41:19.046359 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 11.267453ms)
  I0112 23:41:19.046391 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 11.216552ms)
  I0112 23:41:19.046406 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 11.210453ms)
  I0112 23:41:19.046365 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 11.186453ms)
  I0112 23:41:19.046371 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 11.216953ms)
  I0112 23:41:19.047855 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 12.803446ms)
  I0112 23:41:19.047854 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.728346ms)
  I0112 23:41:19.047841 23 proxy.go:558] (8) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 12.625147ms)
  I0112 23:41:19.052333 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 4.320982ms)
  I0112 23:41:19.054324 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 6.217074ms)
  I0112 23:41:19.055701 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 7.573868ms)
  I0112 23:41:19.055804 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 7.718668ms)
  I0112 23:41:19.056431 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 8.354065ms)
  I0112 23:41:19.056756 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.635064ms)
  I0112 23:41:19.056865 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.752864ms)
  I0112 23:41:19.057310 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 9.157362ms)
  I0112 23:41:19.058761 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 10.738255ms)
  I0112 23:41:19.058761 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 10.601056ms)
  I0112 23:41:19.058920 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 10.788155ms)
  I0112 23:41:19.060088 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 12.02135ms)
  I0112 23:41:19.060105 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 11.92955ms)
  I0112 23:41:19.061114 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.969246ms)
  I0112 23:41:19.061149 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 13.176445ms)
  I0112 23:41:19.062447 23 proxy.go:558] (9) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 14.401239ms)
  I0112 23:41:19.069796 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.18197ms)
  I0112 23:41:19.069843 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 7.01367ms)
  I0112 23:41:19.070245 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.435768ms)
  I0112 23:41:19.070248 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.418768ms)
  I0112 23:41:19.071258 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 8.513364ms)
  I0112 23:41:19.073913 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 11.132153ms)
  I0112 23:41:19.073923 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 11.310753ms)
  I0112 23:41:19.074008 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 11.241953ms)
  I0112 23:41:19.074580 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 11.720751ms)
  I0112 23:41:19.074841 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 12.043949ms)
  I0112 23:41:19.076789 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 13.923942ms)
  I0112 23:41:19.076808 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.973142ms)
  I0112 23:41:19.077233 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 14.558039ms)
  I0112 23:41:19.077585 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 14.903738ms)
  I0112 23:41:19.077662 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 14.931837ms)
  I0112 23:41:19.079164 23 proxy.go:558] (10) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 16.282932ms)
  I0112 23:41:19.085363 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 5.837576ms)
  I0112 23:41:19.085366 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 6.053175ms)
  I0112 23:41:19.085401 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 6.140674ms)
  I0112 23:41:19.085412 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 5.943575ms)
  I0112 23:41:19.085664 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 6.341774ms)
  I0112 23:41:19.087179 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 7.737967ms)
  I0112 23:41:19.087320 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 8.044967ms)
  I0112 23:41:19.088838 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.38496ms)
  I0112 23:41:19.089129 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.665759ms)
  I0112 23:41:19.089137 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 9.666659ms)
  I0112 23:41:19.089172 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 9.811759ms)
  I0112 23:41:19.091021 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 11.605651ms)
  I0112 23:41:19.091059 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 11.672651ms)
  I0112 23:41:19.092231 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 12.819746ms)
  I0112 23:41:19.093206 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.775142ms)
  I0112 23:41:19.093718 23 proxy.go:558] (11) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 14.35314ms)
  I0112 23:41:19.099244 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 5.392778ms)
  I0112 23:41:19.099509 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 5.720076ms)
  I0112 23:41:19.100633 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 6.644872ms)
  I0112 23:41:19.101394 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.386969ms)
  I0112 23:41:19.102810 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 8.782663ms)
  I0112 23:41:19.104048 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 10.092858ms)
  I0112 23:41:19.104710 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 10.653956ms)
  I0112 23:41:19.106033 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.145349ms)
  I0112 23:41:19.108584 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 14.511639ms)
  I0112 23:41:19.108575 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 14.52054ms)
  I0112 23:41:19.108613 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 14.632738ms)
  I0112 23:41:19.108646 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 14.700538ms)
  I0112 23:41:19.110078 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 16.012333ms)
  I0112 23:41:19.110078 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 16.096132ms)
  I0112 23:41:19.110769 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 16.735729ms)
  I0112 23:41:19.112674 23 proxy.go:558] (12) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 18.649021ms)
  I0112 23:41:19.120098 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 7.02657ms)
  I0112 23:41:19.120111 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 7.12827ms)
  I0112 23:41:19.122861 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.72646ms)
  I0112 23:41:19.122877 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 9.782358ms)
  I0112 23:41:19.122917 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 10.081957ms)
  I0112 23:41:19.125393 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 12.603947ms)
  I0112 23:41:19.125402 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 12.471648ms)
  I0112 23:41:19.125715 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 12.679047ms)
  I0112 23:41:19.126738 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.696342ms)
  I0112 23:41:19.127505 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 14.576439ms)
  I0112 23:41:19.128960 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 16.069233ms)
  I0112 23:41:19.128960 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 15.861133ms)
  I0112 23:41:19.130216 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 17.321828ms)
  I0112 23:41:19.130216 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 17.146528ms)
  I0112 23:41:19.130241 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 17.259528ms)
  I0112 23:41:19.130249 23 proxy.go:558] (13) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 17.443027ms)
  I0112 23:41:19.134855 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 4.525981ms)
  I0112 23:41:19.136363 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 5.730276ms)
  I0112 23:41:19.137706 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 6.962371ms)
  I0112 23:41:19.137760 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 6.935471ms)
  I0112 23:41:19.139231 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 8.424065ms)
  I0112 23:41:19.141241 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 10.717555ms)
  I0112 23:41:19.143163 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 12.369548ms)
  I0112 23:41:19.143186 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 12.526747ms)
  I0112 23:41:19.143222 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 12.645947ms)
  I0112 23:41:19.143256 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 12.794646ms)
  I0112 23:41:19.143704 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 12.927046ms)
  I0112 23:41:19.144700 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 14.093041ms)
  I0112 23:41:19.144722 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.999841ms)
  I0112 23:41:19.144696 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 14.23794ms)
  I0112 23:41:19.146115 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 15.388835ms)
  I0112 23:41:19.147418 23 proxy.go:558] (14) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 16.73613ms)
  I0112 23:41:19.152792 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 5.196878ms)
  I0112 23:41:19.154468 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 6.822171ms)
  I0112 23:41:19.154602 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 6.871971ms)
  I0112 23:41:19.154966 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.27387ms)
  I0112 23:41:19.155280 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.727068ms)
  I0112 23:41:19.158421 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 10.719755ms)
  I0112 23:41:19.158452 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 10.697655ms)
  I0112 23:41:19.159176 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 11.518251ms)
  I0112 23:41:19.159198 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 11.474352ms)
  I0112 23:41:19.159216 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 11.460252ms)
  I0112 23:41:19.159460 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 11.798251ms)
  I0112 23:41:19.159451 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 11.790151ms)
  I0112 23:41:19.160324 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 12.596747ms)
  I0112 23:41:19.161024 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.486143ms)
  I0112 23:41:19.161032 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 13.341444ms)
  I0112 23:41:19.161047 23 proxy.go:558] (15) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 13.421343ms)
  I0112 23:41:19.167472 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 6.090674ms)
  I0112 23:41:19.167994 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 6.741772ms)
  I0112 23:41:19.170695 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 9.297361ms)
  I0112 23:41:19.170695 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 9.276861ms)
  I0112 23:41:19.170986 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.56856ms)
  I0112 23:41:19.172516 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 11.143553ms)
  I0112 23:41:19.172520 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 11.111253ms)
  I0112 23:41:19.172837 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 11.518052ms)
  I0112 23:41:19.173448 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.186049ms)
  I0112 23:41:19.174405 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 13.023345ms)
  I0112 23:41:19.174439 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 13.135945ms)
  I0112 23:41:19.174405 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 12.975945ms)
  I0112 23:41:19.174650 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 13.252344ms)
  I0112 23:41:19.174689 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 13.341244ms)
  I0112 23:41:19.174866 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 13.553443ms)
  I0112 23:41:19.175168 23 proxy.go:558] (16) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 13.828742ms)
  I0112 23:41:19.180794 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 5.492677ms)
  I0112 23:41:19.180879 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 5.622876ms)
  I0112 23:41:19.183118 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 7.744768ms)
  I0112 23:41:19.186391 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 10.975954ms)
  I0112 23:41:19.187305 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 11.85265ms)
  I0112 23:41:19.187455 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 11.969249ms)
  I0112 23:41:19.187527 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 11.94315ms)
  I0112 23:41:19.189050 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 13.655843ms)
  I0112 23:41:19.189225 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 13.913442ms)
  I0112 23:41:19.189238 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 13.770442ms)
  I0112 23:41:19.191844 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 16.302832ms)
  I0112 23:41:19.191873 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 16.267732ms)
  I0112 23:41:19.191837 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 16.322131ms)
  I0112 23:41:19.191888 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 16.456631ms)
  I0112 23:41:19.192143 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 16.78883ms)
  I0112 23:41:19.192696 23 proxy.go:558] (17) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 17.297427ms)
  I0112 23:41:19.198419 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 5.488177ms)
  I0112 23:41:19.198427 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 5.567076ms)
  I0112 23:41:19.201633 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 8.757163ms)
  I0112 23:41:19.202533 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 9.682259ms)
  I0112 23:41:19.203043 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 10.132157ms)
  I0112 23:41:19.203117 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 10.216257ms)
  I0112 23:41:19.205183 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 12.368348ms)
  I0112 23:41:19.205236 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 12.400748ms)
  I0112 23:41:19.205183 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 12.292248ms)
  I0112 23:41:19.205240 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 12.295349ms)
  I0112 23:41:19.205537 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 12.649447ms)
  I0112 23:41:19.205547 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 12.693347ms)
  I0112 23:41:19.205900 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 13.109945ms)
  I0112 23:41:19.205915 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 13.006745ms)
  I0112 23:41:19.205924 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 13.004245ms)
  I0112 23:41:19.206483 23 proxy.go:558] (18) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 13.697643ms)
  I0112 23:41:19.214370 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 7.782968ms)
  I0112 23:41:19.216275 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 9.56246ms)
  I0112 23:41:19.217805 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/http:proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">t... (200; 11.206753ms)
  I0112 23:41:19.217816 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:462/proxy/: tls qux (200; 11.023854ms)
  I0112 23:41:19.219080 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:460/proxy/: tls baz (200; 12.323849ms)
  I0112 23:41:19.221782 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:162/proxy/: bar (200; 15.052936ms)
  I0112 23:41:19.221801 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:1080/proxy/rewriteme">test</... (200; 14.972837ms)
  I0112 23:41:19.223570 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t/proxy/rewriteme">test</a> (200; 16.79903ms)
  I0112 23:41:19.224414 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname1/proxy/: foo (200; 17.659626ms)
  I0112 23:41:19.224659 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/: <a href="/api/v1/namespaces/proxy-769/pods/https:proxy-service-gkrk5-ln72t:443/proxy/tlsrewriteme... (200; 17.941424ms)
  I0112 23:41:19.228662 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/pods/proxy-service-gkrk5-ln72t:160/proxy/: foo (200; 21.984408ms)
  I0112 23:41:19.228662 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname2/proxy/: tls qux (200; 21.859409ms)
  I0112 23:41:19.230247 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/services/https:proxy-service-gkrk5:tlsportname1/proxy/: tls baz (200; 23.512901ms)
  I0112 23:41:19.232533 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname1/proxy/: foo (200; 25.873791ms)
  I0112 23:41:19.232853 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/services/http:proxy-service-gkrk5:portname2/proxy/: bar (200; 26.19969ms)
  I0112 23:41:19.233237 23 proxy.go:558] (19) /api/v1/namespaces/proxy-769/services/proxy-service-gkrk5:portname2/proxy/: bar (200; 26.410889ms)
  STEP: deleting ReplicationController proxy-service-gkrk5 in namespace proxy-769, will wait for the garbage collector to delete the pods @ 01/12/25 23:41:19.233
  I0112 23:41:19.302704 23 resources.go:139] Deleting ReplicationController proxy-service-gkrk5 took: 11.719151ms
  I0112 23:41:19.404071 23 resources.go:163] Terminating ReplicationController proxy-service-gkrk5 pods took: 101.361574ms
  I0112 23:41:22.204761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-769" for this suite. @ 01/12/25 23:41:22.208
• [5.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/12/25 23:41:22.223
  I0112 23:41:22.223203 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:41:22.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:41:22.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:41:22.261
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:41:22.266
  STEP: Saw pod success @ 01/12/25 23:41:26.295
  I0112 23:41:26.300645 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-b34ed9d0-b7c1-4859-83f7-182f448b08e2 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:41:26.315
  I0112 23:41:26.350451 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3617" for this suite. @ 01/12/25 23:41:26.356
• [4.154 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/12/25 23:41:26.377
  I0112 23:41:26.377521 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:41:26.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:41:26.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:41:26.418
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7404 @ 01/12/25 23:41:26.422
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/12/25 23:41:26.455
  STEP: creating service externalsvc in namespace services-7404 @ 01/12/25 23:41:26.455
  STEP: creating replication controller externalsvc in namespace services-7404 @ 01/12/25 23:41:26.501
  I0112 23:41:26.533973      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7404, replica count: 2
  I0112 23:41:29.585106      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/12/25 23:41:29.592
  I0112 23:41:29.640216 23 resource.go:361] Creating new exec pod
  I0112 23:41:31.663295 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-7404 exec execpod4m92b -- /bin/sh -x -c nslookup nodeport-service.services-7404.svc.cluster.local'
  I0112 23:41:31.990688 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-7404.svc.cluster.local\n"
  I0112 23:41:31.990796 23 builder.go:147] stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nnodeport-service.services-7404.svc.cluster.local\tcanonical name = externalsvc.services-7404.svc.cluster.local.\nName:\texternalsvc.services-7404.svc.cluster.local\nAddress: 10.152.183.163\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7404, will wait for the garbage collector to delete the pods @ 01/12/25 23:41:31.991
  I0112 23:41:32.058744 23 resources.go:139] Deleting ReplicationController externalsvc took: 11.832551ms
  I0112 23:41:32.159301 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.55758ms
  I0112 23:41:35.315576 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0112 23:41:35.355355 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7404" for this suite. @ 01/12/25 23:41:35.359
• [9.006 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/12/25 23:41:35.383
  I0112 23:41:35.383673 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:41:35.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:41:35.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:41:35.434
  STEP: Setting up server cert @ 01/12/25 23:41:35.485
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:41:36.009
  STEP: Deploying the webhook pod @ 01/12/25 23:41:36.027
  STEP: Wait for the deployment to be ready @ 01/12/25 23:41:36.05
  I0112 23:41:36.058884 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:41:38.073
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:41:38.096
  I0112 23:41:39.096614 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/12/25 23:41:39.107
  STEP: create a pod @ 01/12/25 23:41:39.144
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/12/25 23:41:41.172
  I0112 23:41:41.172153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=webhook-8106 attach --namespace=webhook-8106 to-be-attached-pod -i -c=container1'
  I0112 23:41:41.285827 23 builder.go:135] rc: 1
  I0112 23:41:41.406685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8106" for this suite. @ 01/12/25 23:41:41.413
  STEP: Destroying namespace "webhook-markers-5959" for this suite. @ 01/12/25 23:41:41.459
• [6.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/12/25 23:41:41.477
  I0112 23:41:41.477275 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:41:41.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:41:41.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:41:41.551
  STEP: create deployment with httpd image @ 01/12/25 23:41:41.557
  I0112 23:41:41.557399 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2774 create -f -'
  I0112 23:41:41.698477 23 builder.go:146] stderr: ""
  I0112 23:41:41.698560 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/12/25 23:41:41.698
  I0112 23:41:41.698707 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2774 diff -f -'
  I0112 23:41:41.913130 23 builder.go:135] rc: 1
  I0112 23:41:41.913284 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-2774 delete -f -'
  I0112 23:41:42.020311 23 builder.go:146] stderr: ""
  I0112 23:41:42.020398 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0112 23:41:42.020604 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2774" for this suite. @ 01/12/25 23:41:42.026
• [0.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/12/25 23:41:42.045
  I0112 23:41:42.045554 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 23:41:42.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:41:42.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:41:42.102
  STEP: Creating pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307 @ 01/12/25 23:41:42.119
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 23:41:44.159
  I0112 23:41:44.163081 23 container_probe.go:1749] Initial restart count of pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc is 0
  I0112 23:41:44.166547 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:46.174170 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:48.179909 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:50.186400 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:52.194146 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:54.199384 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:56.207395 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:41:58.212102 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:00.217293 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:02.222573 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:04.227786 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:06.232594 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:08.237663 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:10.243780 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:12.248805 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:14.255120 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:16.261054 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:18.266654 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:20.273724 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:22.279261 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:24.286519 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:26.291496 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:28.298263 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:30.304912 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:32.309179 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:34.314663 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:36.320077 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:38.325332 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:40.331039 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:42.336435 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:44.340642 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:46.345724 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:48.354775 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:50.361103 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:52.366090 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:54.371915 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:56.379058 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:42:58.385770 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:00.394539 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:02.401682 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:04.408702 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:06.414476 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:08.422182 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:10.428317 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:12.434847 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:14.440040 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:16.445258 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:18.450240 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:20.456771 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:22.462868 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:24.468250 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:26.475509 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:28.484908 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:30.495073 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:32.502044 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:34.507840 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:36.513506 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:38.519537 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:40.525850 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:42.531389 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:44.540635 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:46.546020 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:48.551420 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:50.558796 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:52.564201 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:54.570689 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:56.574751 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:43:58.580877 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:00.586496 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:02.592585 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:04.606004 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:06.612544 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:08.617798 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:10.622487 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:12.628177 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:14.633623 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:16.639572 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:18.645303 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:20.651075 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:22.656543 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:24.662639 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:26.669212 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:28.675576 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:30.682169 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:32.686905 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:34.696279 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:36.701240 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:38.707042 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:40.712686 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:42.718528 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:44.723785 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:46.730216 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:48.735269 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:50.740032 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:52.747260 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:54.754072 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:56.758504 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:44:58.763540 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:00.771672 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:02.777340 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:04.781384 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:06.788838 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:08.794783 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:10.800294 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:12.806156 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:14.812212 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:16.819293 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:18.825288 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:20.829486 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:22.836041 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:24.840702 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:26.847675 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:28.853108 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:30.861432 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:32.866589 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:34.872494 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:36.879809 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:38.886477 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:40.895868 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  I0112 23:45:42.903545 23 container_probe.go:1759] Get pod test-grpc-90e47a6e-9337-45e6-a1b7-25d716a292bc in namespace container-probe-6307
  STEP: deleting the pod @ 01/12/25 23:45:44.905
  I0112 23:45:44.993335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6307" for this suite. @ 01/12/25 23:45:44.998
• [242.969 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/12/25 23:45:45.014
  I0112 23:45:45.014646 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename runtimeclass @ 01/12/25 23:45:45.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:45:45.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:45:45.057
  STEP: getting /apis @ 01/12/25 23:45:45.063
  STEP: getting /apis/node.k8s.io @ 01/12/25 23:45:45.068
  STEP: getting /apis/node.k8s.io/v1 @ 01/12/25 23:45:45.07
  STEP: creating @ 01/12/25 23:45:45.072
  STEP: watching @ 01/12/25 23:45:45.113
  I0112 23:45:45.113093 23 runtimeclass.go:275] starting watch
  STEP: getting @ 01/12/25 23:45:45.129
  STEP: listing @ 01/12/25 23:45:45.133
  STEP: patching @ 01/12/25 23:45:45.137
  STEP: updating @ 01/12/25 23:45:45.148
  I0112 23:45:45.158449 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/12/25 23:45:45.158
  STEP: deleting a collection @ 01/12/25 23:45:45.184
  I0112 23:45:45.208778 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2036" for this suite. @ 01/12/25 23:45:45.214
• [0.211 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/12/25 23:45:45.225
  I0112 23:45:45.225773 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/12/25 23:45:45.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:45:45.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:45:45.27
  STEP: Creating 50 configmaps @ 01/12/25 23:45:45.273
  STEP: Creating RC which spawns configmap-volume pods @ 01/12/25 23:45:46.083
  I0112 23:45:46.104236 23 resource.go:87] Pod name wrapped-volume-race-74ff5931-ef2d-4ce2-b759-da62b7d15e72: Found 0 pods out of 5
  I0112 23:45:51.118236 23 resource.go:87] Pod name wrapped-volume-race-74ff5931-ef2d-4ce2-b759-da62b7d15e72: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/12/25 23:45:51.118
  STEP: Creating RC which spawns configmap-volume pods @ 01/12/25 23:45:51.145
  I0112 23:45:51.177214 23 resource.go:87] Pod name wrapped-volume-race-f469fe2d-6db7-4bae-92e1-3cc66533f503: Found 0 pods out of 5
  I0112 23:45:56.194579 23 resource.go:87] Pod name wrapped-volume-race-f469fe2d-6db7-4bae-92e1-3cc66533f503: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/12/25 23:45:56.194
  STEP: Creating RC which spawns configmap-volume pods @ 01/12/25 23:45:56.224
  I0112 23:45:56.251569 23 resource.go:87] Pod name wrapped-volume-race-ad3b30d1-6b41-47a5-9f91-55c1b4513aea: Found 0 pods out of 5
  I0112 23:46:01.270903 23 resource.go:87] Pod name wrapped-volume-race-ad3b30d1-6b41-47a5-9f91-55c1b4513aea: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/12/25 23:46:01.271
  STEP: deleting ReplicationController wrapped-volume-race-ad3b30d1-6b41-47a5-9f91-55c1b4513aea in namespace emptydir-wrapper-3529, will wait for the garbage collector to delete the pods @ 01/12/25 23:46:01.295
  I0112 23:46:01.365704 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-ad3b30d1-6b41-47a5-9f91-55c1b4513aea took: 15.022561ms
  I0112 23:46:01.566387 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-ad3b30d1-6b41-47a5-9f91-55c1b4513aea pods took: 200.680875ms
  STEP: deleting ReplicationController wrapped-volume-race-f469fe2d-6db7-4bae-92e1-3cc66533f503 in namespace emptydir-wrapper-3529, will wait for the garbage collector to delete the pods @ 01/12/25 23:46:03.266
  I0112 23:46:03.340481 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-f469fe2d-6db7-4bae-92e1-3cc66533f503 took: 17.306255ms
  I0112 23:46:03.541059 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-f469fe2d-6db7-4bae-92e1-3cc66533f503 pods took: 200.574074ms
  STEP: deleting ReplicationController wrapped-volume-race-74ff5931-ef2d-4ce2-b759-da62b7d15e72 in namespace emptydir-wrapper-3529, will wait for the garbage collector to delete the pods @ 01/12/25 23:46:05.342
  I0112 23:46:05.409467 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-74ff5931-ef2d-4ce2-b759-da62b7d15e72 took: 12.950266ms
  I0112 23:46:05.610737 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-74ff5931-ef2d-4ce2-b759-da62b7d15e72 pods took: 201.266972ms
  STEP: Cleaning up the configMaps @ 01/12/25 23:46:07.311
  I0112 23:46:08.115261 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3529" for this suite. @ 01/12/25 23:46:08.119
• [22.906 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 01/12/25 23:46:08.132
  I0112 23:46:08.132045 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename containers @ 01/12/25 23:46:08.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:08.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:46:08.162
  STEP: Creating a pod to test override arguments @ 01/12/25 23:46:08.166
  STEP: Saw pod success @ 01/12/25 23:46:12.193
  I0112 23:46:12.197483 23 output.go:207] Trying to get logs from node ubuntu pod client-containers-b73057c2-c3dd-4013-8492-cfdd64ab97c0 container agnhost-container: <nil>
  STEP: delete the pod @ 01/12/25 23:46:12.209
  I0112 23:46:12.278833 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6682" for this suite. @ 01/12/25 23:46:12.283
• [4.166 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/12/25 23:46:12.297
  I0112 23:46:12.298001 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename namespaces @ 01/12/25 23:46:12.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:12.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:46:12.331
  STEP: Creating a test namespace @ 01/12/25 23:46:12.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:12.362
  STEP: Creating a pod in the namespace @ 01/12/25 23:46:12.368
  STEP: Waiting for the pod to have running status @ 01/12/25 23:46:12.391
  STEP: Deleting the namespace @ 01/12/25 23:46:14.403
  STEP: Waiting for the namespace to be removed. @ 01/12/25 23:46:14.42
  STEP: Recreating the namespace @ 01/12/25 23:46:25.428
  STEP: Verifying there are no pods in the namespace @ 01/12/25 23:46:25.471
  I0112 23:46:25.475760 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5424" for this suite. @ 01/12/25 23:46:25.48
  STEP: Destroying namespace "nsdeletetest-4872" for this suite. @ 01/12/25 23:46:25.502
  I0112 23:46:25.506331 23 framework.go:370] Namespace nsdeletetest-4872 was already deleted
  STEP: Destroying namespace "nsdeletetest-3042" for this suite. @ 01/12/25 23:46:25.506
• [13.237 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 01/12/25 23:46:25.535
  I0112 23:46:25.535476 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:46:25.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:25.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:46:25.567
  STEP: Starting the proxy @ 01/12/25 23:46:25.572
  I0112 23:46:25.572467 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-1784 proxy --unix-socket=/tmp/kubectl-proxy-unix3470590991/test'
  STEP: retrieving proxy /api/ output @ 01/12/25 23:46:25.632
  I0112 23:46:25.633060 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1784" for this suite. @ 01/12/25 23:46:25.637
• [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/12/25 23:46:25.659
  I0112 23:46:25.659478 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:46:25.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:25.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:46:25.69
  STEP: Creating secret with name secret-test-map-99be5078-69a9-473b-b75e-8553502dfdae @ 01/12/25 23:46:25.695
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:46:25.708
  STEP: Saw pod success @ 01/12/25 23:46:29.74
  I0112 23:46:29.745346 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-bbb70b73-67c2-465e-9a2f-0a0bdb952f29 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:46:29.752
  I0112 23:46:29.782338 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-143" for this suite. @ 01/12/25 23:46:29.787
• [4.149 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/12/25 23:46:29.808
  I0112 23:46:29.808268 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pv @ 01/12/25 23:46:29.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:29.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:46:29.841
  STEP: Creating initial PV and PVC @ 01/12/25 23:46:29.845
  I0112 23:46:29.845976 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5273" @ 01/12/25 23:46:29.886
  STEP: Listing PVCs in namespace "pv-5273" @ 01/12/25 23:46:29.889
  STEP: Reading "pvc-vs5dx" Status @ 01/12/25 23:46:29.893
  STEP: Reading "pv-5273-4qptc" Status @ 01/12/25 23:46:29.897
  STEP: Patching "pvc-vs5dx" Status @ 01/12/25 23:46:29.905
  STEP: Patching "pv-5273-4qptc" Status @ 01/12/25 23:46:29.918
  STEP: Updating "pvc-vs5dx" Status @ 01/12/25 23:46:29.938
  STEP: Updating "pv-5273-4qptc" Status @ 01/12/25 23:46:29.982
  I0112 23:46:30.000833 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0112 23:46:30.000889 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-vs5dx"
  I0112 23:46:30.015133 23 pv.go:193] Deleting PersistentVolume "pv-5273-4qptc"
  I0112 23:46:30.035963 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5273" for this suite. @ 01/12/25 23:46:30.039
• [0.251 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/12/25 23:46:30.059
  I0112 23:46:30.059849 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename chunking @ 01/12/25 23:46:30.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:46:30.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:46:30.097
  STEP: creating a large number of resources @ 01/12/25 23:46:30.101
  STEP: retrieving the first page @ 01/12/25 23:46:47.781
  I0112 23:46:47.819540 23 chunking.go:163] Retrieved 40/40 results with rv 31645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE2NDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 01/12/25 23:46:47.819
  I0112 23:47:07.831198 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE2NDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0112 23:47:27.836094 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE2NDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0112 23:47:47.835709 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE2NDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0112 23:48:07.834446 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE2NDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0112 23:48:27.824666 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0112 23:48:27.824769 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/12/25 23:48:27.824
  STEP: retrieving all remaining pages @ 01/12/25 23:48:27.833
  I0112 23:48:27.842352 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0112 23:48:27.849400 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0112 23:48:27.856917 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0112 23:48:27.865141 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0112 23:48:27.872722 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0112 23:48:27.880667 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0112 23:48:27.888296 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE3ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0112 23:48:27.894220 23 chunking.go:221] Retrieved 40/40 results with rv 31784 and continue 
  I0112 23:48:27.894414 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-459" for this suite. @ 01/12/25 23:48:27.899
• [117.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/12/25 23:48:27.913
  I0112 23:48:27.914012 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:48:27.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:48:27.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:48:27.949
  STEP: creating the pod @ 01/12/25 23:48:27.953
  STEP: submitting the pod to kubernetes @ 01/12/25 23:48:27.953
  STEP: verifying QOS class is set on the pod @ 01/12/25 23:48:27.967
  I0112 23:48:27.972557 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7762" for this suite. @ 01/12/25 23:48:27.977
• [0.079 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/12/25 23:48:27.993
  I0112 23:48:27.993185 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/12/25 23:48:27.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:48:28.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:48:28.031
  STEP: create the deployment @ 01/12/25 23:48:28.035
  W0112 23:48:28.054985      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/12/25 23:48:28.055
  STEP: delete the deployment @ 01/12/25 23:48:28.563
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/12/25 23:48:28.594
  STEP: Gathering metrics @ 01/12/25 23:48:29.123
  W0112 23:48:29.132110      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 23:48:29.132192 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 23:48:29.132498 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1237" for this suite. @ 01/12/25 23:48:29.145
• [1.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/12/25 23:48:29.164
  I0112 23:48:29.164239 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/12/25 23:48:29.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:48:29.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:48:29.208
  STEP: create the rc @ 01/12/25 23:48:29.217
  W0112 23:48:29.229036      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/12/25 23:48:37.251
  STEP: wait for the rc to be deleted @ 01/12/25 23:48:37.412
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/12/25 23:48:42.427
  STEP: Gathering metrics @ 01/12/25 23:49:12.451
  W0112 23:49:12.458809      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0112 23:49:12.458869 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0112 23:49:12.459024 23 delete.go:95] Deleting pod "simpletest.rc-22sjs" in namespace "gc-1954"
  I0112 23:49:12.506176 23 delete.go:95] Deleting pod "simpletest.rc-25t2k" in namespace "gc-1954"
  I0112 23:49:12.548534 23 delete.go:95] Deleting pod "simpletest.rc-29t2r" in namespace "gc-1954"
  I0112 23:49:12.619279 23 delete.go:95] Deleting pod "simpletest.rc-2f245" in namespace "gc-1954"
  I0112 23:49:12.696134 23 delete.go:95] Deleting pod "simpletest.rc-2rl9j" in namespace "gc-1954"
  I0112 23:49:12.762796 23 delete.go:95] Deleting pod "simpletest.rc-2srwn" in namespace "gc-1954"
  I0112 23:49:12.876130 23 delete.go:95] Deleting pod "simpletest.rc-42brx" in namespace "gc-1954"
  I0112 23:49:12.924055 23 delete.go:95] Deleting pod "simpletest.rc-488zn" in namespace "gc-1954"
  I0112 23:49:12.998290 23 delete.go:95] Deleting pod "simpletest.rc-4fvkv" in namespace "gc-1954"
  I0112 23:49:13.111876 23 delete.go:95] Deleting pod "simpletest.rc-4hln6" in namespace "gc-1954"
  I0112 23:49:13.241298 23 delete.go:95] Deleting pod "simpletest.rc-4ntv4" in namespace "gc-1954"
  I0112 23:49:13.420707 23 delete.go:95] Deleting pod "simpletest.rc-4pwgt" in namespace "gc-1954"
  I0112 23:49:13.543189 23 delete.go:95] Deleting pod "simpletest.rc-5scr6" in namespace "gc-1954"
  I0112 23:49:13.671611 23 delete.go:95] Deleting pod "simpletest.rc-5vwks" in namespace "gc-1954"
  I0112 23:49:13.736883 23 delete.go:95] Deleting pod "simpletest.rc-62m9p" in namespace "gc-1954"
  I0112 23:49:13.873834 23 delete.go:95] Deleting pod "simpletest.rc-6qs88" in namespace "gc-1954"
  I0112 23:49:14.128106 23 delete.go:95] Deleting pod "simpletest.rc-74gnr" in namespace "gc-1954"
  I0112 23:49:14.261186 23 delete.go:95] Deleting pod "simpletest.rc-77tpb" in namespace "gc-1954"
  I0112 23:49:14.447978 23 delete.go:95] Deleting pod "simpletest.rc-7cd6t" in namespace "gc-1954"
  I0112 23:49:14.590309 23 delete.go:95] Deleting pod "simpletest.rc-7cw4q" in namespace "gc-1954"
  I0112 23:49:14.649038 23 delete.go:95] Deleting pod "simpletest.rc-7thz6" in namespace "gc-1954"
  I0112 23:49:14.814621 23 delete.go:95] Deleting pod "simpletest.rc-828jk" in namespace "gc-1954"
  I0112 23:49:14.997530 23 delete.go:95] Deleting pod "simpletest.rc-82jpn" in namespace "gc-1954"
  I0112 23:49:15.101549 23 delete.go:95] Deleting pod "simpletest.rc-82tb5" in namespace "gc-1954"
  I0112 23:49:15.227336 23 delete.go:95] Deleting pod "simpletest.rc-8bnpb" in namespace "gc-1954"
  I0112 23:49:15.365380 23 delete.go:95] Deleting pod "simpletest.rc-8wsdv" in namespace "gc-1954"
  I0112 23:49:15.490696 23 delete.go:95] Deleting pod "simpletest.rc-94j9d" in namespace "gc-1954"
  I0112 23:49:15.648335 23 delete.go:95] Deleting pod "simpletest.rc-98xpd" in namespace "gc-1954"
  I0112 23:49:15.728053 23 delete.go:95] Deleting pod "simpletest.rc-9dq2z" in namespace "gc-1954"
  I0112 23:49:15.910817 23 delete.go:95] Deleting pod "simpletest.rc-b2rd7" in namespace "gc-1954"
  I0112 23:49:16.106501 23 delete.go:95] Deleting pod "simpletest.rc-b5jlg" in namespace "gc-1954"
  I0112 23:49:16.196494 23 delete.go:95] Deleting pod "simpletest.rc-bn7nc" in namespace "gc-1954"
  I0112 23:49:16.386603 23 delete.go:95] Deleting pod "simpletest.rc-c242x" in namespace "gc-1954"
  I0112 23:49:16.632393 23 delete.go:95] Deleting pod "simpletest.rc-c88v8" in namespace "gc-1954"
  I0112 23:49:16.854261 23 delete.go:95] Deleting pod "simpletest.rc-c9rd8" in namespace "gc-1954"
  I0112 23:49:16.909334 23 delete.go:95] Deleting pod "simpletest.rc-d2jgt" in namespace "gc-1954"
  I0112 23:49:16.995214 23 delete.go:95] Deleting pod "simpletest.rc-d2w5c" in namespace "gc-1954"
  I0112 23:49:17.105011 23 delete.go:95] Deleting pod "simpletest.rc-d57tz" in namespace "gc-1954"
  I0112 23:49:17.218149 23 delete.go:95] Deleting pod "simpletest.rc-ddpzw" in namespace "gc-1954"
  I0112 23:49:17.382975 23 delete.go:95] Deleting pod "simpletest.rc-dh4xz" in namespace "gc-1954"
  I0112 23:49:17.505820 23 delete.go:95] Deleting pod "simpletest.rc-dltg2" in namespace "gc-1954"
  I0112 23:49:17.648531 23 delete.go:95] Deleting pod "simpletest.rc-f2h8z" in namespace "gc-1954"
  I0112 23:49:17.858322 23 delete.go:95] Deleting pod "simpletest.rc-fdl8k" in namespace "gc-1954"
  I0112 23:49:17.933423 23 delete.go:95] Deleting pod "simpletest.rc-ft8px" in namespace "gc-1954"
  I0112 23:49:18.154157 23 delete.go:95] Deleting pod "simpletest.rc-fwmvt" in namespace "gc-1954"
  I0112 23:49:18.417854 23 delete.go:95] Deleting pod "simpletest.rc-g98kr" in namespace "gc-1954"
  I0112 23:49:18.587918 23 delete.go:95] Deleting pod "simpletest.rc-gc6pk" in namespace "gc-1954"
  I0112 23:49:18.738814 23 delete.go:95] Deleting pod "simpletest.rc-gg9r5" in namespace "gc-1954"
  I0112 23:49:18.868515 23 delete.go:95] Deleting pod "simpletest.rc-gglnt" in namespace "gc-1954"
  I0112 23:49:19.085405 23 delete.go:95] Deleting pod "simpletest.rc-gzgws" in namespace "gc-1954"
  I0112 23:49:19.196779 23 delete.go:95] Deleting pod "simpletest.rc-h4gcz" in namespace "gc-1954"
  I0112 23:49:19.304809 23 delete.go:95] Deleting pod "simpletest.rc-hfvrb" in namespace "gc-1954"
  I0112 23:49:19.453778 23 delete.go:95] Deleting pod "simpletest.rc-hjx7d" in namespace "gc-1954"
  I0112 23:49:19.548380 23 delete.go:95] Deleting pod "simpletest.rc-hvdjt" in namespace "gc-1954"
  I0112 23:49:19.697348 23 delete.go:95] Deleting pod "simpletest.rc-j8psr" in namespace "gc-1954"
  I0112 23:49:19.861861 23 delete.go:95] Deleting pod "simpletest.rc-jtmpr" in namespace "gc-1954"
  I0112 23:49:20.043421 23 delete.go:95] Deleting pod "simpletest.rc-jvrkg" in namespace "gc-1954"
  I0112 23:49:20.240356 23 delete.go:95] Deleting pod "simpletest.rc-jx6bp" in namespace "gc-1954"
  I0112 23:49:20.429446 23 delete.go:95] Deleting pod "simpletest.rc-k4zg4" in namespace "gc-1954"
  I0112 23:49:20.508216 23 delete.go:95] Deleting pod "simpletest.rc-k5bzb" in namespace "gc-1954"
  I0112 23:49:20.681489 23 delete.go:95] Deleting pod "simpletest.rc-k8fpd" in namespace "gc-1954"
  I0112 23:49:20.838293 23 delete.go:95] Deleting pod "simpletest.rc-kckxd" in namespace "gc-1954"
  I0112 23:49:20.984196 23 delete.go:95] Deleting pod "simpletest.rc-kkmnm" in namespace "gc-1954"
  I0112 23:49:21.212619 23 delete.go:95] Deleting pod "simpletest.rc-l74sw" in namespace "gc-1954"
  I0112 23:49:21.365861 23 delete.go:95] Deleting pod "simpletest.rc-l9ckw" in namespace "gc-1954"
  I0112 23:49:21.494822 23 delete.go:95] Deleting pod "simpletest.rc-lcqx7" in namespace "gc-1954"
  I0112 23:49:21.620012 23 delete.go:95] Deleting pod "simpletest.rc-lfmcz" in namespace "gc-1954"
  I0112 23:49:21.706604 23 delete.go:95] Deleting pod "simpletest.rc-ltdh8" in namespace "gc-1954"
  I0112 23:49:21.881362 23 delete.go:95] Deleting pod "simpletest.rc-mfp7f" in namespace "gc-1954"
  I0112 23:49:21.991651 23 delete.go:95] Deleting pod "simpletest.rc-mg98x" in namespace "gc-1954"
  I0112 23:49:22.073363 23 delete.go:95] Deleting pod "simpletest.rc-mjqg2" in namespace "gc-1954"
  I0112 23:49:22.210290 23 delete.go:95] Deleting pod "simpletest.rc-mqpbq" in namespace "gc-1954"
  I0112 23:49:22.312527 23 delete.go:95] Deleting pod "simpletest.rc-mwzq7" in namespace "gc-1954"
  I0112 23:49:22.398030 23 delete.go:95] Deleting pod "simpletest.rc-n6bc2" in namespace "gc-1954"
  I0112 23:49:22.542977 23 delete.go:95] Deleting pod "simpletest.rc-njrt5" in namespace "gc-1954"
  I0112 23:49:22.716623 23 delete.go:95] Deleting pod "simpletest.rc-nrqlm" in namespace "gc-1954"
  I0112 23:49:22.871923 23 delete.go:95] Deleting pod "simpletest.rc-nwm27" in namespace "gc-1954"
  I0112 23:49:23.000102 23 delete.go:95] Deleting pod "simpletest.rc-p4hwm" in namespace "gc-1954"
  I0112 23:49:23.098229 23 delete.go:95] Deleting pod "simpletest.rc-pmwkg" in namespace "gc-1954"
  I0112 23:49:23.220705 23 delete.go:95] Deleting pod "simpletest.rc-pq44f" in namespace "gc-1954"
  I0112 23:49:23.316569 23 delete.go:95] Deleting pod "simpletest.rc-q6bd4" in namespace "gc-1954"
  I0112 23:49:23.446055 23 delete.go:95] Deleting pod "simpletest.rc-rgjkh" in namespace "gc-1954"
  I0112 23:49:23.598537 23 delete.go:95] Deleting pod "simpletest.rc-rtnhp" in namespace "gc-1954"
  I0112 23:49:23.693397 23 delete.go:95] Deleting pod "simpletest.rc-sdrfn" in namespace "gc-1954"
  I0112 23:49:23.791533 23 delete.go:95] Deleting pod "simpletest.rc-szrp5" in namespace "gc-1954"
  I0112 23:49:23.918222 23 delete.go:95] Deleting pod "simpletest.rc-t64rr" in namespace "gc-1954"
  I0112 23:49:24.118305 23 delete.go:95] Deleting pod "simpletest.rc-tb4lc" in namespace "gc-1954"
  I0112 23:49:24.341903 23 delete.go:95] Deleting pod "simpletest.rc-tjxjw" in namespace "gc-1954"
  I0112 23:49:24.424026 23 delete.go:95] Deleting pod "simpletest.rc-v2kq8" in namespace "gc-1954"
  I0112 23:49:24.508109 23 delete.go:95] Deleting pod "simpletest.rc-v7lfc" in namespace "gc-1954"
  I0112 23:49:24.629694 23 delete.go:95] Deleting pod "simpletest.rc-v9d6s" in namespace "gc-1954"
  I0112 23:49:24.779126 23 delete.go:95] Deleting pod "simpletest.rc-vr7xd" in namespace "gc-1954"
  I0112 23:49:24.911159 23 delete.go:95] Deleting pod "simpletest.rc-whhbs" in namespace "gc-1954"
  I0112 23:49:25.055109 23 delete.go:95] Deleting pod "simpletest.rc-wt68w" in namespace "gc-1954"
  I0112 23:49:25.163826 23 delete.go:95] Deleting pod "simpletest.rc-wxcfg" in namespace "gc-1954"
  I0112 23:49:25.287166 23 delete.go:95] Deleting pod "simpletest.rc-wzw82" in namespace "gc-1954"
  I0112 23:49:25.382213 23 delete.go:95] Deleting pod "simpletest.rc-x59f8" in namespace "gc-1954"
  I0112 23:49:25.539600 23 delete.go:95] Deleting pod "simpletest.rc-zbk5t" in namespace "gc-1954"
  I0112 23:49:25.622488 23 delete.go:95] Deleting pod "simpletest.rc-zgc4n" in namespace "gc-1954"
  I0112 23:49:25.680701 23 delete.go:95] Deleting pod "simpletest.rc-znlgm" in namespace "gc-1954"
  I0112 23:49:25.913055 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1954" for this suite. @ 01/12/25 23:49:25.921
• [56.801 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/12/25 23:49:25.965
  I0112 23:49:25.965168 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/12/25 23:49:25.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:49:26.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:49:26.107
  I0112 23:49:26.114695 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/12/25 23:49:27.672
  I0112 23:49:27.672760 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-9178 --namespace=crd-publish-openapi-9178 create -f -'
  I0112 23:49:29.803834 23 builder.go:146] stderr: ""
  I0112 23:49:29.803915 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-338-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0112 23:49:29.804037 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-9178 --namespace=crd-publish-openapi-9178 delete e2e-test-crd-publish-openapi-338-crds test-cr'
  I0112 23:49:29.901344 23 builder.go:146] stderr: ""
  I0112 23:49:29.901422 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-338-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0112 23:49:29.901477 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-9178 --namespace=crd-publish-openapi-9178 apply -f -'
  I0112 23:49:30.007826 23 builder.go:146] stderr: ""
  I0112 23:49:30.007913 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-338-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0112 23:49:30.008046 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-9178 --namespace=crd-publish-openapi-9178 delete e2e-test-crd-publish-openapi-338-crds test-cr'
  I0112 23:49:30.105203 23 builder.go:146] stderr: ""
  I0112 23:49:30.105275 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-338-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/12/25 23:49:30.105
  I0112 23:49:30.105387 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=crd-publish-openapi-9178 explain e2e-test-crd-publish-openapi-338-crds'
  I0112 23:49:30.190402 23 builder.go:146] stderr: ""
  I0112 23:49:30.190519 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-338-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0112 23:49:31.546024 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9178" for this suite. @ 01/12/25 23:49:31.554
• [5.605 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/12/25 23:49:31.57
  I0112 23:49:31.570737 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename watch @ 01/12/25 23:49:31.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:49:31.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:49:31.604
  STEP: creating a watch on configmaps with a certain label @ 01/12/25 23:49:31.608
  STEP: creating a new configmap @ 01/12/25 23:49:31.61
  STEP: modifying the configmap once @ 01/12/25 23:49:31.623
  STEP: changing the label value of the configmap @ 01/12/25 23:49:31.637
  STEP: Expecting to observe a delete notification for the watched object @ 01/12/25 23:49:31.653
  I0112 23:49:31.653634 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4264  8c1eb739-3687-459f-bd12-0e322926007f 34257 0 2025-01-12 23:49:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 23:49:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:49:31.653813 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4264  8c1eb739-3687-459f-bd12-0e322926007f 34259 0 2025-01-12 23:49:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 23:49:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:49:31.653911 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4264  8c1eb739-3687-459f-bd12-0e322926007f 34261 0 2025-01-12 23:49:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 23:49:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/12/25 23:49:31.653
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/12/25 23:49:31.667
  STEP: changing the label value of the configmap back @ 01/12/25 23:49:41.671
  STEP: modifying the configmap a third time @ 01/12/25 23:49:41.69
  STEP: deleting the configmap @ 01/12/25 23:49:41.704
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/12/25 23:49:41.735
  I0112 23:49:41.735418 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4264  8c1eb739-3687-459f-bd12-0e322926007f 34758 0 2025-01-12 23:49:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 23:49:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:49:41.735578 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4264  8c1eb739-3687-459f-bd12-0e322926007f 34759 0 2025-01-12 23:49:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 23:49:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:49:41.735654 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4264  8c1eb739-3687-459f-bd12-0e322926007f 34760 0 2025-01-12 23:49:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-12 23:49:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:49:41.735739 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4264" for this suite. @ 01/12/25 23:49:41.739
• [10.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/12/25 23:49:41.762
  I0112 23:49:41.762075 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename resourcequota @ 01/12/25 23:49:41.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:49:41.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:49:41.8
  STEP: Discovering how many secrets are in namespace by default @ 01/12/25 23:49:41.805
  STEP: Counting existing ResourceQuota @ 01/12/25 23:49:46.81
  STEP: Creating a ResourceQuota @ 01/12/25 23:49:51.817
  STEP: Ensuring resource quota status is calculated @ 01/12/25 23:49:51.833
  STEP: Creating a Secret @ 01/12/25 23:49:53.839
  STEP: Ensuring resource quota status captures secret creation @ 01/12/25 23:49:53.867
  STEP: Deleting a secret @ 01/12/25 23:49:55.871
  STEP: Ensuring resource quota status released usage @ 01/12/25 23:49:55.887
  I0112 23:49:57.893349 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2656" for this suite. @ 01/12/25 23:49:57.898
• [16.152 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/12/25 23:49:57.913
  I0112 23:49:57.914013 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename watch @ 01/12/25 23:49:57.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:49:57.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:49:57.953
  STEP: getting a starting resourceVersion @ 01/12/25 23:49:57.957
  STEP: starting a background goroutine to produce watch events @ 01/12/25 23:49:57.962
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/12/25 23:49:57.962
  I0112 23:50:00.727721 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-526" for this suite. @ 01/12/25 23:50:00.77
• [2.922 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/12/25 23:50:00.837
  I0112 23:50:00.837267 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:50:00.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:00.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:00.891
  STEP: Creating Pod @ 01/12/25 23:50:00.895
  STEP: Reading file content from the nginx-container @ 01/12/25 23:50:02.919
  I0112 23:50:02.919633 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8523 PodName:pod-sharedvolume-76574c2f-ef2e-41fa-80ee-513c2f337849 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:02.919657 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:02.919727 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-8523/pods/pod-sharedvolume-76574c2f-ef2e-41fa-80ee-513c2f337849/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0112 23:50:02.998914 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:02.999150 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8523" for this suite. @ 01/12/25 23:50:03.004
• [2.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/12/25 23:50:03.026
  I0112 23:50:03.026984 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:50:03.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:03.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:03.064
  STEP: creating service multi-endpoint-test in namespace services-5331 @ 01/12/25 23:50:03.068
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5331 to expose endpoints map[] @ 01/12/25 23:50:03.095
  I0112 23:50:03.101476 23 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0112 23:50:04.114043 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5331 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5331 @ 01/12/25 23:50:04.114
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5331 to expose endpoints map[pod1:[100]] @ 01/12/25 23:50:06.152
  I0112 23:50:06.167024 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5331 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5331 @ 01/12/25 23:50:06.167
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5331 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/12/25 23:50:08.201
  I0112 23:50:08.221750 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5331 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/12/25 23:50:08.221
  I0112 23:50:08.221853 23 resource.go:361] Creating new exec pod
  I0112 23:50:11.253890 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-5331 exec execpodmcgfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0112 23:50:11.415454 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.236) 80 port [tcp/http] succeeded!\n"
  I0112 23:50:11.415550 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:50:11.415641 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-5331 exec execpodmcgfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.236 80'
  I0112 23:50:11.581064 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.236 80\nConnection to 10.152.183.236 80 port [tcp/http] succeeded!\n"
  I0112 23:50:11.581133 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:50:11.581214 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-5331 exec execpodmcgfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0112 23:50:11.740783 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.236) 81 port [tcp/*] succeeded!\n"
  I0112 23:50:11.741043 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:50:11.741149 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-5331 exec execpodmcgfm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.236 81'
  I0112 23:50:11.891711 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.236 81\nConnection to 10.152.183.236 81 port [tcp/*] succeeded!\n"
  I0112 23:50:11.891785 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5331 @ 01/12/25 23:50:11.891
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5331 to expose endpoints map[pod2:[101]] @ 01/12/25 23:50:11.946
  I0112 23:50:13.010385 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5331 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5331 @ 01/12/25 23:50:13.01
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5331 to expose endpoints map[] @ 01/12/25 23:50:13.048
  I0112 23:50:15.064451 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5331 exposes endpoints map[]
  I0112 23:50:15.113033 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5331" for this suite. @ 01/12/25 23:50:15.118
• [12.106 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/12/25 23:50:15.133
  I0112 23:50:15.133552 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/12/25 23:50:15.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:15.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:15.185
  STEP: Creating two CSIDrivers @ 01/12/25 23:50:15.197
  STEP: Getting "inline-driver-f2750382-a5d3-4fa7-a057-c88408e3d87d" & "inline-driver-214dd39d-2d83-40e0-a975-258b95a3ca24" @ 01/12/25 23:50:15.224
  STEP: Patching the CSIDriver "inline-driver-214dd39d-2d83-40e0-a975-258b95a3ca24" @ 01/12/25 23:50:15.232
  STEP: Updating the CSIDriver "inline-driver-214dd39d-2d83-40e0-a975-258b95a3ca24" @ 01/12/25 23:50:15.247
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4241" @ 01/12/25 23:50:15.265
  STEP: Deleting CSIDriver "inline-driver-f2750382-a5d3-4fa7-a057-c88408e3d87d" @ 01/12/25 23:50:15.27
  STEP: Confirm deletion of CSIDriver "inline-driver-f2750382-a5d3-4fa7-a057-c88408e3d87d" @ 01/12/25 23:50:15.287
  STEP: Deleting CSIDriver "inline-driver-214dd39d-2d83-40e0-a975-258b95a3ca24" via DeleteCollection @ 01/12/25 23:50:15.291
  STEP: Confirm deletion of CSIDriver "inline-driver-214dd39d-2d83-40e0-a975-258b95a3ca24" @ 01/12/25 23:50:15.307
  I0112 23:50:15.311362 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4241" for this suite. @ 01/12/25 23:50:15.315
• [0.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/12/25 23:50:15.331
  I0112 23:50:15.331324 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/12/25 23:50:15.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:15.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:15.39
  STEP: creating a target pod @ 01/12/25 23:50:15.393
  STEP: adding an ephemeral container @ 01/12/25 23:50:17.421
  STEP: checking pod container endpoints @ 01/12/25 23:50:21.469
  I0112 23:50:21.469235 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1702 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:21.469261 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:21.469323 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-1702/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0112 23:50:21.548749 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:21.563989 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1702" for this suite. @ 01/12/25 23:50:21.568
• [6.261 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/12/25 23:50:21.592
  I0112 23:50:21.592654 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename discovery @ 01/12/25 23:50:21.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:21.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:21.644
  STEP: Setting up server cert @ 01/12/25 23:50:21.649
  I0112 23:50:22.102146 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0112 23:50:22.103583 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0112 23:50:22.103651 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0112 23:50:22.103666 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0112 23:50:22.103675 23 discovery.go:139] Checking APIGroup: apps
  I0112 23:50:22.104982 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0112 23:50:22.105031 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0112 23:50:22.105042 23 discovery.go:154] apps/v1 matches apps/v1
  I0112 23:50:22.105052 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0112 23:50:22.106578 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0112 23:50:22.106644 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0112 23:50:22.106656 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0112 23:50:22.106665 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0112 23:50:22.108112 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0112 23:50:22.108183 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0112 23:50:22.108195 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0112 23:50:22.108204 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0112 23:50:22.109721 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0112 23:50:22.109770 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0112 23:50:22.109782 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0112 23:50:22.109790 23 discovery.go:139] Checking APIGroup: autoscaling
  I0112 23:50:22.111238 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0112 23:50:22.111285 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0112 23:50:22.111296 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0112 23:50:22.111305 23 discovery.go:139] Checking APIGroup: batch
  I0112 23:50:22.112765 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0112 23:50:22.112813 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0112 23:50:22.112825 23 discovery.go:154] batch/v1 matches batch/v1
  I0112 23:50:22.112834 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0112 23:50:22.114747 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0112 23:50:22.114795 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0112 23:50:22.114806 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0112 23:50:22.114815 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0112 23:50:22.116528 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0112 23:50:22.116635 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0112 23:50:22.116648 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0112 23:50:22.116658 23 discovery.go:139] Checking APIGroup: policy
  I0112 23:50:22.118512 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0112 23:50:22.118580 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0112 23:50:22.118608 23 discovery.go:154] policy/v1 matches policy/v1
  I0112 23:50:22.118619 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0112 23:50:22.120440 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0112 23:50:22.120497 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0112 23:50:22.120510 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0112 23:50:22.120520 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0112 23:50:22.122159 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0112 23:50:22.122261 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0112 23:50:22.122274 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0112 23:50:22.122287 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0112 23:50:22.123776 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0112 23:50:22.123867 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0112 23:50:22.123887 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0112 23:50:22.123903 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0112 23:50:22.125734 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0112 23:50:22.125784 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0112 23:50:22.125796 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0112 23:50:22.125805 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0112 23:50:22.127488 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0112 23:50:22.127540 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0112 23:50:22.127560 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0112 23:50:22.127577 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0112 23:50:22.129137 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0112 23:50:22.129222 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0112 23:50:22.129246 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0112 23:50:22.129258 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0112 23:50:22.131414 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0112 23:50:22.131564 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0112 23:50:22.131580 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0112 23:50:22.131592 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0112 23:50:22.133305 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0112 23:50:22.133380 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0112 23:50:22.133400 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0112 23:50:22.133416 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0112 23:50:22.135179 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0112 23:50:22.135244 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0112 23:50:22.135262 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0112 23:50:22.135279 23 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0112 23:50:22.137205 23 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0112 23:50:22.137297 23 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0112 23:50:22.137316 23 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0112 23:50:22.137466 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-744" for this suite. @ 01/12/25 23:50:22.142
• [0.571 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 01/12/25 23:50:22.164
  I0112 23:50:22.164032 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/12/25 23:50:22.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:22.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:22.197
  STEP: Setting up the test @ 01/12/25 23:50:22.202
  STEP: Creating hostNetwork=false pod @ 01/12/25 23:50:22.202
  STEP: Creating hostNetwork=true pod @ 01/12/25 23:50:26.238
  STEP: Running the test @ 01/12/25 23:50:28.271
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/12/25 23:50:28.271
  I0112 23:50:28.271668 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.271696 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.271784 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0112 23:50:28.365538 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.365586 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.365598 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.365645 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0112 23:50:28.447174 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.447267 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.447281 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.447375 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0112 23:50:28.534198 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.534300 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.534328 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.534391 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0112 23:50:28.619824 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/12/25 23:50:28.619
  I0112 23:50:28.619975 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.619996 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.620065 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0112 23:50:28.695448 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.695531 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.695552 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.695620 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0112 23:50:28.767167 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/12/25 23:50:28.767
  I0112 23:50:28.767234 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.767246 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.767288 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0112 23:50:28.829980 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.830036 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.830059 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.830110 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0112 23:50:28.898077 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.898126 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.898139 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.898187 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0112 23:50:28.970761 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:28.970824 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9293 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:50:28.970838 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:50:28.970883 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9293/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0112 23:50:29.045226 23 exec_util.go:108] Exec stderr: ""
  I0112 23:50:29.045419 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9293" for this suite. @ 01/12/25 23:50:29.049
• [6.902 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/12/25 23:50:29.066
  I0112 23:50:29.067041 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-runtime @ 01/12/25 23:50:29.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:29.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:29.119
  STEP: create the container @ 01/12/25 23:50:29.123
  W0112 23:50:29.138463      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/12/25 23:50:29.138
  STEP: get the container status @ 01/12/25 23:50:32.162
  STEP: the container should be terminated @ 01/12/25 23:50:32.167
  STEP: the termination message should be set @ 01/12/25 23:50:32.167
  I0112 23:50:32.167704 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/12/25 23:50:32.167
  I0112 23:50:32.197041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7728" for this suite. @ 01/12/25 23:50:32.201
• [3.154 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/12/25 23:50:32.221
  I0112 23:50:32.221188 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-webhook @ 01/12/25 23:50:32.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:32.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:32.254
  STEP: Setting up server cert @ 01/12/25 23:50:32.26
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/12/25 23:50:32.865
  STEP: Deploying the custom resource conversion webhook pod @ 01/12/25 23:50:32.881
  STEP: Wait for the deployment to be ready @ 01/12/25 23:50:32.916
  I0112 23:50:32.924227 23 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:50:34.934
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:50:34.974
  I0112 23:50:35.974692 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0112 23:50:35.984748 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Creating a v1 custom resource @ 01/12/25 23:50:38.561
  STEP: v2 custom resource should be converted @ 01/12/25 23:50:38.573
  I0112 23:50:39.208152 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8715" for this suite. @ 01/12/25 23:50:39.213
• [7.011 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/12/25 23:50:39.237
  I0112 23:50:39.237704 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename init-container @ 01/12/25 23:50:39.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:39.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:39.3
  STEP: creating the pod @ 01/12/25 23:50:39.307
  I0112 23:50:39.307535 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0112 23:50:42.608197 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4173" for this suite. @ 01/12/25 23:50:42.613
• [3.388 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/12/25 23:50:42.626
  I0112 23:50:42.626382 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/12/25 23:50:42.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:42.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:42.67
  I0112 23:50:42.702515 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/12/25 23:50:42.716
  I0112 23:50:42.721236 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:42.721354 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/12/25 23:50:42.721
  I0112 23:50:42.754807 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:42.754905 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:50:43.756247 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:43.756379 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:50:44.755035 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 23:50:44.755087 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/12/25 23:50:44.759
  I0112 23:50:44.795296 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 23:50:44.795365 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0112 23:50:45.792771 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:45.792817 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/12/25 23:50:45.792
  I0112 23:50:45.812301 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:45.812352 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:50:46.813367 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:46.813452 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:50:47.812164 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:47.812241 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:50:48.812471 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0112 23:50:48.812531 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/12/25 23:50:48.821
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8783, will wait for the garbage collector to delete the pods @ 01/12/25 23:50:48.821
  I0112 23:50:48.892217 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.997456ms
  I0112 23:50:48.993324 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.106005ms
  I0112 23:50:51.697886 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0112 23:50:51.698030 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0112 23:50:51.701867 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35456"},"items":null}

  I0112 23:50:51.705431 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35456"},"items":null}

  I0112 23:50:51.744740 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8783" for this suite. @ 01/12/25 23:50:51.749
• [9.138 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/12/25 23:50:51.764
  I0112 23:50:51.764649 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replicaset @ 01/12/25 23:50:51.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:51.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:51.799
  I0112 23:50:51.827702 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0112 23:50:56.834681 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/12/25 23:50:56.834
  STEP: Scaling up "test-rs" replicaset @ 01/12/25 23:50:56.834
  I0112 23:50:56.855680 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/12/25 23:50:56.855
  I0112 23:50:56.885899 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6690 with ReadyReplicas 1, AvailableReplicas 1
  I0112 23:50:56.971035 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6690 with ReadyReplicas 1, AvailableReplicas 1
  I0112 23:50:57.077310 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6690 with ReadyReplicas 1, AvailableReplicas 1
  I0112 23:50:57.107431 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6690 with ReadyReplicas 1, AvailableReplicas 1
  I0112 23:50:58.579496 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6690 with ReadyReplicas 2, AvailableReplicas 2
  I0112 23:50:58.709111 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6690 with ReadyReplicas 3 found true
  I0112 23:50:58.709412 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6690" for this suite. @ 01/12/25 23:50:58.714
• [6.972 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/12/25 23:50:58.736
  I0112 23:50:58.736879 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename server-version @ 01/12/25 23:50:58.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:58.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:58.769
  STEP: Request ServerVersion @ 01/12/25 23:50:58.78
  STEP: Confirm major version @ 01/12/25 23:50:58.782
  I0112 23:50:58.782891 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/12/25 23:50:58.782
  I0112 23:50:58.782986 23 server_version.go:58] cleanMinorVersion: 32
  I0112 23:50:58.783013 23 server_version.go:62] Minor version: 32
  I0112 23:50:58.783148 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5272" for this suite. @ 01/12/25 23:50:58.788
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/12/25 23:50:58.803
  I0112 23:50:58.803135 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:50:58.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:50:58.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:50:58.855
  STEP: Setting up server cert @ 01/12/25 23:50:58.922
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:50:59.068
  STEP: Deploying the webhook pod @ 01/12/25 23:50:59.083
  STEP: Wait for the deployment to be ready @ 01/12/25 23:50:59.108
  I0112 23:50:59.115748 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:51:01.129
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:51:01.184
  I0112 23:51:02.185017 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0112 23:51:02.192334 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/12/25 23:51:02.73
  STEP: Creating a custom resource that should be denied by the webhook @ 01/12/25 23:51:02.753
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/12/25 23:51:04.767
  STEP: Updating the custom resource with disallowed data should be denied @ 01/12/25 23:51:04.795
  STEP: Deleting the custom resource should be denied @ 01/12/25 23:51:04.81
  STEP: Remove the offending key and value from the custom resource data @ 01/12/25 23:51:04.82
  STEP: Deleting the updated custom resource should be successful @ 01/12/25 23:51:04.846
  I0112 23:51:05.547645 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9950" for this suite. @ 01/12/25 23:51:05.552
  STEP: Destroying namespace "webhook-markers-3478" for this suite. @ 01/12/25 23:51:05.565
• [6.800 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 01/12/25 23:51:05.604
  I0112 23:51:05.604059 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/12/25 23:51:05.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:05.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:05.644
  STEP: Creating service test in namespace statefulset-1178 @ 01/12/25 23:51:05.647
  I0112 23:51:05.698360 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0112 23:51:15.705692 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/12/25 23:51:15.716
  I0112 23:51:15.742525 23 wait.go:40] Found 1 stateful pods, waiting for 2
  I0112 23:51:25.746223 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0112 23:51:25.746285 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/12/25 23:51:25.754
  STEP: Delete all of the StatefulSets @ 01/12/25 23:51:25.758
  STEP: Verify that StatefulSets have been deleted @ 01/12/25 23:51:25.772
  I0112 23:51:25.777092 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1178
  I0112 23:51:25.788040 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1178" for this suite. @ 01/12/25 23:51:25.793
• [20.235 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/12/25 23:51:25.839
  I0112 23:51:25.839767 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename endpointslice @ 01/12/25 23:51:25.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:25.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:25.961
  I0112 23:51:25.992144 23 endpointslice.go:1045] Endpoints addresses: [172.17.202.11] , ports: [16443]
  I0112 23:51:25.992179 23 endpointslice.go:1075] EndpointSlices addresses: [172.17.202.11] , ports: [16443]
  I0112 23:51:25.992328 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-693" for this suite. @ 01/12/25 23:51:25.997
• [0.197 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 01/12/25 23:51:26.037
  I0112 23:51:26.037486 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:51:26.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:26.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:26.186
  I0112 23:51:26.190387 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-184 version'
  I0112 23:51:26.268488 23 builder.go:146] stderr: ""
  I0112 23:51:26.268562 23 builder.go:147] stdout: "Client Version: v1.32.0\nKustomize Version: v5.5.0\nServer Version: v1.32.0\n"
  I0112 23:51:26.268891 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-184" for this suite. @ 01/12/25 23:51:26.278
• [0.259 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/12/25 23:51:26.296
  I0112 23:51:26.296977 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/12/25 23:51:26.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:26.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:26.375
  STEP: Setting up server cert @ 01/12/25 23:51:26.438
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/12/25 23:51:27.104
  STEP: Deploying the webhook pod @ 01/12/25 23:51:27.119
  STEP: Wait for the deployment to be ready @ 01/12/25 23:51:27.172
  I0112 23:51:27.179511 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/12/25 23:51:29.191
  STEP: Verifying the service has paired with the endpoint @ 01/12/25 23:51:29.211
  I0112 23:51:30.211607 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/12/25 23:51:30.222
  STEP: create a pod that should be denied by the webhook @ 01/12/25 23:51:30.245
  STEP: create a pod that causes the webhook to hang @ 01/12/25 23:51:30.255
  STEP: create a configmap that should be denied by the webhook @ 01/12/25 23:51:40.263
  STEP: create a configmap that should be admitted by the webhook @ 01/12/25 23:51:40.27
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/12/25 23:51:40.29
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/12/25 23:51:40.301
  STEP: create a namespace that bypass the webhook @ 01/12/25 23:51:40.308
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/12/25 23:51:40.368
  I0112 23:51:40.520724 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-53" for this suite. @ 01/12/25 23:51:40.527
  STEP: Destroying namespace "webhook-markers-8946" for this suite. @ 01/12/25 23:51:40.578
  STEP: Destroying namespace "exempted-namespace-5139" for this suite. @ 01/12/25 23:51:40.593
• [14.323 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/12/25 23:51:40.629
  I0112 23:51:40.629119 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename sysctl @ 01/12/25 23:51:40.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:40.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:40.665
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/12/25 23:51:40.67
  I0112 23:51:40.680827 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9114" for this suite. @ 01/12/25 23:51:40.685
• [0.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/12/25 23:51:40.701
  I0112 23:51:40.701665 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename watch @ 01/12/25 23:51:40.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:40.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:40.756
  STEP: creating a new configmap @ 01/12/25 23:51:40.761
  STEP: modifying the configmap once @ 01/12/25 23:51:40.782
  STEP: modifying the configmap a second time @ 01/12/25 23:51:40.807
  STEP: deleting the configmap @ 01/12/25 23:51:40.835
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/12/25 23:51:40.85
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/12/25 23:51:40.852
  I0112 23:51:40.852517 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1665  109fad25-7f5f-469e-b8f4-907663971b29 35951 0 2025-01-12 23:51:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-12 23:51:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:51:40.852719 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1665  109fad25-7f5f-469e-b8f4-907663971b29 35952 0 2025-01-12 23:51:40 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-12 23:51:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0112 23:51:40.852867 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1665" for this suite. @ 01/12/25 23:51:40.857
• [0.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 01/12/25 23:51:40.872
  I0112 23:51:40.872269 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:51:40.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:40.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:40.959
  STEP: Creating a pod to test downward api env vars @ 01/12/25 23:51:40.965
  STEP: Saw pod success @ 01/12/25 23:51:45.024
  I0112 23:51:45.029960 23 output.go:207] Trying to get logs from node ubuntu pod downward-api-858a1fb5-f2ed-4146-8c6c-199d7fac5c15 container dapi-container: <nil>
  STEP: delete the pod @ 01/12/25 23:51:45.039
  I0112 23:51:45.075013 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6230" for this suite. @ 01/12/25 23:51:45.079
• [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/12/25 23:51:45.094
  I0112 23:51:45.094117 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubelet-test @ 01/12/25 23:51:45.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:45.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:45.125
  I0112 23:51:47.173328 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6622" for this suite. @ 01/12/25 23:51:47.177
• [2.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/12/25 23:51:47.194
  I0112 23:51:47.194439 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/12/25 23:51:47.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:47.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:47.238
  STEP: creating service in namespace services-1138 @ 01/12/25 23:51:47.242
  STEP: creating service affinity-nodeport in namespace services-1138 @ 01/12/25 23:51:47.242
  STEP: creating replication controller affinity-nodeport in namespace services-1138 @ 01/12/25 23:51:47.275
  I0112 23:51:47.312197      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1138, replica count: 3
  I0112 23:51:50.363334      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0112 23:51:50.375063 23 resource.go:361] Creating new exec pod
  I0112 23:51:53.402330 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1138 exec execpod-affinityts8vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0112 23:51:53.554419 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.82) 80 port [tcp/http] succeeded!\n"
  I0112 23:51:53.554496 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:51:53.554565 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1138 exec execpod-affinityts8vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  I0112 23:51:53.710347 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [tcp/http] succeeded!\n"
  I0112 23:51:53.710460 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:51:53.710638 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1138 exec execpod-affinityts8vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.202.11 32139'
  I0112 23:51:53.864786 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.202.11 32139\nConnection to 172.17.202.11 32139 port [tcp/*] succeeded!\n"
  I0112 23:51:53.864853 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:51:53.864974 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1138 exec execpod-affinityts8vg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.17.207.20 32139'
  I0112 23:51:54.020909 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.17.207.20 32139\nConnection to 172.17.207.20 32139 port [tcp/*] succeeded!\n"
  I0112 23:51:54.020981 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0112 23:51:54.021044 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=services-1138 exec execpod-affinityts8vg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.17.202.11:32139/ ; done'
  I0112 23:51:54.280847 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.17.202.11:32139/\n"
  I0112 23:51:54.280939 23 builder.go:147] stdout: "\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9\naffinity-nodeport-wd8g9"
  I0112 23:51:54.280959 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.280971 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.280981 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.280990 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.280999 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281008 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281017 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281027 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281037 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281046 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281055 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281077 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281086 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281095 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281133 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281193 23 service.go:242] Received response from host: affinity-nodeport-wd8g9
  I0112 23:51:54.281289 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1138, will wait for the garbage collector to delete the pods @ 01/12/25 23:51:54.321
  I0112 23:51:54.409285 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 28.265716ms
  I0112 23:51:54.509510 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.222303ms
  I0112 23:51:58.063242 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1138" for this suite. @ 01/12/25 23:51:58.066
• [10.884 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/12/25 23:51:58.078
  I0112 23:51:58.078772 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename controllerrevisions @ 01/12/25 23:51:58.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:51:58.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:51:58.107
  STEP: Creating DaemonSet "e2e-dzsbc-daemon-set" @ 01/12/25 23:51:58.133
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/12/25 23:51:58.145
  I0112 23:51:58.154653 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dzsbc-daemon-set: 0
  I0112 23:51:58.154724 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:51:59.156721 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dzsbc-daemon-set: 0
  I0112 23:51:59.156780 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  I0112 23:52:00.154695 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dzsbc-daemon-set: 2
  I0112 23:52:00.154753 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-dzsbc-daemon-set
  STEP: Confirm DaemonSet "e2e-dzsbc-daemon-set" successfully created with "daemonset-name=e2e-dzsbc-daemon-set" label @ 01/12/25 23:52:00.158
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-dzsbc-daemon-set" @ 01/12/25 23:52:00.166
  I0112 23:52:00.170392 23 controller_revision.go:162] Located ControllerRevision: "e2e-dzsbc-daemon-set-694756c7b4"
  STEP: Patching ControllerRevision "e2e-dzsbc-daemon-set-694756c7b4" @ 01/12/25 23:52:00.174
  I0112 23:52:00.193555 23 controller_revision.go:173] e2e-dzsbc-daemon-set-694756c7b4 has been patched
  STEP: Create a new ControllerRevision @ 01/12/25 23:52:00.193
  I0112 23:52:00.213724 23 controller_revision.go:191] Created ControllerRevision: e2e-dzsbc-daemon-set-6d58fccc5d
  STEP: Confirm that there are two ControllerRevisions @ 01/12/25 23:52:00.213
  I0112 23:52:00.213831 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 23:52:00.218427 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-dzsbc-daemon-set-694756c7b4" @ 01/12/25 23:52:00.218
  STEP: Confirm that there is only one ControllerRevision @ 01/12/25 23:52:00.23
  I0112 23:52:00.230630 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 23:52:00.234371 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-dzsbc-daemon-set-6d58fccc5d" @ 01/12/25 23:52:00.238
  I0112 23:52:00.263174 23 controller_revision.go:220] e2e-dzsbc-daemon-set-6d58fccc5d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/12/25 23:52:00.263
  W0112 23:52:00.276294      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/12/25 23:52:00.276
  I0112 23:52:00.276441 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 23:52:01.277651 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 23:52:01.285037 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-dzsbc-daemon-set-6d58fccc5d=updated" @ 01/12/25 23:52:01.285
  STEP: Confirm that there is only one ControllerRevision @ 01/12/25 23:52:01.31
  I0112 23:52:01.310917 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0112 23:52:01.316272 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0112 23:52:01.320540 23 controller_revision.go:246] ControllerRevision "e2e-dzsbc-daemon-set-5d66b595f5" has revision 3
  STEP: Deleting DaemonSet "e2e-dzsbc-daemon-set" @ 01/12/25 23:52:01.324
  STEP: deleting DaemonSet.extensions e2e-dzsbc-daemon-set in namespace controllerrevisions-423, will wait for the garbage collector to delete the pods @ 01/12/25 23:52:01.324
  I0112 23:52:01.392896 23 resources.go:139] Deleting DaemonSet.extensions e2e-dzsbc-daemon-set took: 13.849459ms
  I0112 23:52:01.493260 23 resources.go:163] Terminating DaemonSet.extensions e2e-dzsbc-daemon-set pods took: 100.345902ms
  I0112 23:52:02.999491 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dzsbc-daemon-set: 0
  I0112 23:52:02.999607 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-dzsbc-daemon-set
  I0112 23:52:03.006621 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36253"},"items":null}

  I0112 23:52:03.011674 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36253"},"items":null}

  I0112 23:52:03.025679 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-423" for this suite. @ 01/12/25 23:52:03.03
• [4.965 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/12/25 23:52:03.044
  I0112 23:52:03.044461 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 23:52:03.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:52:03.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:52:03.1
  I0112 23:52:03.104393 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  W0112 23:52:05.665684      23 warnings.go:70] unknown field "alpha"
  W0112 23:52:05.665735      23 warnings.go:70] unknown field "beta"
  W0112 23:52:05.665748      23 warnings.go:70] unknown field "delta"
  W0112 23:52:05.665759      23 warnings.go:70] unknown field "epsilon"
  W0112 23:52:05.665770      23 warnings.go:70] unknown field "gamma"
  I0112 23:52:06.238832 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2547" for this suite. @ 01/12/25 23:52:06.243
• [3.221 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/12/25 23:52:06.265
  I0112 23:52:06.265662 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:52:06.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:52:06.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:52:06.306
  I0112 23:52:06.311177 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: creating the pod @ 01/12/25 23:52:06.311
  STEP: submitting the pod to kubernetes @ 01/12/25 23:52:06.311
  I0112 23:52:08.361736 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2923" for this suite. @ 01/12/25 23:52:08.366
• [2.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/12/25 23:52:08.387
  I0112 23:52:08.387823 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename subpath @ 01/12/25 23:52:08.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:52:08.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:52:08.43
  STEP: Setting up data @ 01/12/25 23:52:08.436
  STEP: Creating pod pod-subpath-test-configmap-fm85 @ 01/12/25 23:52:08.476
  STEP: Creating a pod to test atomic-volume-subpath @ 01/12/25 23:52:08.476
  STEP: Saw pod success @ 01/12/25 23:52:32.57
  I0112 23:52:32.576848 23 output.go:207] Trying to get logs from node ubuntu pod pod-subpath-test-configmap-fm85 container test-container-subpath-configmap-fm85: <nil>
  STEP: delete the pod @ 01/12/25 23:52:32.588
  STEP: Deleting pod pod-subpath-test-configmap-fm85 @ 01/12/25 23:52:32.632
  I0112 23:52:32.632995 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-fm85" in namespace "subpath-7408"
  I0112 23:52:32.637986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7408" for this suite. @ 01/12/25 23:52:32.642
• [24.270 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/12/25 23:52:32.657
  I0112 23:52:32.657549 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:52:32.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:52:32.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:52:32.689
  STEP: Creating configMap with name cm-test-opt-del-15449d9f-eeb4-415a-9a79-619f45407501 @ 01/12/25 23:52:32.698
  STEP: Creating configMap with name cm-test-opt-upd-41058031-6a55-45e5-b288-912e8b36c171 @ 01/12/25 23:52:32.711
  STEP: Creating the pod @ 01/12/25 23:52:32.725
  STEP: Deleting configmap cm-test-opt-del-15449d9f-eeb4-415a-9a79-619f45407501 @ 01/12/25 23:52:36.785
  STEP: Updating configmap cm-test-opt-upd-41058031-6a55-45e5-b288-912e8b36c171 @ 01/12/25 23:52:36.801
  STEP: Creating configMap with name cm-test-opt-create-b5e982b6-d7d1-44a3-8377-14eef576ae6b @ 01/12/25 23:52:36.813
  STEP: waiting to observe update in volume @ 01/12/25 23:52:36.825
  I0112 23:53:57.280383 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1343" for this suite. @ 01/12/25 23:53:57.285
• [84.645 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/12/25 23:53:57.302
  I0112 23:53:57.302315 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:53:57.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:53:57.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:53:57.337
  STEP: Creating secret with name secret-test-14ce95fb-0071-44b8-aabe-b3a205b2e71a @ 01/12/25 23:53:57.342
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:53:57.356
  STEP: Saw pod success @ 01/12/25 23:54:01.388
  I0112 23:54:01.393832 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-122d452e-52d6-467d-8028-b8228cc23e34 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/12/25 23:54:01.402
  I0112 23:54:01.453478 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3993" for this suite. @ 01/12/25 23:54:01.458
• [4.171 seconds]
------------------------------
SSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 01/12/25 23:54:01.473
  I0112 23:54:01.473429 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename fake-node @ 01/12/25 23:54:01.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:01.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:01.51
  STEP: Create "e2e-fake-node-gxhtc" @ 01/12/25 23:54:01.514
  STEP: Getting "e2e-fake-node-gxhtc" @ 01/12/25 23:54:01.527
  STEP: Patching "e2e-fake-node-gxhtc" @ 01/12/25 23:54:01.558
  STEP: Listing nodes with LabelSelector "e2e-fake-node-gxhtc=patched" @ 01/12/25 23:54:01.581
  STEP: Updating "e2e-fake-node-gxhtc" @ 01/12/25 23:54:01.586
  STEP: Delete "e2e-fake-node-gxhtc" @ 01/12/25 23:54:01.603
  STEP: Confirm deletion of "e2e-fake-node-gxhtc" @ 01/12/25 23:54:01.631
  I0112 23:54:01.635285 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-905" for this suite. @ 01/12/25 23:54:01.639
• [0.178 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/12/25 23:54:01.651
  I0112 23:54:01.651829 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename ingress @ 01/12/25 23:54:01.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:01.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:01.689
  STEP: getting /apis @ 01/12/25 23:54:01.693
  STEP: getting /apis/networking.k8s.io @ 01/12/25 23:54:01.697
  STEP: getting /apis/networking.k8s.iov1 @ 01/12/25 23:54:01.698
  STEP: creating @ 01/12/25 23:54:01.7
  STEP: getting @ 01/12/25 23:54:01.765
  STEP: listing @ 01/12/25 23:54:01.772
  STEP: watching @ 01/12/25 23:54:01.778
  I0112 23:54:01.778236 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/12/25 23:54:01.78
  STEP: cluster-wide watching @ 01/12/25 23:54:01.786
  I0112 23:54:01.786227 23 ingress.go:198] starting watch
  STEP: patching @ 01/12/25 23:54:01.788
  STEP: updating @ 01/12/25 23:54:01.814
  I0112 23:54:01.833228 23 ingress.go:221] waiting for watch events with expected annotations
  I0112 23:54:01.833413 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/12/25 23:54:01.833
  STEP: updating /status @ 01/12/25 23:54:01.848
  STEP: get /status @ 01/12/25 23:54:01.867
  STEP: deleting @ 01/12/25 23:54:01.872
  STEP: deleting a collection @ 01/12/25 23:54:01.896
  I0112 23:54:01.947322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5783" for this suite. @ 01/12/25 23:54:01.951
• [0.321 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/12/25 23:54:01.973
  I0112 23:54:01.973172 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/12/25 23:54:01.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:02.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:02.014
  STEP: fetching the /apis discovery document @ 01/12/25 23:54:02.019
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/12/25 23:54:02.021
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/12/25 23:54:02.021
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/12/25 23:54:02.021
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/12/25 23:54:02.022
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/12/25 23:54:02.022
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/12/25 23:54:02.024
  I0112 23:54:02.024425 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3900" for this suite. @ 01/12/25 23:54:02.029
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 01/12/25 23:54:02.044
  I0112 23:54:02.044633 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:54:02.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:02.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:02.123
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/12/25 23:54:02.129
  I0112 23:54:02.129180 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-3764 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0112 23:54:02.249359 23 builder.go:146] stderr: ""
  I0112 23:54:02.249425 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/12/25 23:54:02.249
  I0112 23:54:02.253108 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-3764 delete pods e2e-test-httpd-pod'
  I0112 23:54:04.310303 23 builder.go:146] stderr: ""
  I0112 23:54:04.310406 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0112 23:54:04.310556 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3764" for this suite. @ 01/12/25 23:54:04.315
• [2.284 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/12/25 23:54:04.329
  I0112 23:54:04.329441 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename downward-api @ 01/12/25 23:54:04.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:04.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:04.372
  STEP: Creating a pod to test downward API volume plugin @ 01/12/25 23:54:04.376
  STEP: Saw pod success @ 01/12/25 23:54:08.407
  I0112 23:54:08.412771 23 output.go:207] Trying to get logs from node ubuntu pod downwardapi-volume-1020d60f-2dec-43ca-8324-4255475ac4f4 container client-container: <nil>
  STEP: delete the pod @ 01/12/25 23:54:08.42
  I0112 23:54:08.468588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9146" for this suite. @ 01/12/25 23:54:08.472
• [4.162 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 01/12/25 23:54:08.491
  I0112 23:54:08.491687 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 23:54:08.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:08.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:08.532
  I0112 23:54:08.563548 23 service_accounts.go:647] created pod
  STEP: Saw pod success @ 01/12/25 23:54:12.58
  I0112 23:54:42.581109 23 service_accounts.go:653] polling logs
  I0112 23:54:42.590443 23 service_accounts.go:663] Pod logs: 
  I0112 23:54:09.426258       1 log.go:245] OK: Got token
  I0112 23:54:09.426330       1 log.go:245] validating with in-cluster discovery
  I0112 23:54:09.426576       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0112 23:54:09.426627       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6630:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003a3600), NotBefore:(*jwt.NumericDate)(0xc0003a36f0), IssuedAt:(*jwt.NumericDate)(0xc0003a3610), ID:"4e3b5e13-3a96-4132-aee3-0b64d80af3aa"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6630", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"88720c83-c740-49aa-a679-3286e4dbdb41"}}}
  I0112 23:54:09.436670       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0112 23:54:09.440999       1 log.go:245] OK: Validated signature on JWT
  I0112 23:54:09.441084       1 log.go:245] OK: Got valid claims from token!
  I0112 23:54:09.441103       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-6630:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003a3d00), NotBefore:(*jwt.NumericDate)(0xc0003a3d28), IssuedAt:(*jwt.NumericDate)(0xc0003a3d08), ID:"4e3b5e13-3a96-4132-aee3-0b64d80af3aa"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6630", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"88720c83-c740-49aa-a679-3286e4dbdb41"}}}

  I0112 23:54:42.590574 23 service_accounts.go:667] completed pod
  I0112 23:54:42.606980 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6630" for this suite. @ 01/12/25 23:54:42.612
• [34.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/12/25 23:54:42.631
  I0112 23:54:42.631269 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pod-network-test @ 01/12/25 23:54:42.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:42.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:42.671
  STEP: Performing setup for networking test in namespace pod-network-test-1446 @ 01/12/25 23:54:42.676
  STEP: creating a selector @ 01/12/25 23:54:42.676
  STEP: Creating the service pods in kubernetes @ 01/12/25 23:54:42.676
  I0112 23:54:42.676141 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/12/25 23:54:56.78
  I0112 23:54:58.831613 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0112 23:54:58.831653 23 utils.go:496] Going to poll 10.1.243.232 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0112 23:54:58.835194 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.243.232:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1446 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:54:58.835252 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:54:58.835302 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1446/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.243.232%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0112 23:54:58.914347 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0112 23:54:58.914452 23 utils.go:496] Going to poll 10.1.152.83 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0112 23:54:58.918836 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.152.83:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1446 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0112 23:54:58.918913 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0112 23:54:58.919062 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1446/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.152.83%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0112 23:54:58.993155 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0112 23:54:58.993318 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1446" for this suite. @ 01/12/25 23:54:58.998
• [16.390 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/12/25 23:54:59.021
  I0112 23:54:59.021830 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/12/25 23:54:59.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:54:59.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:54:59.067
  STEP: Creating secret with name secret-test-bc193a44-8bb0-4060-8637-c64dafd57b36 @ 01/12/25 23:54:59.071
  STEP: Creating a pod to test consume secrets @ 01/12/25 23:54:59.081
  STEP: Saw pod success @ 01/12/25 23:55:03.109
  I0112 23:55:03.114491 23 output.go:207] Trying to get logs from node ubuntu pod pod-secrets-75d73165-674d-49f9-a974-d41378401bdd container secret-env-test: <nil>
  STEP: delete the pod @ 01/12/25 23:55:03.123
  I0112 23:55:03.160768 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7433" for this suite. @ 01/12/25 23:55:03.165
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/12/25 23:55:03.179
  I0112 23:55:03.179550 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename security-context @ 01/12/25 23:55:03.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:55:03.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:55:03.232
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/12/25 23:55:03.237
  STEP: Saw pod success @ 01/12/25 23:55:07.27
  I0112 23:55:07.276471 23 output.go:207] Trying to get logs from node ubuntu pod security-context-482472d9-c135-48a9-85e7-4f0d6a5ebeea container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:55:07.287
  I0112 23:55:07.328918 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4924" for this suite. @ 01/12/25 23:55:07.333
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 01/12/25 23:55:07.348
  I0112 23:55:07.348278 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/12/25 23:55:07.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:55:07.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:55:07.383
  STEP: creating a ServiceAccount @ 01/12/25 23:55:07.389
  STEP: watching for the ServiceAccount to be added @ 01/12/25 23:55:07.405
  STEP: patching the ServiceAccount @ 01/12/25 23:55:07.407
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/12/25 23:55:07.423
  STEP: deleting the ServiceAccount @ 01/12/25 23:55:07.428
  I0112 23:55:07.461023 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2078" for this suite. @ 01/12/25 23:55:07.465
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/12/25 23:55:07.478
  I0112 23:55:07.478272 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/12/25 23:55:07.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:55:07.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:55:07.512
  STEP: create the container to handle the HTTPGet hook request. @ 01/12/25 23:55:07.52
  STEP: create the pod with lifecycle hook @ 01/12/25 23:55:09.546
  STEP: delete the pod with lifecycle hook @ 01/12/25 23:55:11.581
  STEP: check prestop hook @ 01/12/25 23:55:13.622
  I0112 23:55:13.639788 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9965" for this suite. @ 01/12/25 23:55:13.644
• [6.183 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/12/25 23:55:13.661
  I0112 23:55:13.661539 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 23:55:13.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:55:13.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:55:13.705
  STEP: Creating pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487 @ 01/12/25 23:55:13.71
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 23:55:15.734
  I0112 23:55:15.737911 23 container_probe.go:1749] Initial restart count of pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 is 0
  I0112 23:55:15.741444 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:17.748558 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:19.752875 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:21.758102 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:23.763865 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:25.769107 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:27.774481 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:29.780439 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:31.784923 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:33.790473 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:35.794284 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:37.799869 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:39.805456 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:41.811492 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:43.817178 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:45.821775 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:47.830675 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:49.836263 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:51.840175 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:53.845541 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:55.852213 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:57.856306 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:55:59.862313 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:56:01.867263 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:56:03.872527 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:56:05.878583 23 container_probe.go:1759] Get pod busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 in namespace container-probe-6487
  I0112 23:56:05.878653 23 container_probe.go:1763] Restart count of pod container-probe-6487/busybox-20bffc53-9a7f-4b2d-8888-876fea30bd35 is now 1 (50.140645273s elapsed)
  STEP: deleting the pod @ 01/12/25 23:56:05.878
  I0112 23:56:05.925403 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6487" for this suite. @ 01/12/25 23:56:05.93
• [52.283 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 01/12/25 23:56:05.945
  I0112 23:56:05.945276 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:56:05.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:56:05.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:56:05.982
  STEP: creating Agnhost RC @ 01/12/25 23:56:05.986
  I0112 23:56:05.986340 23 kubectl.go:1534] namespace kubectl-4988
  I0112 23:56:05.986390 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-4988 create -f -'
  I0112 23:56:06.135104 23 builder.go:146] stderr: ""
  I0112 23:56:06.135190 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/12/25 23:56:06.135
  I0112 23:56:07.141513 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:56:07.141601 23 framework.go:733] Found 0 / 1
  I0112 23:56:08.140373 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:56:08.140419 23 framework.go:733] Found 1 / 1
  I0112 23:56:08.140440 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0112 23:56:08.144067 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:56:08.144134 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 23:56:08.144153 23 kubectl.go:1541] wait on agnhost-primary startup in kubectl-4988 
  I0112 23:56:08.144215 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-4988 logs agnhost-primary-x2nfh agnhost-primary'
  I0112 23:56:08.240019 23 builder.go:146] stderr: ""
  I0112 23:56:08.240089 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/12/25 23:56:08.24
  I0112 23:56:08.240298 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-4988 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0112 23:56:08.344526 23 builder.go:146] stderr: ""
  I0112 23:56:08.344577 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0112 23:56:08.348339 23 utils.go:1203] Service rm2 in namespace kubectl-4988 found.
  STEP: exposing service @ 01/12/25 23:56:10.359
  I0112 23:56:10.359266 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-4988 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0112 23:56:10.470771 23 builder.go:146] stderr: ""
  I0112 23:56:10.470813 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0112 23:56:10.475204 23 utils.go:1203] Service rm3 in namespace kubectl-4988 found.
  I0112 23:56:12.483778 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4988" for this suite. @ 01/12/25 23:56:12.488
• [6.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/12/25 23:56:12.503
  I0112 23:56:12.503786 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename chunking @ 01/12/25 23:56:12.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:56:12.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:56:12.537
  STEP: creating a large number of resources @ 01/12/25 23:56:12.541
  STEP: retrieving those results in paged fashion several times @ 01/12/25 23:56:30.223
  I0112 23:56:30.260917 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0112 23:56:30.313123 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0112 23:56:30.363550 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0112 23:56:30.412727 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0112 23:56:30.463331 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0112 23:56:30.510852 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0112 23:56:30.561325 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0112 23:56:30.613242 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0112 23:56:30.662455 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0112 23:56:30.711304 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0112 23:56:30.762775 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0112 23:56:30.812706 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0112 23:56:30.861772 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0112 23:56:30.911454 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0112 23:56:30.961271 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0112 23:56:31.012906 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0112 23:56:31.060573 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0112 23:56:31.110043 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0112 23:56:31.160429 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0112 23:56:31.210210 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0112 23:56:31.260615 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0112 23:56:31.309894 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0112 23:56:31.360139 23 chunking.go:98] Retrieved 17/17 results with rv 37702 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0112 23:56:31.410124 23 chunking.go:98] Retrieved 9/17 results with rv 37702 and continue 
  I0112 23:56:31.463898 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0112 23:56:31.512740 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0112 23:56:31.561360 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0112 23:56:31.611592 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0112 23:56:31.662564 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0112 23:56:31.713649 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0112 23:56:31.760979 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0112 23:56:31.811379 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0112 23:56:31.861320 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0112 23:56:31.912738 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0112 23:56:31.962791 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0112 23:56:32.011253 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0112 23:56:32.061185 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0112 23:56:32.111442 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0112 23:56:32.161754 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0112 23:56:32.210390 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0112 23:56:32.261033 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0112 23:56:32.311544 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0112 23:56:32.361044 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0112 23:56:32.412399 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0112 23:56:32.460035 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0112 23:56:32.510302 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0112 23:56:32.563728 23 chunking.go:98] Retrieved 17/17 results with rv 37704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0112 23:56:32.609826 23 chunking.go:98] Retrieved 9/17 results with rv 37704 and continue 
  I0112 23:56:32.663066 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0112 23:56:32.713337 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0112 23:56:32.765087 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0112 23:56:32.815333 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0112 23:56:32.863523 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0112 23:56:32.915630 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0112 23:56:32.969281 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0112 23:56:33.013824 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0112 23:56:33.063755 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0112 23:56:33.113781 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0112 23:56:33.163490 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0112 23:56:33.213127 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0112 23:56:33.263480 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0112 23:56:33.311046 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0112 23:56:33.360846 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0112 23:56:33.410986 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0112 23:56:33.461068 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0112 23:56:33.510520 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0112 23:56:33.562386 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0112 23:56:33.613096 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0112 23:56:33.660852 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0112 23:56:33.710265 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0112 23:56:33.759986 23 chunking.go:98] Retrieved 17/17 results with rv 37709 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc3MDksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0112 23:56:33.809324 23 chunking.go:98] Retrieved 9/17 results with rv 37709 and continue 
  STEP: retrieving those results all at once @ 01/12/25 23:56:33.809
  I0112 23:56:33.871628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8633" for this suite. @ 01/12/25 23:56:33.909
• [21.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/12/25 23:56:33.978
  I0112 23:56:33.978496 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename emptydir @ 01/12/25 23:56:33.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:56:34.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:56:34.035
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/12/25 23:56:34.04
  STEP: Saw pod success @ 01/12/25 23:56:38.08
  I0112 23:56:38.084890 23 output.go:207] Trying to get logs from node ubuntu pod pod-2aee682c-cf8f-4314-8b42-b23b8c6358eb container test-container: <nil>
  STEP: delete the pod @ 01/12/25 23:56:38.093
  I0112 23:56:38.126450 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9659" for this suite. @ 01/12/25 23:56:38.131
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/12/25 23:56:38.145
  I0112 23:56:38.146021 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-watch @ 01/12/25 23:56:38.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:56:38.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:56:38.187
  I0112 23:56:38.192154 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Creating first CR  @ 01/12/25 23:56:40.752
  I0112 23:56:40.765188 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T23:56:40Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T23:56:40Z]] name:name1 resourceVersion:37882 uid:6193634a-3366-416b-9632-addddd37dee3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/12/25 23:56:50.769
  I0112 23:56:50.784206 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T23:56:50Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T23:56:50Z]] name:name2 resourceVersion:38178 uid:95649f22-c3f9-415c-acad-99105d2ebd2b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/12/25 23:57:00.787
  I0112 23:57:00.800056 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T23:56:40Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T23:57:00Z]] name:name1 resourceVersion:38192 uid:6193634a-3366-416b-9632-addddd37dee3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/12/25 23:57:10.8
  I0112 23:57:10.834987 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T23:56:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T23:57:10Z]] name:name2 resourceVersion:38207 uid:95649f22-c3f9-415c-acad-99105d2ebd2b] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/12/25 23:57:20.835
  I0112 23:57:20.861531 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T23:56:40Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T23:57:00Z]] name:name1 resourceVersion:38222 uid:6193634a-3366-416b-9632-addddd37dee3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/12/25 23:57:30.865
  I0112 23:57:30.893663 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-12T23:56:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-12T23:57:10Z]] name:name2 resourceVersion:38237 uid:95649f22-c3f9-415c-acad-99105d2ebd2b] num:map[num1:9223372036854775807 num2:1000000]]}
  I0112 23:57:41.442670 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6702" for this suite. @ 01/12/25 23:57:41.446
• [63.332 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/12/25 23:57:41.477
  I0112 23:57:41.477632 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename field-validation @ 01/12/25 23:57:41.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:57:41.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:57:41.539
  I0112 23:57:41.558802 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  W0112 23:57:44.111332      23 warnings.go:70] unknown field "alpha"
  W0112 23:57:44.111405      23 warnings.go:70] unknown field "beta"
  W0112 23:57:44.111414      23 warnings.go:70] unknown field "delta"
  W0112 23:57:44.111420      23 warnings.go:70] unknown field "epsilon"
  W0112 23:57:44.111427      23 warnings.go:70] unknown field "gamma"
  I0112 23:57:44.692948 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9125" for this suite. @ 01/12/25 23:57:44.696
• [3.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/12/25 23:57:44.712
  I0112 23:57:44.712215 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/12/25 23:57:44.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:57:44.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:57:44.763
  STEP: creating @ 01/12/25 23:57:44.767
  STEP: getting @ 01/12/25 23:57:44.807
  STEP: listing in namespace @ 01/12/25 23:57:44.811
  STEP: patching @ 01/12/25 23:57:44.815
  STEP: deleting @ 01/12/25 23:57:44.857
  I0112 23:57:44.874107 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3873" for this suite. @ 01/12/25 23:57:44.878
• [0.181 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/12/25 23:57:44.893
  I0112 23:57:44.893741 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pods @ 01/12/25 23:57:44.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:57:44.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:57:44.936
  STEP: Create a pod @ 01/12/25 23:57:44.939
  STEP: patching /status @ 01/12/25 23:57:46.965
  I0112 23:57:46.980564 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0112 23:57:46.980770 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6216" for this suite. @ 01/12/25 23:57:46.985
• [2.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/12/25 23:57:47
  I0112 23:57:47.000550 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename configmap @ 01/12/25 23:57:47.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:57:47.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:57:47.039
  STEP: Creating configMap with name configmap-test-upd-f8a52087-773a-4069-be51-4ee9e1d63f7e @ 01/12/25 23:57:47.049
  STEP: Creating the pod @ 01/12/25 23:57:47.061
  STEP: Updating configmap configmap-test-upd-f8a52087-773a-4069-be51-4ee9e1d63f7e @ 01/12/25 23:57:49.106
  STEP: waiting to observe update in volume @ 01/12/25 23:57:49.13
  I0112 23:57:53.154852 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8630" for this suite. @ 01/12/25 23:57:53.159
• [6.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 01/12/25 23:57:53.179
  I0112 23:57:53.179844 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename kubectl @ 01/12/25 23:57:53.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:57:53.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:57:53.239
  STEP: creating Agnhost RC @ 01/12/25 23:57:53.244
  I0112 23:57:53.245054 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-7062 create -f -'
  I0112 23:57:53.413062 23 builder.go:146] stderr: ""
  I0112 23:57:53.413198 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/12/25 23:57:53.413
  I0112 23:57:54.417347 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:57:54.417405 23 framework.go:733] Found 0 / 1
  I0112 23:57:55.418168 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:57:55.418236 23 framework.go:733] Found 1 / 1
  I0112 23:57:55.418261 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/12/25 23:57:55.418
  I0112 23:57:55.422117 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:57:55.422175 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 23:57:55.422249 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3674463930 --namespace=kubectl-7062 patch pod agnhost-primary-wv2hz -p {"metadata":{"annotations":{"x":"y"}}}'
  I0112 23:57:55.514280 23 builder.go:146] stderr: ""
  I0112 23:57:55.514375 23 builder.go:147] stdout: "pod/agnhost-primary-wv2hz patched\n"
  STEP: checking annotations @ 01/12/25 23:57:55.514
  I0112 23:57:55.518523 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0112 23:57:55.518617 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0112 23:57:55.518802 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7062" for this suite. @ 01/12/25 23:57:55.523
• [2.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/12/25 23:57:55.546
  I0112 23:57:55.546624 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/12/25 23:57:55.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:57:55.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:57:55.58
  STEP: creating a Deployment @ 01/12/25 23:57:55.589
  STEP: waiting for Deployment to be created @ 01/12/25 23:57:55.604
  STEP: waiting for all Replicas to be Ready @ 01/12/25 23:57:55.605
  I0112 23:57:55.607664 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.607715 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.634401 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.634458 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.659416 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.659489 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.792417 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:55.792538 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0112 23:57:56.979871 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0112 23:57:56.979971 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0112 23:57:57.644018 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/12/25 23:57:57.644
  I0112 23:57:57.660468 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/12/25 23:57:57.66
  I0112 23:57:57.662638 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662689 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662709 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662722 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662741 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662764 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662894 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.662918 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 0
  I0112 23:57:57.663034 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:57:57.663065 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:57:57.663084 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.663102 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.663202 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.663232 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.713860 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.713918 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.772894 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.773049 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:57.825812 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:57:57.825864 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:57:57.873515 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:57:57.873651 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:57:59.050768 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:59.050823 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:57:59.144116 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  STEP: listing Deployments @ 01/12/25 23:57:59.144
  I0112 23:57:59.147751 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/12/25 23:57:59.147
  I0112 23:57:59.169623 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/12/25 23:57:59.169
  I0112 23:57:59.179049 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:57:59.208562 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:57:59.314444 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:57:59.414385 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:57:59.506453 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:57:59.532320 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:58:00.671414 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:58:01.038597 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:58:01.319557 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:58:01.360466 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0112 23:58:02.713918 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/12/25 23:58:02.849
  STEP: fetching the DeploymentStatus @ 01/12/25 23:58:02.871
  I0112 23:58:02.878512 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:58:02.878545 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:58:02.878585 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:58:02.878747 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:58:02.879092 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:58:02.879147 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 1
  I0112 23:58:02.879170 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:58:02.879397 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 3
  I0112 23:58:02.879437 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:58:02.879468 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 2
  I0112 23:58:02.879702 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-3568 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/12/25 23:58:02.879
  I0112 23:58:02.903761 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.903834 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.903894 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.903972 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904313 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904405 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904456 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904484 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904727 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904799 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904823 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.904996 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.905183 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.905319 23 deployment.go:475] observed event type MODIFIED
  I0112 23:58:02.909259 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0112 23:58:02.914490 23 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56a69b04-5b8d-41fa-a166-ea529138b95e",
      ResourceVersion: (string) (len=5) "38487",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323075,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0541a2ca-1460-4b6d-8bcb-22981712572a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323078,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 35 34 31  61 32 63 61 2d 31 34 36  |":\"0541a2ca-146|
              00000130  30 2d 34 62 36 64 2d 38  62 63 62 2d 32 32 39 38  |0-4b6d-8bcb-2298|
              00000140  31 37 31 32 35 37 32 61  5c 22 7d 22 3a 7b 7d 7d  |1712572a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0112 23:58:02.923785 23 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f1155aa-ef8c-4dce-a9a5-165f8774aa0e",
      ResourceVersion: (string) (len=5) "38600",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0541a2ca-1460-4b6d-8bcb-22981712572a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 35 34 31  61 32 63 61 2d 31 34 36  |":\"0541a2ca-146|
              00000130  30 2d 34 62 36 64 2d 38  62 63 62 2d 32 32 39 38  |0-4b6d-8bcb-2298|
              00000140  31 37 31 32 35 37 32 61  5c 22 7d 22 3a 7b 7d 7d  |1712572a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0112 23:58:02.932994 23 deployment.go:669] pod: "test-deployment-79899bcfcc-jgm9z":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-jgm9z",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73a525f3-0f60-4e19-9581-209bbbdd1ac7",
      ResourceVersion: (string) (len=5) "38554",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d89272de8e17965bb669de8f4d55735c3dad3143333d75c91bedfc45ca17a84c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.193/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.193/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "2f1155aa-ef8c-4dce-a9a5-165f8774aa0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 66 31 31 35 35 61 61  |uid\":\"2f1155aa|
              000000a0  2d 65 66 38 63 2d 34 64  63 65 2d 61 39 61 35 2d  |-ef8c-4dce-a9a5-|
              000000b0  31 36 35 66 38 37 37 34  61 61 30 65 5c 22 7d 22  |165f8774aa0e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 31  39 33 5c 22 7d 22 3a 7b  |.1.243.193\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2gxh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2gxh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.193",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.193"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872323080,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0d36f257f5070da499ec2b4dc39dad1e83471665c64475cc71361be2b251d064",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v2gxh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0112 23:58:02.937995 23 deployment.go:669] pod: "test-deployment-79899bcfcc-swgkx":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-swgkx",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd6cb2f6-1b0a-40fc-844a-0a33751cef66",
      ResourceVersion: (string) (len=5) "38599",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7f9da591ffa3c9c6b4ba071982cd0bd13a9e0a40e2d1501a46047ee829ce9ca6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.152.100/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.152.100/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "2f1155aa-ef8c-4dce-a9a5-165f8774aa0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 66 31 31 35 35 61 61  |uid\":\"2f1155aa|
              000000a0  2d 65 66 38 63 2d 34 64  63 65 2d 61 39 61 35 2d  |-ef8c-4dce-a9a5-|
              000000b0  31 36 35 66 38 37 37 34  61 61 30 65 5c 22 7d 22  |165f8774aa0e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 31  30 30 5c 22 7d 22 3a 7b  |.1.152.100\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hvplj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hvplj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=12) "10.1.152.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.152.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872323082,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9e2d3ae0a682d791fecbf1aea5c84072f1bb77369fdbabf50f4b7a99a770ea78",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hvplj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0112 23:58:02.942142 23 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "525064c6-eae2-4ed4-b335-bc832fa4cd92",
      ResourceVersion: (string) (len=5) "38608",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "0541a2ca-1460-4b6d-8bcb-22981712572a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 30 35 34 31  61 32 63 61 2d 31 34 36  |":\"0541a2ca-146|
              00000130  30 2d 34 62 36 64 2d 38  62 63 62 2d 32 32 39 38  |0-4b6d-8bcb-2298|
              00000140  31 37 31 32 35 37 32 61  5c 22 7d 22 3a 7b 7d 7d  |1712572a\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0112 23:58:02.950943 23 deployment.go:669] pod: "test-deployment-f78d658f9-fprkq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-fprkq",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-3568",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f70a3888-8a10-48ad-987a-1f6bb3ca39cd",
      ResourceVersion: (string) (len=5) "38604",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e578885fb5057ecdb7413a5ff95506c92f242dc67465c6cec3c0807c6a1b47ff",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.152.79/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.152.79/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "525064c6-eae2-4ed4-b335-bc832fa4cd92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 32 35 30 36 34 63 36  |uid\":\"525064c6|
              000000a0  2d 65 61 65 32 2d 34 65  64 34 2d 62 33 33 35 2d  |-eae2-4ed4-b335-|
              000000b0  62 63 38 33 32 66 61 34  63 64 39 32 5c 22 7d 22  |bc832fa4cd92\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 31 35 32 2e 37  39 5c 22 7d 22 3a 7b 22  |.1.152.79\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gsj5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gsj5z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "ubuntu2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.207.20",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.207.20"
        }
      },
      PodIP: (string) (len=11) "10.1.152.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.152.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872323080,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://c4b086861efcd7c1ee3631b64335ac49b84c833a9ebcd2e4e6171f9a3d132159",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gsj5z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0112 23:58:02.956037 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3568" for this suite. @ 01/12/25 23:58:02.962
• [7.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/12/25 23:58:02.997
  I0112 23:58:02.997419 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename init-container @ 01/12/25 23:58:02.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:58:03.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:58:03.031
  STEP: creating the pod @ 01/12/25 23:58:03.06
  I0112 23:58:03.060498 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0112 23:58:08.349815 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7195" for this suite. @ 01/12/25 23:58:08.355
• [5.389 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/12/25 23:58:08.386
  I0112 23:58:08.386719 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/12/25 23:58:08.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/12/25 23:58:08.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/12/25 23:58:08.429
  STEP: Creating pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804 @ 01/12/25 23:58:08.433
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/12/25 23:58:10.468
  I0112 23:58:10.473119 23 container_probe.go:1749] Initial restart count of pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 is 0
  I0112 23:58:10.477596 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:12.483636 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:14.490428 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:16.495452 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:18.502368 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:20.508368 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:22.512614 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:24.519313 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:26.524768 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:28.530168 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:30.537517 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:32.545301 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:34.551023 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:36.555569 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:38.559521 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:40.565023 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:42.595741 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:44.600205 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:46.604874 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:48.611189 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:50.620388 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:52.627145 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:54.635792 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:56.642169 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:58:58.647372 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:00.652536 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:02.658369 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:04.663283 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:06.668840 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:08.674839 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:10.680793 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:12.685383 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:14.691490 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:16.697296 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:18.703656 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:20.709053 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:22.713832 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:24.719915 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:26.729078 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:28.733481 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:30.739356 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:32.748364 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:34.754599 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:36.760601 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:38.767760 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:40.773148 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:42.781364 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:44.786397 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:46.791391 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:48.797630 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:50.804807 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:52.810214 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:54.816525 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:56.821656 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0112 23:59:58.827425 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:00.832252 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:02.838556 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:04.844690 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:06.849242 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:08.854636 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:10.860411 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:12.866252 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:14.874452 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:16.880620 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:18.885370 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:20.891295 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:22.896180 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:24.901520 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:26.906648 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:28.912359 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:30.918093 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:32.923709 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:34.932784 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:36.938160 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:38.943688 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:40.949256 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:42.954190 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:44.960101 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:46.965883 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:48.972416 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:50.977645 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:52.982582 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:54.988750 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:56.996421 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:00:59.004237 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:01.010514 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:03.014479 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:05.021243 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:07.028530 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:09.033612 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:11.038583 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:13.075414 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:15.080473 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:17.085824 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:19.090167 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:21.094499 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:23.102512 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:25.107461 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:27.112131 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:29.121611 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:31.126826 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:33.132407 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:35.138326 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:37.142780 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:39.148744 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:41.154742 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:43.161656 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:45.169247 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:47.174278 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:49.179467 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:51.187881 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:53.192565 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:55.197631 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:57.203358 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:01:59.208653 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:02:01.216393 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:02:03.222615 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:02:05.228051 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:02:07.236838 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  I0113 00:02:09.243994 23 container_probe.go:1759] Get pod test-webserver-d99e1447-a958-44bb-a82f-9c6506ada357 in namespace container-probe-804
  STEP: deleting the pod @ 01/13/25 00:02:11.245
  I0113 00:02:11.294439 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-804" for this suite. @ 01/13/25 00:02:11.299
• [242.970 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/13/25 00:02:11.356
  I0113 00:02:11.356794 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename namespaces @ 01/13/25 00:02:11.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:11.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:11.395
  STEP: creating a Namespace @ 01/13/25 00:02:11.4
  STEP: patching the Namespace @ 01/13/25 00:02:11.489
  STEP: get the Namespace and ensuring it has the label @ 01/13/25 00:02:11.505
  I0113 00:02:11.510595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2154" for this suite. @ 01/13/25 00:02:11.515
  STEP: Destroying namespace "nspatchtest-57ca6500-445b-4324-8616-336405cd94ff-2241" for this suite. @ 01/13/25 00:02:11.54
• [0.196 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 01/13/25 00:02:11.552
  I0113 00:02:11.553027 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-selectable-fields @ 01/13/25 00:02:11.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:11.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:11.611
  STEP: Setting up server cert @ 01/13/25 00:02:11.616
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/13/25 00:02:12.313
  STEP: Deploying the custom resource conversion webhook pod @ 01/13/25 00:02:12.33
  STEP: Wait for the deployment to be ready @ 01/13/25 00:02:12.356
  I0113 00:02:12.364483 23 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/13/25 00:02:14.383
  STEP: Verifying the service has paired with the endpoint @ 01/13/25 00:02:14.412
  I0113 00:02:15.413057 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 01/13/25 00:02:15.423
  I0113 00:02:15.423679 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Creating a custom resource conversion webhook @ 01/13/25 00:02:15.946
  STEP: Watching with field selectors @ 01/13/25 00:02:17.999
  STEP: Registering informers with field selectors @ 01/13/25 00:02:18.005
  STEP: Creating custom resources @ 01/13/25 00:02:18.005
  STEP: Listing v2 custom resources with field selector host=host1 @ 01/13/25 00:02:18.053
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 01/13/25 00:02:18.063
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 01/13/25 00:02:18.072
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 01/13/25 00:02:18.077
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 01/13/25 00:02:18.082
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 01/13/25 00:02:18.088
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 01/13/25 00:02:18.088
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 01/13/25 00:02:18.088
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 01/13/25 00:02:18.088
  STEP: Deleting one custom resources to ensure that deletions are observed @ 01/13/25 00:02:18.088
  STEP: Updating one custom resources to ensure that deletions are observed @ 01/13/25 00:02:18.114
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 01/13/25 00:02:18.139
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 01/13/25 00:02:18.145
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 01/13/25 00:02:18.152
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 01/13/25 00:02:18.158
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 01/13/25 00:02:18.158
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 01/13/25 00:02:18.158
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 01/13/25 00:02:18.158
  I0113 00:02:18.813856 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-3118" for this suite. @ 01/13/25 00:02:18.817
• [7.283 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/13/25 00:02:18.836
  I0113 00:02:18.836627 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/13/25 00:02:18.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:18.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:18.945
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/13/25 00:02:18.95
  I0113 00:02:18.951190 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/13/25 00:02:24.379
  I0113 00:02:24.380008 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0113 00:02:25.693438 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  I0113 00:02:31.108624 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3650" for this suite. @ 01/13/25 00:02:31.118
• [12.302 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/13/25 00:02:31.139
  I0113 00:02:31.139124 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename gc @ 01/13/25 00:02:31.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:31.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:31.177
  I0113 00:02:31.313427 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"cbb77b43-c48c-4502-a4c8-73300d9b67f4", Controller:(*bool)(0xc003576816), BlockOwnerDeletion:(*bool)(0xc003576817)}}
  I0113 00:02:31.330536 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"9e68f6a4-0594-443d-a28f-ac0c2e0555ec", Controller:(*bool)(0xc003576ad6), BlockOwnerDeletion:(*bool)(0xc003576ad7)}}
  I0113 00:02:31.342973 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"80cc0478-41c0-4411-a9a2-39041b31591e", Controller:(*bool)(0xc003576d8e), BlockOwnerDeletion:(*bool)(0xc003576d8f)}}
  I0113 00:02:36.370267 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-613" for this suite. @ 01/13/25 00:02:36.374
• [5.256 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/13/25 00:02:36.395
  I0113 00:02:36.395105 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replicaset @ 01/13/25 00:02:36.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:36.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:36.491
  STEP: Create a Replicaset @ 01/13/25 00:02:36.502
  STEP: Verify that the required pods have come up. @ 01/13/25 00:02:36.519
  I0113 00:02:36.524599 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0113 00:02:41.532740 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/13/25 00:02:41.532
  STEP: Getting /status @ 01/13/25 00:02:41.532
  I0113 00:02:41.538074 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/13/25 00:02:41.538
  I0113 00:02:41.554801 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/13/25 00:02:41.554
  I0113 00:02:41.557257 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0113 00:02:41.557416 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.557527 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.557735 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.557808 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8265 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0113 00:02:41.557841 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/13/25 00:02:41.557
  I0113 00:02:41.557894 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0113 00:02:41.571739 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/13/25 00:02:41.571
  I0113 00:02:41.574376 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0113 00:02:41.574584 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.574726 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.574839 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.574918 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8265 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0113 00:02:41.575172 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0113 00:02:41.575252 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8265 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0113 00:02:41.575277 23 replica_set.go:729] Replicaset test-rs has a patched status
  I0113 00:02:41.575447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8265" for this suite. @ 01/13/25 00:02:41.579
• [5.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 01/13/25 00:02:41.593
  I0113 00:02:41.593091 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename statefulset @ 01/13/25 00:02:41.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:41.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:41.634
  STEP: Creating service test in namespace statefulset-8953 @ 01/13/25 00:02:41.638
  STEP: Looking for a node to schedule stateful set and pod @ 01/13/25 00:02:41.648
  STEP: Creating pod with conflicting port in namespace statefulset-8953 @ 01/13/25 00:02:41.653
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8953 @ 01/13/25 00:02:41.681
  STEP: Creating statefulset with conflicting port in namespace statefulset-8953 @ 01/13/25 00:02:43.693
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8953 @ 01/13/25 00:02:43.706
  I0113 00:02:43.741446 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-8953, name: ss-0, uid: 30af11fc-9056-47a7-921d-60b0aea4702d, status phase: Pending. Waiting for statefulset controller to delete.
  I0113 00:02:43.787775 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-8953, name: ss-0, uid: 30af11fc-9056-47a7-921d-60b0aea4702d, status phase: Failed. Waiting for statefulset controller to delete.
  I0113 00:02:43.836098 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-8953, name: ss-0, uid: 30af11fc-9056-47a7-921d-60b0aea4702d, status phase: Failed. Waiting for statefulset controller to delete.
  I0113 00:02:43.850033 23 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-8953
  STEP: Removing pod with conflicting port in namespace statefulset-8953 @ 01/13/25 00:02:43.85
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8953 and will be in running state @ 01/13/25 00:02:43.879
  I0113 00:02:45.891484 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8953
  I0113 00:02:45.897284 23 rest.go:152] Scaling statefulset ss to 0
  I0113 00:02:55.930375 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0113 00:02:55.934171 23 rest.go:90] Deleting statefulset ss
  I0113 00:02:55.998281 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8953" for this suite. @ 01/13/25 00:02:56.002
• [14.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/13/25 00:02:56.034
  I0113 00:02:56.034160 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename endpointslice @ 01/13/25 00:02:56.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:56.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:56.074
  STEP: getting /apis @ 01/13/25 00:02:56.086
  STEP: getting /apis/discovery.k8s.io @ 01/13/25 00:02:56.092
  STEP: getting /apis/discovery.k8s.iov1 @ 01/13/25 00:02:56.094
  STEP: creating @ 01/13/25 00:02:56.095
  STEP: getting @ 01/13/25 00:02:56.159
  STEP: listing @ 01/13/25 00:02:56.163
  STEP: watching @ 01/13/25 00:02:56.166
  I0113 00:02:56.166775 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/13/25 00:02:56.168
  STEP: cluster-wide watching @ 01/13/25 00:02:56.172
  I0113 00:02:56.172114 23 endpointslice.go:459] starting watch
  STEP: patching @ 01/13/25 00:02:56.173
  STEP: updating @ 01/13/25 00:02:56.186
  I0113 00:02:56.202723 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0113 00:02:56.202779 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/13/25 00:02:56.202
  STEP: deleting a collection @ 01/13/25 00:02:56.223
  I0113 00:02:56.254027 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4224" for this suite. @ 01/13/25 00:02:56.258
• [0.238 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/13/25 00:02:56.272
  I0113 00:02:56.272395 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename pod-network-test @ 01/13/25 00:02:56.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:02:56.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:02:56.314
  STEP: Performing setup for networking test in namespace pod-network-test-6882 @ 01/13/25 00:02:56.318
  STEP: creating a selector @ 01/13/25 00:02:56.318
  STEP: Creating the service pods in kubernetes @ 01/13/25 00:02:56.318
  I0113 00:02:56.318854 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/13/25 00:03:10.424
  I0113 00:03:12.511295 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0113 00:03:12.511372 23 utils.go:496] Going to poll 10.1.243.239 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0113 00:03:12.515200 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.243.239 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6882 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0113 00:03:12.515278 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0113 00:03:12.515329 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6882/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.243.239+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0113 00:03:13.587166 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0113 00:03:13.587223 23 utils.go:496] Going to poll 10.1.152.124 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0113 00:03:13.590488 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.152.124 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6882 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0113 00:03:13.590544 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0113 00:03:13.590607 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6882/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.152.124+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0113 00:03:14.661571 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0113 00:03:14.661786 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6882" for this suite. @ 01/13/25 00:03:14.666
• [18.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/13/25 00:03:14.69
  I0113 00:03:14.690828 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/13/25 00:03:14.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:03:14.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:03:14.731
  STEP: creating a target pod @ 01/13/25 00:03:14.735
  STEP: adding an ephemeral container @ 01/13/25 00:03:16.769
  STEP: checking pod container endpoints @ 01/13/25 00:03:20.831
  I0113 00:03:20.831089 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2852 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0113 00:03:20.831120 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0113 00:03:20.831194 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2852/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0113 00:03:20.919122 23 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/13/25 00:03:20.93
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/13/25 00:03:20.935
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/13/25 00:03:20.951
  I0113 00:03:20.959778 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2852" for this suite. @ 01/13/25 00:03:20.965
• [6.305 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/13/25 00:03:20.996
  I0113 00:03:20.996189 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename init-container @ 01/13/25 00:03:20.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:03:21.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:03:21.061
  STEP: creating the pod @ 01/13/25 00:03:21.066
  I0113 00:03:21.066218 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0113 00:04:09.022848 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-76b624b3-a082-4c66-b880-ee24ebcaf4e3", GenerateName:"", Namespace:"init-container-2263", SelfLink:"", UID:"3639b3f0-77c2-423f-b175-403316fe849c", ResourceVersion:"39757", Generation:0, CreationTimestamp:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"66205842"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"b872424c29c2ddbf8b92a5c0fe5593d0571bf902590ad3b2cdc450656387d6ff", "cni.projectcalico.org/podIP":"10.1.243.252/32", "cni.projectcalico.org/podIPs":"10.1.243.252/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e3d128), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e3d158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 13, 0, 4, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e3d188), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-2qwr7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004256c60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2qwr7", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2qwr7", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2qwr7", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005d17448), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ubuntu", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003265320), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005d174d0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005d174f0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005d174f8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc005d174fc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000fbe430), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 13, 0, 3, 22, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.17.202.11", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.17.202.11"}}, PodIP:"10.1.243.252", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.243.252"}}, StartTime:time.Date(2025, time.January, 13, 0, 3, 21, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000045a40)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000045ab0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://01ae7f93e1617dd96ddb91668c0bddd4745a390602ba5a6f022e77b81a056af9", Started:(*bool)(0xc005d175aa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2qwr7", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fbe450)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004256ce0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc005d175bd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2qwr7", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fbe470)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004256cc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc005d1757f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-2qwr7", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000fbe440)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0113 00:04:09.023055 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2263" for this suite. @ 01/13/25 00:04:09.028
• [48.046 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/13/25 00:04:09.042
  I0113 00:04:09.042989 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename projected @ 01/13/25 00:04:09.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:04:09.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:04:09.089
  STEP: Creating configMap with name projected-configmap-test-volume-498f4690-11b5-4297-82ba-c821afb4f3d9 @ 01/13/25 00:04:09.096
  STEP: Creating a pod to test consume configMaps @ 01/13/25 00:04:09.116
  STEP: Saw pod success @ 01/13/25 00:04:13.148
  I0113 00:04:13.153039 23 output.go:207] Trying to get logs from node ubuntu pod pod-projected-configmaps-77bf4019-286e-490d-9834-02cfb75fc2ea container agnhost-container: <nil>
  STEP: delete the pod @ 01/13/25 00:04:13.16
  I0113 00:04:13.197666 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1050" for this suite. @ 01/13/25 00:04:13.202
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/13/25 00:04:13.217
  I0113 00:04:13.217480 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename watch @ 01/13/25 00:04:13.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:04:13.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:04:13.251
  STEP: creating a watch on configmaps @ 01/13/25 00:04:13.256
  STEP: creating a new configmap @ 01/13/25 00:04:13.258
  STEP: modifying the configmap once @ 01/13/25 00:04:13.279
  STEP: closing the watch once it receives two notifications @ 01/13/25 00:04:13.294
  I0113 00:04:13.294793 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9004  b6a6dd47-c67d-4891-ac9c-25373c315c1c 39794 0 2025-01-13 00:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-13 00:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0113 00:04:13.294901 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9004  b6a6dd47-c67d-4891-ac9c-25373c315c1c 39795 0 2025-01-13 00:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-13 00:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/13/25 00:04:13.295
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/13/25 00:04:13.309
  STEP: deleting the configmap @ 01/13/25 00:04:13.311
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/13/25 00:04:13.323
  I0113 00:04:13.324111 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9004  b6a6dd47-c67d-4891-ac9c-25373c315c1c 39796 0 2025-01-13 00:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-13 00:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0113 00:04:13.324236 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9004  b6a6dd47-c67d-4891-ac9c-25373c315c1c 39797 0 2025-01-13 00:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-13 00:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0113 00:04:13.324333 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9004" for this suite. @ 01/13/25 00:04:13.328
• [0.124 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/13/25 00:04:13.342
  I0113 00:04:13.342679 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename discovery @ 01/13/25 00:04:13.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:04:13.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:04:13.379
  STEP: Setting up server cert @ 01/13/25 00:04:13.385
  STEP: Requesting APIResourceList from "/api/v1" @ 01/13/25 00:04:13.855
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/13/25 00:04:13.858
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/13/25 00:04:13.859
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/13/25 00:04:13.861
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/13/25 00:04:13.863
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/13/25 00:04:13.864
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/13/25 00:04:13.866
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/13/25 00:04:13.867
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/13/25 00:04:13.869
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/13/25 00:04:13.87
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/13/25 00:04:13.873
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/13/25 00:04:13.874
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/13/25 00:04:13.876
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/13/25 00:04:13.877
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/13/25 00:04:13.879
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/13/25 00:04:13.88
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/13/25 00:04:13.882
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/13/25 00:04:13.883
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/13/25 00:04:13.885
  I0113 00:04:13.887349 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2299" for this suite. @ 01/13/25 00:04:13.891
• [0.571 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/13/25 00:04:13.913
  I0113 00:04:13.913606 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename replication-controller @ 01/13/25 00:04:13.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:04:13.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:04:13.96
  STEP: creating a ReplicationController @ 01/13/25 00:04:13.967
  STEP: waiting for RC to be added @ 01/13/25 00:04:13.987
  STEP: waiting for available Replicas @ 01/13/25 00:04:13.987
  STEP: patching ReplicationController @ 01/13/25 00:04:15.148
  STEP: waiting for RC to be modified @ 01/13/25 00:04:15.166
  STEP: patching ReplicationController status @ 01/13/25 00:04:15.167
  STEP: waiting for RC to be modified @ 01/13/25 00:04:15.179
  STEP: waiting for available Replicas @ 01/13/25 00:04:15.179
  STEP: fetching ReplicationController status @ 01/13/25 00:04:15.191
  STEP: patching ReplicationController scale @ 01/13/25 00:04:15.195
  STEP: waiting for RC to be modified @ 01/13/25 00:04:15.209
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/13/25 00:04:15.209
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/13/25 00:04:16.593
  STEP: updating ReplicationController status @ 01/13/25 00:04:16.597
  STEP: waiting for RC to be modified @ 01/13/25 00:04:16.619
  STEP: listing all ReplicationControllers @ 01/13/25 00:04:16.62
  STEP: checking that ReplicationController has expected values @ 01/13/25 00:04:16.624
  STEP: deleting ReplicationControllers by collection @ 01/13/25 00:04:16.624
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/13/25 00:04:16.645
  I0113 00:04:16.729918 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0113 00:04:16.730068      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1710" for this suite. @ 01/13/25 00:04:16.733
• [2.833 seconds]
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/13/25 00:04:16.747
  I0113 00:04:16.747083 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename events @ 01/13/25 00:04:16.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:04:16.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:04:16.805
  STEP: creating a test event @ 01/13/25 00:04:16.811
  STEP: listing all events in all namespaces @ 01/13/25 00:04:16.826
  STEP: patching the test event @ 01/13/25 00:04:16.833
  STEP: fetching the test event @ 01/13/25 00:04:16.85
  STEP: updating the test event @ 01/13/25 00:04:16.856
  STEP: getting the test event @ 01/13/25 00:04:16.88
  STEP: deleting the test event @ 01/13/25 00:04:16.886
  STEP: listing all events in all namespaces @ 01/13/25 00:04:16.907
  I0113 00:04:16.913726 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8347" for this suite. @ 01/13/25 00:04:16.92
• [0.190 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/13/25 00:04:16.937
  I0113 00:04:16.937581 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/13/25 00:04:16.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:04:16.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:04:16.984
  STEP: Creating secret with name s-test-opt-del-3ba19fa6-12e8-4afa-be1e-fa9c6a202433 @ 01/13/25 00:04:16.996
  STEP: Creating secret with name s-test-opt-upd-90f9435e-5ba9-4760-8c35-924e21b73a1b @ 01/13/25 00:04:17.009
  STEP: Creating the pod @ 01/13/25 00:04:17.02
  E0113 00:04:17.731327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:18.731701      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:19.732415      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:20.733380      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3ba19fa6-12e8-4afa-be1e-fa9c6a202433 @ 01/13/25 00:04:21.082
  STEP: Updating secret s-test-opt-upd-90f9435e-5ba9-4760-8c35-924e21b73a1b @ 01/13/25 00:04:21.095
  STEP: Creating secret with name s-test-opt-create-116f2e77-d4a5-4dd9-9837-192a9dfdb282 @ 01/13/25 00:04:21.108
  STEP: waiting to observe update in volume @ 01/13/25 00:04:21.119
  E0113 00:04:21.734615      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:22.735157      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:23.735403      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:24.735850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:25.736238      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:26.736705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:27.737191      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:28.738315      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:29.738714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:30.739496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:31.740125      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:32.740330      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:33.740436      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:34.741244      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:35.741851      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:36.742834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:37.743343      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:38.743724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:39.744104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:40.744548      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:41.745262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:42.746363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:43.746459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:44.746999      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:45.747094      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:46.747413      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:47.747468      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:48.747877      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:49.748914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:50.749322      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:51.749724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:52.749795      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:53.750912      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:54.751657      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:55.752194      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:56.752691      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:57.753203      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:58.753728      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:04:59.754651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:00.755039      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:01.755889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:02.756179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:03.757151      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:04.757816      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:05.758059      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:06.758505      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:07.759857      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:08.760509      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:09.761672      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:10.762045      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:11.762821      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:12.763104      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:13.763284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:14.763678      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:15.764120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:16.764641      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:17.764914      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:18.765296      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:19.766139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:20.766624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:21.767633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:22.768327      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:23.769574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:24.769860      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:25.770126      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:26.770557      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:27.770598      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:28.771120      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:29.771408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:30.771740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:31.771818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:32.773011      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:33.773451      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:34.773978      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:35.774186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:36.774458      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:37.774696      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:38.775122      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:39.775298      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:40.775829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:41.775853      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:42.776289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:43.776470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:44.777576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:45.778855      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:46.779411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:05:47.607054 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1810" for this suite. @ 01/13/25 00:05:47.612
• [90.689 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/13/25 00:05:47.627
  I0113 00:05:47.627177 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename secrets @ 01/13/25 00:05:47.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:05:47.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:05:47.662
  STEP: creating secret secrets-7608/secret-test-5c48a20c-a4f2-42ca-8c68-e3bbdd46d3dd @ 01/13/25 00:05:47.666
  STEP: Creating a pod to test consume secrets @ 01/13/25 00:05:47.678
  E0113 00:05:47.780256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:48.780534      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:49.781712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:50.782072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/13/25 00:05:51.719
  I0113 00:05:51.724295 23 output.go:207] Trying to get logs from node ubuntu pod pod-configmaps-d157ee39-eb04-4064-af1b-77690f5ae65c container env-test: <nil>
  STEP: delete the pod @ 01/13/25 00:05:51.734
  E0113 00:05:51.782234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:05:51.786446 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7608" for this suite. @ 01/13/25 00:05:51.791
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/13/25 00:05:51.804
  I0113 00:05:51.804882 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename container-probe @ 01/13/25 00:05:51.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:05:51.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:05:51.854
  STEP: Creating pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132 @ 01/13/25 00:05:51.859
  E0113 00:05:52.783457      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:53.783815      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/13/25 00:05:53.89
  I0113 00:05:53.894755 23 container_probe.go:1749] Initial restart count of pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd is 0
  I0113 00:05:53.898200 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:05:54.784253      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:55.784611      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:05:55.902865 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:05:56.785192      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:57.785388      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:05:57.909268 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:05:58.786201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:05:59.786471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:05:59.914705 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:00.786887      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:01.787337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:01.920279 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:02.787559      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:03.788121      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:03.926544 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:04.788405      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:05.789261      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:05.933132 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:06.789558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:07.790131      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:07.939498 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:08.790556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:09.791915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:09.946042 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:10.791900      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:11.792348      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:11.952192 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:12.793227      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:13.793472      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:13.959155 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:14.794078      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:15.794499      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:15.966915 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:16.795262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:17.795418      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:17.971714 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:18.795907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:19.796363      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:19.979300 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:20.796869      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:21.797257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:21.984844 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:22.798288      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:23.798546      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:23.990264 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:24.799516      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:25.800085      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:25.997710 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:26.800762      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:27.801293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:28.005505 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:28.801425      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:29.801807      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:30.011181 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:30.802000      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:31.802714      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:32.019306 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:32.803962      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:33.804210      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:34.024336 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:34.804411      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:35.804624      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:36.030668 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:36.805581      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:37.806325      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:38.036011 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:38.806836      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:39.807295      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:40.041986 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:40.807844      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:41.808454      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:42.048154 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:42.809139      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:43.809605      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:44.053486 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:44.810304      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:45.810777      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:46.058896 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:46.811760      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:47.812326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:48.063807 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:48.812748      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:49.813185      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:50.069564 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:50.813507      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:51.813992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:52.074042 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:52.814024      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:53.814309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:54.079465 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:54.815344      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:55.815729      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:56.084165 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:56.816047      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:57.816496      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:06:58.114685 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:06:58.816617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:06:59.817006      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:00.119463 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:00.817281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:01.817571      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:02.124259 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:02.818034      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:03.818335      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:04.129172 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:04.818876      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:05.819463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:06.135073 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:06.820067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:07.820481      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:08.143589 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:08.821333      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:09.821709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:10.147695 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:10.822205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:11.822694      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:12.152713 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:12.823649      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:13.824079      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:14.157575 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:14.824408      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:15.824992      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:16.163630 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:16.825234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:17.826069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:18.171124 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:18.827012      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:19.827668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:20.175858 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:20.827676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:21.828586      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:22.180581 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:22.828392      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:23.828850      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:24.188412 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:24.829050      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:25.829856      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:26.194331 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:26.830101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:27.830431      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:28.200455 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:28.831284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:29.831741      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:30.205603 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:30.832069      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:31.832731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:32.211220 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:32.833087      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:33.833427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:34.216544 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:34.834684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:35.835102      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:36.224458 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:36.835267      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:37.836100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:38.228778 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:38.836585      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:39.836909      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:40.234357 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:40.837138      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:41.837601      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:42.239079 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:42.837727      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:43.838171      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:44.243453 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:44.838282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:45.839023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:46.248500 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:46.839358      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:47.839838      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:48.255475 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:48.840257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:49.840792      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:50.261337 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:50.841922      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:51.842303      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:52.266118 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:52.842772      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:53.843101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:54.270903 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:54.843709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:55.844186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:56.280715 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:56.844426      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:57.844706      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:07:58.321195 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:07:58.845081      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:07:59.845440      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:00.327158 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:00.845740      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:01.846552      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:02.333290 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:02.847097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:03.847438      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:04.339425 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:04.848116      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:05.848538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:06.345317 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:06.849179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:07.850002      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:08.350705 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:08.850234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:09.850602      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:10.355283 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:10.850971      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:11.851474      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:12.360446 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:12.851849      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:13.852712      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:14.367436 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:14.853049      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:15.853656      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:16.372962 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:16.854705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:17.855143      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:18.381107 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:18.855461      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:19.855897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:20.388213 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:20.857095      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:21.857291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:22.394378 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:22.858036      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:23.858666      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:24.399340 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:24.859101      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:25.859311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:26.405109 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:26.859640      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:27.860291      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:28.411782 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:28.861374      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:29.861829      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:30.418036 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:30.862558      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:31.863100      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:32.424411 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:32.864256      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:33.864811      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:34.432396 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:34.865173      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:35.865544      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:36.436870 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:36.866699      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:37.867207      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:38.443050 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:38.867324      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:39.867503      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:40.450630 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:40.868293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:41.868665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:42.455996 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:42.869262      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:43.869556      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:44.463688 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:44.870205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:45.870625      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:46.468748 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:46.871798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:47.872132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:48.474808 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:48.872309      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:49.872621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:50.480895 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:50.873618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:51.874163      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:52.489119 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:52.875268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:53.875773      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:54.495410 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:54.876028      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:55.877297      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:56.500457 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:56.878234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:57.878675      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:08:58.505587 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:08:58.879117      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:08:59.879494      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:00.511294 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:00.879813      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:01.880356      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:02.515989 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:02.881251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:03.881668      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:04.520268 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:04.882048      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:05.883215      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:06.527264 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:06.884205      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:07.884802      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:08.533376 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:08.885023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:09.885618      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:10.539447 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:10.885906      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:11.886527      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:12.544567 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:12.887282      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:13.887705      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:14.551179 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:14.889127      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:15.889639      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:16.555181 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:16.889883      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:17.890567      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:18.561737 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:18.891270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:19.891651      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:20.567704 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:20.892404      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:21.893027      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:22.573132 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:22.893761      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:23.894186      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:24.578910 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:24.894294      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:25.894665      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:26.583596 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:26.895228      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:27.895582      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:28.588552 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:28.895970      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:29.896437      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:30.596443 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:30.897142      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:31.897715      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:32.604827 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:32.898086      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:33.898316      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:34.610204 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:34.898907      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:35.899482      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:36.618669 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:36.900352      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:37.900788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:38.624518 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:38.901188      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:39.901786      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:40.628803 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:40.902179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:41.902667      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:42.634018 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:42.903470      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:43.903915      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:44.638856 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:44.904189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:45.904555      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:46.646467 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:46.904959      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:47.905622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:48.652329 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:48.905684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:49.906124      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:50.657614 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:50.906270      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:51.906701      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:52.663078 23 container_probe.go:1759] Get pod liveness-def4c2b5-1ab8-4245-9498-215180f139dd in namespace container-probe-8132
  E0113 00:09:52.907317      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:53.907983      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 01/13/25 00:09:54.663
  I0113 00:09:54.702486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8132" for this suite. @ 01/13/25 00:09:54.708
• [242.952 seconds]
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/13/25 00:09:54.756
  I0113 00:09:54.756590 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename deployment @ 01/13/25 00:09:54.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:09:54.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:09:54.799
  STEP: creating a Deployment @ 01/13/25 00:09:54.817
  I0113 00:09:54.817352 23 deployment.go:507] Creating simple deployment test-deployment-qnj8r
  I0113 00:09:54.865851 23 deployment.go:223] new replicaset for deployment "test-deployment-qnj8r" is yet to be created
  E0113 00:09:54.908224      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:09:55.908566      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 01/13/25 00:09:56.881
  I0113 00:09:56.885339 23 deployment.go:532] Deployment test-deployment-qnj8r has Conditions: [{Available True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qnj8r-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/13/25 00:09:56.885
  E0113 00:09:56.909055      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:56.912061 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 13, 0, 9, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 13, 0, 9, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 13, 0, 9, 55, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 13, 0, 9, 54, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-qnj8r-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/13/25 00:09:56.912
  I0113 00:09:56.914443 23 deployment.go:579] Observed &Deployment event: ADDED
  I0113 00:09:56.914573 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qnj8r-6fb4c74686"}
  I0113 00:09:56.914681 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0113 00:09:56.914706 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qnj8r-6fb4c74686"}
  I0113 00:09:56.914719 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0113 00:09:56.914800 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0113 00:09:56.914816 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0113 00:09:56.914830 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qnj8r-6fb4c74686" is progressing.}
  I0113 00:09:56.914947 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0113 00:09:56.914979 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0113 00:09:56.914992 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qnj8r-6fb4c74686" has successfully progressed.}
  I0113 00:09:56.915063 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0113 00:09:56.915084 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0113 00:09:56.915096 23 deployment.go:575] Observed Deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qnj8r-6fb4c74686" has successfully progressed.}
  I0113 00:09:56.915109 23 deployment.go:572] Found Deployment test-deployment-qnj8r in namespace deployment-3401 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0113 00:09:56.915121 23 deployment.go:583] Deployment test-deployment-qnj8r has an updated status
  STEP: patching the Statefulset Status @ 01/13/25 00:09:56.915
  I0113 00:09:56.915158 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0113 00:09:56.928788 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/13/25 00:09:56.928
  I0113 00:09:56.931078 23 deployment.go:616] Observed &Deployment event: ADDED
  I0113 00:09:56.931144 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qnj8r-6fb4c74686"}
  I0113 00:09:56.931230 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0113 00:09:56.931271 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-qnj8r-6fb4c74686"}
  I0113 00:09:56.931286 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0113 00:09:56.931526 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0113 00:09:56.931607 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0113 00:09:56.931634 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:54 +0000 UTC 2025-01-13 00:09:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-qnj8r-6fb4c74686" is progressing.}
  I0113 00:09:56.931802 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0113 00:09:56.931871 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0113 00:09:56.931895 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qnj8r-6fb4c74686" has successfully progressed.}
  I0113 00:09:56.932061 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0113 00:09:56.932106 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0113 00:09:56.932131 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-13 00:09:55 +0000 UTC 2025-01-13 00:09:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-qnj8r-6fb4c74686" has successfully progressed.}
  I0113 00:09:56.932154 23 deployment.go:612] Observed deployment test-deployment-qnj8r in namespace deployment-3401 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0113 00:09:56.932314 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0113 00:09:56.932398 23 deployment.go:609] Found deployment test-deployment-qnj8r in namespace deployment-3401 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0113 00:09:56.932426 23 deployment.go:620] Deployment test-deployment-qnj8r has a patched status
  I0113 00:09:56.936732 23 deployment.go:633] Deployment "test-deployment-qnj8r":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-qnj8r",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3401",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1596d64e-24c4-4325-94eb-ad56bc86504e",
      ResourceVersion: (string) (len=5) "40539",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323796,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0113 00:09:56.943788 23 deployment.go:40] New ReplicaSet "test-deployment-qnj8r-6fb4c74686" of Deployment "test-deployment-qnj8r":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-qnj8r-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3401",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb96c735-5f25-470d-93f4-b100691c6f6c",
      ResourceVersion: (string) (len=5) "40536",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-qnj8r",
          UID: (types.UID) (len=36) "1596d64e-24c4-4325-94eb-ad56bc86504e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 31 35 39  |k:{\"uid\":\"159|
              00000120  36 64 36 34 65 2d 32 34  63 34 2d 34 33 32 35 2d  |6d64e-24c4-4325-|
              00000130  39 34 65 62 2d 61 64 35  36 62 63 38 36 35 30 34  |94eb-ad56bc86504|
              00000140  65 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |e\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0113 00:09:56.950227 23 deployment.go:68] Pod "test-deployment-qnj8r-6fb4c74686-df9mb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-qnj8r-6fb4c74686-df9mb",
      GenerateName: (string) (len=33) "test-deployment-qnj8r-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-3401",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f3da052-3ddd-4b52-8520-8c5d9380ee5a",
      ResourceVersion: (string) (len=5) "40535",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.1.243.225/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.1.243.225/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d1e7ca6e33f4284ae87889b74c14c07cdf96f66ca3eb78fb8892788ac5c59995"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-qnj8r-6fb4c74686",
          UID: (types.UID) (len=36) "bb96c735-5f25-470d-93f4-b100691c6f6c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 62 62 39 36 63 37 33  35 2d 35 66 32 35 2d 34  |"bb96c735-5f25-4|
              000000a0  37 30 64 2d 39 33 66 34  2d 62 31 30 30 36 39 31  |70d-93f4-b100691|
              000000b0  63 36 66 36 63 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |c6f6c\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 31 2e 32 34 33 2e 32  32 35 5c 22 7d 22 3a 7b  |.1.243.225\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cgvzg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cgvzg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "ubuntu",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63872323794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.17.202.11",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.17.202.11"
        }
      },
      PodIP: (string) (len=12) "10.1.243.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.1.243.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63872323794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63872323795,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c6e30b935333c95046cbad830eedd918d78b53cd8930cef3b00d65caffd69f95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cgvzg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0113 00:09:56.954455 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3401" for this suite. @ 01/13/25 00:09:56.959
• [2.218 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/13/25 00:09:56.974
  I0113 00:09:56.974872 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename daemonsets @ 01/13/25 00:09:56.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:09:57.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:09:57.015
  STEP: Creating simple DaemonSet "daemon-set" @ 01/13/25 00:09:57.047
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/13/25 00:09:57.061
  I0113 00:09:57.070681 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0113 00:09:57.070797 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  E0113 00:09:57.909427      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:58.069502 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0113 00:09:58.069567 23 fixtures.go:131] Node ubuntu is running 0 daemon pod, expected 1
  E0113 00:09:58.910610      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:09:59.069819 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0113 00:09:59.069878 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/13/25 00:09:59.073
  STEP: DeleteCollection of the DaemonSets @ 01/13/25 00:09:59.077
  STEP: Verify that ReplicaSets have been deleted @ 01/13/25 00:09:59.092
  I0113 00:09:59.103303 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40579"},"items":null}

  I0113 00:09:59.108283 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40579"},"items":[{"metadata":{"name":"daemon-set-2zr9b","generateName":"daemon-set-","namespace":"daemonsets-7749","uid":"746d0a2e-6571-4932-b91c-877570697c13","resourceVersion":"40575","creationTimestamp":"2025-01-13T00:09:57Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c8ecbfa3c1f271cd1ade819fc7bcd6e2e50bc67208bd10bb93a55a111c2ce5dc","cni.projectcalico.org/podIP":"10.1.152.76/32","cni.projectcalico.org/podIPs":"10.1.152.76/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b8c9b73d-cc6b-40c9-975f-b8308fd1488d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-13T00:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-13T00:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8c9b73d-cc6b-40c9-975f-b8308fd1488d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-13T00:09:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.152.76\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tjdsx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tjdsx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ubuntu2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ubuntu2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:57Z"}],"hostIP":"172.17.207.20","hostIPs":[{"ip":"172.17.207.20"}],"podIP":"10.1.152.76","podIPs":[{"ip":"10.1.152.76"}],"startTime":"2025-01-13T00:09:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-13T00:09:58Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://379dc7e96b3548f42881f220531991ad5c0e60ef4a05d77a8f0dca9f7013347d","started":true,"volumeMounts":[{"name":"kube-api-access-tjdsx","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cslqb","generateName":"daemon-set-","namespace":"daemonsets-7749","uid":"232e690f-81ae-46f5-8282-db76a0611c68","resourceVersion":"40577","creationTimestamp":"2025-01-13T00:09:57Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"fa1c0d9332cac324c58dbbf9479f8cf48d036eafd08b789cf67a78da76b3fe7b","cni.projectcalico.org/podIP":"10.1.243.206/32","cni.projectcalico.org/podIPs":"10.1.243.206/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b8c9b73d-cc6b-40c9-975f-b8308fd1488d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-13T00:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-13T00:09:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b8c9b73d-cc6b-40c9-975f-b8308fd1488d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2025-01-13T00:09:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.243.206\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vvrjf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vvrjf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ubuntu","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ubuntu"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-13T00:09:57Z"}],"hostIP":"172.17.202.11","hostIPs":[{"ip":"172.17.202.11"}],"podIP":"10.1.243.206","podIPs":[{"ip":"10.1.243.206"}],"startTime":"2025-01-13T00:09:57Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-13T00:09:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://20056bfe2c3b609943ac4f7383b663fc2da631fffd3b117696798d6b55e42499","started":true,"volumeMounts":[{"name":"kube-api-access-vvrjf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0113 00:09:59.123256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7749" for this suite. @ 01/13/25 00:09:59.128
• [2.168 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 01/13/25 00:09:59.142
  I0113 00:09:59.142723 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename services @ 01/13/25 00:09:59.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:09:59.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:09:59.185
  STEP: creating an Endpoint @ 01/13/25 00:09:59.192
  STEP: waiting for available Endpoint @ 01/13/25 00:09:59.204
  STEP: listing all Endpoints @ 01/13/25 00:09:59.206
  STEP: updating the Endpoint @ 01/13/25 00:09:59.209
  STEP: fetching the Endpoint @ 01/13/25 00:09:59.223
  STEP: patching the Endpoint @ 01/13/25 00:09:59.227
  STEP: fetching the Endpoint @ 01/13/25 00:09:59.245
  STEP: deleting the Endpoint by Collection @ 01/13/25 00:09:59.249
  STEP: waiting for Endpoint deletion @ 01/13/25 00:09:59.264
  STEP: fetching the Endpoint @ 01/13/25 00:09:59.266
  I0113 00:09:59.269171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-474" for this suite. @ 01/13/25 00:09:59.273
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 01/13/25 00:09:59.286
  I0113 00:09:59.286091 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename dns @ 01/13/25 00:09:59.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:09:59.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:09:59.315
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/13/25 00:09:59.328
  I0113 00:09:59.352777 23 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-607  09bd8e81-9e8f-4b14-89b6-753a7b6518d5 40595 0 2025-01-13 00:09:59 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-13 00:09:59 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ffkgr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ffkgr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0113 00:09:59.911429      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:00.911711      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/13/25 00:10:01.361
  I0113 00:10:01.361061 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-607 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0113 00:10:01.361078 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0113 00:10:01.361118 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-607/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/13/25 00:10:01.456
  I0113 00:10:01.456692 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-607 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0113 00:10:01.456710 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0113 00:10:01.456767 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-607/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0113 00:10:01.540020 23 dns.go:450] Deleting pod test-dns-nameservers...
  I0113 00:10:01.566395 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-607" for this suite. @ 01/13/25 00:10:01.57
• [2.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/13/25 00:10:01.599
  I0113 00:10:01.599749 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename subjectreview @ 01/13/25 00:10:01.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:10:01.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:10:01.629
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8624" @ 01/13/25 00:10:01.634
  I0113 00:10:01.646059 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8624:e2e"
  I0113 00:10:01.646121 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8624"}
  I0113 00:10:01.646133 23 subjectreviews.go:71] saUID: "03332a0d-04b3-4467-bd7d-38c0ad7b884f"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8624:e2e" @ 01/13/25 00:10:01.646
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8624:e2e" @ 01/13/25 00:10:01.646
  I0113 00:10:01.648588 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8624:e2e" api 'list' configmaps in "subjectreview-8624" namespace @ 01/13/25 00:10:01.648
  I0113 00:10:01.652250 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8624:e2e" @ 01/13/25 00:10:01.652
  I0113 00:10:01.654516 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  I0113 00:10:01.654567 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0113 00:10:01.654679 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8624" for this suite. @ 01/13/25 00:10:01.658
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/13/25 00:10:01.675
  I0113 00:10:01.675292 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename webhook @ 01/13/25 00:10:01.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:10:01.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:10:01.723
  STEP: Setting up server cert @ 01/13/25 00:10:01.765
  E0113 00:10:01.912788      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/13/25 00:10:02.39
  STEP: Deploying the webhook pod @ 01/13/25 00:10:02.41
  STEP: Wait for the deployment to be ready @ 01/13/25 00:10:02.463
  I0113 00:10:02.472756 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0113 00:10:02.913351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:03.913753      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/13/25 00:10:04.482
  STEP: Verifying the service has paired with the endpoint @ 01/13/25 00:10:04.523
  E0113 00:10:04.914867      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:10:05.524560 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/13/25 00:10:05.532
  I0113 00:10:05.635039 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4189" for this suite. @ 01/13/25 00:10:05.64
  STEP: Destroying namespace "webhook-markers-4210" for this suite. @ 01/13/25 00:10:05.667
• [4.013 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/13/25 00:10:05.687
  I0113 00:10:05.687833 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename prestop @ 01/13/25 00:10:05.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:10:05.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:10:05.726
  STEP: Creating server pod server in namespace prestop-8247 @ 01/13/25 00:10:05.729
  STEP: Waiting for pods to come up. @ 01/13/25 00:10:05.744
  E0113 00:10:05.915442      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:06.916209      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-8247 @ 01/13/25 00:10:07.756
  E0113 00:10:07.916893      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:08.917245      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 01/13/25 00:10:09.787
  E0113 00:10:09.917473      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:10.917793      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:11.918134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:12.918576      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:13.919051      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:10:14.814049 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/13/25 00:10:14.814
  I0113 00:10:14.851679 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8247" for this suite. @ 01/13/25 00:10:14.856
• [9.186 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 01/13/25 00:10:14.873
  I0113 00:10:14.873680 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename svcaccounts @ 01/13/25 00:10:14.874
  E0113 00:10:14.919616      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:10:14.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:10:14.927
  STEP: Creating a pod to test service account token:  @ 01/13/25 00:10:14.931
  E0113 00:10:15.920386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:16.920617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:17.921449      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:18.922320      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/13/25 00:10:18.967
  I0113 00:10:18.973352 23 output.go:207] Trying to get logs from node ubuntu pod test-pod-fdf9871b-8750-4f45-b7c7-94bf2e564dcd container agnhost-container: <nil>
  STEP: delete the pod @ 01/13/25 00:10:18.986
  I0113 00:10:19.021207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5797" for this suite. @ 01/13/25 00:10:19.026
• [4.166 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/13/25 00:10:19.04
  I0113 00:10:19.040320 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/13/25 00:10:19.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/13/25 00:10:19.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/13/25 00:10:19.086
  I0113 00:10:19.090192 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3674463930
  E0113 00:10:19.922574      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:20.922818      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0113 00:10:21.923370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0113 00:10:22.210112 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8831" for this suite. @ 01/13/25 00:10:22.214
• [3.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0113 00:10:22.228395 23 suites.go:34] Running AfterSuite actions on node 1
  I0113 00:10:22.228433 23 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.052 seconds]
------------------------------

Ran 411 of 6622 Specs in 6119.888 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h42m1.161495873s
Test Suite Passed
