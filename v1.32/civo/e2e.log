  I0901 04:10:35.182743      21 e2e.go:109] Starting e2e run "4ca1e4fb-5de9-48de-ac46-3bc5043c3520" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756699834 - will randomize all specs

Will run 411 of 6625 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0901 04:10:35.547225 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 04:10:35.548488 21 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0901 04:10:35.578718 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0901 04:10:35.583801 21 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'civo-csi-node' (0 seconds elapsed)
  I0901 04:10:35.583852 21 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'traefik' (0 seconds elapsed)
  I0901 04:10:35.583874 21 e2e.go:245] e2e test version: v1.32.5
  I0901 04:10:35.585478 21 e2e.go:254] kube-apiserver version: v1.32.5+k3s1
  I0901 04:10:35.585666 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 04:10:35.589684 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/01/25 04:10:35.777
  I0901 04:10:35.778115 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 04:10:35.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:10:35.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:10:35.796
  STEP: Creating pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882 @ 09/01/25 04:10:35.8
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 04:10:39.819
  I0901 04:10:39.822773 21 container_probe.go:1749] Initial restart count of pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e is 0
  I0901 04:10:39.827226 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:41.831187 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:43.837706 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:45.843223 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:47.849835 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:49.854592 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:51.861354 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:53.867242 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:55.874289 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:57.879095 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:10:59.885384 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:01.891713 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:03.896046 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:05.902295 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:07.909812 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:09.916070 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:11.923793 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:13.930758 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:15.939342 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:17.944405 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:19.950856 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:21.957790 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:23.962093 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:25.971669 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:27.977800 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:29.992544 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:32.007120 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:34.015706 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:36.023603 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:38.031565 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:40.039188 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:42.049443 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:44.054712 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:46.061451 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:48.067887 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:50.075232 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:52.082788 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:54.089208 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:56.097016 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:11:58.103390 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:00.110146 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:02.118757 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:04.125998 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:06.134347 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:08.140800 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:10.148452 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:12.156068 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:14.161317 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:16.169287 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:18.176776 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:20.182507 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:22.191074 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:24.209736 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:26.216771 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:28.222855 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:30.228605 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:32.233645 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:34.239314 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:36.251871 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:38.268515 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:40.273456 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:42.280251 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:44.286163 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:46.294735 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:48.301077 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:50.307479 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:52.314748 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:54.319617 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:56.327336 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:12:58.334769 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:00.341119 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:02.347483 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:04.354674 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:06.362065 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:08.368582 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:10.375905 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:12.382120 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:14.386586 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:16.392329 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:18.398774 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:20.404112 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:22.411144 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:24.416997 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:26.423083 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:28.429959 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:30.436333 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:32.442747 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:34.449132 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:36.454609 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:38.459952 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:40.466767 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:42.475142 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:44.481697 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:46.490498 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:48.498824 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:50.506214 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:52.511617 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:54.517896 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:56.525014 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:13:58.532432 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:00.539876 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:02.549367 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:04.557269 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:06.562924 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:08.567401 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:10.574562 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:12.580724 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:14.587574 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:16.593216 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:18.597622 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:20.602527 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:22.608174 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:24.612774 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:26.620638 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:28.626676 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:30.634005 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:32.641186 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:34.647126 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:36.656826 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  I0901 04:14:38.664376 21 container_probe.go:1759] Get pod busybox-57ab6105-d52c-45d1-aae2-89035d67ad1e in namespace container-probe-6882
  STEP: deleting the pod @ 09/01/25 04:14:40.666
  I0901 04:14:40.684609 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6882" for this suite. @ 09/01/25 04:14:40.691
• [244.921 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/01/25 04:14:40.699
  I0901 04:14:40.700067 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:14:40.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:14:40.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:14:40.716
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:14:40.719
  STEP: Saw pod success @ 09/01/25 04:14:46.748
  I0901 04:14:46.755821 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-09634a37-a492-40ca-8853-43d3aa9651e8 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:14:46.78
  I0901 04:14:46.799918 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2107" for this suite. @ 09/01/25 04:14:46.806
• [6.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 09/01/25 04:14:46.813
  I0901 04:14:46.814041 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 04:14:46.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:14:46.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:14:46.832
  STEP: Creating configMap configmap-3281/configmap-test-4143bc8d-d020-4057-aad5-c2981685fee1 @ 09/01/25 04:14:46.836
  STEP: Creating a pod to test consume configMaps @ 09/01/25 04:14:46.85
  STEP: Saw pod success @ 09/01/25 04:14:50.879
  I0901 04:14:50.884874 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-1a07f992-9285-4a03-afd1-2b0aa8af4b57 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 04:14:50.896
  I0901 04:14:50.920131 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3281" for this suite. @ 09/01/25 04:14:50.926
• [4.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/01/25 04:14:50.934
  I0901 04:14:50.935003 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 04:14:50.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:14:50.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:14:50.971
  STEP: Creating ReplicationController "e2e-rc-zkkf8" @ 09/01/25 04:14:50.977
  I0901 04:14:50.985621 21 rc.go:792] Get Replication Controller "e2e-rc-zkkf8" to confirm replicas
  I0901 04:14:51.985954 21 rc.go:792] Get Replication Controller "e2e-rc-zkkf8" to confirm replicas
  I0901 04:14:51.990508 21 rc.go:801] Found 1 replicas for "e2e-rc-zkkf8" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-zkkf8" @ 09/01/25 04:14:51.99
  STEP: Updating a scale subresource @ 09/01/25 04:14:51.996
  STEP: Verifying replicas where modified for replication controller "e2e-rc-zkkf8" @ 09/01/25 04:14:52.006
  I0901 04:14:52.006634 21 rc.go:792] Get Replication Controller "e2e-rc-zkkf8" to confirm replicas
  I0901 04:14:53.006824 21 rc.go:792] Get Replication Controller "e2e-rc-zkkf8" to confirm replicas
  I0901 04:14:53.010361 21 rc.go:801] Found 2 replicas for "e2e-rc-zkkf8" replication controller
  I0901 04:14:53.010758 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9062" for this suite. @ 09/01/25 04:14:53.015
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 09/01/25 04:14:53.025
  I0901 04:14:53.025308 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 04:14:53.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:14:53.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:14:53.042
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 04:14:53.115
  STEP: create the pod with lifecycle hook @ 09/01/25 04:14:55.141
  STEP: delete the pod with lifecycle hook @ 09/01/25 04:14:57.163
  STEP: check prestop hook @ 09/01/25 04:14:59.185
  I0901 04:14:59.197310 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8649" for this suite. @ 09/01/25 04:14:59.203
• [6.187 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/01/25 04:14:59.212
  I0901 04:14:59.213268 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pv @ 09/01/25 04:14:59.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:14:59.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:14:59.232
  STEP: Creating initial PV and PVC @ 09/01/25 04:14:59.236
  I0901 04:14:59.236514 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8921" @ 09/01/25 04:14:59.252
  STEP: Listing PVCs in namespace "pv-8921" @ 09/01/25 04:14:59.257
  STEP: Patching the PV "pv-8921-p26wt" @ 09/01/25 04:14:59.262
  STEP: Patching the PVC "pvc-5vzn6" @ 09/01/25 04:14:59.274
  STEP: Getting PV "pv-8921-p26wt" @ 09/01/25 04:14:59.28
  STEP: Getting PVC "pvc-5vzn6" @ 09/01/25 04:14:59.282
  STEP: Deleting PVC "pvc-5vzn6" @ 09/01/25 04:14:59.284
  STEP: Confirm deletion of PVC "pvc-5vzn6" @ 09/01/25 04:14:59.291
  STEP: Deleting PV "pv-8921-p26wt" @ 09/01/25 04:15:01.3
  STEP: Confirm deletion of PV "pv-8921-p26wt" @ 09/01/25 04:15:01.309
  STEP: Recreating another PV & PVC @ 09/01/25 04:15:03.322
  I0901 04:15:03.323063 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8921-g2bgv" @ 09/01/25 04:15:03.34
  STEP: Updating the PVC "pvc-5sh2j" @ 09/01/25 04:15:03.372
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-5sh2j=updated" @ 09/01/25 04:15:03.379
  STEP: Deleting PVC "pvc-5sh2j" via DeleteCollection @ 09/01/25 04:15:03.383
  STEP: Confirm deletion of PVC "pvc-5sh2j" @ 09/01/25 04:15:03.393
  STEP: Deleting PV "pv-8921-g2bgv" via DeleteCollection @ 09/01/25 04:15:05.405
  STEP: Confirm deletion of PV "pv-8921-g2bgv" @ 09/01/25 04:15:05.414
  I0901 04:15:07.422894 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 04:15:07.422966 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-5sh2j"
  I0901 04:15:07.426441 21 pv.go:193] Deleting PersistentVolume "pv-8921-g2bgv"
  I0901 04:15:07.430058 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8921" for this suite. @ 09/01/25 04:15:07.434
• [8.227 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/01/25 04:15:07.441
  I0901 04:15:07.441918 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename hostport @ 09/01/25 04:15:07.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:15:07.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:15:07.457
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/01/25 04:15:07.534
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.1.10 on the node which pod1 resides and expect scheduled @ 09/01/25 04:15:11.559
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.1.10 but use UDP protocol on the node which pod2 resides @ 09/01/25 04:15:13.576
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/01/25 04:15:27.64
  I0901 04:15:27.640066 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.1.10 http://127.0.0.1:54323/hostname] Namespace:hostport-9384 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 04:15:27.640087 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 04:15:27.640140 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-9384/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.1.10+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.1.10, port: 54323 @ 09/01/25 04:15:27.733
  I0901 04:15:27.733925 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.1.10:54323/hostname] Namespace:hostport-9384 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 04:15:27.733967 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 04:15:27.734135 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-9384/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.1.10%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.1.10, port: 54323 UDP @ 09/01/25 04:15:27.822
  I0901 04:15:27.822168 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.1.10 54323] Namespace:hostport-9384 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 04:15:27.822188 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 04:15:27.822277 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-9384/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.1.10+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0901 04:15:32.880975 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9384" for this suite. @ 09/01/25 04:15:32.886
• [25.455 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/01/25 04:15:32.896
  I0901 04:15:32.896306 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 04:15:32.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:15:32.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:15:32.914
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:15:32.917
  STEP: Saw pod success @ 09/01/25 04:15:36.94
  I0901 04:15:36.945672 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-8866f020-f8a5-4a7d-a9b2-8afb94612a27 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:15:36.955
  I0901 04:15:36.969625 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2467" for this suite. @ 09/01/25 04:15:36.973
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/01/25 04:15:36.982
  I0901 04:15:36.982497 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 04:15:36.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:15:36.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:15:37
  STEP: Creating a ForbidConcurrent cronjob @ 09/01/25 04:15:37.002
  STEP: Ensuring a job is scheduled @ 09/01/25 04:15:37.008
  STEP: Ensuring exactly one is scheduled @ 09/01/25 04:16:01.014
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 04:16:01.019
  STEP: Ensuring no more jobs are scheduled @ 09/01/25 04:16:01.023
  STEP: Removing cronjob @ 09/01/25 04:16:01.027
  I0901 04:16:01.037800 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3239" for this suite. @ 09/01/25 04:16:01.044
• [24.071 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 09/01/25 04:16:01.053
  I0901 04:16:01.053429 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 04:16:01.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:16:01.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:16:01.067
  STEP: Creating a pod to test substitution in volume subpath @ 09/01/25 04:16:01.07
  STEP: Saw pod success @ 09/01/25 04:16:05.094
  I0901 04:16:05.099702 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod var-expansion-b3751b95-9765-45f8-94e2-c33cf935446e container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 04:16:05.111
  I0901 04:16:05.127763 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1037" for this suite. @ 09/01/25 04:16:05.132
• [4.083 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/01/25 04:16:05.137
  I0901 04:16:05.137358 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 04:16:05.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:16:05.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:16:05.149
  STEP: Creating pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839 @ 09/01/25 04:16:05.151
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 04:16:07.169
  I0901 04:16:07.175286 21 container_probe.go:1749] Initial restart count of pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb is 0
  I0901 04:16:07.181900 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:09.189142 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:11.196366 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:13.203510 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:15.209824 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:17.214763 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:19.219776 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:21.226434 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:23.233599 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:25.239757 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:27.244637 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:27.244696 21 container_probe.go:1763] Restart count of pod container-probe-6839/liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb is now 1 (20.069329176s elapsed)
  I0901 04:16:29.249961 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:31.254603 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:33.260116 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:35.266549 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:37.273035 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:39.280628 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:41.288293 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:43.297126 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:45.303897 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:47.310027 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:47.310105 21 container_probe.go:1763] Restart count of pod container-probe-6839/liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb is now 2 (40.134737081s elapsed)
  I0901 04:16:49.317336 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:51.324575 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:53.331204 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:55.339075 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:57.345536 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:16:59.351973 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:01.358894 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:03.366530 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:05.374024 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:07.382282 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:07.382356 21 container_probe.go:1763] Restart count of pod container-probe-6839/liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb is now 3 (1m0.206988211s elapsed)
  I0901 04:17:09.389673 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:11.397448 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:13.406620 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:15.413380 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:17.421754 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:19.426505 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:21.432769 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:23.439476 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:25.445158 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:27.451105 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:27.451155 21 container_probe.go:1763] Restart count of pod container-probe-6839/liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb is now 4 (1m20.275788797s elapsed)
  I0901 04:17:29.455365 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:31.460833 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:33.469626 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:35.474524 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:37.479109 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:39.485295 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:41.490233 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:43.497674 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:45.504061 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:47.513011 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:49.521001 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:51.527597 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:53.535122 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:55.545163 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:57.550744 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:17:59.558014 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:01.564505 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:03.569255 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:05.575405 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:07.583054 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:09.587829 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:11.592710 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:13.596976 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:15.602088 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:17.607918 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:19.614282 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:21.619002 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:23.624122 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:25.628406 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:27.634670 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:29.641247 21 container_probe.go:1759] Get pod liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb in namespace container-probe-6839
  I0901 04:18:29.641296 21 container_probe.go:1763] Restart count of pod container-probe-6839/liveness-18f22bc5-75d3-4e4a-90d4-ac1c6ffd0efb is now 5 (2m22.465929609s elapsed)
  STEP: deleting the pod @ 09/01/25 04:18:29.641
  I0901 04:18:29.651112 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6839" for this suite. @ 09/01/25 04:18:29.656
• [144.525 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/01/25 04:18:29.664
  I0901 04:18:29.664486 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 04:18:29.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:18:29.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:18:29.68
  STEP: Creating a test externalName service @ 09/01/25 04:18:29.683
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1935.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1935.svc.cluster.local; sleep 1; done
   @ 09/01/25 04:18:29.688
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1935.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1935.svc.cluster.local; sleep 1; done
   @ 09/01/25 04:18:29.688
  STEP: creating a pod to probe DNS @ 09/01/25 04:18:29.688
  STEP: submitting the pod to kubernetes @ 09/01/25 04:18:29.688
  STEP: retrieving the pod @ 09/01/25 04:18:39.734
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:18:39.739
  I0901 04:18:39.759743 21 dns_common.go:571] DNS probes using dns-test-a2763352-4c96-46e0-b28e-f2617139956f succeeded

  STEP: changing the externalName to bar.example.com @ 09/01/25 04:18:39.759
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1935.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1935.svc.cluster.local; sleep 1; done
   @ 09/01/25 04:18:39.771
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1935.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1935.svc.cluster.local; sleep 1; done
   @ 09/01/25 04:18:39.772
  STEP: creating a second pod to probe DNS @ 09/01/25 04:18:39.772
  STEP: submitting the pod to kubernetes @ 09/01/25 04:18:39.772
  STEP: retrieving the pod @ 09/01/25 04:18:45.807
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:18:45.814
  I0901 04:18:45.840283 21 dns_common.go:571] DNS probes using dns-test-a9695932-27c5-4a6a-9091-b39c44610aa8 succeeded

  STEP: changing the service to type=ClusterIP @ 09/01/25 04:18:45.84
  W0901 04:18:45.857473      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1935.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-1935.svc.cluster.local; sleep 1; done
   @ 09/01/25 04:18:45.858
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1935.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1935.svc.cluster.local; sleep 1; done
   @ 09/01/25 04:18:45.859
  STEP: creating a third pod to probe DNS @ 09/01/25 04:18:45.859
  STEP: submitting the pod to kubernetes @ 09/01/25 04:18:45.864
  STEP: retrieving the pod @ 09/01/25 04:18:47.884
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:18:47.891
  I0901 04:18:47.911712 21 dns_common.go:571] DNS probes using dns-test-f2b3e166-9740-47e3-a72b-401f35420694 succeeded

  STEP: deleting the pod @ 09/01/25 04:18:47.912
  STEP: deleting the pod @ 09/01/25 04:18:47.928
  STEP: deleting the pod @ 09/01/25 04:18:47.964
  STEP: deleting the test externalName service @ 09/01/25 04:18:47.976
  I0901 04:18:47.988527 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1935" for this suite. @ 09/01/25 04:18:47.992
• [18.332 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/01/25 04:18:47.997
  I0901 04:18:47.997510 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 04:18:47.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:18:48.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:18:48.014
  I0901 04:18:48.052003 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5529" for this suite. @ 09/01/25 04:18:48.093
• [0.113 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/01/25 04:18:48.111
  I0901 04:18:48.111742 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 04:18:48.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:18:48.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:18:48.131
  STEP: Performing setup for networking test in namespace pod-network-test-7739 @ 09/01/25 04:18:48.136
  STEP: creating a selector @ 09/01/25 04:18:48.136
  STEP: Creating the service pods in kubernetes @ 09/01/25 04:18:48.136
  I0901 04:18:48.136831 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 04:19:04.323
  I0901 04:19:06.356297 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 04:19:06.356396 21 utils.go:496] Going to poll 10.42.2.9 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 04:19:06.359754 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.9:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 04:19:06.359797 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 04:19:06.359910 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.9%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 04:19:06.489968 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0901 04:19:06.490094 21 utils.go:496] Going to poll 10.42.0.5 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 04:19:06.495733 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.5:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 04:19:06.495786 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 04:19:06.495887 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.5%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 04:19:06.627159 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0901 04:19:06.627206 21 utils.go:496] Going to poll 10.42.1.16 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0901 04:19:06.632522 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.16:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 04:19:06.632556 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 04:19:06.632699 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.16%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 04:19:06.754043 21 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0901 04:19:06.754268 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7739" for this suite. @ 09/01/25 04:19:06.759
• [18.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/01/25 04:19:06.769
  I0901 04:19:06.769173 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename disruption @ 09/01/25 04:19:06.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:19:06.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:19:06.787
  STEP: Waiting for the pdb to be processed @ 09/01/25 04:19:06.796
  STEP: Updating PodDisruptionBudget status @ 09/01/25 04:19:08.802
  STEP: Waiting for all pods to be running @ 09/01/25 04:19:08.814
  I0901 04:19:08.818884 21 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/01/25 04:19:10.823
  STEP: Waiting for the pdb to be processed @ 09/01/25 04:19:10.839
  STEP: Patching PodDisruptionBudget status @ 09/01/25 04:19:10.848
  STEP: Waiting for the pdb to be processed @ 09/01/25 04:19:10.856
  I0901 04:19:10.861159 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6500" for this suite. @ 09/01/25 04:19:10.866
• [4.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/01/25 04:19:10.872
  I0901 04:19:10.872432 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 04:19:10.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:19:10.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:19:10.888
  STEP: create the deployment @ 09/01/25 04:19:10.895
  W0901 04:19:10.900772      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 04:19:10.9
  STEP: delete the deployment @ 09/01/25 04:19:11.418
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/01/25 04:19:11.429
  STEP: Gathering metrics @ 09/01/25 04:19:12.046
  W0901 04:19:12.051281      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0901 04:19:12.051440 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 04:19:12.052596 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7583" for this suite. @ 09/01/25 04:19:12.06
• [1.194 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/01/25 04:19:12.066
  I0901 04:19:12.066804 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 04:19:12.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:19:12.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:19:12.088
  STEP: creating a policy with variables @ 09/01/25 04:19:12.098
  STEP: waiting until the marker is denied @ 09/01/25 04:19:12.117
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 04:19:12.733
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 04:19:12.747
  I0901 04:19:12.824842 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7499" for this suite. @ 09/01/25 04:19:12.84
• [0.782 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 09/01/25 04:19:12.849
  I0901 04:19:12.849853 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 04:19:12.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:19:12.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:19:12.915
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9655 @ 09/01/25 04:19:12.919
  STEP: changing the ExternalName service to type=NodePort @ 09/01/25 04:19:12.924
  STEP: creating replication controller externalname-service in namespace services-9655 @ 09/01/25 04:19:12.94
  I0901 04:19:12.946094      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-9655, replica count: 2
  I0901 04:19:15.996830      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 04:19:15.997020 21 resource.go:361] Creating new exec pod
  I0901 04:19:19.018508 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 04:19:19.223552 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.30.64) 80 port [tcp/http] succeeded!\n"
  I0901 04:19:19.223605 21 builder.go:147] stdout: ""
  I0901 04:19:20.018665 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 04:19:20.232050 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.30.64) 80 port [tcp/http] succeeded!\n"
  I0901 04:19:20.232104 21 builder.go:147] stdout: ""
  I0901 04:19:21.019196 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 04:19:21.230085 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.43.30.64) 80 port [tcp/http] succeeded!\n"
  I0901 04:19:21.230141 21 builder.go:147] stdout: "externalname-service-rlzbn"
  I0901 04:19:21.230232 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.30.64 80'
  I0901 04:19:21.412088 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.30.64 80\nConnection to 10.43.30.64 80 port [tcp/http] succeeded!\n"
  I0901 04:19:21.412138 21 builder.go:147] stdout: ""
  I0901 04:19:22.230435 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.30.64 80'
  I0901 04:19:22.463681 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.30.64 80\nConnection to 10.43.30.64 80 port [tcp/http] succeeded!\n"
  I0901 04:19:22.463735 21 builder.go:147] stdout: "externalname-service-snq2p"
  I0901 04:19:22.463815 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 32163'
  I0901 04:19:22.664809 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.8 32163\nConnection to 192.168.1.8 32163 port [tcp/*] succeeded!\n"
  I0901 04:19:22.664862 21 builder.go:147] stdout: "externalname-service-rlzbn"
  I0901 04:19:22.665130 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-9655 exec execpodhhzts -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.9 32163'
  I0901 04:19:22.840176 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.9 32163\n+ echo hostName\nConnection to 192.168.1.9 32163 port [tcp/*] succeeded!\n"
  I0901 04:19:22.840229 21 builder.go:147] stdout: "externalname-service-rlzbn"
  I0901 04:19:22.840322 21 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0901 04:19:22.860216 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9655" for this suite. @ 09/01/25 04:19:22.864
• [10.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/01/25 04:19:22.87
  I0901 04:19:22.870867 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 04:19:22.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:19:22.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:19:22.883
  I0901 04:19:22.886227 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  W0901 04:19:25.421471      21 warnings.go:70] unknown field "alpha"
  W0901 04:19:25.421882      21 warnings.go:70] unknown field "beta"
  W0901 04:19:25.421890      21 warnings.go:70] unknown field "delta"
  W0901 04:19:25.421897      21 warnings.go:70] unknown field "epsilon"
  W0901 04:19:25.421903      21 warnings.go:70] unknown field "gamma"
  I0901 04:19:25.974676 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5662" for this suite. @ 09/01/25 04:19:25.978
• [3.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 09/01/25 04:19:25.985
  I0901 04:19:25.985759 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 04:19:25.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:19:25.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:19:26.002
  I0901 04:19:26.018603 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 04:20:26.025575 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 04:20:26.029
  I0901 04:20:26.029283 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 04:20:26.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:20:26.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:20:26.045
  STEP: Finding an available node @ 09/01/25 04:20:26.048
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 04:20:26.048
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 04:20:28.072
  I0901 04:20:28.089810 21 preemption.go:709] found a healthy node: k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae
  STEP: Adding a custom resource @ 09/01/25 04:20:28.094
  I0901 04:20:34.167668 21 preemption.go:828] pods created so far: [1 1 1]
  I0901 04:20:34.167709 21 preemption.go:829] length of pods created so far: 3
  I0901 04:20:36.178450 21 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 09/01/25 04:20:43.179
  STEP: Removing a custom resource @ 09/01/25 04:20:43.236
  STEP: Removing a custom resource @ 09/01/25 04:20:43.253
  STEP: Removing a custom resource @ 09/01/25 04:20:43.268
  I0901 04:20:43.282713 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-534" for this suite. @ 09/01/25 04:20:43.288
  I0901 04:20:43.300998 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8705" for this suite. @ 09/01/25 04:20:43.389
• [77.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 09/01/25 04:20:43.402
  I0901 04:20:43.402094 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 04:20:43.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:20:43.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:20:43.428
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 04:20:43.432
  I0901 04:20:43.432868 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-8527 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0901 04:20:43.531533 21 builder.go:146] stderr: ""
  I0901 04:20:43.531580 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 04:20:43.531
  I0901 04:20:43.537313 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-8527 delete pods e2e-test-httpd-pod'
  I0901 04:20:45.641620 21 builder.go:146] stderr: ""
  I0901 04:20:45.641667 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 04:20:45.641914 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8527" for this suite. @ 09/01/25 04:20:45.646
• [2.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/01/25 04:20:45.651
  I0901 04:20:45.651729 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 04:20:45.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:20:45.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:20:45.674
  STEP: Creating secret with name secret-test-3f31e720-1304-4e37-803a-4c62466ac80f @ 09/01/25 04:20:45.677
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:20:45.683
  STEP: Saw pod success @ 09/01/25 04:20:49.712
  I0901 04:20:49.718470 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-71f9729d-5dc0-4650-8d8e-e6d0bc8c75c4 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:20:49.741
  I0901 04:20:49.755908 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-706" for this suite. @ 09/01/25 04:20:49.76
• [4.114 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 09/01/25 04:20:49.766
  I0901 04:20:49.767167 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 04:20:49.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:20:49.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:20:49.782
  STEP: Creating a pod to test service account token:  @ 09/01/25 04:20:49.784
  STEP: Saw pod success @ 09/01/25 04:20:53.811
  I0901 04:20:53.818690 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod test-pod-f3352cef-926a-4953-9227-c37b2b0d068e container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 04:20:53.832
  I0901 04:20:53.856142 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1497" for this suite. @ 09/01/25 04:20:53.863
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 09/01/25 04:20:53.869
  I0901 04:20:53.869760 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 04:20:53.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:20:53.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:20:53.885
  STEP: create deployment with httpd image @ 09/01/25 04:20:53.888
  I0901 04:20:53.889052 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-3150 create -f -'
  I0901 04:20:54.005816 21 builder.go:146] stderr: ""
  I0901 04:20:54.005863 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/01/25 04:20:54.005
  I0901 04:20:54.006037 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-3150 diff -f -'
  I0901 04:20:54.163427 21 builder.go:135] rc: 1
  I0901 04:20:54.163765 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-3150 delete -f -'
  I0901 04:20:54.238994 21 builder.go:146] stderr: ""
  I0901 04:20:54.239052 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0901 04:20:54.239320 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3150" for this suite. @ 09/01/25 04:20:54.244
• [0.381 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 09/01/25 04:20:54.25
  I0901 04:20:54.250879 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:20:54.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:20:54.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:20:54.266
  STEP: Setting up server cert @ 09/01/25 04:20:54.283
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:20:54.572
  STEP: Deploying the webhook pod @ 09/01/25 04:20:54.577
  STEP: Wait for the deployment to be ready @ 09/01/25 04:20:54.587
  I0901 04:20:54.594623 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:20:56.616
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:20:56.626
  I0901 04:20:57.627422 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 04:20:57.635
  STEP: create a pod that should be denied by the webhook @ 09/01/25 04:20:57.66
  STEP: create a pod that causes the webhook to hang @ 09/01/25 04:20:57.686
  STEP: create a configmap that should be denied by the webhook @ 09/01/25 04:21:07.698
  STEP: create a configmap that should be admitted by the webhook @ 09/01/25 04:21:07.722
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 04:21:07.745
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/01/25 04:21:07.761
  STEP: create a namespace that bypass the webhook @ 09/01/25 04:21:07.772
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/01/25 04:21:07.787
  I0901 04:21:07.879768 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6057" for this suite. @ 09/01/25 04:21:07.884
  STEP: Destroying namespace "webhook-markers-701" for this suite. @ 09/01/25 04:21:07.893
  STEP: Destroying namespace "exempted-namespace-4615" for this suite. @ 09/01/25 04:21:07.9
• [13.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/01/25 04:21:07.908
  I0901 04:21:07.908804 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:21:07.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:07.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:07.926
  STEP: Creating projection with secret that has name projected-secret-test-map-c6db7e4a-1cf2-4149-b8af-ec978980d69f @ 09/01/25 04:21:07.93
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:21:07.935
  STEP: Saw pod success @ 09/01/25 04:21:11.972
  I0901 04:21:11.978655 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-secrets-1cbb941d-d90c-432e-9b18-0233444b8a69 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:21:11.992
  I0901 04:21:12.013821 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1742" for this suite. @ 09/01/25 04:21:12.02
• [4.118 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/01/25 04:21:12.027
  I0901 04:21:12.028050 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename containers @ 09/01/25 04:21:12.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:12.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:12.046
  STEP: Creating a pod to test override arguments @ 09/01/25 04:21:12.049
  STEP: Saw pod success @ 09/01/25 04:21:16.079
  I0901 04:21:16.082979 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod client-containers-2d43ec2d-6de1-4a90-87c8-89110a86c8c2 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 04:21:16.094
  I0901 04:21:16.111607 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7144" for this suite. @ 09/01/25 04:21:16.116
• [4.095 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/01/25 04:21:16.123
  I0901 04:21:16.123588 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 04:21:16.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:16.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:16.167
  I0901 04:21:16.194847 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7264" for this suite. @ 09/01/25 04:21:16.22
• [0.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/01/25 04:21:16.234
  I0901 04:21:16.234414 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 04:21:16.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:16.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:16.263
  I0901 04:21:16.278237 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/01/25 04:21:17.291
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/01/25 04:21:17.296
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/01/25 04:21:18.305
  I0901 04:21:18.317908 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/01/25 04:21:18.317
  I0901 04:21:19.332594 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-500" for this suite. @ 09/01/25 04:21:19.339
• [3.114 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/01/25 04:21:19.349
  I0901 04:21:19.349053 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename proxy @ 09/01/25 04:21:19.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:19.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:19.364
  I0901 04:21:19.367743 21 proxy.go:387] Creating pod...
  I0901 04:21:21.381819 21 proxy.go:411] Creating service...
  I0901 04:21:21.393570 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=DELETE
  I0901 04:21:21.413096 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 04:21:21.413147 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=OPTIONS
  I0901 04:21:21.417035 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 04:21:21.417083 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=PATCH
  I0901 04:21:21.420402 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 04:21:21.420550 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=POST
  I0901 04:21:21.424437 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 04:21:21.424481 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=PUT
  I0901 04:21:21.428129 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 04:21:21.428165 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=DELETE
  I0901 04:21:21.433722 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 04:21:21.433775 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0901 04:21:21.439091 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 04:21:21.439152 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=PATCH
  I0901 04:21:21.445920 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 04:21:21.445974 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=POST
  I0901 04:21:21.454394 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 04:21:21.454444 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=PUT
  I0901 04:21:21.460758 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 04:21:21.461241 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=GET
  I0901 04:21:21.465134 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0901 04:21:21.465343 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=GET
  I0901 04:21:21.470265 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0901 04:21:21.470405 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/pods/agnhost/proxy?method=HEAD
  I0901 04:21:21.473497 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0901 04:21:21.473608 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7681/services/e2e-proxy-test-service/proxy?method=HEAD
  I0901 04:21:21.478169 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0901 04:21:21.478420 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7681" for this suite. @ 09/01/25 04:21:21.483
• [2.141 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/01/25 04:21:21.491
  I0901 04:21:21.491355 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 04:21:21.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:21.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:21.518
  STEP: Create a ReplicaSet @ 09/01/25 04:21:21.526
  STEP: Verify that the required pods have come up @ 09/01/25 04:21:21.531
  I0901 04:21:21.537391 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0901 04:21:26.543292 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/01/25 04:21:26.543
  I0901 04:21:26.546322 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/01/25 04:21:26.546
  STEP: DeleteCollection of the ReplicaSets @ 09/01/25 04:21:26.548
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/01/25 04:21:26.561
  I0901 04:21:26.566535 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9471" for this suite. @ 09/01/25 04:21:26.577
• [5.102 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/01/25 04:21:26.593
  I0901 04:21:26.593528 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 04:21:26.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:26.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:26.608
  STEP: create the container @ 09/01/25 04:21:26.612
  W0901 04:21:26.619199      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/01/25 04:21:26.621
  STEP: get the container status @ 09/01/25 04:21:29.643
  STEP: the container should be terminated @ 09/01/25 04:21:29.647
  STEP: the termination message should be set @ 09/01/25 04:21:29.647
  I0901 04:21:29.647980 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 04:21:29.648
  I0901 04:21:29.666974 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1914" for this suite. @ 09/01/25 04:21:29.671
• [3.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 09/01/25 04:21:29.68
  I0901 04:21:29.680101 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:21:29.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:29.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:29.694
  STEP: Setting up server cert @ 09/01/25 04:21:29.712
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:21:30.264
  STEP: Deploying the webhook pod @ 09/01/25 04:21:30.273
  STEP: Wait for the deployment to be ready @ 09/01/25 04:21:30.286
  I0901 04:21:30.296933 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:21:32.32
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:21:32.332
  I0901 04:21:33.332826 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 04:21:33.343
  I0901 04:21:33.403516 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7116" for this suite. @ 09/01/25 04:21:33.407
  STEP: Destroying namespace "webhook-markers-7663" for this suite. @ 09/01/25 04:21:33.414
• [3.741 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/01/25 04:21:33.422
  I0901 04:21:33.422709 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:21:33.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:33.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:33.448
  STEP: Creating projection with secret that has name projected-secret-test-2a7de1ae-0ab6-4e85-80e5-9965d6ff08f6 @ 09/01/25 04:21:33.452
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:21:33.456
  STEP: Saw pod success @ 09/01/25 04:21:35.482
  I0901 04:21:35.487421 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-secrets-b9275862-2625-4924-bd83-aff4e84f383a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:21:35.496
  I0901 04:21:35.511595 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9160" for this suite. @ 09/01/25 04:21:35.517
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/01/25 04:21:35.524
  I0901 04:21:35.524724 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 04:21:35.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:35.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:35.541
  STEP: Creating a pod to test downward api env vars @ 09/01/25 04:21:35.544
  STEP: Saw pod success @ 09/01/25 04:21:37.563
  I0901 04:21:37.567763 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downward-api-c9daf780-94db-4295-9e29-5068964cfd90 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 04:21:37.576
  I0901 04:21:37.589828 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9905" for this suite. @ 09/01/25 04:21:37.594
• [2.077 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 09/01/25 04:21:37.601
  I0901 04:21:37.601661 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 04:21:37.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:37.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:37.617
  STEP: creating service nodeport-test with type=NodePort in namespace services-1803 @ 09/01/25 04:21:37.62
  STEP: creating replication controller nodeport-test in namespace services-1803 @ 09/01/25 04:21:37.633
  I0901 04:21:37.639071      21 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1803, replica count: 2
  I0901 04:21:40.691055      21 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 04:21:40.691151 21 resource.go:361] Creating new exec pod
  I0901 04:21:43.711711 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1803 exec execpod5slbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 04:21:43.940321 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.24.44) 80 port [tcp/http] succeeded!\n"
  I0901 04:21:43.940374 21 builder.go:147] stdout: ""
  I0901 04:21:44.711828 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1803 exec execpod5slbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0901 04:21:44.927339 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.43.24.44) 80 port [tcp/http] succeeded!\n"
  I0901 04:21:44.927386 21 builder.go:147] stdout: "nodeport-test-n8frx"
  I0901 04:21:44.927467 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1803 exec execpod5slbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.24.44 80'
  I0901 04:21:45.154440 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.24.44 80\nConnection to 10.43.24.44 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0901 04:21:45.154496 21 builder.go:147] stdout: "nodeport-test-tzhgq"
  I0901 04:21:45.154576 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1803 exec execpod5slbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 31792'
  I0901 04:21:45.342852 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.10 31792\n+ echo hostName\nConnection to 192.168.1.10 31792 port [tcp/*] succeeded!\n"
  I0901 04:21:45.342901 21 builder.go:147] stdout: "nodeport-test-tzhgq"
  I0901 04:21:45.342981 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1803 exec execpod5slbz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.9 31792'
  I0901 04:21:45.542349 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.9 31792\nConnection to 192.168.1.9 31792 port [tcp/*] succeeded!\n"
  I0901 04:21:45.542876 21 builder.go:147] stdout: "nodeport-test-tzhgq"
  I0901 04:21:45.543175 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1803" for this suite. @ 09/01/25 04:21:45.55
• [7.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 09/01/25 04:21:45.56
  I0901 04:21:45.560635 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:21:45.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:45.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:45.581
  STEP: Setting up server cert @ 09/01/25 04:21:45.6
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:21:45.888
  STEP: Deploying the webhook pod @ 09/01/25 04:21:45.896
  STEP: Wait for the deployment to be ready @ 09/01/25 04:21:45.908
  I0901 04:21:45.927092 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:21:47.946
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:21:47.976
  I0901 04:21:48.976504 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/01/25 04:21:48.99
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 04:21:49.016
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/01/25 04:21:49.041
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 04:21:49.06
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/01/25 04:21:49.071
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 04:21:49.077
  I0901 04:21:49.132394 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8394" for this suite. @ 09/01/25 04:21:49.136
  STEP: Destroying namespace "webhook-markers-8819" for this suite. @ 09/01/25 04:21:49.142
• [3.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/01/25 04:21:49.147
  I0901 04:21:49.147956 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 04:21:49.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:49.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:49.168
  I0901 04:21:49.176864 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2197" for this suite. @ 09/01/25 04:21:49.238
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/01/25 04:21:49.247
  I0901 04:21:49.247317 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename events @ 09/01/25 04:21:49.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:49.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:49.268
  STEP: creating a test event @ 09/01/25 04:21:49.272
  STEP: listing all events in all namespaces @ 09/01/25 04:21:49.277
  STEP: patching the test event @ 09/01/25 04:21:49.292
  STEP: fetching the test event @ 09/01/25 04:21:49.301
  STEP: updating the test event @ 09/01/25 04:21:49.306
  STEP: getting the test event @ 09/01/25 04:21:49.317
  STEP: deleting the test event @ 09/01/25 04:21:49.321
  STEP: listing all events in all namespaces @ 09/01/25 04:21:49.331
  I0901 04:21:49.344650 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6194" for this suite. @ 09/01/25 04:21:49.348
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/01/25 04:21:49.356
  I0901 04:21:49.356779 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 04:21:49.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:49.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:49.377
  I0901 04:21:49.471519 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/01/25 04:21:49.479
  I0901 04:21:49.483859 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:21:49.484000 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/01/25 04:21:49.484
  I0901 04:21:49.580095 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:21:49.580161 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae is running 0 daemon pod, expected 1
  I0901 04:21:50.579054 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 04:21:50.579292 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/01/25 04:21:50.586
  I0901 04:21:50.608574 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:21:50.609129 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/01/25 04:21:50.609
  I0901 04:21:50.679733 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:21:50.679784 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae is running 0 daemon pod, expected 1
  I0901 04:21:51.624721 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:21:51.624790 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae is running 0 daemon pod, expected 1
  I0901 04:21:52.626869 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 04:21:52.626953 21 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 04:21:52.637
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6310, will wait for the garbage collector to delete the pods @ 09/01/25 04:21:52.637
  I0901 04:21:52.697935 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.836169ms
  I0901 04:21:52.798924 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.983306ms
  I0901 04:21:54.405845 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:21:54.406027 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 04:21:54.412550 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3795"},"items":null}

  I0901 04:21:54.479485 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3797"},"items":null}

  I0901 04:21:54.514799 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6310" for this suite. @ 09/01/25 04:21:54.521
• [5.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 09/01/25 04:21:54.529
  I0901 04:21:54.529526 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:21:54.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:21:54.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:21:54.55
  STEP: Setting up server cert @ 09/01/25 04:21:54.575
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:21:54.925
  STEP: Deploying the webhook pod @ 09/01/25 04:21:54.938
  STEP: Wait for the deployment to be ready @ 09/01/25 04:21:54.974
  I0901 04:21:54.987670 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:21:57.001
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:21:57.01
  I0901 04:21:58.010812 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 04:21:58.024034 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-347-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 04:21:58.541
  STEP: Creating a custom resource while v1 is storage version @ 09/01/25 04:21:58.571
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/01/25 04:22:00.602
  STEP: Patching the custom resource while v2 is storage version @ 09/01/25 04:22:00.631
  I0901 04:22:01.220210 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8729" for this suite. @ 09/01/25 04:22:01.226
  STEP: Destroying namespace "webhook-markers-6585" for this suite. @ 09/01/25 04:22:01.236
• [6.716 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/01/25 04:22:01.247
  I0901 04:22:01.247239 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 04:22:01.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:22:01.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:22:01.271
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:22:01.276
  STEP: Saw pod success @ 09/01/25 04:22:05.306
  I0901 04:22:05.311793 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-754662b9-4b2d-484e-9f6a-261d42e935aa container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:22:05.322
  I0901 04:22:05.341346 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-698" for this suite. @ 09/01/25 04:22:05.348
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 09/01/25 04:22:05.363
  I0901 04:22:05.363801 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 04:22:05.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:22:05.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:22:05.377
  STEP: Creating service test in namespace statefulset-6553 @ 09/01/25 04:22:05.379
  STEP: Looking for a node to schedule stateful set and pod @ 09/01/25 04:22:05.392
  STEP: Creating pod with conflicting port in namespace statefulset-6553 @ 09/01/25 04:22:05.448
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6553 @ 09/01/25 04:22:05.46
  STEP: Creating statefulset with conflicting port in namespace statefulset-6553 @ 09/01/25 04:22:07.474
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6553 @ 09/01/25 04:22:07.483
  I0901 04:22:07.511863 21 statefulset.go:872] Observed stateful pod in namespace: statefulset-6553, name: ss-0, uid: a56911a0-1f24-4633-986c-f951a77c66cb, status phase: Pending. Waiting for statefulset controller to delete.
  I0901 04:22:07.530999 21 statefulset.go:872] Observed stateful pod in namespace: statefulset-6553, name: ss-0, uid: a56911a0-1f24-4633-986c-f951a77c66cb, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 04:22:07.536788 21 statefulset.go:872] Observed stateful pod in namespace: statefulset-6553, name: ss-0, uid: a56911a0-1f24-4633-986c-f951a77c66cb, status phase: Failed. Waiting for statefulset controller to delete.
  I0901 04:22:07.538801 21 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-6553
  STEP: Removing pod with conflicting port in namespace statefulset-6553 @ 09/01/25 04:22:07.538
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6553 and will be in running state @ 09/01/25 04:22:07.55
  I0901 04:22:09.564756 21 statefulset.go:138] Deleting all statefulset in ns statefulset-6553
  I0901 04:22:09.569933 21 rest.go:152] Scaling statefulset ss to 0
  I0901 04:22:19.586312 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 04:22:19.590094 21 rest.go:90] Deleting statefulset ss
  I0901 04:22:19.601996 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6553" for this suite. @ 09/01/25 04:22:19.606
• [14.248 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/01/25 04:22:19.612
  I0901 04:22:19.613049 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename proxy @ 09/01/25 04:22:19.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:22:19.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:22:19.631
  STEP: starting an echo server on multiple ports @ 09/01/25 04:22:19.655
  STEP: creating replication controller proxy-service-29687 in namespace proxy-4636 @ 09/01/25 04:22:19.659
  I0901 04:22:19.666137      21 runners.go:193] Created replication controller with name: proxy-service-29687, namespace: proxy-4636, replica count: 1
  I0901 04:22:20.717954      21 runners.go:193] proxy-service-29687 Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0901 04:22:21.718933      21 runners.go:193] proxy-service-29687 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 04:22:21.724927 21 proxy.go:230] setup took 2.09011991s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/01/25 04:22:21.724
  I0901 04:22:21.818472 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 92.985056ms)
  I0901 04:22:21.818514 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 92.741254ms)
  I0901 04:22:21.829128 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 103.17027ms)
  I0901 04:22:21.829381 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 103.462734ms)
  I0901 04:22:21.829466 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 103.583526ms)
  I0901 04:22:21.829548 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 103.527096ms)
  I0901 04:22:21.829632 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 103.93937ms)
  I0901 04:22:21.831531 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 105.984304ms)
  I0901 04:22:21.834861 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 109.01896ms)
  I0901 04:22:21.838429 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 113.309752ms)
  I0901 04:22:21.838810 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 113.532288ms)
  I0901 04:22:21.839157 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 113.559665ms)
  I0901 04:22:21.839440 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 114.376116ms)
  I0901 04:22:21.839594 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 114.241248ms)
  I0901 04:22:21.839625 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 113.646386ms)
  I0901 04:22:21.839675 21 proxy.go:558] (0) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 114.252083ms)
  I0901 04:22:21.862614 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 22.123697ms)
  I0901 04:22:21.862657 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 22.211746ms)
  I0901 04:22:21.863113 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 22.382732ms)
  I0901 04:22:21.863439 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 23.22404ms)
  I0901 04:22:21.864692 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 24.353028ms)
  I0901 04:22:21.864923 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 24.265006ms)
  I0901 04:22:21.865967 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 25.741642ms)
  I0901 04:22:21.866046 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 25.584847ms)
  I0901 04:22:21.867134 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 26.498371ms)
  I0901 04:22:21.869475 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 29.104378ms)
  I0901 04:22:21.870851 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 30.191841ms)
  I0901 04:22:21.871076 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 30.334242ms)
  I0901 04:22:21.872184 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 31.572739ms)
  I0901 04:22:21.872621 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 32.184114ms)
  I0901 04:22:21.872667 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 32.08295ms)
  I0901 04:22:21.873596 21 proxy.go:558] (1) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 33.059235ms)
  I0901 04:22:21.906292 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 32.357033ms)
  I0901 04:22:21.906330 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 31.91337ms)
  I0901 04:22:21.907928 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 33.808302ms)
  I0901 04:22:21.909272 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 34.830802ms)
  I0901 04:22:21.909286 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 34.903221ms)
  I0901 04:22:21.910601 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 36.38374ms)
  I0901 04:22:21.914068 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 39.715643ms)
  I0901 04:22:21.916278 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 42.414973ms)
  I0901 04:22:21.916311 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 42.050302ms)
  I0901 04:22:21.916306 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 42.127193ms)
  I0901 04:22:21.916334 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 42.022356ms)
  I0901 04:22:21.916796 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 42.326364ms)
  I0901 04:22:21.919077 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 45.066299ms)
  I0901 04:22:21.919545 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 45.046583ms)
  I0901 04:22:21.919568 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 45.488571ms)
  I0901 04:22:21.919604 21 proxy.go:558] (2) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 45.077375ms)
  I0901 04:22:21.933285 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 12.687888ms)
  I0901 04:22:21.933716 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 13.732889ms)
  I0901 04:22:21.940182 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 19.863584ms)
  I0901 04:22:21.940315 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 19.824917ms)
  I0901 04:22:21.940447 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 19.92517ms)
  I0901 04:22:21.940605 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 20.368419ms)
  I0901 04:22:21.944904 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 24.831251ms)
  I0901 04:22:21.948552 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 28.1219ms)
  I0901 04:22:21.949727 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 29.324981ms)
  I0901 04:22:21.950152 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 29.947903ms)
  I0901 04:22:21.951171 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 30.882075ms)
  I0901 04:22:21.951531 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 30.972262ms)
  I0901 04:22:21.952750 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 32.128217ms)
  I0901 04:22:21.953544 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 32.888031ms)
  I0901 04:22:21.955640 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 35.174459ms)
  I0901 04:22:21.956132 21 proxy.go:558] (3) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 35.779929ms)
  I0901 04:22:21.968263 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 10.858185ms)
  I0901 04:22:21.976944 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 19.785516ms)
  I0901 04:22:21.978906 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 21.429252ms)
  I0901 04:22:21.982514 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 26.260525ms)
  I0901 04:22:21.982504 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 25.430372ms)
  I0901 04:22:21.983101 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 26.367259ms)
  I0901 04:22:21.984749 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 27.758331ms)
  I0901 04:22:21.984831 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 28.155074ms)
  I0901 04:22:21.985870 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 29.414235ms)
  I0901 04:22:21.986479 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 29.248477ms)
  I0901 04:22:21.986918 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 30.359245ms)
  I0901 04:22:21.987634 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 30.324412ms)
  I0901 04:22:21.990539 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 32.977093ms)
  I0901 04:22:21.993032 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 36.126358ms)
  I0901 04:22:21.993051 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 36.219022ms)
  I0901 04:22:21.993547 21 proxy.go:558] (4) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 35.904183ms)
  I0901 04:22:22.012617 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 18.866487ms)
  I0901 04:22:22.015372 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 21.349695ms)
  I0901 04:22:22.022128 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 27.973152ms)
  I0901 04:22:22.022177 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 27.781994ms)
  I0901 04:22:22.022206 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 27.959393ms)
  I0901 04:22:22.022221 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 27.869111ms)
  I0901 04:22:22.022241 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 27.964482ms)
  I0901 04:22:22.022261 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 27.937071ms)
  I0901 04:22:22.022784 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 28.703342ms)
  I0901 04:22:22.029178 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 35.442058ms)
  I0901 04:22:22.029217 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 34.793401ms)
  I0901 04:22:22.029240 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 35.305992ms)
  I0901 04:22:22.029258 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 35.433285ms)
  I0901 04:22:22.029345 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 35.289744ms)
  I0901 04:22:22.029389 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 35.511577ms)
  I0901 04:22:22.029447 21 proxy.go:558] (5) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 35.245348ms)
  I0901 04:22:22.042739 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 12.667725ms)
  I0901 04:22:22.044249 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 14.149162ms)
  I0901 04:22:22.044935 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 14.807629ms)
  I0901 04:22:22.050123 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 19.963347ms)
  I0901 04:22:22.050255 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 20.344208ms)
  I0901 04:22:22.050131 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 19.875593ms)
  I0901 04:22:22.055523 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 25.327163ms)
  I0901 04:22:22.055740 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 25.777857ms)
  I0901 04:22:22.058820 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 29.030044ms)
  I0901 04:22:22.059158 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 29.220043ms)
  I0901 04:22:22.060295 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 30.440854ms)
  I0901 04:22:22.062791 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 32.536556ms)
  I0901 04:22:22.062802 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 32.721192ms)
  I0901 04:22:22.063229 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 33.225362ms)
  I0901 04:22:22.063895 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 34.17746ms)
  I0901 04:22:22.065930 21 proxy.go:558] (6) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 36.041129ms)
  I0901 04:22:22.083223 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 17.191758ms)
  I0901 04:22:22.084550 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 17.494311ms)
  I0901 04:22:22.088957 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 21.481751ms)
  I0901 04:22:22.095013 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 28.101597ms)
  I0901 04:22:22.095316 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 28.332962ms)
  I0901 04:22:22.095526 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 28.337041ms)
  I0901 04:22:22.095709 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 28.442863ms)
  I0901 04:22:22.095922 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 28.51857ms)
  I0901 04:22:22.096056 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 29.620142ms)
  I0901 04:22:22.096786 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 29.384751ms)
  I0901 04:22:22.097958 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 31.190248ms)
  I0901 04:22:22.098913 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 32.226512ms)
  I0901 04:22:22.102219 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 35.377616ms)
  I0901 04:22:22.102934 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 36.362231ms)
  I0901 04:22:22.103734 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 37.317554ms)
  I0901 04:22:22.104168 21 proxy.go:558] (7) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 37.033511ms)
  I0901 04:22:22.118669 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 13.848015ms)
  I0901 04:22:22.119038 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 14.189869ms)
  I0901 04:22:22.121796 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 16.41018ms)
  I0901 04:22:22.124128 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 18.651954ms)
  I0901 04:22:22.126043 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 20.871638ms)
  I0901 04:22:22.128246 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 22.741152ms)
  I0901 04:22:22.133142 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 27.877677ms)
  I0901 04:22:22.133169 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 27.723848ms)
  I0901 04:22:22.135995 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 30.789072ms)
  I0901 04:22:22.136227 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 30.901061ms)
  I0901 04:22:22.138900 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 33.921457ms)
  I0901 04:22:22.139937 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 34.923967ms)
  I0901 04:22:22.140519 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 36.039177ms)
  I0901 04:22:22.141215 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 36.14151ms)
  I0901 04:22:22.142700 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 37.284996ms)
  I0901 04:22:22.142957 21 proxy.go:558] (8) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 37.838408ms)
  I0901 04:22:22.162366 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 19.269954ms)
  I0901 04:22:22.162934 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 19.501231ms)
  I0901 04:22:22.165914 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 22.12075ms)
  I0901 04:22:22.166157 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 22.842129ms)
  I0901 04:22:22.167126 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 23.495795ms)
  I0901 04:22:22.168374 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 24.618294ms)
  I0901 04:22:22.170520 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 26.700173ms)
  I0901 04:22:22.172157 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 28.782868ms)
  I0901 04:22:22.172157 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 28.282582ms)
  I0901 04:22:22.172591 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 29.027159ms)
  I0901 04:22:22.175904 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 32.22167ms)
  I0901 04:22:22.176498 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 32.772655ms)
  I0901 04:22:22.176931 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 33.690938ms)
  I0901 04:22:22.179310 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 35.461724ms)
  I0901 04:22:22.179975 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 36.357307ms)
  I0901 04:22:22.179976 21 proxy.go:558] (9) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 36.468851ms)
  I0901 04:22:22.194449 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 13.879489ms)
  I0901 04:22:22.198160 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 17.294382ms)
  I0901 04:22:22.198793 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 18.048921ms)
  I0901 04:22:22.201103 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 20.314583ms)
  I0901 04:22:22.203553 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 22.499277ms)
  I0901 04:22:22.203553 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 22.869792ms)
  I0901 04:22:22.204122 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 23.220322ms)
  I0901 04:22:22.205835 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 25.186919ms)
  I0901 04:22:22.206845 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 26.020629ms)
  I0901 04:22:22.217250 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 36.148774ms)
  I0901 04:22:22.217468 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 36.944717ms)
  I0901 04:22:22.217788 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 36.83612ms)
  I0901 04:22:22.217944 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 37.565064ms)
  I0901 04:22:22.218278 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 37.675263ms)
  I0901 04:22:22.218545 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 38.279052ms)
  I0901 04:22:22.218560 21 proxy.go:558] (10) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 37.543966ms)
  I0901 04:22:22.239711 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 19.822426ms)
  I0901 04:22:22.239995 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 20.787035ms)
  I0901 04:22:22.239898 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 20.512537ms)
  I0901 04:22:22.242315 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 22.454748ms)
  I0901 04:22:22.244813 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 25.022593ms)
  I0901 04:22:22.254572 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 34.755924ms)
  I0901 04:22:22.255428 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 36.160842ms)
  I0901 04:22:22.256297 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 36.822247ms)
  I0901 04:22:22.259624 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 40.189019ms)
  I0901 04:22:22.260103 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 40.478231ms)
  I0901 04:22:22.262293 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 42.583758ms)
  I0901 04:22:22.263679 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 44.101198ms)
  I0901 04:22:22.268393 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 48.657538ms)
  I0901 04:22:22.268792 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 49.139489ms)
  I0901 04:22:22.268527 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 48.953614ms)
  I0901 04:22:22.270432 21 proxy.go:558] (11) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 50.928435ms)
  I0901 04:22:22.280942 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 10.451908ms)
  I0901 04:22:22.281738 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 10.689322ms)
  I0901 04:22:22.291115 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 19.98968ms)
  I0901 04:22:22.292012 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 21.118199ms)
  I0901 04:22:22.292906 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 21.712287ms)
  I0901 04:22:22.296120 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 24.89891ms)
  I0901 04:22:22.296867 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 26.195618ms)
  I0901 04:22:22.296908 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 25.654625ms)
  I0901 04:22:22.297024 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 25.951097ms)
  I0901 04:22:22.297188 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 26.034144ms)
  I0901 04:22:22.302049 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 31.070408ms)
  I0901 04:22:22.305187 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 34.087362ms)
  I0901 04:22:22.305193 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 34.251636ms)
  I0901 04:22:22.305545 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 34.530268ms)
  I0901 04:22:22.305952 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 35.112725ms)
  I0901 04:22:22.307909 21 proxy.go:558] (12) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 37.168259ms)
  I0901 04:22:22.321950 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 13.00221ms)
  I0901 04:22:22.322829 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 13.927926ms)
  I0901 04:22:22.330310 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 21.739108ms)
  I0901 04:22:22.330654 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 21.923405ms)
  I0901 04:22:22.330848 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 21.983832ms)
  I0901 04:22:22.331698 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 23.492622ms)
  I0901 04:22:22.331987 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 23.169206ms)
  I0901 04:22:22.332087 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 23.312704ms)
  I0901 04:22:22.332548 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 24.069131ms)
  I0901 04:22:22.336111 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 27.449793ms)
  I0901 04:22:22.337526 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 28.83586ms)
  I0901 04:22:22.338532 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 30.398063ms)
  I0901 04:22:22.339638 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 31.202641ms)
  I0901 04:22:22.341870 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 33.500268ms)
  I0901 04:22:22.342382 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 33.409866ms)
  I0901 04:22:22.344675 21 proxy.go:558] (13) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 36.147766ms)
  I0901 04:22:22.355136 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 10.399969ms)
  I0901 04:22:22.363596 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 18.380535ms)
  I0901 04:22:22.366062 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 20.905993ms)
  I0901 04:22:22.367657 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 22.384931ms)
  I0901 04:22:22.369766 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 24.20778ms)
  I0901 04:22:22.370127 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 24.720964ms)
  I0901 04:22:22.373172 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 27.717715ms)
  I0901 04:22:22.373467 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 28.133448ms)
  I0901 04:22:22.374073 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 28.983707ms)
  I0901 04:22:22.375136 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 29.52124ms)
  I0901 04:22:22.375685 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 30.17212ms)
  I0901 04:22:22.378327 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 32.840077ms)
  I0901 04:22:22.379169 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 34.150391ms)
  I0901 04:22:22.379579 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 34.172521ms)
  I0901 04:22:22.380838 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 35.901243ms)
  I0901 04:22:22.383816 21 proxy.go:558] (14) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 38.236919ms)
  I0901 04:22:22.397926 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 13.669455ms)
  I0901 04:22:22.397937 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 13.913083ms)
  I0901 04:22:22.399819 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 14.158618ms)
  I0901 04:22:22.400464 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 15.559213ms)
  I0901 04:22:22.403469 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 18.452552ms)
  I0901 04:22:22.404260 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 19.561092ms)
  I0901 04:22:22.405035 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 19.776812ms)
  I0901 04:22:22.409087 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 23.621654ms)
  I0901 04:22:22.417324 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 31.956556ms)
  I0901 04:22:22.419130 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 34.008106ms)
  I0901 04:22:22.419286 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 33.72541ms)
  I0901 04:22:22.419960 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 35.161422ms)
  I0901 04:22:22.420226 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 35.644202ms)
  I0901 04:22:22.420371 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 34.572481ms)
  I0901 04:22:22.420483 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 36.559345ms)
  I0901 04:22:22.420735 21 proxy.go:558] (15) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 36.295885ms)
  I0901 04:22:22.439126 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 17.838981ms)
  I0901 04:22:22.441043 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 20.134189ms)
  I0901 04:22:22.442380 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 21.134253ms)
  I0901 04:22:22.452221 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 30.765026ms)
  I0901 04:22:22.453290 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 32.166215ms)
  I0901 04:22:22.453936 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 32.742662ms)
  I0901 04:22:22.454205 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 32.682613ms)
  I0901 04:22:22.454229 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 32.827546ms)
  I0901 04:22:22.454313 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 32.994844ms)
  I0901 04:22:22.458670 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 37.709286ms)
  I0901 04:22:22.459804 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 38.241407ms)
  I0901 04:22:22.460285 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 38.687832ms)
  I0901 04:22:22.460278 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 38.781643ms)
  I0901 04:22:22.460442 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 39.364533ms)
  I0901 04:22:22.460549 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 39.193648ms)
  I0901 04:22:22.469938 21 proxy.go:558] (16) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 48.508092ms)
  I0901 04:22:22.492882 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 22.574805ms)
  I0901 04:22:22.492903 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 22.735311ms)
  I0901 04:22:22.493002 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 22.53644ms)
  I0901 04:22:22.493085 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 22.72802ms)
  I0901 04:22:22.493104 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 22.684533ms)
  I0901 04:22:22.493157 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 23.150741ms)
  I0901 04:22:22.493299 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 23.105265ms)
  I0901 04:22:22.493983 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 23.537481ms)
  I0901 04:22:22.494172 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 23.686305ms)
  I0901 04:22:22.494139 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 23.735318ms)
  I0901 04:22:22.494163 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 23.786158ms)
  I0901 04:22:22.494612 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 24.104446ms)
  I0901 04:22:22.494924 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 24.35178ms)
  I0901 04:22:22.496005 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 25.752603ms)
  I0901 04:22:22.496274 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 25.938403ms)
  I0901 04:22:22.496277 21 proxy.go:558] (17) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 25.726696ms)
  I0901 04:22:22.512989 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 15.822335ms)
  I0901 04:22:22.518532 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 21.741934ms)
  I0901 04:22:22.518798 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 21.675319ms)
  I0901 04:22:22.518994 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 21.954301ms)
  I0901 04:22:22.519105 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 22.351154ms)
  I0901 04:22:22.519411 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 22.381512ms)
  I0901 04:22:22.519977 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 23.15721ms)
  I0901 04:22:22.520044 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 22.948671ms)
  I0901 04:22:22.520062 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 23.464553ms)
  I0901 04:22:22.520066 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 23.483778ms)
  I0901 04:22:22.520086 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 23.159898ms)
  I0901 04:22:22.520110 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 23.152267ms)
  I0901 04:22:22.520093 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 23.239368ms)
  I0901 04:22:22.520143 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 23.146197ms)
  I0901 04:22:22.520783 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 23.713743ms)
  I0901 04:22:22.520961 21 proxy.go:558] (18) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 24.258556ms)
  I0901 04:22:22.527184 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:160/proxy/: foo (200; 6.064878ms)
  I0901 04:22:22.534702 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname2/proxy/: tls qux (200; 13.686367ms)
  I0901 04:22:22.535179 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:443/proxy/tlsrewritem... (200; 13.883754ms)
  I0901 04:22:22.539158 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:160/proxy/: foo (200; 17.914242ms)
  I0901 04:22:22.541288 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:460/proxy/: tls baz (200; 19.945122ms)
  I0901 04:22:22.542117 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:1080/proxy/rewriteme">test<... (200; 20.301635ms)
  I0901 04:22:22.542150 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn:162/proxy/: bar (200; 20.761879ms)
  I0901 04:22:22.542593 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/proxy-service-29687-kk8cn/proxy/rewriteme">test</a> (200; 21.003317ms)
  I0901 04:22:22.543916 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname2/proxy/: bar (200; 22.143111ms)
  I0901 04:22:22.544460 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/services/https:proxy-service-29687:tlsportname1/proxy/: tls baz (200; 22.796683ms)
  I0901 04:22:22.544820 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/services/http:proxy-service-29687:portname1/proxy/: foo (200; 23.079687ms)
  I0901 04:22:22.544896 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:162/proxy/: bar (200; 23.439635ms)
  I0901 04:22:22.544981 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname1/proxy/: foo (200; 23.426529ms)
  I0901 04:22:22.545052 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/https:proxy-service-29687-kk8cn:462/proxy/: tls qux (200; 23.552652ms)
  I0901 04:22:22.545119 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/: <a href="/api/v1/namespaces/proxy-4636/pods/http:proxy-service-29687-kk8cn:1080/proxy/rewriteme">... (200; 23.486725ms)
  I0901 04:22:22.547892 21 proxy.go:558] (19) /api/v1/namespaces/proxy-4636/services/proxy-service-29687:portname2/proxy/: bar (200; 26.038719ms)
  STEP: deleting ReplicationController proxy-service-29687 in namespace proxy-4636, will wait for the garbage collector to delete the pods @ 09/01/25 04:22:22.548
  I0901 04:22:22.610081 21 resources.go:139] Deleting ReplicationController proxy-service-29687 took: 7.465026ms
  I0901 04:22:22.710631 21 resources.go:163] Terminating ReplicationController proxy-service-29687 pods took: 100.550145ms
  I0901 04:22:24.512301 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4636" for this suite. @ 09/01/25 04:22:24.518
• [4.913 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/01/25 04:22:24.525
  I0901 04:22:24.526032 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 04:22:24.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:22:24.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:22:24.541
  STEP: Creating a cronjob @ 09/01/25 04:22:24.544
  STEP: Ensuring more than one job is running at a time @ 09/01/25 04:22:24.548
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/01/25 04:24:00.555
  STEP: Removing cronjob @ 09/01/25 04:24:00.563
  I0901 04:24:00.571999 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3921" for this suite. @ 09/01/25 04:24:00.576
• [96.057 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/01/25 04:24:00.583
  I0901 04:24:00.583726 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:24:00.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:24:00.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:24:00.602
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:24:00.606
  STEP: Saw pod success @ 09/01/25 04:24:04.635
  I0901 04:24:04.641252 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-f2a1366e-5747-415c-b52c-219d24d8f2a2 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:24:04.662
  I0901 04:24:04.684604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6661" for this suite. @ 09/01/25 04:24:04.69
• [4.114 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 09/01/25 04:24:04.698
  I0901 04:24:04.698446 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:24:04.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:24:04.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:24:04.717
  STEP: Setting up server cert @ 09/01/25 04:24:04.74
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:24:05.436
  STEP: Deploying the webhook pod @ 09/01/25 04:24:05.444
  STEP: Wait for the deployment to be ready @ 09/01/25 04:24:05.459
  I0901 04:24:05.467897 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:24:07.482
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:24:07.492
  I0901 04:24:08.493160 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 04:24:08.506106 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9350-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 04:24:09.02
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 04:24:09.046
  I0901 04:24:11.650456 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7088" for this suite. @ 09/01/25 04:24:11.658
  STEP: Destroying namespace "webhook-markers-5820" for this suite. @ 09/01/25 04:24:11.668
• [6.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/01/25 04:24:11.679
  I0901 04:24:11.679511 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 04:24:11.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:24:11.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:24:11.697
  STEP: Setting up server cert @ 09/01/25 04:24:11.701
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 04:24:12.006
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 04:24:12.014
  STEP: Wait for the deployment to be ready @ 09/01/25 04:24:12.027
  I0901 04:24:12.047768 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:24:14.064
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:24:14.074
  I0901 04:24:15.075684 21 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 04:24:15.083932 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Creating a v1 custom resource @ 09/01/25 04:24:17.64
  STEP: v2 custom resource should be converted @ 09/01/25 04:24:17.645
  I0901 04:24:18.212483 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4360" for this suite. @ 09/01/25 04:24:18.216
• [6.547 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 09/01/25 04:24:18.226
  I0901 04:24:18.226037 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 04:24:18.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:24:18.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:24:18.241
  STEP: Counting existing ResourceQuota @ 09/01/25 04:24:35.254
  STEP: Creating a ResourceQuota @ 09/01/25 04:24:40.26
  STEP: Ensuring resource quota status is calculated @ 09/01/25 04:24:40.265
  STEP: Creating a ConfigMap @ 09/01/25 04:24:42.274
  STEP: Ensuring resource quota status captures configMap creation @ 09/01/25 04:24:42.29
  STEP: Deleting a ConfigMap @ 09/01/25 04:24:44.297
  STEP: Ensuring resource quota status released usage @ 09/01/25 04:24:44.306
  I0901 04:24:46.316008 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-839" for this suite. @ 09/01/25 04:24:46.324
• [28.108 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/01/25 04:24:46.336
  I0901 04:24:46.336667 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename subpath @ 09/01/25 04:24:46.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:24:46.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:24:46.362
  STEP: Setting up data @ 09/01/25 04:24:46.366
  STEP: Creating pod pod-subpath-test-configmap-dhtb @ 09/01/25 04:24:46.385
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 04:24:46.386
  STEP: Saw pod success @ 09/01/25 04:25:10.512
  I0901 04:25:10.518107 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-subpath-test-configmap-dhtb container test-container-subpath-configmap-dhtb: <nil>
  STEP: delete the pod @ 09/01/25 04:25:10.531
  STEP: Deleting pod pod-subpath-test-configmap-dhtb @ 09/01/25 04:25:10.553
  I0901 04:25:10.553779 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-dhtb" in namespace "subpath-4734"
  I0901 04:25:10.558593 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4734" for this suite. @ 09/01/25 04:25:10.564
• [24.236 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/01/25 04:25:10.573
  I0901 04:25:10.573746 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 04:25:10.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:10.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:10.592
  I0901 04:25:10.653097 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3132" for this suite. @ 09/01/25 04:25:10.664
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/01/25 04:25:10.67
  I0901 04:25:10.671131 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:25:10.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:10.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:10.687
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:25:10.691
  STEP: Saw pod success @ 09/01/25 04:25:14.714
  I0901 04:25:14.720974 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-8bf05aac-d5f5-42d0-9abb-fffed48da7f7 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:25:14.732
  I0901 04:25:14.747132 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8409" for this suite. @ 09/01/25 04:25:14.752
• [4.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/01/25 04:25:14.762
  I0901 04:25:14.763157 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 04:25:14.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:14.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:14.795
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/01/25 04:25:14.798
  STEP: When a replication controller with a matching selector is created @ 09/01/25 04:25:16.822
  STEP: Then the orphan pod is adopted @ 09/01/25 04:25:16.828
  I0901 04:25:17.839622 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8707" for this suite. @ 09/01/25 04:25:17.846
• [3.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/01/25 04:25:17.855
  I0901 04:25:17.855519 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 04:25:17.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:17.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:17.877
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 04:25:17.88
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/01/25 04:25:17.88
  STEP: creating a pod to probe DNS @ 09/01/25 04:25:17.88
  STEP: submitting the pod to kubernetes @ 09/01/25 04:25:17.88
  STEP: retrieving the pod @ 09/01/25 04:25:19.902
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:25:19.906
  I0901 04:25:19.930954 21 dns_common.go:546] DNS probes using dns-1545/dns-test-9cbce0af-2737-4487-bb56-9db8fd17bbe6 succeeded

  STEP: deleting the pod @ 09/01/25 04:25:19.931
  I0901 04:25:19.941090 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1545" for this suite. @ 09/01/25 04:25:19.948
• [2.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/01/25 04:25:19.956
  I0901 04:25:19.956938 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 04:25:19.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:19.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:19.972
  STEP: Creating a test headless service @ 09/01/25 04:25:19.975
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9308.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9308.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9308.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9308.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 124.31.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.31.124_udp@PTR;check="$$(dig +tcp +noall +answer +search 124.31.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.31.124_tcp@PTR;sleep 1; done
   @ 09/01/25 04:25:19.99
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9308.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9308.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9308.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9308.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9308.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 124.31.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.31.124_udp@PTR;check="$$(dig +tcp +noall +answer +search 124.31.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.31.124_tcp@PTR;sleep 1; done
   @ 09/01/25 04:25:19.99
  STEP: creating a pod to probe DNS @ 09/01/25 04:25:19.99
  STEP: submitting the pod to kubernetes @ 09/01/25 04:25:19.99
  STEP: retrieving the pod @ 09/01/25 04:25:22.093
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:25:22.097
  I0901 04:25:22.110189 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.115082 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.119826 21 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.124367 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.147834 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.152414 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.157437 21 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.162178 21 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:22.180843 21 dns_common.go:506] Lookups using dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a failed for: [agnhost_udp@dns-test-service.dns-9308.svc.cluster.local agnhost_tcp@dns-test-service.dns-9308.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local jessie_udp@dns-test-service.dns-9308.svc.cluster.local jessie_tcp@dns-test-service.dns-9308.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local]

  I0901 04:25:22.189382 21 dns_common.go:514] Pod client logs for webserver: 
  I0901 04:25:22.199158 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 04:25:22.211367 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0901 04:25:27.117019 21 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local from pod dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a: the server could not find the requested resource (get pods dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a)
  I0901 04:25:27.187214 21 dns_common.go:506] Lookups using dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a failed for: [agnhost_tcp@_http._tcp.dns-test-service.dns-9308.svc.cluster.local]

  I0901 04:25:27.196422 21 dns_common.go:514] Pod client logs for webserver: 
  I0901 04:25:27.204749 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 04:25:27.213790 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0901 04:25:32.179395 21 dns_common.go:546] DNS probes using dns-9308/dns-test-604dfabb-e668-4cb1-a8af-002ac3abdf9a succeeded

  STEP: deleting the pod @ 09/01/25 04:25:32.18
  STEP: deleting the test service @ 09/01/25 04:25:32.193
  STEP: deleting the test headless service @ 09/01/25 04:25:32.235
  I0901 04:25:32.251047 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9308" for this suite. @ 09/01/25 04:25:32.256
• [12.307 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/01/25 04:25:32.264
  I0901 04:25:32.264449 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename containers @ 09/01/25 04:25:32.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:32.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:32.28
  STEP: Creating a pod to test override all @ 09/01/25 04:25:32.285
  STEP: Saw pod success @ 09/01/25 04:25:34.305
  I0901 04:25:34.310141 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod client-containers-f229a6fc-4cf8-4627-9623-2cb63512382b container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 04:25:34.326
  I0901 04:25:34.344056 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6611" for this suite. @ 09/01/25 04:25:34.348
• [2.090 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/01/25 04:25:34.354
  I0901 04:25:34.355068 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 04:25:34.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:34.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:34.37
  STEP: Creating configMap with name configmap-test-upd-abafb88b-f812-46ca-b4e9-38eff865f7cd @ 09/01/25 04:25:34.449
  STEP: Creating the pod @ 09/01/25 04:25:34.454
  STEP: Waiting for pod with text data @ 09/01/25 04:25:36.476
  STEP: Waiting for pod with binary data @ 09/01/25 04:25:36.487
  I0901 04:25:36.496891 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8511" for this suite. @ 09/01/25 04:25:36.502
• [2.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/01/25 04:25:36.511
  I0901 04:25:36.512009 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 04:25:36.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:36.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:36.527
  I0901 04:25:36.530336 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 04:25:37.552757 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5380" for this suite. @ 09/01/25 04:25:37.559
• [1.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/01/25 04:25:37.565
  I0901 04:25:37.565454 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename init-container @ 09/01/25 04:25:37.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:37.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:37.579
  STEP: creating the pod @ 09/01/25 04:25:37.582
  I0901 04:25:37.582357 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0901 04:25:41.173154 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1775" for this suite. @ 09/01/25 04:25:41.181
• [3.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/01/25 04:25:41.193
  I0901 04:25:41.193175 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:25:41.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:41.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:41.209
  STEP: Creating configMap with name projected-configmap-test-volume-b6ac59db-e938-4131-a147-068e5e61f216 @ 09/01/25 04:25:41.212
  STEP: Creating a pod to test consume configMaps @ 09/01/25 04:25:41.217
  STEP: Saw pod success @ 09/01/25 04:25:43.239
  I0901 04:25:43.244076 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-6e32dd7a-24c8-4d54-b664-d0b0426ddc60 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 04:25:43.253
  I0901 04:25:43.269582 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5089" for this suite. @ 09/01/25 04:25:43.276
• [2.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/01/25 04:25:43.285
  I0901 04:25:43.285540 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 04:25:43.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:43.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:43.32
  STEP: creating the pod @ 09/01/25 04:25:43.323
  STEP: submitting the pod to kubernetes @ 09/01/25 04:25:43.323
  STEP: verifying QOS class is set on the pod @ 09/01/25 04:25:43.336
  I0901 04:25:43.340719 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7872" for this suite. @ 09/01/25 04:25:43.382
• [0.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/01/25 04:25:43.394
  I0901 04:25:43.394722 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename containers @ 09/01/25 04:25:43.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:43.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:43.42
  STEP: Creating a pod to test override command @ 09/01/25 04:25:43.426
  STEP: Saw pod success @ 09/01/25 04:25:45.445
  I0901 04:25:45.451283 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod client-containers-cc687663-f9f7-4a0e-a5f8-de887a799a1d container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 04:25:45.464
  I0901 04:25:45.485358 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2994" for this suite. @ 09/01/25 04:25:45.492
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/01/25 04:25:45.502
  I0901 04:25:45.502907 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 04:25:45.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:45.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:45.523
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 04:25:45.527
  STEP: Saw pod success @ 09/01/25 04:25:49.555
  I0901 04:25:49.562199 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-7f87410b-cea2-4632-9e24-b8701a9f2673 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 04:25:49.578
  I0901 04:25:49.599817 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-370" for this suite. @ 09/01/25 04:25:49.604
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 09/01/25 04:25:49.614
  I0901 04:25:49.614514 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 04:25:49.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:25:49.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:25:49.631
  STEP: Creating service test in namespace statefulset-7549 @ 09/01/25 04:25:49.633
  STEP: Creating stateful set ss in namespace statefulset-7549 @ 09/01/25 04:25:49.638
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7549 @ 09/01/25 04:25:49.646
  I0901 04:25:49.653260 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0901 04:25:59.656748 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/01/25 04:25:59.657
  I0901 04:25:59.667500 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 04:25:59.897572 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 04:25:59.897649 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 04:25:59.897678 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 04:25:59.904904 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0901 04:26:09.907816 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 04:26:09.907909 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 04:26:09.938718 21 resource.go:168] POD   NODE                                            PHASE    GRACE  CONDITIONS
  I0901 04:26:09.938836 21 resource.go:175] ss-0  k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:25:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:25:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:25:49 +0000 UTC  }]
  I0901 04:26:09.938888 21 resource.go:175] ss-2                                                  Pending         []
  I0901 04:26:09.938902 21 resource.go:178] 
  I0901 04:26:09.938917 21 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  I0901 04:26:10.947849 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.989209167s
  I0901 04:26:11.956219 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.979243965s
  I0901 04:26:12.964985 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.972133304s
  I0901 04:26:13.971595 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.963402311s
  I0901 04:26:14.978784 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.956032942s
  I0901 04:26:15.984903 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.949382142s
  I0901 04:26:16.989862 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.942911507s
  I0901 04:26:17.995065 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.938599931s
  I0901 04:26:19.000057 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 933.407603ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7549 @ 09/01/25 04:26:20
  I0901 04:26:20.008332 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 04:26:20.197535 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 04:26:20.197622 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 04:26:20.197663 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 04:26:20.197951 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 04:26:20.431382 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 04:26:20.431432 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 04:26:20.431450 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 04:26:20.431502 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 04:26:20.659260 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0901 04:26:20.659335 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 04:26:20.659356 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 04:26:20.666335 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0901 04:26:30.668959 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 04:26:30.669054 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 04:26:30.669094 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/01/25 04:26:30.669
  I0901 04:26:30.674951 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 04:26:30.886006 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 04:26:30.886059 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 04:26:30.886077 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 04:26:30.886147 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 04:26:31.072000 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 04:26:31.072054 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 04:26:31.072068 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 04:26:31.072124 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-7549 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 04:26:31.264357 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 04:26:31.264413 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 04:26:31.264430 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 04:26:31.264443 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 04:26:31.270068 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0901 04:26:41.277186 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 04:26:41.277248 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 04:26:41.277266 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 04:26:41.296234 21 resource.go:168] POD   NODE                                            PHASE    GRACE  CONDITIONS
  I0901 04:26:41.296306 21 resource.go:175] ss-0  k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:25:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:25:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:25:49 +0000 UTC  }]
  I0901 04:26:41.296337 21 resource.go:175] ss-1  k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:09 +0000 UTC  }]
  I0901 04:26:41.296368 21 resource.go:175] ss-2  k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:11 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:09 +0000 UTC  }]
  I0901 04:26:41.296378 21 resource.go:178] 
  I0901 04:26:41.296387 21 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0901 04:26:42.305216 21 resource.go:168] POD   NODE                                            PHASE      GRACE  CONDITIONS
  I0901 04:26:42.305301 21 resource.go:175] ss-2  k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:09 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:31 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 04:26:09 +0000 UTC  }]
  I0901 04:26:42.305315 21 resource.go:178] 
  I0901 04:26:42.305326 21 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 1
  I0901 04:26:43.312400 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.981693596s
  I0901 04:26:44.319771 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.974424213s
  I0901 04:26:45.327866 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.967095538s
  I0901 04:26:46.333723 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.959036595s
  I0901 04:26:47.340540 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.95304595s
  I0901 04:26:48.346690 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.946449992s
  I0901 04:26:49.354612 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.940161084s
  I0901 04:26:50.361425 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 932.267426ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7549 @ 09/01/25 04:26:51.361
  I0901 04:26:51.366323 21 rest.go:152] Scaling statefulset ss to 0
  I0901 04:26:51.374852 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 04:26:51.378089 21 statefulset.go:138] Deleting all statefulset in ns statefulset-7549
  I0901 04:26:51.382710 21 rest.go:152] Scaling statefulset ss to 0
  I0901 04:26:51.389671 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 04:26:51.392761 21 rest.go:90] Deleting statefulset ss
  I0901 04:26:51.411778 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7549" for this suite. @ 09/01/25 04:26:51.417
• [61.810 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/01/25 04:26:51.426
  I0901 04:26:51.426432 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/01/25 04:26:51.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:26:51.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:26:51.445
  STEP: getting /apis @ 09/01/25 04:26:51.448
  STEP: getting /apis/storage.k8s.io @ 09/01/25 04:26:51.455
  STEP: getting /apis/storage.k8s.io/v1 @ 09/01/25 04:26:51.457
  STEP: creating @ 09/01/25 04:26:51.458
  STEP: watching @ 09/01/25 04:26:51.472
  I0901 04:26:51.472859 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/01/25 04:26:51.479
  STEP: listing in namespace @ 09/01/25 04:26:51.481
  STEP: listing across namespaces @ 09/01/25 04:26:51.483
  STEP: patching @ 09/01/25 04:26:51.485
  STEP: updating @ 09/01/25 04:26:51.489
  I0901 04:26:51.492042 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0901 04:26:51.492130 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/01/25 04:26:51.492
  STEP: deleting a collection @ 09/01/25 04:26:51.5
  I0901 04:26:51.509676 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-926" for this suite. @ 09/01/25 04:26:51.517
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 09/01/25 04:26:51.523
  I0901 04:26:51.523863 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 04:26:51.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:26:51.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:26:51.543
  STEP: Counting existing ResourceQuota @ 09/01/25 04:26:51.548
  STEP: Creating a ResourceQuota @ 09/01/25 04:26:56.626
  STEP: Ensuring resource quota status is calculated @ 09/01/25 04:26:56.632
  STEP: Creating a Service @ 09/01/25 04:26:58.637
  STEP: Creating a NodePort Service @ 09/01/25 04:26:58.654
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/01/25 04:26:58.676
  STEP: Ensuring resource quota status captures service creation @ 09/01/25 04:26:58.694
  STEP: Deleting Services @ 09/01/25 04:27:00.701
  STEP: Ensuring resource quota status released usage @ 09/01/25 04:27:00.735
  I0901 04:27:02.743093 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3295" for this suite. @ 09/01/25 04:27:02.75
• [11.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 09/01/25 04:27:02.761
  I0901 04:27:02.761837 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 04:27:02.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:27:02.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:27:02.785
  I0901 04:27:06.832417 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4969" for this suite. @ 09/01/25 04:27:06.84
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/01/25 04:27:06.848
  I0901 04:27:06.848978 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename certificates @ 09/01/25 04:27:06.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:27:06.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:27:06.871
  STEP: getting /apis @ 09/01/25 04:27:07.397
  STEP: getting /apis/certificates.k8s.io @ 09/01/25 04:27:07.402
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/01/25 04:27:07.403
  STEP: creating @ 09/01/25 04:27:07.404
  STEP: getting @ 09/01/25 04:27:07.419
  STEP: listing @ 09/01/25 04:27:07.423
  STEP: watching @ 09/01/25 04:27:07.427
  I0901 04:27:07.427899 21 certificates.go:316] starting watch
  STEP: patching @ 09/01/25 04:27:07.429
  STEP: updating @ 09/01/25 04:27:07.435
  I0901 04:27:07.444066 21 certificates.go:332] waiting for watch events with expected annotations
  I0901 04:27:07.444177 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/01/25 04:27:07.444
  STEP: patching /approval @ 09/01/25 04:27:07.449
  STEP: updating /approval @ 09/01/25 04:27:07.456
  STEP: getting /status @ 09/01/25 04:27:07.473
  STEP: patching /status @ 09/01/25 04:27:07.479
  STEP: updating /status @ 09/01/25 04:27:07.491
  STEP: deleting @ 09/01/25 04:27:07.5
  STEP: deleting a collection @ 09/01/25 04:27:07.516
  I0901 04:27:07.531880 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-128" for this suite. @ 09/01/25 04:27:07.535
• [0.694 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/01/25 04:27:07.544
  I0901 04:27:07.544311 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename chunking @ 09/01/25 04:27:07.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:27:07.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:27:07.559
  STEP: creating a large number of resources @ 09/01/25 04:27:07.561
  STEP: retrieving the first page @ 09/01/25 04:27:25.252
  I0901 04:27:25.301787 21 chunking.go:163] Retrieved 40/40 results with rv 5694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 09/01/25 04:27:25.302
  I0901 04:27:45.315524 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:28:05.316446 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:28:25.311718 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:28:45.316080 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:29:05.311690 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:29:25.315638 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:29:45.316242 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:30:05.312020 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:30:25.315524 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:30:45.316457 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:31:05.310723 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:31:25.312932 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:31:45.315258 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:32:05.316185 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:32:25.312662 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:32:45.315686 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:33:05.315337 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:33:25.311394 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:33:45.315307 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:34:05.315928 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:34:25.312261 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:34:45.316743 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:35:05.310477 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:35:25.312332 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:35:45.315114 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:36:05.314876 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:36:25.312587 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:36:45.331292 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTY5NCwic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0901 04:37:05.312887 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0901 04:37:05.312935 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/01/25 04:37:05.312
  STEP: retrieving all remaining pages @ 09/01/25 04:37:05.323
  I0901 04:37:05.331079 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0901 04:37:05.337615 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0901 04:37:05.344054 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0901 04:37:05.351460 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0901 04:37:05.357117 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0901 04:37:05.363540 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0901 04:37:05.368799 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTgyMywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0901 04:37:05.372978 21 chunking.go:221] Retrieved 40/40 results with rv 9823 and continue 
  I0901 04:37:05.373190 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8561" for this suite. @ 09/01/25 04:37:05.377
• [597.843 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/01/25 04:37:05.388
  I0901 04:37:05.388521 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 04:37:05.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:37:05.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:37:05.407
  STEP: Creating pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102 @ 09/01/25 04:37:05.41
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 04:37:07.428
  I0901 04:37:07.435217 21 container_probe.go:1749] Initial restart count of pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec is 0
  I0901 04:37:07.440521 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:09.447005 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:11.452585 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:13.466989 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:15.478852 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:17.488770 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:19.494850 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:21.501220 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:23.507598 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:25.513031 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:27.528787 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:29.535267 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:31.541265 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:33.546369 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:35.554840 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:37.562862 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:39.569735 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:41.578325 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:43.583038 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:45.591709 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:47.599996 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:49.607563 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:51.616058 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:53.622903 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:55.631631 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:57.640575 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:37:59.649337 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:01.657195 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:03.665106 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:05.673950 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:07.683269 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:09.691351 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:11.699888 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:13.709556 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:15.716490 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:17.722390 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:19.728796 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:21.736795 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:23.741946 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:25.749637 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:27.755210 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:29.760200 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:31.767824 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:33.774329 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:35.780919 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:37.788710 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:39.793711 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:41.800943 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:43.809703 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:45.818489 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:47.826896 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:49.839323 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:51.848108 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:53.854427 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:55.860820 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:57.866463 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:38:59.874721 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:01.883377 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:03.888759 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:05.893963 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:07.902833 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:09.912811 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:11.921788 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:13.931243 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:15.936647 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:17.943483 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:19.951288 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:21.958980 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:23.964836 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:25.971702 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:27.978663 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:29.983886 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:31.990857 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:33.999749 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:36.006429 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:38.013168 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:40.018438 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:42.025594 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:44.035824 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:46.043134 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:48.051607 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:50.058804 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:52.066773 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:54.075455 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:56.084081 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:39:58.092654 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:00.099928 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:02.108750 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:04.116040 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:06.122268 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:08.132704 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:10.140811 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:12.149313 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:14.157546 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:16.164339 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:18.169542 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:20.174331 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:22.182594 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:24.191430 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:26.198352 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:28.205062 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:30.214026 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:32.221197 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:34.226946 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:36.232827 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:38.239037 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:40.249202 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:42.256970 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:44.266534 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:46.274812 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:48.282736 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:50.291115 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:52.299056 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:54.307704 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:56.315628 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:40:58.325323 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:41:00.333522 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:41:02.342127 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:41:04.350822 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  I0901 04:41:06.361785 21 container_probe.go:1759] Get pod test-grpc-1ccfa711-30a5-4925-8bea-720df1f771ec in namespace container-probe-6102
  STEP: deleting the pod @ 09/01/25 04:41:08.362
  I0901 04:41:08.388290 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6102" for this suite. @ 09/01/25 04:41:08.393
• [243.012 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/01/25 04:41:08.401
  I0901 04:41:08.402127 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 04:41:08.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:41:08.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:41:08.42
  STEP: Creating a test headless service @ 09/01/25 04:41:08.424
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7052 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7052;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7052 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7052;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7052.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-7052.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7052.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-7052.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-7052.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-7052.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-7052.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-7052.svc;check="$$(dig +notcp +noall +answer +search 106.50.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.50.106_udp@PTR;check="$$(dig +tcp +noall +answer +search 106.50.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.50.106_tcp@PTR;sleep 1; done
   @ 09/01/25 04:41:08.441
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7052 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7052;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7052 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7052;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7052.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7052.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7052.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7052.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7052.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7052.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7052.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7052.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7052.svc;check="$$(dig +notcp +noall +answer +search 106.50.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.50.106_udp@PTR;check="$$(dig +tcp +noall +answer +search 106.50.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.50.106_tcp@PTR;sleep 1; done
   @ 09/01/25 04:41:08.441
  STEP: creating a pod to probe DNS @ 09/01/25 04:41:08.442
  STEP: submitting the pod to kubernetes @ 09/01/25 04:41:08.442
  STEP: retrieving the pod @ 09/01/25 04:41:10.459
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:41:10.464
  I0901 04:41:10.477354 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.484151 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.488898 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7052 from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.495067 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7052 from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.507477 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-7052.svc from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.514247 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-7052.svc from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.546154 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.550813 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.555263 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7052 from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.559803 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7052 from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.563800 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-7052.svc from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.568417 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-7052.svc from pod dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac: the server could not find the requested resource (get pods dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac)
  I0901 04:41:10.594863 21 dns_common.go:506] Lookups using dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-7052 agnhost_tcp@dns-test-service.dns-7052 agnhost_udp@dns-test-service.dns-7052.svc agnhost_tcp@dns-test-service.dns-7052.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7052 jessie_tcp@dns-test-service.dns-7052 jessie_udp@dns-test-service.dns-7052.svc jessie_tcp@dns-test-service.dns-7052.svc]

  I0901 04:41:10.616382 21 dns_common.go:514] Pod client logs for webserver: 
  I0901 04:41:10.624691 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 04:41:10.635317 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0901 04:41:15.585296 21 dns_common.go:546] DNS probes using dns-7052/dns-test-2f1f1bac-04f2-4681-8f36-bda981da9dac succeeded

  STEP: deleting the pod @ 09/01/25 04:41:15.585
  STEP: deleting the test service @ 09/01/25 04:41:15.601
  STEP: deleting the test headless service @ 09/01/25 04:41:15.627
  I0901 04:41:15.644036 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7052" for this suite. @ 09/01/25 04:41:15.649
• [7.254 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/01/25 04:41:15.656
  I0901 04:41:15.656548 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename csinodes @ 09/01/25 04:41:15.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:41:15.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:41:15.669
  STEP: Creating initial csiNode "e2e-csinode-hhb7h" @ 09/01/25 04:41:15.671
  STEP: Getting initial csiNode "e2e-csinode-hhb7h" @ 09/01/25 04:41:15.675
  STEP: Patching initial csiNode: "e2e-csinode-hhb7h" @ 09/01/25 04:41:15.679
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-hhb7h=patched" @ 09/01/25 04:41:15.683
  STEP: Delete initial csiNode: "e2e-csinode-hhb7h" @ 09/01/25 04:41:15.686
  STEP: Confirm deletion of csiNode "e2e-csinode-hhb7h" @ 09/01/25 04:41:15.692
  STEP: Creating replacement csiNode "e2e-csinode-g76r8" @ 09/01/25 04:41:15.695
  STEP: Getting replacement csiNode "e2e-csinode-g76r8" @ 09/01/25 04:41:15.699
  STEP: Updating replacement csiNode "e2e-csinode-g76r8" @ 09/01/25 04:41:15.702
  STEP: DeleteCollection of CSINodes with "e2e-csinode-g76r8=updated" label @ 09/01/25 04:41:15.709
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-g76r8=updated" @ 09/01/25 04:41:15.721
  I0901 04:41:15.725541 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-7152" for this suite. @ 09/01/25 04:41:15.75
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/01/25 04:41:15.758
  I0901 04:41:15.758025 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 04:41:15.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:41:15.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:41:15.773
  STEP: create the rc1 @ 09/01/25 04:41:15.851
  STEP: create the rc2 @ 09/01/25 04:41:15.856
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/01/25 04:41:21.871
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/01/25 04:41:22.461
  STEP: wait for the rc to be deleted @ 09/01/25 04:41:22.47
  I0901 04:41:27.486661 21 garbage_collector.go:762] 65 pods remaining
  I0901 04:41:27.486842 21 garbage_collector.go:769] 65 pods has nil DeletionTimestamp
  I0901 04:41:27.486930 21 garbage_collector.go:770] 
  STEP: Gathering metrics @ 09/01/25 04:41:32.49
  W0901 04:41:32.498711      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0901 04:41:32.498784 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 04:41:32.501011 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-244vz" in namespace "gc-3031"
  I0901 04:41:32.517089 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bjhp" in namespace "gc-3031"
  I0901 04:41:32.537231 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-44mxh" in namespace "gc-3031"
  I0901 04:41:32.553199 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-44rlp" in namespace "gc-3031"
  I0901 04:41:32.567140 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-47f56" in namespace "gc-3031"
  I0901 04:41:32.593494 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4kt7l" in namespace "gc-3031"
  I0901 04:41:32.614789 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mkzp" in namespace "gc-3031"
  I0901 04:41:32.628740 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4wchw" in namespace "gc-3031"
  I0901 04:41:32.649117 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hjlz" in namespace "gc-3031"
  I0901 04:41:32.673447 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mqgg" in namespace "gc-3031"
  I0901 04:41:32.707127 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qmgp" in namespace "gc-3031"
  I0901 04:41:32.746662 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6494v" in namespace "gc-3031"
  I0901 04:41:32.776254 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-65gwn" in namespace "gc-3031"
  I0901 04:41:32.807161 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hz58" in namespace "gc-3031"
  I0901 04:41:32.821770 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6z787" in namespace "gc-3031"
  I0901 04:41:32.846012 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75xq2" in namespace "gc-3031"
  I0901 04:41:32.876414 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7dlr6" in namespace "gc-3031"
  I0901 04:41:32.905215 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7h27f" in namespace "gc-3031"
  I0901 04:41:32.923783 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nmv7" in namespace "gc-3031"
  I0901 04:41:32.949876 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nr4j" in namespace "gc-3031"
  I0901 04:41:32.972497 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8slfj" in namespace "gc-3031"
  I0901 04:41:32.992158 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8xhvx" in namespace "gc-3031"
  I0901 04:41:33.028096 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8xw46" in namespace "gc-3031"
  I0901 04:41:33.045456 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-96sxs" in namespace "gc-3031"
  I0901 04:41:33.067921 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-96vvt" in namespace "gc-3031"
  I0901 04:41:33.081952 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hlcj" in namespace "gc-3031"
  I0901 04:41:33.100729 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9k6zs" in namespace "gc-3031"
  I0901 04:41:33.117064 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ks9r" in namespace "gc-3031"
  I0901 04:41:33.136244 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nb7h" in namespace "gc-3031"
  I0901 04:41:33.168698 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wn9t" in namespace "gc-3031"
  I0901 04:41:33.186502 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8dxb" in namespace "gc-3031"
  I0901 04:41:33.202751 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmxlj" in namespace "gc-3031"
  I0901 04:41:33.240908 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-brqx4" in namespace "gc-3031"
  I0901 04:41:33.264206 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bxcbk" in namespace "gc-3031"
  I0901 04:41:33.290618 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c29bd" in namespace "gc-3031"
  I0901 04:41:33.314142 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cmqvm" in namespace "gc-3031"
  I0901 04:41:33.335125 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cv8b9" in namespace "gc-3031"
  I0901 04:41:33.352399 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5mwm" in namespace "gc-3031"
  I0901 04:41:33.382536 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dbbpb" in namespace "gc-3031"
  I0901 04:41:33.414194 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dk52v" in namespace "gc-3031"
  I0901 04:41:33.454441 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dpmzs" in namespace "gc-3031"
  I0901 04:41:33.488295 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gchkn" in namespace "gc-3031"
  I0901 04:41:33.527317 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gkr9q" in namespace "gc-3031"
  I0901 04:41:33.549309 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-glf74" in namespace "gc-3031"
  I0901 04:41:33.569532 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h29q2" in namespace "gc-3031"
  I0901 04:41:33.604580 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h7q55" in namespace "gc-3031"
  I0901 04:41:33.628815 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h7vm4" in namespace "gc-3031"
  I0901 04:41:33.648937 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hhxbk" in namespace "gc-3031"
  I0901 04:41:33.664373 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hj4sz" in namespace "gc-3031"
  I0901 04:41:33.681123 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hnlrx" in namespace "gc-3031"
  I0901 04:41:33.701214 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3031" for this suite. @ 09/01/25 04:41:33.709
• [17.960 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 09/01/25 04:41:33.718
  I0901 04:41:33.718566 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 04:41:33.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:41:33.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:41:33.738
  STEP: starting the proxy server @ 09/01/25 04:41:33.741
  I0901 04:41:33.741593 21 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1905 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/01/25 04:41:33.844
  I0901 04:41:33.852235 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0901 04:41:33.856667 21 kubectl.go:2236] kubectl proxy stderr: W0901 04:41:33.842477     149 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0901 04:41:33.856776 21 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:36247

  STEP: Destroying namespace "kubectl-1905" for this suite. @ 09/01/25 04:41:33.857
• [0.150 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/01/25 04:41:33.868
  I0901 04:41:33.868999 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 04:41:33.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:41:33.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:41:33.885
  I0901 04:41:33.898686 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0901 04:41:38.982581 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 04:41:38.982
  I0901 04:41:38.982714 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/01/25 04:41:39.091
  I0901 04:41:41.131872 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bd10cf0-db04-48fa-8518-5d3b4e97869f",
      ResourceVersion: (string) (len=5) "12672",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892298499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 04:41:41.227101 21 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df594870-a284-4a68-99e1-e51683bd7653",
      ResourceVersion: (string) (len=5) "12657",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892298499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "3bd10cf0-db04-48fa-8518-5d3b4e97869f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 62 64 31 30 63  66 30 2d 64 62 30 34 2d  |\"3bd10cf0-db04-|
              00000120  34 38 66 61 2d 38 35 31  38 2d 35 64 33 62 34 65  |48fa-8518-5d3b4e|
              00000130  39 37 38 36 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |97869f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 04:41:41.238965 21 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-62qvx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-62qvx",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=14) "deployment-141",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c78e349e-6600-43c6-a325-04ba0b139818",
      ResourceVersion: (string) (len=5) "12656",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892298499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "df594870-a284-4a68-99e1-e51683bd7653",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 66  35 39 34 38 37 30 2d 61  |d\":\"df594870-a|
              00000090  32 38 34 2d 34 61 36 38  2d 39 39 65 31 2d 65 35  |284-4a68-99e1-e5|
              000000a0  31 36 38 33 62 64 37 36  35 33 5c 22 7d 22 3a 7b  |1683bd7653\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 30  30 5c 22 7d 22 3a 7b 22  |.42.1.100\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ts9xr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ts9xr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892298499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=11) "10.42.1.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892298499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892298499,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://0cfab2850c7ec7ab90d189802cd47339e9a45d28e72c88f0b66d724928bca25c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ts9xr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 04:41:41.253424 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-141" for this suite. @ 09/01/25 04:41:41.258
• [7.400 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/01/25 04:41:41.269
  I0901 04:41:41.269382 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 04:41:41.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:41:41.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:41:41.289
  STEP: Creating configMap with name cm-test-opt-del-9a0d0375-1da9-49d0-bcc5-e0276cdc570e @ 09/01/25 04:41:41.359
  STEP: Creating configMap with name cm-test-opt-upd-f7bfd340-dc95-411a-b34a-c7b5b8af73f9 @ 09/01/25 04:41:41.371
  STEP: Creating the pod @ 09/01/25 04:41:41.38
  STEP: Deleting configmap cm-test-opt-del-9a0d0375-1da9-49d0-bcc5-e0276cdc570e @ 09/01/25 04:41:43.444
  STEP: Updating configmap cm-test-opt-upd-f7bfd340-dc95-411a-b34a-c7b5b8af73f9 @ 09/01/25 04:41:43.45
  STEP: Creating configMap with name cm-test-opt-create-e73ae663-224c-47a9-9fb7-2d36681034f2 @ 09/01/25 04:41:43.456
  STEP: waiting to observe update in volume @ 09/01/25 04:41:43.461
  I0901 04:42:52.063882 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2964" for this suite. @ 09/01/25 04:42:52.073
• [70.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/01/25 04:42:52.081
  I0901 04:42:52.081842 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 04:42:52.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:42:52.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:42:52.103
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 04:42:52.107
  STEP: Saw pod success @ 09/01/25 04:42:56.133
  I0901 04:42:56.143381 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod pod-eaef153e-cd92-46be-ac2c-deb468c686f8 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 04:42:56.166
  I0901 04:42:56.191741 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6273" for this suite. @ 09/01/25 04:42:56.199
• [4.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/01/25 04:42:56.206
  I0901 04:42:56.206043 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 04:42:56.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:42:56.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:42:56.221
  STEP: Creating a test headless service @ 09/01/25 04:42:56.224
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-5548.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-5548.svc.cluster.local;sleep 1; done
   @ 09/01/25 04:42:56.228
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5548.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5548.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5548.svc.cluster.local;sleep 1; done
   @ 09/01/25 04:42:56.228
  STEP: creating a pod to probe DNS @ 09/01/25 04:42:56.228
  STEP: submitting the pod to kubernetes @ 09/01/25 04:42:56.228
  STEP: retrieving the pod @ 09/01/25 04:42:58.259
  STEP: looking for the results for each expected name from probers @ 09/01/25 04:42:58.267
  I0901 04:42:58.281538 21 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.287768 21 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.294218 21 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.301214 21 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.320288 21 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.329772 21 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.337736 21 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.346197 21 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-5548.svc.cluster.local from pod dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1: the server could not find the requested resource (get pods dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1)
  I0901 04:42:58.346357 21 dns_common.go:506] Lookups using dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local agnhost_udp@dns-test-service-2.dns-5548.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-5548.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5548.svc.cluster.local jessie_udp@dns-test-service-2.dns-5548.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5548.svc.cluster.local]

  I0901 04:42:58.358741 21 dns_common.go:514] Pod client logs for webserver: 
  I0901 04:42:58.369585 21 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0901 04:42:58.381292 21 dns_common.go:514] Pod client logs for jessie-querier: 
  I0901 04:43:03.327987 21 dns_common.go:546] DNS probes using dns-5548/dns-test-c2a13a99-dcf4-4612-992e-9f6d29b638f1 succeeded

  STEP: deleting the pod @ 09/01/25 04:43:03.328
  STEP: deleting the test headless service @ 09/01/25 04:43:03.346
  I0901 04:43:03.407181 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5548" for this suite. @ 09/01/25 04:43:03.42
• [7.229 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/01/25 04:43:03.435
  I0901 04:43:03.435452 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename events @ 09/01/25 04:43:03.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:43:03.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:43:03.457
  STEP: Create set of events @ 09/01/25 04:43:03.462
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 04:43:03.489
  STEP: delete a list of events @ 09/01/25 04:43:03.493
  I0901 04:43:03.493037 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 04:43:03.529
  I0901 04:43:03.533614 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1802" for this suite. @ 09/01/25 04:43:03.538
• [0.112 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/01/25 04:43:03.549
  I0901 04:43:03.549165 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:43:03.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:43:03.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:43:03.57
  STEP: Creating configMap with name projected-configmap-test-volume-e118b156-9ba8-411f-833a-d5fd76a7bc13 @ 09/01/25 04:43:03.574
  STEP: Creating a pod to test consume configMaps @ 09/01/25 04:43:03.58
  STEP: Saw pod success @ 09/01/25 04:43:07.62
  I0901 04:43:07.627658 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-a3ed0811-5c84-4510-bdd8-d1a1221f735f container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 04:43:07.642
  I0901 04:43:07.669712 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6902" for this suite. @ 09/01/25 04:43:07.676
• [4.136 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/01/25 04:43:07.685
  I0901 04:43:07.685689 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename fake-node @ 09/01/25 04:43:07.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:43:07.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:43:07.701
  STEP: Create "e2e-fake-node-d4798" @ 09/01/25 04:43:07.705
  STEP: Getting "e2e-fake-node-d4798" @ 09/01/25 04:43:07.709
  STEP: Patching "e2e-fake-node-d4798" @ 09/01/25 04:43:07.723
  STEP: Listing nodes with LabelSelector "e2e-fake-node-d4798=patched" @ 09/01/25 04:43:07.761
  STEP: Updating "e2e-fake-node-d4798" @ 09/01/25 04:43:07.775
  STEP: Delete "e2e-fake-node-d4798" @ 09/01/25 04:43:07.785
  STEP: Confirm deletion of "e2e-fake-node-d4798" @ 09/01/25 04:43:07.79
  I0901 04:43:12.802714 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-5507" for this suite. @ 09/01/25 04:43:12.808
• [5.131 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 09/01/25 04:43:12.818
  I0901 04:43:12.818796 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 04:43:12.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:43:12.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:43:12.837
  I0901 04:43:12.841805 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 04:43:14.351
  I0901 04:43:14.351285 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-9898 --namespace=crd-publish-openapi-9898 create -f -'
  I0901 04:43:14.465268 21 builder.go:146] stderr: ""
  I0901 04:43:14.465321 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6315-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 04:43:14.465578 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-9898 --namespace=crd-publish-openapi-9898 delete e2e-test-crd-publish-openapi-6315-crds test-cr'
  I0901 04:43:14.560983 21 builder.go:146] stderr: ""
  I0901 04:43:14.561032 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6315-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0901 04:43:14.561086 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-9898 --namespace=crd-publish-openapi-9898 apply -f -'
  I0901 04:43:14.652839 21 builder.go:146] stderr: ""
  I0901 04:43:14.652936 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6315-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0901 04:43:14.653025 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-9898 --namespace=crd-publish-openapi-9898 delete e2e-test-crd-publish-openapi-6315-crds test-cr'
  I0901 04:43:14.752616 21 builder.go:146] stderr: ""
  I0901 04:43:14.752664 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6315-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 04:43:14.752
  I0901 04:43:14.752756 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-9898 explain e2e-test-crd-publish-openapi-6315-crds'
  I0901 04:43:14.838024 21 builder.go:146] stderr: ""
  I0901 04:43:14.838077 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6315-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0901 04:43:16.139434 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9898" for this suite. @ 09/01/25 04:43:16.152
• [3.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/01/25 04:43:16.164
  I0901 04:43:16.164933 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:43:16.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:43:16.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:43:16.184
  STEP: Creating configMap with name cm-test-opt-del-bcbe3436-89f3-4866-9ea7-24794f848c27 @ 09/01/25 04:43:16.254
  STEP: Creating configMap with name cm-test-opt-upd-689bf2ea-1c1a-46b9-b0c2-e2df1343ed29 @ 09/01/25 04:43:16.261
  STEP: Creating the pod @ 09/01/25 04:43:16.27
  STEP: Deleting configmap cm-test-opt-del-bcbe3436-89f3-4866-9ea7-24794f848c27 @ 09/01/25 04:43:18.331
  STEP: Updating configmap cm-test-opt-upd-689bf2ea-1c1a-46b9-b0c2-e2df1343ed29 @ 09/01/25 04:43:18.338
  STEP: Creating configMap with name cm-test-opt-create-aab970ce-a6a8-412a-9612-43f3331f165e @ 09/01/25 04:43:18.343
  STEP: waiting to observe update in volume @ 09/01/25 04:43:18.348
  I0901 04:44:22.920073 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5942" for this suite. @ 09/01/25 04:44:22.925
• [66.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 09/01/25 04:44:22.933
  I0901 04:44:22.933748 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 04:44:22.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:44:22.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:44:22.951
  STEP: Creating a ResourceQuota with best effort scope @ 09/01/25 04:44:22.954
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 04:44:22.96
  STEP: Creating a ResourceQuota with not best effort scope @ 09/01/25 04:44:24.966
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 04:44:24.971
  STEP: Creating a best-effort pod @ 09/01/25 04:44:26.979
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/01/25 04:44:26.994
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/01/25 04:44:29.002
  STEP: Deleting the pod @ 09/01/25 04:44:31.009
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 04:44:31.023
  STEP: Creating a not best-effort pod @ 09/01/25 04:44:33.029
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/01/25 04:44:33.04
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/01/25 04:44:35.048
  STEP: Deleting the pod @ 09/01/25 04:44:37.054
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 04:44:37.073
  I0901 04:44:39.081514 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-247" for this suite. @ 09/01/25 04:44:39.089
• [16.168 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/01/25 04:44:39.104
  I0901 04:44:39.104545 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:44:39.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:44:39.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:44:39.131
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:44:39.135
  STEP: Saw pod success @ 09/01/25 04:44:43.167
  I0901 04:44:43.173784 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-280e8d7c-e997-46bd-85b4-99d5136ea90e container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:44:43.188
  I0901 04:44:43.224781 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-126" for this suite. @ 09/01/25 04:44:43.233
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/01/25 04:44:43.242
  I0901 04:44:43.242666 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename apf @ 09/01/25 04:44:43.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:44:43.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:44:43.256
  STEP: getting /apis @ 09/01/25 04:44:43.26
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 04:44:43.264
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 04:44:43.265
  STEP: creating @ 09/01/25 04:44:43.266
  STEP: getting @ 09/01/25 04:44:43.28
  STEP: listing @ 09/01/25 04:44:43.283
  STEP: watching @ 09/01/25 04:44:43.286
  I0901 04:44:43.286902 21 flowcontrol.go:620] starting watch
  STEP: patching @ 09/01/25 04:44:43.288
  STEP: updating @ 09/01/25 04:44:43.294
  I0901 04:44:43.303219 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 04:44:43.303
  STEP: patching /status @ 09/01/25 04:44:43.308
  STEP: updating /status @ 09/01/25 04:44:43.313
  STEP: deleting @ 09/01/25 04:44:43.322
  STEP: deleting a collection @ 09/01/25 04:44:43.336
  I0901 04:44:43.357260 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6528" for this suite. @ 09/01/25 04:44:43.361
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 09/01/25 04:44:43.37
  I0901 04:44:43.370124 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 04:44:43.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:44:43.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:44:43.384
  STEP: Updating Namespace "namespaces-1319" @ 09/01/25 04:44:43.388
  I0901 04:44:43.399957 21 namespace.go:390] Namespace "namespaces-1319" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"4ca1e4fb-5de9-48de-ac46-3bc5043c3520", "kubernetes.io/metadata.name":"namespaces-1319", "namespaces-1319":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0901 04:44:43.400195 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1319" for this suite. @ 09/01/25 04:44:43.462
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/01/25 04:44:43.47
  I0901 04:44:43.470324 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 04:44:43.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:44:43.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:44:43.488
  STEP: Saw pod success @ 09/01/25 04:44:49.57
  I0901 04:44:49.578505 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod client-envvars-c02b331d-d39c-4eff-9b7e-74d873ac89d4 container env3cont: <nil>
  STEP: delete the pod @ 09/01/25 04:44:49.594
  I0901 04:44:49.619694 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9663" for this suite. @ 09/01/25 04:44:49.625
• [6.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/01/25 04:44:49.636
  I0901 04:44:49.636765 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename subpath @ 09/01/25 04:44:49.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:44:49.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:44:49.654
  STEP: Setting up data @ 09/01/25 04:44:49.657
  STEP: Creating pod pod-subpath-test-configmap-bbzr @ 09/01/25 04:44:49.666
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 04:44:49.667
  STEP: Saw pod success @ 09/01/25 04:45:13.778
  I0901 04:45:13.782852 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-subpath-test-configmap-bbzr container test-container-subpath-configmap-bbzr: <nil>
  STEP: delete the pod @ 09/01/25 04:45:13.795
  STEP: Deleting pod pod-subpath-test-configmap-bbzr @ 09/01/25 04:45:13.813
  I0901 04:45:13.813949 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-bbzr" in namespace "subpath-1230"
  I0901 04:45:13.818159 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1230" for this suite. @ 09/01/25 04:45:13.822
• [24.192 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/01/25 04:45:13.829
  I0901 04:45:13.829397 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl-logs @ 09/01/25 04:45:13.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:45:13.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:45:13.847
  STEP: creating a pod @ 09/01/25 04:45:13.85
  I0901 04:45:13.850501 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0901 04:45:13.953987 21 builder.go:146] stderr: ""
  I0901 04:45:13.954066 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/01/25 04:45:13.954
  I0901 04:45:13.954587 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0901 04:45:15.971362 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/01/25 04:45:15.971
  I0901 04:45:15.971525 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 logs logs-generator logs-generator'
  I0901 04:45:16.061272 21 builder.go:146] stderr: ""
  I0901 04:45:16.061368 21 builder.go:147] stdout: "I0901 04:45:14.561786       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/w8z 261\nI0901 04:45:14.762067       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/cff 567\nI0901 04:45:14.962715       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/8k4 446\nI0901 04:45:15.162012       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/xj7 369\nI0901 04:45:15.362454       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/fgf 293\nI0901 04:45:15.562836       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/hz7d 427\nI0901 04:45:15.762026       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/t67t 350\nI0901 04:45:15.962417       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/scc 419\n"
  STEP: limiting log lines @ 09/01/25 04:45:16.061
  I0901 04:45:16.061505 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 logs logs-generator logs-generator --tail=1'
  I0901 04:45:16.151513 21 builder.go:146] stderr: ""
  I0901 04:45:16.151573 21 builder.go:147] stdout: "I0901 04:45:15.962417       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/scc 419\n"
  I0901 04:45:16.151601 21 logs.go:180] got output "I0901 04:45:15.962417       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/scc 419\n"
  STEP: limiting log bytes @ 09/01/25 04:45:16.151
  I0901 04:45:16.151888 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 logs logs-generator logs-generator --limit-bytes=1'
  I0901 04:45:16.237818 21 builder.go:146] stderr: ""
  I0901 04:45:16.237896 21 builder.go:147] stdout: "I"
  I0901 04:45:16.237939 21 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/01/25 04:45:16.238
  I0901 04:45:16.238479 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 logs logs-generator logs-generator --tail=1 --timestamps'
  I0901 04:45:16.350496 21 builder.go:146] stderr: ""
  I0901 04:45:16.350627 21 builder.go:147] stdout: "2025-09-01T04:45:16.162917681Z I0901 04:45:16.162770       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/c7d 302\n"
  I0901 04:45:16.350647 21 logs.go:192] got output "2025-09-01T04:45:16.162917681Z I0901 04:45:16.162770       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/c7d 302\n"
  STEP: restricting to a time range @ 09/01/25 04:45:16.35
  I0901 04:45:18.851494 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 logs logs-generator logs-generator --since=1s'
  I0901 04:45:18.956469 21 builder.go:146] stderr: ""
  I0901 04:45:18.956523 21 builder.go:147] stdout: "I0901 04:45:17.962754       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/wncl 260\nI0901 04:45:18.162176       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/nc65 216\nI0901 04:45:18.362671       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/7nz 388\nI0901 04:45:18.562056       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/rm2 570\nI0901 04:45:18.762427       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/m2lz 358\n"
  I0901 04:45:18.956713 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 logs logs-generator logs-generator --since=24h'
  I0901 04:45:19.105312 21 builder.go:146] stderr: ""
  I0901 04:45:19.105407 21 builder.go:147] stdout: "I0901 04:45:14.561786       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/w8z 261\nI0901 04:45:14.762067       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/cff 567\nI0901 04:45:14.962715       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/8k4 446\nI0901 04:45:15.162012       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/xj7 369\nI0901 04:45:15.362454       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/fgf 293\nI0901 04:45:15.562836       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/hz7d 427\nI0901 04:45:15.762026       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/t67t 350\nI0901 04:45:15.962417       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/scc 419\nI0901 04:45:16.162770       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/c7d 302\nI0901 04:45:16.362164       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/bbmh 540\nI0901 04:45:16.562539       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/rwgm 444\nI0901 04:45:16.761889       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/ckhl 389\nI0901 04:45:16.962380       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/mxcv 361\nI0901 04:45:17.161940       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/76m 373\nI0901 04:45:17.362385       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/h6h6 340\nI0901 04:45:17.562917       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/lmfs 539\nI0901 04:45:17.762296       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/59ww 548\nI0901 04:45:17.962754       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/wncl 260\nI0901 04:45:18.162176       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/nc65 216\nI0901 04:45:18.362671       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/7nz 388\nI0901 04:45:18.562056       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/rm2 570\nI0901 04:45:18.762427       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/m2lz 358\nI0901 04:45:18.962823       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/vsn 528\n"
  I0901 04:45:19.105515 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-logs-8373 delete pod logs-generator'
  I0901 04:45:19.891715 21 builder.go:146] stderr: ""
  I0901 04:45:19.891761 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0901 04:45:19.891892 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8373" for this suite. @ 09/01/25 04:45:19.896
• [6.077 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/01/25 04:45:19.906
  I0901 04:45:19.906900 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:45:19.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:45:19.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:45:19.928
  STEP: Creating projection with secret that has name projected-secret-test-76eb2de1-0ea7-425d-b4c1-57aef397017a @ 09/01/25 04:45:19.932
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:45:19.936
  STEP: Saw pod success @ 09/01/25 04:45:23.961
  I0901 04:45:23.966153 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-secrets-3edb583b-dded-4649-ad94-f090e09fb520 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:45:23.976
  I0901 04:45:24.005249 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-750" for this suite. @ 09/01/25 04:45:24.015
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 09/01/25 04:45:24.026
  I0901 04:45:24.026577 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 04:45:24.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:45:24.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:45:24.047
  STEP: creating Agnhost RC @ 09/01/25 04:45:24.05
  I0901 04:45:24.050539 21 kubectl.go:1544] namespace kubectl-2433
  I0901 04:45:24.050623 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-2433 create -f -'
  I0901 04:45:24.224784 21 builder.go:146] stderr: ""
  I0901 04:45:24.224835 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 04:45:24.224
  I0901 04:45:25.248108 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 04:45:25.248149 21 framework.go:733] Found 1 / 1
  I0901 04:45:25.248170 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 04:45:25.253490 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 04:45:25.253531 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 04:45:25.253539 21 kubectl.go:1551] wait on agnhost-primary startup in kubectl-2433 
  I0901 04:45:25.253582 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-2433 logs agnhost-primary-rqzl2 agnhost-primary'
  I0901 04:45:25.350088 21 builder.go:146] stderr: ""
  I0901 04:45:25.350139 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 09/01/25 04:45:25.35
  I0901 04:45:25.350332 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-2433 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0901 04:45:25.451614 21 builder.go:146] stderr: ""
  I0901 04:45:25.451668 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0901 04:45:25.458488 21 utils.go:1203] Service rm2 in namespace kubectl-2433 found.
  STEP: exposing service @ 09/01/25 04:45:27.472
  I0901 04:45:27.472222 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-2433 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0901 04:45:27.592571 21 builder.go:146] stderr: ""
  I0901 04:45:27.592643 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0901 04:45:27.597290 21 utils.go:1203] Service rm3 in namespace kubectl-2433 found.
  I0901 04:45:29.607889 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2433" for this suite. @ 09/01/25 04:45:29.613
• [5.594 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 09/01/25 04:45:29.621
  I0901 04:45:29.621298 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 04:45:29.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:45:29.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:45:29.637
  STEP: Creating a pod to test downward api env vars @ 09/01/25 04:45:29.64
  STEP: Saw pod success @ 09/01/25 04:45:33.668
  I0901 04:45:33.673503 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downward-api-b236de0f-b8b7-4592-adb5-22c61896c8a5 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 04:45:33.685
  I0901 04:45:33.708554 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-555" for this suite. @ 09/01/25 04:45:33.714
• [4.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/01/25 04:45:33.722
  I0901 04:45:33.722887 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename subpath @ 09/01/25 04:45:33.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:45:33.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:45:33.744
  STEP: Setting up data @ 09/01/25 04:45:33.747
  STEP: Creating pod pod-subpath-test-secret-6vv5 @ 09/01/25 04:45:33.756
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 04:45:33.756
  STEP: Saw pod success @ 09/01/25 04:45:57.875
  I0901 04:45:57.882830 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-subpath-test-secret-6vv5 container test-container-subpath-secret-6vv5: <nil>
  STEP: delete the pod @ 09/01/25 04:45:57.897
  STEP: Deleting pod pod-subpath-test-secret-6vv5 @ 09/01/25 04:45:57.925
  I0901 04:45:57.925257 21 delete.go:62] Deleting pod "pod-subpath-test-secret-6vv5" in namespace "subpath-441"
  I0901 04:45:57.933269 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-441" for this suite. @ 09/01/25 04:45:57.941
• [24.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 09/01/25 04:45:57.954
  I0901 04:45:57.954366 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 04:45:57.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:45:57.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:45:57.978
  STEP: creating a replication controller @ 09/01/25 04:45:57.982
  I0901 04:45:57.982303 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 create -f -'
  I0901 04:45:58.162026 21 builder.go:146] stderr: ""
  I0901 04:45:58.162465 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 04:45:58.162
  I0901 04:45:58.162748 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 04:45:58.266779 21 builder.go:146] stderr: ""
  I0901 04:45:58.266815 21 builder.go:147] stdout: "update-demo-nautilus-bcjfh update-demo-nautilus-mhxl9 "
  I0901 04:45:58.266851 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 04:45:58.349717 21 builder.go:146] stderr: ""
  I0901 04:45:58.349755 21 builder.go:147] stdout: ""
  I0901 04:45:58.349765 21 kubectl.go:2509] update-demo-nautilus-bcjfh is created but not running
  I0901 04:46:03.349984 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 04:46:03.453772 21 builder.go:146] stderr: ""
  I0901 04:46:03.453820 21 builder.go:147] stdout: "update-demo-nautilus-bcjfh update-demo-nautilus-mhxl9 "
  I0901 04:46:03.453871 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 04:46:03.547368 21 builder.go:146] stderr: ""
  I0901 04:46:03.547454 21 builder.go:147] stdout: "true"
  I0901 04:46:03.547938 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 04:46:03.636307 21 builder.go:146] stderr: ""
  I0901 04:46:03.636354 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 04:46:03.636372 21 kubectl.go:2400] validating pod update-demo-nautilus-bcjfh
  I0901 04:46:03.660473 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 04:46:03.660552 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 04:46:03.660567 21 kubectl.go:2527] update-demo-nautilus-bcjfh is verified up and running
  I0901 04:46:03.660610 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-mhxl9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 04:46:03.752554 21 builder.go:146] stderr: ""
  I0901 04:46:03.752601 21 builder.go:147] stdout: "true"
  I0901 04:46:03.752643 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-mhxl9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 04:46:03.848610 21 builder.go:146] stderr: ""
  I0901 04:46:03.848663 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 04:46:03.848682 21 kubectl.go:2400] validating pod update-demo-nautilus-mhxl9
  I0901 04:46:03.861057 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 04:46:03.861156 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 04:46:03.861287 21 kubectl.go:2527] update-demo-nautilus-mhxl9 is verified up and running
  STEP: scaling down the replication controller @ 09/01/25 04:46:03.861
  I0901 04:46:03.864023 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0901 04:46:03.864435 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0901 04:46:04.974874 21 builder.go:146] stderr: ""
  I0901 04:46:04.974955 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 04:46:04.975
  I0901 04:46:04.975682 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 04:46:05.053794 21 builder.go:146] stderr: ""
  I0901 04:46:05.053840 21 builder.go:147] stdout: "update-demo-nautilus-bcjfh "
  I0901 04:46:05.053877 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 04:46:05.121078 21 builder.go:146] stderr: ""
  I0901 04:46:05.121123 21 builder.go:147] stdout: "true"
  I0901 04:46:05.121166 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 04:46:05.195836 21 builder.go:146] stderr: ""
  I0901 04:46:05.195906 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 04:46:05.196074 21 kubectl.go:2400] validating pod update-demo-nautilus-bcjfh
  I0901 04:46:05.201161 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 04:46:05.201228 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 04:46:05.201246 21 kubectl.go:2527] update-demo-nautilus-bcjfh is verified up and running
  STEP: scaling up the replication controller @ 09/01/25 04:46:05.201
  I0901 04:46:05.202689 21 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0901 04:46:05.202733 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0901 04:46:06.322263 21 builder.go:146] stderr: ""
  I0901 04:46:06.322312 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 04:46:06.322
  I0901 04:46:06.322406 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 04:46:06.418717 21 builder.go:146] stderr: ""
  I0901 04:46:06.418770 21 builder.go:147] stdout: "update-demo-nautilus-88z76 update-demo-nautilus-bcjfh "
  I0901 04:46:06.418831 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-88z76 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 04:46:06.529301 21 builder.go:146] stderr: ""
  I0901 04:46:06.529355 21 builder.go:147] stdout: "true"
  I0901 04:46:06.529401 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-88z76 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 04:46:06.610362 21 builder.go:146] stderr: ""
  I0901 04:46:06.610408 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 04:46:06.610421 21 kubectl.go:2400] validating pod update-demo-nautilus-88z76
  I0901 04:46:06.621024 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 04:46:06.621135 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 04:46:06.621164 21 kubectl.go:2527] update-demo-nautilus-88z76 is verified up and running
  I0901 04:46:06.621294 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 04:46:06.722937 21 builder.go:146] stderr: ""
  I0901 04:46:06.723005 21 builder.go:147] stdout: "true"
  I0901 04:46:06.723076 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods update-demo-nautilus-bcjfh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 04:46:06.827758 21 builder.go:146] stderr: ""
  I0901 04:46:06.827839 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 04:46:06.827872 21 kubectl.go:2400] validating pod update-demo-nautilus-bcjfh
  I0901 04:46:06.844721 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 04:46:06.844826 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 04:46:06.844853 21 kubectl.go:2527] update-demo-nautilus-bcjfh is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 04:46:06.844
  I0901 04:46:06.845072 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 delete --grace-period=0 --force -f -'
  I0901 04:46:06.945221 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 04:46:06.945294 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0901 04:46:06.945624 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get rc,svc -l name=update-demo --no-headers'
  I0901 04:46:07.059822 21 builder.go:146] stderr: "No resources found in kubectl-5026 namespace.\n"
  I0901 04:46:07.059869 21 builder.go:147] stdout: ""
  I0901 04:46:07.059923 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5026 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 04:46:07.172330 21 builder.go:146] stderr: ""
  I0901 04:46:07.172415 21 builder.go:147] stdout: ""
  I0901 04:46:07.172604 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5026" for this suite. @ 09/01/25 04:46:07.181
• [9.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/01/25 04:46:07.194
  I0901 04:46:07.194515 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 04:46:07.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:46:07.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:46:07.22
  STEP: Create set of pod templates @ 09/01/25 04:46:07.223
  I0901 04:46:07.230604 21 podtemplates.go:143] created test-podtemplate-1
  I0901 04:46:07.236393 21 podtemplates.go:143] created test-podtemplate-2
  I0901 04:46:07.241813 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/01/25 04:46:07.241
  STEP: delete collection of pod templates @ 09/01/25 04:46:07.245
  I0901 04:46:07.245548 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/01/25 04:46:07.262
  I0901 04:46:07.262511 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0901 04:46:07.265684 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1281" for this suite. @ 09/01/25 04:46:07.281
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/01/25 04:46:07.29
  I0901 04:46:07.290673 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 04:46:07.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:46:07.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:46:07.313
  STEP: Creating pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784 @ 09/01/25 04:46:07.316
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 04:46:09.337
  I0901 04:46:09.345335 21 container_probe.go:1749] Initial restart count of pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d is 0
  I0901 04:46:09.352423 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:11.358535 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:13.368023 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:15.373373 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:17.389249 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:19.397242 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:21.405740 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:23.412604 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:25.418686 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:27.425694 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:29.431406 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:31.439762 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:33.450645 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:35.462244 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:37.469003 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:39.477496 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:41.485487 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:43.494277 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:45.502886 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:47.512605 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:49.521195 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:51.528302 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:53.534473 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:55.543594 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:57.554826 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:46:59.560733 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:01.567495 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:03.571586 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:05.578751 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:07.585460 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:09.591880 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:11.599087 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:13.606175 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:15.612401 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:17.618753 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:19.625332 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:21.630949 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:23.636247 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:25.641571 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:27.648792 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:29.654839 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:31.660098 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:33.666040 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:35.671776 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:37.677626 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:39.683328 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:41.691722 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:43.699104 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:45.705860 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:47.713451 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:49.720284 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:51.725866 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:53.733652 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:55.741920 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:57.748664 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:47:59.755677 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:01.766235 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:03.773362 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:05.778605 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:07.786753 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:09.794471 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:11.805795 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:13.811474 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:15.816598 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:17.821875 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:19.827412 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:21.835102 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:23.843784 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:25.849126 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:27.856284 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:29.863945 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:31.869357 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:33.874101 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:35.881413 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:37.888354 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:39.895150 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:41.903475 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:43.911895 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:45.919328 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:47.927064 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:49.933647 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:51.941122 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:53.948708 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:55.954981 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:57.960945 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:48:59.969181 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:01.977094 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:03.984872 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:05.990554 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:07.996430 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:10.004583 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:12.012497 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:14.018298 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:16.023938 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:18.030383 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:20.037063 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:22.045234 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:24.052153 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:26.058104 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:28.063267 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:30.069593 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:32.077574 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:34.084825 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:36.090455 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:38.095164 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:40.102958 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:42.109037 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:44.115698 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:46.122795 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:48.129113 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:50.136183 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:52.145015 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:54.152542 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:56.159875 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:49:58.169441 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:50:00.174790 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:50:02.183788 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:50:04.191480 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:50:06.198681 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  I0901 04:50:08.204634 21 container_probe.go:1759] Get pod liveness-759e223f-cc45-4cc0-b2aa-ff88f199c24d in namespace container-probe-784
  STEP: deleting the pod @ 09/01/25 04:50:10.205
  I0901 04:50:10.227185 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-784" for this suite. @ 09/01/25 04:50:10.232
• [242.947 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/01/25 04:50:10.24
  I0901 04:50:10.240461 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename events @ 09/01/25 04:50:10.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:10.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:10.255
  STEP: creating a test event @ 09/01/25 04:50:10.258
  STEP: listing events in all namespaces @ 09/01/25 04:50:10.263
  STEP: listing events in test namespace @ 09/01/25 04:50:10.272
  STEP: listing events with field selection filtering on source @ 09/01/25 04:50:10.275
  STEP: listing events with field selection filtering on reportingController @ 09/01/25 04:50:10.278
  STEP: getting the test event @ 09/01/25 04:50:10.281
  STEP: patching the test event @ 09/01/25 04:50:10.284
  STEP: getting the test event @ 09/01/25 04:50:10.289
  STEP: updating the test event @ 09/01/25 04:50:10.292
  STEP: getting the test event @ 09/01/25 04:50:10.298
  STEP: deleting the test event @ 09/01/25 04:50:10.3
  STEP: listing events in all namespaces @ 09/01/25 04:50:10.307
  STEP: listing events in test namespace @ 09/01/25 04:50:10.315
  I0901 04:50:10.319769 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9695" for this suite. @ 09/01/25 04:50:10.332
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/01/25 04:50:10.343
  I0901 04:50:10.343578 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:50:10.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:10.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:10.363
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:50:10.366
  STEP: Saw pod success @ 09/01/25 04:50:14.395
  I0901 04:50:14.400762 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-daedad3a-59af-4e46-92b7-1aa6d5f8e799 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:50:14.422
  I0901 04:50:14.435875 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6202" for this suite. @ 09/01/25 04:50:14.44
• [4.103 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 09/01/25 04:50:14.446
  I0901 04:50:14.446494 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:50:14.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:14.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:14.458
  STEP: Setting up server cert @ 09/01/25 04:50:14.472
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:50:15.274
  STEP: Deploying the webhook pod @ 09/01/25 04:50:15.279
  STEP: Wait for the deployment to be ready @ 09/01/25 04:50:15.289
  I0901 04:50:15.304756 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:50:17.32
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:50:17.33
  I0901 04:50:18.330982 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/01/25 04:50:18.341
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/01/25 04:50:18.362
  I0901 04:50:18.362969 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 04:50:18.443771 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3989" for this suite. @ 09/01/25 04:50:18.449
  STEP: Destroying namespace "webhook-markers-9236" for this suite. @ 09/01/25 04:50:18.455
• [4.015 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/01/25 04:50:18.461
  I0901 04:50:18.461790 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 04:50:18.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:18.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:18.479
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:50:18.485
  STEP: Saw pod success @ 09/01/25 04:50:22.505
  I0901 04:50:22.509239 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-d1cfc566-7f86-4389-92d5-d62c32970105 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:50:22.519
  I0901 04:50:22.533098 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6545" for this suite. @ 09/01/25 04:50:22.537
• [4.082 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/01/25 04:50:22.543
  I0901 04:50:22.543483 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:50:22.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:22.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:22.556
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 04:50:22.56
  STEP: Saw pod success @ 09/01/25 04:50:26.599
  I0901 04:50:26.605660 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-96f5c941-206a-40bf-8941-100aa936be4d container client-container: <nil>
  STEP: delete the pod @ 09/01/25 04:50:26.618
  I0901 04:50:26.643824 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6375" for this suite. @ 09/01/25 04:50:26.65
• [4.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/01/25 04:50:26.657
  I0901 04:50:26.657702 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 04:50:26.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:26.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:26.671
  STEP: Creating configMap with name configmap-test-volume-9be53ed2-2373-42be-8af3-8ded5ec12d03 @ 09/01/25 04:50:26.674
  STEP: Creating a pod to test consume configMaps @ 09/01/25 04:50:26.68
  STEP: Saw pod success @ 09/01/25 04:50:30.705
  I0901 04:50:30.712389 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-403d968c-0f25-421c-b798-3c12b9d0de34 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:50:30.723
  I0901 04:50:30.742446 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1662" for this suite. @ 09/01/25 04:50:30.746
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/01/25 04:50:30.754
  I0901 04:50:30.754877 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 04:50:30.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:30.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:30.771
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 04:50:30.775
  STEP: Saw pod success @ 09/01/25 04:50:34.806
  I0901 04:50:34.810020 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-046b4a0c-4399-49db-b0a0-2a2a737ea4e8 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 04:50:34.817
  I0901 04:50:34.830751 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-70" for this suite. @ 09/01/25 04:50:34.835
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 09/01/25 04:50:34.845
  I0901 04:50:34.845170 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 04:50:34.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:34.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:34.861
  STEP: creating service in namespace services-4146 @ 09/01/25 04:50:34.864
  STEP: creating service affinity-clusterip-transition in namespace services-4146 @ 09/01/25 04:50:34.865
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4146 @ 09/01/25 04:50:34.876
  I0901 04:50:34.885246      21 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-4146, replica count: 3
  I0901 04:50:37.936657      21 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 04:50:37.947625 21 resource.go:361] Creating new exec pod
  I0901 04:50:40.965450 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-4146 exec execpod-affinity29dr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0901 04:50:41.144610 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition (10.43.237.197) 80 port [tcp/http] succeeded!\n"
  I0901 04:50:41.144720 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 04:50:41.144874 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-4146 exec execpod-affinity29dr5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.237.197 80'
  I0901 04:50:41.330011 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.237.197 80\n+ echo hostName\nConnection to 10.43.237.197 80 port [tcp/http] succeeded!\n"
  I0901 04:50:41.330080 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 04:50:41.345647 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-4146 exec execpod-affinity29dr5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.237.197:80/ ; done'
  I0901 04:50:41.680044 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n"
  I0901 04:50:41.680116 21 builder.go:147] stdout: "\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-pwgjz\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-pwgjz\naffinity-clusterip-transition-pwgjz\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-gvlrg\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-gvlrg\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-gvlrg\naffinity-clusterip-transition-pwgjz\naffinity-clusterip-transition-pwgjz\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-gvlrg"
  I0901 04:50:41.680142 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680156 21 service.go:242] Received response from host: affinity-clusterip-transition-pwgjz
  I0901 04:50:41.680168 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680179 21 service.go:242] Received response from host: affinity-clusterip-transition-pwgjz
  I0901 04:50:41.680192 21 service.go:242] Received response from host: affinity-clusterip-transition-pwgjz
  I0901 04:50:41.680203 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680214 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680226 21 service.go:242] Received response from host: affinity-clusterip-transition-gvlrg
  I0901 04:50:41.680237 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680248 21 service.go:242] Received response from host: affinity-clusterip-transition-gvlrg
  I0901 04:50:41.680259 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680271 21 service.go:242] Received response from host: affinity-clusterip-transition-gvlrg
  I0901 04:50:41.680283 21 service.go:242] Received response from host: affinity-clusterip-transition-pwgjz
  I0901 04:50:41.680294 21 service.go:242] Received response from host: affinity-clusterip-transition-pwgjz
  I0901 04:50:41.680304 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:41.680315 21 service.go:242] Received response from host: affinity-clusterip-transition-gvlrg
  I0901 04:50:41.692186 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-4146 exec execpod-affinity29dr5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.237.197:80/ ; done'
  I0901 04:50:42.020086 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.237.197:80/\n"
  I0901 04:50:42.020163 21 builder.go:147] stdout: "\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8\naffinity-clusterip-transition-h4kz8"
  I0901 04:50:42.020185 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020279 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020291 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020303 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020315 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020374 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020403 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020413 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020495 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020665 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020678 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020691 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020781 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020793 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020863 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.020873 21 service.go:242] Received response from host: affinity-clusterip-transition-h4kz8
  I0901 04:50:42.021053 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4146, will wait for the garbage collector to delete the pods @ 09/01/25 04:50:42.043
  I0901 04:50:42.108425 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.829789ms
  I0901 04:50:42.209434 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.003415ms
  I0901 04:50:45.132821 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4146" for this suite. @ 09/01/25 04:50:45.139
• [10.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 09/01/25 04:50:45.161
  I0901 04:50:45.161838 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:50:45.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:45.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:45.186
  STEP: Setting up server cert @ 09/01/25 04:50:45.207
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:50:45.597
  STEP: Deploying the webhook pod @ 09/01/25 04:50:45.607
  STEP: Wait for the deployment to be ready @ 09/01/25 04:50:45.62
  I0901 04:50:45.626872 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 04:50:47.639
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:50:47.648
  I0901 04:50:48.649789 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/01/25 04:50:48.662
  STEP: create a namespace for the webhook @ 09/01/25 04:50:48.693
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/01/25 04:50:48.707
  I0901 04:50:48.775913 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3003" for this suite. @ 09/01/25 04:50:48.783
  STEP: Destroying namespace "webhook-markers-9016" for this suite. @ 09/01/25 04:50:48.788
  STEP: Destroying namespace "fail-closed-namespace-1953" for this suite. @ 09/01/25 04:50:48.793
• [3.637 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 09/01/25 04:50:48.798
  I0901 04:50:48.798515 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 04:50:48.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:48.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:48.812
  STEP: Creating projection with secret that has name secret-emptykey-test-8d020da0-6753-48c7-84da-46d1e82746d5 @ 09/01/25 04:50:48.815
  I0901 04:50:48.817609 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6496" for this suite. @ 09/01/25 04:50:48.883
• [0.095 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/01/25 04:50:48.893
  I0901 04:50:48.893741 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 04:50:48.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:48.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:48.915
  STEP: Creating the pod @ 09/01/25 04:50:48.919
  I0901 04:50:51.471778 21 pod_client.go:173] Successfully updated pod "annotationupdate2a84491e-f2c5-4619-a981-56e78218b008"
  I0901 04:50:55.516671 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7226" for this suite. @ 09/01/25 04:50:55.524
• [6.640 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/01/25 04:50:55.536
  I0901 04:50:55.537279 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename aggregator @ 09/01/25 04:50:55.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:50:55.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:50:55.564
  I0901 04:50:55.569088 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Registering the sample API server. @ 09/01/25 04:50:55.569
  I0901 04:50:56.111702 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0901 04:50:56.154219 21 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0901 04:50:58.199786 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:00.204498 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:02.207262 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:04.206603 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:06.208039 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:08.224157 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:10.206807 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:12.207188 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:14.206906 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:16.204709 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:18.205214 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 4, 50, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 04:51:20.339484 21 aggregator.go:755] Waited 128.176825ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/01/25 04:51:20.42
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/01/25 04:51:20.426
  STEP: List APIServices @ 09/01/25 04:51:20.433
  I0901 04:51:20.440588 21 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/01/25 04:51:20.44
  I0901 04:51:20.454323 21 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/01/25 04:51:20.454
  I0901 04:51:20.462683 21 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 1, 4, 51, 20, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/01/25 04:51:20.462
  I0901 04:51:20.466127 21 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-01 04:51:20 +0000 UTC Passed all checks passed}
  I0901 04:51:20.466202 21 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 04:51:20.466681 21 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/01/25 04:51:20.466
  I0901 04:51:20.474924 21 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1115879380" @ 09/01/25 04:51:20.475
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/01/25 04:51:20.49
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/01/25 04:51:20.503
  STEP: Patch APIService Status @ 09/01/25 04:51:20.509
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/01/25 04:51:20.518
  I0901 04:51:20.523728 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-01 04:51:20 +0000 UTC Passed all checks passed}
  I0901 04:51:20.523779 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 04:51:20.523804 21 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0901 04:51:20.523825 21 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/01/25 04:51:20.523
  STEP: Confirm that the generated APIService has been deleted @ 09/01/25 04:51:20.534
  I0901 04:51:20.534173 21 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0901 04:51:20.537991 21 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0901 04:51:20.538099 21 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0901 04:51:20.639131 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9018" for this suite. @ 09/01/25 04:51:20.644
• [25.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 09/01/25 04:51:20.654
  I0901 04:51:20.654664 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 04:51:20.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:20.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:20.671
  STEP: Creating Indexed job @ 09/01/25 04:51:20.674
  STEP: Ensuring job reaches completions @ 09/01/25 04:51:20.679
  STEP: Ensuring pods with index for job exist @ 09/01/25 04:51:28.71
  I0901 04:51:28.715133 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4012" for this suite. @ 09/01/25 04:51:28.719
• [8.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/01/25 04:51:28.726
  I0901 04:51:28.726912 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 04:51:28.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:28.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:28.742
  I0901 04:51:28.766107 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 04:51:28.77
  I0901 04:51:28.860207 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:51:28.860362 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 04:51:29.782619 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 04:51:29.782879 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 04:51:30.781072 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 04:51:30.781119 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/01/25 04:51:30.797
  STEP: Check that daemon pods images are updated. @ 09/01/25 04:51:30.877
  I0901 04:51:30.881497 21 daemon_set.go:1193] Wrong image for pod: daemon-set-8xr7r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:30.881565 21 daemon_set.go:1193] Wrong image for pod: daemon-set-w5dvh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:31.882136 21 daemon_set.go:1193] Wrong image for pod: daemon-set-8xr7r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:31.882315 21 daemon_set.go:1193] Wrong image for pod: daemon-set-w5dvh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:32.885343 21 daemon_set.go:1193] Wrong image for pod: daemon-set-8xr7r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:32.885499 21 daemon_set.go:1198] Pod daemon-set-vm6tg is not available
  I0901 04:51:32.885564 21 daemon_set.go:1193] Wrong image for pod: daemon-set-w5dvh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:33.883064 21 daemon_set.go:1193] Wrong image for pod: daemon-set-8xr7r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:33.883395 21 daemon_set.go:1198] Pod daemon-set-vm6tg is not available
  I0901 04:51:33.883532 21 daemon_set.go:1193] Wrong image for pod: daemon-set-w5dvh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:34.883079 21 daemon_set.go:1198] Pod daemon-set-txs7z is not available
  I0901 04:51:34.883125 21 daemon_set.go:1193] Wrong image for pod: daemon-set-w5dvh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:35.883585 21 daemon_set.go:1198] Pod daemon-set-txs7z is not available
  I0901 04:51:35.883659 21 daemon_set.go:1193] Wrong image for pod: daemon-set-w5dvh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0901 04:51:36.882816 21 daemon_set.go:1198] Pod daemon-set-nwvxp is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/01/25 04:51:36.888
  I0901 04:51:36.897957 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 04:51:36.897994 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl is running 0 daemon pod, expected 1
  I0901 04:51:37.901840 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 04:51:37.901881 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 04:51:37.928
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4218, will wait for the garbage collector to delete the pods @ 09/01/25 04:51:37.928
  I0901 04:51:37.997468 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.034264ms
  I0901 04:51:38.097720 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.250303ms
  I0901 04:51:39.805670 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 04:51:39.805716 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 04:51:39.810457 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15018"},"items":null}

  I0901 04:51:39.815062 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15018"},"items":null}

  I0901 04:51:39.831179 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4218" for this suite. @ 09/01/25 04:51:39.835
• [11.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/01/25 04:51:39.845
  I0901 04:51:39.845274 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename watch @ 09/01/25 04:51:39.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:39.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:39.861
  STEP: creating a new configmap @ 09/01/25 04:51:39.864
  STEP: modifying the configmap once @ 09/01/25 04:51:39.868
  STEP: modifying the configmap a second time @ 09/01/25 04:51:39.887
  STEP: deleting the configmap @ 09/01/25 04:51:39.895
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/01/25 04:51:39.9
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/01/25 04:51:39.901
  I0901 04:51:39.902146 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6663  6b282f56-a18f-4bac-9dbe-fdb8fc8a2e83 15025 0 2025-09-01 04:51:39 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 04:51:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 04:51:39.902419 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6663  6b282f56-a18f-4bac-9dbe-fdb8fc8a2e83 15026 0 2025-09-01 04:51:39 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-01 04:51:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 04:51:39.902575 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6663" for this suite. @ 09/01/25 04:51:39.92
• [0.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/01/25 04:51:39.929
  I0901 04:51:39.929882 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 04:51:39.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:39.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:39.947
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/01/25 04:51:39.951
  STEP: Watching for error events or started pod @ 09/01/25 04:51:39.96
  STEP: Waiting for pod completion @ 09/01/25 04:51:41.965
  STEP: Checking that the pod succeeded @ 09/01/25 04:51:43.982
  STEP: Getting logs from the pod @ 09/01/25 04:51:43.983
  STEP: Checking that the sysctl is actually updated @ 09/01/25 04:51:43.999
  I0901 04:51:43.999830 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8252" for this suite. @ 09/01/25 04:51:44.008
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 09/01/25 04:51:44.019
  I0901 04:51:44.019307 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 04:51:44.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:44.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:44.037
  STEP: Setting up server cert @ 09/01/25 04:51:44.057
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 04:51:44.33
  STEP: Deploying the webhook pod @ 09/01/25 04:51:44.337
  STEP: Wait for the deployment to be ready @ 09/01/25 04:51:44.352
  I0901 04:51:44.373055 21 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 04:51:46.393
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 04:51:46.406
  I0901 04:51:47.407125 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 04:51:47.417
  STEP: verifying the mutating webhook match conditions @ 09/01/25 04:51:47.426
  STEP: updating the mutating webhook match conditions @ 09/01/25 04:51:47.431
  STEP: verifying the mutating webhook match conditions @ 09/01/25 04:51:47.443
  I0901 04:51:47.498491 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8413" for this suite. @ 09/01/25 04:51:47.502
  STEP: Destroying namespace "webhook-markers-1230" for this suite. @ 09/01/25 04:51:47.507
• [3.494 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/01/25 04:51:47.514
  I0901 04:51:47.514658 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename prestop @ 09/01/25 04:51:47.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:47.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:47.536
  STEP: Creating server pod server in namespace prestop-858 @ 09/01/25 04:51:47.54
  STEP: Waiting for pods to come up. @ 09/01/25 04:51:47.55
  STEP: Creating tester pod tester in namespace prestop-858 @ 09/01/25 04:51:49.569
  STEP: Deleting pre-stop pod @ 09/01/25 04:51:51.59
  I0901 04:51:56.615270 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/01/25 04:51:56.615
  I0901 04:51:56.628620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-858" for this suite. @ 09/01/25 04:51:56.634
• [9.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/01/25 04:51:56.644
  I0901 04:51:56.645286 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 04:51:56.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:51:56.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:51:56.663
  I0901 04:51:56.667228 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 04:51:56.741857 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 04:51:56.746895 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv before test
  I0901 04:51:56.752988 21 predicates.go:957] civo-csi-node-dzqk5 from kube-system started at 2025-09-01 04:05:10 +0000 UTC (2 container statuses recorded)
  I0901 04:51:56.753049 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 04:51:56.753069 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 04:51:56.753091 21 predicates.go:957] coredns-697968c856-xgph7 from kube-system started at 2025-09-01 04:06:57 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.753107 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0901 04:51:56.753124 21 predicates.go:957] traefik-4d7c2 from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.753139 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 04:51:56.753156 21 predicates.go:957] sonobuoy-e2e-job-a8fc065df4954836 from sonobuoy started at 2025-09-01 04:10:29 +0000 UTC (2 container statuses recorded)
  I0901 04:51:56.753174 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 04:51:56.753188 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 04:51:56.753202 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl before test
  I0901 04:51:56.758239 21 predicates.go:957] civo-ccm-bd7449dd8-smpl5 from kube-system started at 2025-09-01 04:05:01 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.758499 21 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0901 04:51:56.758618 21 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (4 container statuses recorded)
  I0901 04:51:56.758742 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 04:51:56.758844 21 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0901 04:51:56.758950 21 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0901 04:51:56.759053 21 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0901 04:51:56.759163 21 predicates.go:957] civo-csi-node-9l9jz from kube-system started at 2025-09-01 04:05:09 +0000 UTC (2 container statuses recorded)
  I0901 04:51:56.759264 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 04:51:56.759364 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 04:51:56.759467 21 predicates.go:957] metrics-server-7bf7d58749-7jzm4 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.759568 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0901 04:51:56.759710 21 predicates.go:957] traefik-s6p6r from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.759829 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 04:51:56.759932 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae before test
  I0901 04:51:56.765689 21 predicates.go:957] install-traefik2-nodeport-te-bmvsb from default started at 2025-09-01 04:06:21 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.765741 21 predicates.go:959] 	Container install-traefik2-nodeport-te ready: false, restart count 0
  I0901 04:51:56.765765 21 predicates.go:957] civo-csi-node-9prjr from kube-system started at 2025-09-01 04:05:09 +0000 UTC (2 container statuses recorded)
  I0901 04:51:56.765782 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 04:51:56.765801 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 04:51:56.765816 21 predicates.go:957] traefik-7vzcs from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.765831 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 04:51:56.765848 21 predicates.go:957] tester from prestop-858 started at 2025-09-01 04:51:49 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.765862 21 predicates.go:959] 	Container tester ready: true, restart count 0
  I0901 04:51:56.765879 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 04:10:25 +0000 UTC (1 container statuses recorded)
  I0901 04:51:56.765894 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 04:51:56.765
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 04:51:58.788
  STEP: Trying to apply a random label on the found node. @ 09/01/25 04:51:58.807
  STEP: verifying the node has the label kubernetes.io/e2e-e79b0fa7-b61b-46ce-bb16-95602920b2fa 95 @ 09/01/25 04:51:58.815
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/01/25 04:51:58.819
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.1.9 on the node which pod4 resides and expect not scheduled @ 09/01/25 04:52:00.832
  STEP: removing the label kubernetes.io/e2e-e79b0fa7-b61b-46ce-bb16-95602920b2fa off the node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae @ 09/01/25 04:57:00.846
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e79b0fa7-b61b-46ce-bb16-95602920b2fa @ 09/01/25 04:57:00.859
  I0901 04:57:00.865776 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5963" for this suite. @ 09/01/25 04:57:00.87
• [304.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 09/01/25 04:57:00.878
  I0901 04:57:00.878383 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 04:57:00.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:00.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:00.895
  I0901 04:57:00.910885 21 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0901 04:57:00.911084 21 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0901 04:57:00.915942 21 service_accounts.go:282] created pod pod-service-account-mountsa
  I0901 04:57:00.916119 21 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0901 04:57:00.923025 21 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0901 04:57:00.923160 21 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0901 04:57:00.934998 21 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0901 04:57:00.935286 21 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0901 04:57:00.942489 21 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0901 04:57:00.942677 21 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0901 04:57:00.954019 21 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0901 04:57:00.954073 21 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0901 04:57:00.960417 21 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0901 04:57:00.960978 21 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0901 04:57:00.969096 21 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0901 04:57:00.969191 21 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0901 04:57:00.975426 21 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0901 04:57:00.975509 21 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0901 04:57:00.975627 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5955" for this suite. @ 09/01/25 04:57:00.983
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/01/25 04:57:00.992
  I0901 04:57:00.992359 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 04:57:00.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:01.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:01.01
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/01/25 04:57:01.013
  STEP: Saw pod success @ 09/01/25 04:57:05.036
  I0901 04:57:05.040160 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl pod pod-e6cf8180-51c2-4050-95d0-58d2d7af9346 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 04:57:05.057
  I0901 04:57:05.076050 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5780" for this suite. @ 09/01/25 04:57:05.081
• [4.095 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/01/25 04:57:05.087
  I0901 04:57:05.087100 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 04:57:05.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:05.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:05.122
  I0901 04:57:05.125774 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 04:57:08.211439 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8635" for this suite. @ 09/01/25 04:57:08.217
• [3.139 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/01/25 04:57:08.226
  I0901 04:57:08.226956 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 04:57:08.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:08.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:08.247
  STEP: getting /apis @ 09/01/25 04:57:08.256
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 04:57:08.262
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 04:57:08.265
  STEP: creating @ 09/01/25 04:57:08.268
  STEP: getting @ 09/01/25 04:57:08.304
  STEP: listing @ 09/01/25 04:57:08.336
  STEP: watching @ 09/01/25 04:57:08.357
  I0901 04:57:08.357851 21 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/01/25 04:57:08.36
  STEP: updating @ 09/01/25 04:57:08.373
  I0901 04:57:08.406029 21 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 04:57:08.406
  STEP: patching /status @ 09/01/25 04:57:08.414
  STEP: updating /status @ 09/01/25 04:57:08.438
  STEP: deleting @ 09/01/25 04:57:08.45
  STEP: deleting a collection @ 09/01/25 04:57:08.47
  I0901 04:57:08.483013 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2213" for this suite. @ 09/01/25 04:57:08.485
• [0.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/01/25 04:57:08.496
  I0901 04:57:08.496621 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 04:57:08.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:08.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:08.511
  STEP: Creating secret with name secret-test-2437981b-3e2f-4902-b385-2318ac6b9a77 @ 09/01/25 04:57:08.514
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:57:08.517
  STEP: Saw pod success @ 09/01/25 04:57:10.534
  I0901 04:57:10.539969 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-c606b285-a4da-4d8a-8fa3-372b3ff9cf6a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:57:10.568
  I0901 04:57:10.588976 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1561" for this suite. @ 09/01/25 04:57:10.594
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/01/25 04:57:10.603
  I0901 04:57:10.603227 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename watch @ 09/01/25 04:57:10.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:10.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:10.625
  STEP: getting a starting resourceVersion @ 09/01/25 04:57:10.628
  STEP: starting a background goroutine to produce watch events @ 09/01/25 04:57:10.631
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/01/25 04:57:10.631
  I0901 04:57:13.411090 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8092" for this suite. @ 09/01/25 04:57:13.462
• [2.910 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/01/25 04:57:13.513
  I0901 04:57:13.513048 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 04:57:13.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:57:13.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:57:13.529
  STEP: Creating pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579 @ 09/01/25 04:57:13.531
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 04:57:15.552
  I0901 04:57:15.558117 21 container_probe.go:1749] Initial restart count of pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b is 0
  I0901 04:57:15.563215 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:17.567606 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:19.572521 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:21.579356 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:23.585725 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:25.592343 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:27.596899 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:29.602627 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:31.607839 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:33.613103 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:35.618857 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:37.625806 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:39.630983 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:41.639019 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:43.645428 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:45.653295 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:47.658757 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:49.666739 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:51.671682 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:53.677274 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:55.682900 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:57.690834 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:57:59.697913 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:01.704036 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:03.711006 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:05.717465 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:07.724496 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:09.732941 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:11.740838 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:13.749678 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:15.755393 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:17.760116 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:19.766710 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:21.774520 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:23.780592 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:25.786864 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:27.792916 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:29.799031 21 container_probe.go:1759] Get pod test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b in namespace container-probe-3579
  I0901 04:58:29.799100 21 container_probe.go:1763] Restart count of pod container-probe-3579/test-grpc-59c513b0-f3cf-4e40-a0d0-f275c2944b7b is now 1 (1m14.24094094s elapsed)
  STEP: deleting the pod @ 09/01/25 04:58:29.799
  I0901 04:58:29.811387 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3579" for this suite. @ 09/01/25 04:58:29.815
• [76.307 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/01/25 04:58:29.819
  I0901 04:58:29.819967 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 04:58:29.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:58:29.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:58:29.843
  STEP: Creating secret with name secret-test-55144142-7ceb-4eab-9b17-6c4f7a882457 @ 09/01/25 04:58:29.859
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:58:29.863
  STEP: Saw pod success @ 09/01/25 04:58:31.885
  I0901 04:58:31.890674 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-cc8c861f-e774-41d0-88ec-1d3f1d1ab43e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 04:58:31.902
  I0901 04:58:31.924499 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6913" for this suite. @ 09/01/25 04:58:31.931
  STEP: Destroying namespace "secret-namespace-3163" for this suite. @ 09/01/25 04:58:31.937
• [2.123 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 09/01/25 04:58:31.943
  I0901 04:58:31.943914 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 04:58:31.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:58:31.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:58:31.96
  STEP: creating service multiprotocol-test in namespace services-8312 @ 09/01/25 04:58:31.964
  STEP: creating pod pod1 in namespace services-8312 @ 09/01/25 04:58:31.973
  STEP: Creating pod pod1 in namespace services-8312 @ 09/01/25 04:58:31.973
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8312 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/01/25 04:58:34.008
  I0901 04:58:34.023187 21 service.go:4553] successfully validated that service multiprotocol-test in namespace services-8312 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/01/25 04:58:34.023
  I0901 04:58:34.023268 21 resource.go:361] Creating new exec pod
  I0901 04:58:36.039405 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80'
  I0901 04:58:36.219922 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.140.22 80\n+ echo hostName\nConnection to 10.43.140.22 80 port [tcp/http] succeeded!\n"
  I0901 04:58:36.219985 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 04:58:36.220065 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.140.22 80'
  I0901 04:58:38.400843 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.140.22 80\n+ echo hostName\n"
  I0901 04:58:38.401003 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/01/25 04:58:38.401
  I0901 04:58:38.410535 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80'
  I0901 04:58:38.629329 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.140.22 80\n+ echo hostName\nConnection to 10.43.140.22 80 port [tcp/http] succeeded!\n"
  I0901 04:58:38.629434 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 04:58:38.629717 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.140.22 80'
  I0901 04:58:40.831008 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.140.22 80\n+ echo hostName\n"
  I0901 04:58:40.831067 21 builder.go:147] stdout: ""
  I0901 04:58:40.831134 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.140.22 80'
  I0901 04:58:43.055217 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.140.22 80\n"
  I0901 04:58:43.055278 21 builder.go:147] stdout: ""
  I0901 04:58:43.055447 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.140.22 80'
  I0901 04:58:45.252495 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.140.22 80\n+ echo hostName\n"
  I0901 04:58:45.252598 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 09/01/25 04:58:45.252
  I0901 04:58:45.263585 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.140.22 80'
  I0901 04:58:47.450970 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.140.22 80\n"
  I0901 04:58:47.451071 21 builder.go:147] stdout: "pod1"
  I0901 04:58:47.451251 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80'
  I0901 04:58:49.638553 21 builder.go:135] rc: 1
  I0901 04:58:49.638640 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.140.22 80
  nc: connect to 10.43.140.22 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 04:58:49.638938 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80'
  I0901 04:58:51.823110 21 builder.go:135] rc: 1
  I0901 04:58:51.823482 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.140.22 80
  nc: connect to 10.43.140.22 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 04:58:51.824035 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80'
  I0901 04:58:54.039235 21 builder.go:135] rc: 1
  I0901 04:58:54.039367 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8312 exec execpod5mftx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.22 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.140.22 80
  + echo hostName
  nc: connect to 10.43.140.22 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0901 04:58:54.040164 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8312" for this suite. @ 09/01/25 04:58:54.047
• [22.113 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 09/01/25 04:58:54.057
  I0901 04:58:54.057318 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 04:58:54.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:58:54.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:58:54.079
  I0901 04:58:54.096641 21 service_accounts.go:647] created pod
  STEP: Saw pod success @ 09/01/25 04:58:58.116
  I0901 04:59:28.117732 21 service_accounts.go:653] polling logs
  I0901 04:59:28.129116 21 service_accounts.go:663] Pod logs: 
  I0901 04:58:54.726678       1 log.go:245] OK: Got token
  I0901 04:58:54.726901       1 log.go:245] validating with in-cluster discovery
  I0901 04:58:54.727208       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0901 04:58:54.727297       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9240:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013720), NotBefore:(*jwt.NumericDate)(0xc000013810), IssuedAt:(*jwt.NumericDate)(0xc000013730), ID:"1b80a3f5-2d87-4956-affd-faf8a0494e82"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9240", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7e5403e8-1695-4844-ab50-9f5888d36055"}}}
  I0901 04:58:54.740131       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0901 04:58:54.747464       1 log.go:245] OK: Validated signature on JWT
  I0901 04:58:54.747604       1 log.go:245] OK: Got valid claims from token!
  I0901 04:58:54.747648       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9240:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000246428), NotBefore:(*jwt.NumericDate)(0xc000246460), IssuedAt:(*jwt.NumericDate)(0xc000246440), ID:"1b80a3f5-2d87-4956-affd-faf8a0494e82"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9240", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"7e5403e8-1695-4844-ab50-9f5888d36055"}}}

  I0901 04:59:28.129212 21 service_accounts.go:667] completed pod
  I0901 04:59:28.137483 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9240" for this suite. @ 09/01/25 04:59:28.143
• [34.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/01/25 04:59:28.15
  I0901 04:59:28.150758 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 04:59:28.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:59:28.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:59:28.165
  I0901 04:59:52.261156 21 container_probe.go:92] Container started at 2025-09-01 04:59:28 +0000 UTC, pod became ready at 2025-09-01 04:59:50 +0000 UTC
  I0901 04:59:52.261444 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4762" for this suite. @ 09/01/25 04:59:52.267
• [24.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/01/25 04:59:52.277
  I0901 04:59:52.277822 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 04:59:52.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:59:52.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:59:52.297
  STEP: reading a file in the container @ 09/01/25 04:59:54.34
  I0901 04:59:54.340814 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6733 pod-service-account-f5492fbd-edab-4a8d-a1cc-eaf4325bdf50 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/01/25 04:59:54.555
  I0901 04:59:54.555665 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6733 pod-service-account-f5492fbd-edab-4a8d-a1cc-eaf4325bdf50 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/01/25 04:59:55.021
  I0901 04:59:55.021500 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6733 pod-service-account-f5492fbd-edab-4a8d-a1cc-eaf4325bdf50 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0901 04:59:55.221915 21 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-6733"
  I0901 04:59:55.228601 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6733" for this suite. @ 09/01/25 04:59:55.234
• [2.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 09/01/25 04:59:55.244
  I0901 04:59:55.244872 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 04:59:55.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:59:55.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:59:55.26
  STEP: creating secret secrets-1848/secret-test-8d12192c-6952-4ee3-8a2d-bc92afab28fe @ 09/01/25 04:59:55.263
  STEP: Creating a pod to test consume secrets @ 09/01/25 04:59:55.266
  STEP: Saw pod success @ 09/01/25 04:59:59.289
  I0901 04:59:59.295480 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod pod-configmaps-55c53b73-0095-40c2-b610-c6f720cc919a container env-test: <nil>
  STEP: delete the pod @ 09/01/25 04:59:59.32
  I0901 04:59:59.335466 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1848" for this suite. @ 09/01/25 04:59:59.339
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/01/25 04:59:59.345
  I0901 04:59:59.345204 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 04:59:59.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 04:59:59.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 04:59:59.364
  STEP: creating a Deployment @ 09/01/25 04:59:59.372
  STEP: waiting for Deployment to be created @ 09/01/25 04:59:59.377
  STEP: waiting for all Replicas to be Ready @ 09/01/25 04:59:59.38
  I0901 04:59:59.382606 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.382733 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.394591 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.394781 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.406889 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.407074 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.432906 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 04:59:59.432957 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0901 05:00:00.255572 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 05:00:00.255799 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0901 05:00:00.780092 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/01/25 05:00:00.78
  I0901 05:00:00.793353 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/01/25 05:00:00.793
  I0901 05:00:00.796784 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.797041 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.797209 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.797371 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.798641 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.798821 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.798918 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.799093 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 0
  I0901 05:00:00.799186 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:00.799353 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:00.799445 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.799545 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.799633 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.799728 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.801240 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.801371 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.812433 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.812577 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:00.869248 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:00.869520 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:02.813397 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:02.813518 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:02.830551 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  STEP: listing Deployments @ 09/01/25 05:00:02.83
  I0901 05:00:02.834219 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/01/25 05:00:02.834
  I0901 05:00:02.845048 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/01/25 05:00:02.845
  I0901 05:00:02.855204 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:02.857013 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:02.878914 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:02.893269 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:02.898828 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:03.822659 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:03.835920 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:03.847312 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:03.856697 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:03.863766 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0901 05:00:05.283692 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/01/25 05:00:05.302
  STEP: fetching the DeploymentStatus @ 09/01/25 05:00:05.31
  I0901 05:00:05.316543 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:05.316693 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:05.316765 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:05.317093 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:05.317184 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 1
  I0901 05:00:05.317255 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:05.317559 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:05.317584 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:05.317599 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:05.317764 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 2
  I0901 05:00:05.317787 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-3834 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/01/25 05:00:05.317
  I0901 05:00:05.329977 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330215 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330272 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330406 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330426 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330640 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330907 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.330995 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.331075 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.331356 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.331535 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.331645 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.331798 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.331909 21 deployment.go:475] observed event type MODIFIED
  I0901 05:00:05.336240 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0901 05:00:05.343074 21 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3834",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3f731cb-6376-4fe5-b62e-81edce7de434",
      ResourceVersion: (string) (len=5) "16426",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299602,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "1ddb8d1c-7fe8-4ef0-ab53-ac53d68c78fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 64 64 62  38 64 31 63 2d 37 66 65  |":\"1ddb8d1c-7fe|
              00000130  38 2d 34 65 66 30 2d 61  62 35 33 2d 61 63 35 33  |8-4ef0-ab53-ac53|
              00000140  64 36 38 63 37 38 66 63  5c 22 7d 22 3a 7b 7d 7d  |d68c78fc\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0901 05:00:05.357094 21 deployment.go:669] pod: "test-deployment-79899bcfcc-7tqm2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-7tqm2",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3834",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b39cd13e-7e4d-4bc8-a2fa-e7632a77e875",
      ResourceVersion: (string) (len=5) "16445",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299602,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "b3f731cb-6376-4fe5-b62e-81edce7de434",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 33 66 37 33 31 63 62  |uid\":\"b3f731cb|
              000000a0  2d 36 33 37 36 2d 34 66  65 35 2d 62 36 32 65 2d  |-6376-4fe5-b62e-|
              000000b0  38 31 65 64 63 65 37 64  65 34 33 34 5c 22 7d 22  |81edce7de434\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  32 5c 22 7d 22 3a 7b 22  |.42.1.152\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7knnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7knnw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=11) "10.42.1.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299602,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892299603,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a3f7cf0ffe41c20168a1fe765a488fac2fa983b120d5288fdaf3d16dd0ac99d4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7knnw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0901 05:00:05.362525 21 deployment.go:669] pod: "test-deployment-79899bcfcc-qn9cq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-qn9cq",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-3834",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "562b61fd-8dd0-4c88-9c7c-fa215105fe68",
      ResourceVersion: (string) (len=5) "16444",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299603,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299606,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "b3f731cb-6376-4fe5-b62e-81edce7de434",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 33 66 37 33 31 63 62  |uid\":\"b3f731cb|
              000000a0  2d 36 33 37 36 2d 34 66  65 35 2d 62 36 32 65 2d  |-6376-4fe5-b62e-|
              000000b0  38 31 65 64 63 65 37 64  65 34 33 34 5c 22 7d 22  |81edce7de434\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 36 30  5c 22 7d 22 3a 7b 22 2e  |.42.2.60\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rbqb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rbqb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=10) "10.42.2.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299603,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892299604,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f58531e3126922a752022aa8fc74ade522459babb0ac87075fdad8c84eda3f8c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7rbqb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0901 05:00:05.364626 21 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3834",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4db4549-8e72-4e5a-a0ff-6ab8a1d945b4",
      ResourceVersion: (string) (len=5) "16436",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "1ddb8d1c-7fe8-4ef0-ab53-ac53d68c78fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 64 64 62  38 64 31 63 2d 37 66 65  |":\"1ddb8d1c-7fe|
              00000130  38 2d 34 65 66 30 2d 61  62 35 33 2d 61 63 35 33  |8-4ef0-ab53-ac53|
              00000140  64 36 38 63 37 38 66 63  5c 22 7d 22 3a 7b 7d 7d  |d68c78fc\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0901 05:00:05.458155 21 deployment.go:669] pod: "test-deployment-f78d658f9-ksjcj":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-ksjcj",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-3834",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ccd63f2-4cd4-4925-95ca-078af2d4c242",
      ResourceVersion: (string) (len=5) "16432",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299607,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "f4db4549-8e72-4e5a-a0ff-6ab8a1d945b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 34 64 62 34 35 34 39  |uid\":\"f4db4549|
              000000a0  2d 38 65 37 32 2d 34 65  35 61 2d 61 30 66 66 2d  |-8e72-4e5a-a0ff-|
              000000b0  36 61 62 38 61 31 64 39  34 35 62 34 5c 22 7d 22  |6ab8a1d945b4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  31 5c 22 7d 22 3a 7b 22  |.42.1.151\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x8ddb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x8ddb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299600,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=11) "10.42.1.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299600,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892299601,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://c6f42d33b9be4079ae02f53f9241135f6168778b0e03d515af9a6da37aa1b1ae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x8ddb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0901 05:00:05.460213 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3834" for this suite. @ 09/01/25 05:00:05.466
• [6.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 09/01/25 05:00:05.477
  I0901 05:00:05.477962 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:00:05.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:05.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:05.5
  STEP: Setting up server cert @ 09/01/25 05:00:05.522
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:00:06.095
  STEP: Deploying the webhook pod @ 09/01/25 05:00:06.103
  STEP: Wait for the deployment to be ready @ 09/01/25 05:00:06.119
  I0901 05:00:06.130959 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:00:08.149
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:00:08.163
  I0901 05:00:09.164220 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 05:00:09.178266 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8084-crds.webhook.example.com via the AdmissionRegistration API @ 09/01/25 05:00:09.695
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/01/25 05:00:09.718
  I0901 05:00:12.327311 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4923" for this suite. @ 09/01/25 05:00:12.333
  STEP: Destroying namespace "webhook-markers-603" for this suite. @ 09/01/25 05:00:12.343
• [6.876 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/01/25 05:00:12.354
  I0901 05:00:12.354920 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:00:12.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:12.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:12.375
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 05:00:12.378
  STEP: Saw pod success @ 09/01/25 05:00:16.405
  I0901 05:00:16.409943 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-64b699ed-2601-4ffa-a902-dfc3c8827056 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:00:16.42
  I0901 05:00:16.438110 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8414" for this suite. @ 09/01/25 05:00:16.442
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 09/01/25 05:00:16.452
  I0901 05:00:16.452742 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:00:16.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:16.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:16.471
  I0901 05:00:16.475354 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-2644 version'
  I0901 05:00:16.553751 21 builder.go:146] stderr: ""
  I0901 05:00:16.553798 21 builder.go:147] stdout: "Client Version: v1.32.5\nKustomize Version: v5.5.0\nServer Version: v1.32.5+k3s1\n"
  I0901 05:00:16.554205 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2644" for this suite. @ 09/01/25 05:00:16.558
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/01/25 05:00:16.565
  I0901 05:00:16.565760 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sysctl @ 09/01/25 05:00:16.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:16.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:16.579
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/01/25 05:00:16.582
  I0901 05:00:16.588049 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9376" for this suite. @ 09/01/25 05:00:16.659
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 09/01/25 05:00:16.666
  I0901 05:00:16.666218 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:00:16.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:16.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:16.68
  STEP: creating a secret @ 09/01/25 05:00:16.683
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/01/25 05:00:16.688
  STEP: patching the secret @ 09/01/25 05:00:16.692
  STEP: deleting the secret using a LabelSelector @ 09/01/25 05:00:16.702
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/01/25 05:00:16.708
  I0901 05:00:16.711801 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-649" for this suite. @ 09/01/25 05:00:16.759
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/01/25 05:00:16.765
  I0901 05:00:16.765513 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:00:16.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:16.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:16.78
  STEP: Create a pod @ 09/01/25 05:00:16.783
  STEP: patching /status @ 09/01/25 05:00:18.799
  I0901 05:00:18.806750 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0901 05:00:18.806888 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6609" for this suite. @ 09/01/25 05:00:18.811
• [2.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 09/01/25 05:00:18.817
  I0901 05:00:18.817627 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 05:00:18.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:18.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:18.83
  STEP: Creating a Serviceaccount "e2e-sa-bmvlw" in namespace "svcaccounts-2525" @ 09/01/25 05:00:18.833
  STEP: Creating a ServiceaccountToken "e2e-sa-bmvlw" in namespace "svcaccounts-2525" @ 09/01/25 05:00:18.838
  STEP: Creating a TokenReview for "e2e-sa-bmvlw" in namespace "svcaccounts-2525" @ 09/01/25 05:00:18.847
  I0901 05:00:18.850676 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2525" for this suite. @ 09/01/25 05:00:18.919
• [0.111 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/01/25 05:00:18.929
  I0901 05:00:18.929309 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:00:18.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:18.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:18.951
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:00:18.953
  STEP: Saw pod success @ 09/01/25 05:00:22.986
  I0901 05:00:22.990771 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-13af5ad5-f90b-41d7-b21d-b27f7f9c3354 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:00:22.999
  I0901 05:00:23.019045 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4475" for this suite. @ 09/01/25 05:00:23.026
• [4.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/01/25 05:00:23.032
  I0901 05:00:23.032979 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 05:00:23.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:23.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:23.045
  I0901 05:00:27.072780 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4401" for this suite. @ 09/01/25 05:00:27.078
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/01/25 05:00:27.09
  I0901 05:00:27.090448 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:00:27.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:27.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:27.114
  STEP: Creating secret with name secret-test-0b5d5d3b-8cef-4267-9833-f577bdd7de4b @ 09/01/25 05:00:27.118
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:00:27.122
  STEP: Saw pod success @ 09/01/25 05:00:31.146
  I0901 05:00:31.152286 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-5ee61839-aca0-400d-8779-cdf123c37dca container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:00:31.165
  I0901 05:00:31.180883 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2479" for this suite. @ 09/01/25 05:00:31.186
• [4.105 seconds]
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/01/25 05:00:31.195
  I0901 05:00:31.195897 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename ingressclass @ 09/01/25 05:00:31.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:31.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:31.212
  STEP: getting /apis @ 09/01/25 05:00:31.215
  STEP: getting /apis/networking.k8s.io @ 09/01/25 05:00:31.22
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 05:00:31.221
  STEP: creating @ 09/01/25 05:00:31.222
  STEP: getting @ 09/01/25 05:00:31.236
  STEP: listing @ 09/01/25 05:00:31.239
  STEP: watching @ 09/01/25 05:00:31.242
  I0901 05:00:31.243100 21 ingressclass.go:348] starting watch
  STEP: patching @ 09/01/25 05:00:31.244
  STEP: updating @ 09/01/25 05:00:31.259
  I0901 05:00:31.266388 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0901 05:00:31.266552 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/01/25 05:00:31.266
  STEP: deleting a collection @ 09/01/25 05:00:31.28
  I0901 05:00:31.298096 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6590" for this suite. @ 09/01/25 05:00:31.302
• [0.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/01/25 05:00:31.308
  I0901 05:00:31.308723 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:00:31.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:31.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:31.328
  STEP: Creating the pod @ 09/01/25 05:00:31.333
  I0901 05:00:33.886203 21 pod_client.go:173] Successfully updated pod "labelsupdate1ff1e2fe-6841-4cc0-8bea-929509e3d0dc"
  I0901 05:00:37.923972 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-289" for this suite. @ 09/01/25 05:00:37.93
• [6.632 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/01/25 05:00:37.94
  I0901 05:00:37.940861 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 05:00:37.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:37.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:37.961
  I0901 05:00:37.964867 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 05:00:37.972054 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 05:00:37.975589 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv before test
  I0901 05:00:37.980477 21 predicates.go:957] civo-csi-node-dzqk5 from kube-system started at 2025-09-01 04:05:10 +0000 UTC (2 container statuses recorded)
  I0901 05:00:37.980629 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:00:37.980697 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:00:37.980767 21 predicates.go:957] coredns-697968c856-xgph7 from kube-system started at 2025-09-01 04:06:57 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.980829 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0901 05:00:37.980882 21 predicates.go:957] traefik-4d7c2 from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.980944 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:00:37.981010 21 predicates.go:957] sonobuoy-e2e-job-a8fc065df4954836 from sonobuoy started at 2025-09-01 04:10:29 +0000 UTC (2 container statuses recorded)
  I0901 05:00:37.981074 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 05:00:37.981125 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 05:00:37.981190 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl before test
  I0901 05:00:37.985930 21 predicates.go:957] civo-ccm-bd7449dd8-smpl5 from kube-system started at 2025-09-01 04:05:01 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.986078 21 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0901 05:00:37.986137 21 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (4 container statuses recorded)
  I0901 05:00:37.986196 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:00:37.986249 21 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0901 05:00:37.986338 21 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0901 05:00:37.986417 21 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0901 05:00:37.986478 21 predicates.go:957] civo-csi-node-9l9jz from kube-system started at 2025-09-01 04:05:09 +0000 UTC (2 container statuses recorded)
  I0901 05:00:37.986539 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:00:37.986591 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:00:37.986651 21 predicates.go:957] metrics-server-7bf7d58749-7jzm4 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.986714 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0901 05:00:37.986767 21 predicates.go:957] traefik-s6p6r from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.986823 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:00:37.986879 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae before test
  I0901 05:00:37.991020 21 predicates.go:957] install-traefik2-nodeport-te-bmvsb from default started at 2025-09-01 04:06:21 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.991163 21 predicates.go:959] 	Container install-traefik2-nodeport-te ready: false, restart count 0
  I0901 05:00:37.991244 21 predicates.go:957] labelsupdate1ff1e2fe-6841-4cc0-8bea-929509e3d0dc from downward-api-289 started at 2025-09-01 05:00:31 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.991312 21 predicates.go:959] 	Container client-container ready: true, restart count 0
  I0901 05:00:37.991372 21 predicates.go:957] civo-csi-node-9prjr from kube-system started at 2025-09-01 04:05:09 +0000 UTC (2 container statuses recorded)
  I0901 05:00:37.991447 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:00:37.991521 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:00:37.991596 21 predicates.go:957] traefik-7vzcs from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.991671 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:00:37.991739 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 04:10:25 +0000 UTC (1 container statuses recorded)
  I0901 05:00:37.991794 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/01/25 05:00:37.991
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18610fec7ba2d10e], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 09/01/25 05:00:38.021
  I0901 05:00:39.017849 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7464" for this suite. @ 09/01/25 05:00:39.022
• [1.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/01/25 05:00:39.032
  I0901 05:00:39.033033 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename discovery @ 09/01/25 05:00:39.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:39.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:39.053
  STEP: Setting up server cert @ 09/01/25 05:00:39.06
  STEP: Requesting APIResourceList from "/api/v1" @ 09/01/25 05:00:39.465
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/01/25 05:00:39.467
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/01/25 05:00:39.469
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/01/25 05:00:39.47
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/01/25 05:00:39.472
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/01/25 05:00:39.473
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/01/25 05:00:39.475
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/01/25 05:00:39.476
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/01/25 05:00:39.478
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/01/25 05:00:39.481
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/01/25 05:00:39.482
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/01/25 05:00:39.484
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/01/25 05:00:39.485
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/01/25 05:00:39.487
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/01/25 05:00:39.488
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/01/25 05:00:39.49
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/01/25 05:00:39.491
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/01/25 05:00:39.499
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/01/25 05:00:39.503
  I0901 05:00:39.504548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7420" for this suite. @ 09/01/25 05:00:39.51
• [0.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/01/25 05:00:39.519
  I0901 05:00:39.519815 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:00:39.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:39.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:39.542
  STEP: Creating the pod @ 09/01/25 05:00:39.545
  I0901 05:00:42.098541 21 pod_client.go:173] Successfully updated pod "labelsupdatedde5bff6-d81f-4edc-a7fe-060f2225a1f9"
  I0901 05:00:46.135621 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8139" for this suite. @ 09/01/25 05:00:46.143
• [6.635 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/01/25 05:00:46.155
  I0901 05:00:46.155752 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 05:00:46.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:46.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:46.175
  I0901 05:00:46.180572 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  W0901 05:00:48.718385      21 warnings.go:70] unknown field "alpha"
  W0901 05:00:48.718440      21 warnings.go:70] unknown field "beta"
  W0901 05:00:48.718453      21 warnings.go:70] unknown field "delta"
  W0901 05:00:48.718463      21 warnings.go:70] unknown field "epsilon"
  W0901 05:00:48.718520      21 warnings.go:70] unknown field "gamma"
  I0901 05:00:49.293240 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1793" for this suite. @ 09/01/25 05:00:49.299
• [3.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/01/25 05:00:49.309
  I0901 05:00:49.309783 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 05:00:49.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:49.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:49.329
  I0901 05:00:49.332862 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0901 05:00:49.338615 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0901 05:00:49.344230 21 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0901 05:00:51.354266 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0901 05:00:51.356740 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0901 05:00:51.368755 21 deployment.go:314] Updating deployment test-recreate-deployment
  I0901 05:00:51.368801 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0901 05:00:51.437784 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3663",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e5f161e-42bd-430c-a887-0dbd4d7f1e1b",
      ResourceVersion: (string) (len=5) "16931",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 05:00:51.457585 21 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3663",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e6c4fd9-76cf-4b35-8072-3b1f16edda50",
      ResourceVersion: (string) (len=5) "16929",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0e5f161e-42bd-430c-a887-0dbd4d7f1e1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 65 35 66 31 36  31 65 2d 34 32 62 64 2d  |\"0e5f161e-42bd-|
              00000120  34 33 30 63 2d 61 38 38  37 2d 30 64 62 64 34 64  |430c-a887-0dbd4d|
              00000130  37 66 31 65 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7f1e1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:00:51.458562 21 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0901 05:00:51.458867 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3663",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9a776d4-082a-4d75-ae96-debfac537f21",
      ResourceVersion: (string) (len=5) "16919",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0e5f161e-42bd-430c-a887-0dbd4d7f1e1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 65 35 66 31 36  31 65 2d 34 32 62 64 2d  |\"0e5f161e-42bd-|
              00000120  34 33 30 63 2d 61 38 38  37 2d 30 64 62 64 34 64  |430c-a887-0dbd4d|
              00000130  37 66 31 65 31 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7f1e1b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:00:51.464951 21 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-55r7x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-55r7x",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-3663",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "427ada97-be6e-49dc-a67f-9397d540c56a",
      ResourceVersion: (string) (len=5) "16930",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "1e6c4fd9-76cf-4b35-8072-3b1f16edda50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 65  36 63 34 66 64 39 2d 37  |d\":\"1e6c4fd9-7|
              00000090  36 63 66 2d 34 62 33 35  2d 38 30 37 32 2d 33 62  |6cf-4b35-8072-3b|
              000000a0  31 66 31 36 65 64 64 61  35 30 5c 22 7d 22 3a 7b  |1f16edda50\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g6jqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g6jqh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892299651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892299651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g6jqh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:00:51.472514 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3663" for this suite. @ 09/01/25 05:00:51.481
• [2.183 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/01/25 05:00:51.492
  I0901 05:00:51.493050 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 05:00:51.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:51.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:51.51
  I0901 05:00:51.513063 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  W0901 05:00:51.513990      21 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000cc8690 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0901 05:00:54.050609      21 warnings.go:70] unknown field "alpha"
  W0901 05:00:54.050755      21 warnings.go:70] unknown field "beta"
  W0901 05:00:54.050812      21 warnings.go:70] unknown field "delta"
  W0901 05:00:54.050862      21 warnings.go:70] unknown field "epsilon"
  W0901 05:00:54.050903      21 warnings.go:70] unknown field "gamma"
  I0901 05:00:54.609872 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7240" for this suite. @ 09/01/25 05:00:54.614
• [3.127 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/01/25 05:00:54.621
  I0901 05:00:54.621220 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:00:54.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:54.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:54.637
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 05:00:54.64
  STEP: Saw pod success @ 09/01/25 05:00:58.664
  I0901 05:00:58.671169 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-8c543149-1818-46d0-a00d-aeb40c44528a container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:00:58.684
  I0901 05:00:58.705850 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7422" for this suite. @ 09/01/25 05:00:58.712
• [4.098 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 09/01/25 05:00:58.719
  I0901 05:00:58.719302 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:00:58.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:00:58.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:00:58.736
  STEP: Setting up server cert @ 09/01/25 05:00:58.75
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:00:59.441
  STEP: Deploying the webhook pod @ 09/01/25 05:00:59.45
  STEP: Wait for the deployment to be ready @ 09/01/25 05:00:59.465
  I0901 05:00:59.474422 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:01:01.496
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:01:01.51
  I0901 05:01:02.511560 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0901 05:01:02.523227 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/01/25 05:01:03.05
  STEP: Creating a custom resource that should be denied by the webhook @ 09/01/25 05:01:03.075
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/01/25 05:01:05.099
  STEP: Updating the custom resource with disallowed data should be denied @ 09/01/25 05:01:05.11
  STEP: Deleting the custom resource should be denied @ 09/01/25 05:01:05.125
  STEP: Remove the offending key and value from the custom resource data @ 09/01/25 05:01:05.137
  STEP: Deleting the updated custom resource should be successful @ 09/01/25 05:01:05.148
  I0901 05:01:05.720294 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9708" for this suite. @ 09/01/25 05:01:05.727
  STEP: Destroying namespace "webhook-markers-624" for this suite. @ 09/01/25 05:01:05.737
• [7.026 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/01/25 05:01:05.746
  I0901 05:01:05.746075 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 05:01:05.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:05.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:05.768
  STEP: create the container @ 09/01/25 05:01:05.772
  W0901 05:01:05.780929      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/01/25 05:01:05.781
  STEP: get the container status @ 09/01/25 05:01:08.805
  STEP: the container should be terminated @ 09/01/25 05:01:08.811
  STEP: the termination message should be set @ 09/01/25 05:01:08.811
  I0901 05:01:08.811811 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/01/25 05:01:08.811
  I0901 05:01:08.832628 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4580" for this suite. @ 09/01/25 05:01:08.837
• [3.097 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 09/01/25 05:01:08.843
  I0901 05:01:08.844218 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:01:08.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:08.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:08.859
  I0901 05:01:10.880248 21 delete.go:62] Deleting pod "var-expansion-3b470f7d-6eca-44fa-8fc5-31152b64b893" in namespace "var-expansion-8845"
  I0901 05:01:10.893163 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-3b470f7d-6eca-44fa-8fc5-31152b64b893" to be fully deleted
  I0901 05:01:12.907663 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8845" for this suite. @ 09/01/25 05:01:12.914
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/01/25 05:01:12.927
  I0901 05:01:12.927437 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-webhook @ 09/01/25 05:01:12.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:12.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:12.948
  STEP: Setting up server cert @ 09/01/25 05:01:12.951
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 05:01:13.431
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 05:01:13.438
  STEP: Wait for the deployment to be ready @ 09/01/25 05:01:13.453
  I0901 05:01:13.467440 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:01:15.483
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:01:15.493
  I0901 05:01:16.493648 21 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0901 05:01:16.501544 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Creating a v1 custom resource @ 09/01/25 05:01:19.087
  STEP: Create a v2 custom resource @ 09/01/25 05:01:19.1
  STEP: List CRs in v1 @ 09/01/25 05:01:19.112
  STEP: List CRs in v2 @ 09/01/25 05:01:19.115
  I0901 05:01:19.674135 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2228" for this suite. @ 09/01/25 05:01:19.678
• [6.759 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/01/25 05:01:19.689
  I0901 05:01:19.689390 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 05:01:19.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:19.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:19.715
  STEP: Create a pod template @ 09/01/25 05:01:19.718
  STEP: Replace a pod template @ 09/01/25 05:01:19.723
  I0901 05:01:19.731739 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0901 05:01:19.731993 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4853" for this suite. @ 09/01/25 05:01:19.78
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 09/01/25 05:01:19.789
  I0901 05:01:19.789039 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:01:19.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:19.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:19.807
  STEP: Creating configMap configmap-2450/configmap-test-dde21c3c-43b9-4928-90ff-20f6123b6289 @ 09/01/25 05:01:19.811
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:01:19.815
  STEP: Saw pod success @ 09/01/25 05:01:23.843
  I0901 05:01:23.847703 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-102d8060-5aae-4497-bd45-c5f59b957a75 container env-test: <nil>
  STEP: delete the pod @ 09/01/25 05:01:23.856
  I0901 05:01:23.871786 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2450" for this suite. @ 09/01/25 05:01:23.876
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/01/25 05:01:23.884
  I0901 05:01:23.884587 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename init-container @ 09/01/25 05:01:23.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:23.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:23.902
  STEP: creating the pod @ 09/01/25 05:01:23.906
  I0901 05:01:23.906785 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0901 05:01:27.179404 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8934" for this suite. @ 09/01/25 05:01:27.184
• [3.306 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/01/25 05:01:27.191
  I0901 05:01:27.191432 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:01:27.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:27.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:27.203
  STEP: Creating configMap with name configmap-test-volume-e7c6cc73-b807-47df-8423-37869be132a2 @ 09/01/25 05:01:27.206
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:01:27.21
  STEP: Saw pod success @ 09/01/25 05:01:31.234
  I0901 05:01:31.238917 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-d4e67e6c-0ce6-44e1-a603-7633069cf47d container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:01:31.248
  I0901 05:01:31.270916 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7322" for this suite. @ 09/01/25 05:01:31.276
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/01/25 05:01:31.284
  I0901 05:01:31.284273 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 05:01:31.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:31.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:31.314
  I0901 05:01:31.326956 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 05:01:31.874145 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9242" for this suite. @ 09/01/25 05:01:31.879
• [0.602 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/01/25 05:01:31.886
  I0901 05:01:31.886289 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename watch @ 09/01/25 05:01:31.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:31.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:31.9
  STEP: creating a watch on configmaps with a certain label @ 09/01/25 05:01:31.904
  STEP: creating a new configmap @ 09/01/25 05:01:31.909
  STEP: modifying the configmap once @ 09/01/25 05:01:31.916
  STEP: changing the label value of the configmap @ 09/01/25 05:01:31.925
  STEP: Expecting to observe a delete notification for the watched object @ 09/01/25 05:01:31.933
  I0901 05:01:31.933768 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-546  c2e1bd13-1bc5-423c-a918-72e7c8192676 17326 0 2025-09-01 05:01:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 05:01:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:01:31.934006 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-546  c2e1bd13-1bc5-423c-a918-72e7c8192676 17327 0 2025-09-01 05:01:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 05:01:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:01:31.934175 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-546  c2e1bd13-1bc5-423c-a918-72e7c8192676 17328 0 2025-09-01 05:01:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 05:01:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/01/25 05:01:31.934
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/01/25 05:01:31.942
  STEP: changing the label value of the configmap back @ 09/01/25 05:01:41.943
  STEP: modifying the configmap a third time @ 09/01/25 05:01:41.959
  STEP: deleting the configmap @ 09/01/25 05:01:41.976
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/01/25 05:01:41.985
  I0901 05:01:41.985892 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-546  c2e1bd13-1bc5-423c-a918-72e7c8192676 17372 0 2025-09-01 05:01:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 05:01:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:01:41.986437 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-546  c2e1bd13-1bc5-423c-a918-72e7c8192676 17374 0 2025-09-01 05:01:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 05:01:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:01:41.986880 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-546  c2e1bd13-1bc5-423c-a918-72e7c8192676 17375 0 2025-09-01 05:01:31 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-01 05:01:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:01:41.987344 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-546" for this suite. @ 09/01/25 05:01:41.993
• [10.118 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 09/01/25 05:01:42.006
  I0901 05:01:42.006983 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:01:42.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:42.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:42.032
  STEP: Setting up server cert @ 09/01/25 05:01:42.052
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:01:42.524
  STEP: Deploying the webhook pod @ 09/01/25 05:01:42.533
  STEP: Wait for the deployment to be ready @ 09/01/25 05:01:42.55
  I0901 05:01:42.558378 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:01:44.576
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:01:44.59
  I0901 05:01:45.590826 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/01/25 05:01:45.603
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/01/25 05:01:45.64
  STEP: Creating a configMap that should not be mutated @ 09/01/25 05:01:45.649
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/01/25 05:01:45.663
  STEP: Creating a configMap that should be mutated @ 09/01/25 05:01:45.671
  I0901 05:01:45.758083 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2657" for this suite. @ 09/01/25 05:01:45.763
  STEP: Destroying namespace "webhook-markers-1910" for this suite. @ 09/01/25 05:01:45.769
• [3.768 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/01/25 05:01:45.775
  I0901 05:01:45.775225 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 05:01:45.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:01:45.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:01:45.793
  STEP: Creating a suspended cronjob @ 09/01/25 05:01:45.795
  STEP: Ensuring no jobs are scheduled @ 09/01/25 05:01:45.801
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/01/25 05:06:45.801
  STEP: Removing cronjob @ 09/01/25 05:06:45.808
  I0901 05:06:45.819602 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8927" for this suite. @ 09/01/25 05:06:45.823
• [300.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 09/01/25 05:06:45.829
  I0901 05:06:45.829714 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:06:45.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:06:45.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:06:45.846
  STEP: set up a multi version CRD @ 09/01/25 05:06:45.849
  I0901 05:06:45.849998 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: rename a version @ 09/01/25 05:06:49.431
  STEP: check the new version name is served @ 09/01/25 05:06:49.449
  STEP: check the old version name is removed @ 09/01/25 05:06:50.365
  STEP: check the other version is not changed @ 09/01/25 05:06:51.026
  I0901 05:06:53.700414 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8218" for this suite. @ 09/01/25 05:06:53.714
• [7.894 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/01/25 05:06:53.727
  I0901 05:06:53.727984 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:06:53.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:06:53.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:06:53.745
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:06:53.748
  STEP: Saw pod success @ 09/01/25 05:06:57.773
  I0901 05:06:57.779264 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-8bc2d92e-3977-418e-ab90-510b076bdcd8 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:06:57.797
  I0901 05:06:57.815363 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7487" for this suite. @ 09/01/25 05:06:57.82
• [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 09/01/25 05:06:57.826
  I0901 05:06:57.826715 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:06:57.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:06:57.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:06:57.838
  STEP: Creating a pod to test substitution in container's command @ 09/01/25 05:06:57.841
  STEP: Saw pod success @ 09/01/25 05:07:01.863
  I0901 05:07:01.868740 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod var-expansion-9eb56d60-24e1-42da-9569-c4877c714e14 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:07:01.88
  I0901 05:07:01.901333 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6431" for this suite. @ 09/01/25 05:07:01.907
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/01/25 05:07:01.915
  I0901 05:07:01.915952 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:07:01.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:07:01.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:07:01.936
  STEP: Creating secret with name s-test-opt-del-ad745b29-298a-4507-ab72-13631ea9fbbb @ 09/01/25 05:07:02.009
  STEP: Creating secret with name s-test-opt-upd-b9ca6c65-908c-488f-b7b9-016ff1083e3a @ 09/01/25 05:07:02.015
  STEP: Creating the pod @ 09/01/25 05:07:02.021
  STEP: Deleting secret s-test-opt-del-ad745b29-298a-4507-ab72-13631ea9fbbb @ 09/01/25 05:07:04.084
  STEP: Updating secret s-test-opt-upd-b9ca6c65-908c-488f-b7b9-016ff1083e3a @ 09/01/25 05:07:04.094
  STEP: Creating secret with name s-test-opt-create-8e6983b6-6287-4862-9a57-b5a56d795591 @ 09/01/25 05:07:04.101
  STEP: waiting to observe update in volume @ 09/01/25 05:07:04.108
  I0901 05:08:14.628148 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4681" for this suite. @ 09/01/25 05:08:14.634
• [72.727 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/01/25 05:08:14.645
  I0901 05:08:14.645265 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 05:08:14.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:08:14.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:08:14.678
  I0901 05:08:14.699119 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0901 05:08:19.707072 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 05:08:19.707
  STEP: Scaling up "test-rs" replicaset @ 09/01/25 05:08:19.707
  I0901 05:08:19.715742 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/01/25 05:08:19.715
  I0901 05:08:19.728106 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8492 with ReadyReplicas 1, AvailableReplicas 1
  I0901 05:08:19.741923 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8492 with ReadyReplicas 1, AvailableReplicas 1
  I0901 05:08:19.761551 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8492 with ReadyReplicas 1, AvailableReplicas 1
  I0901 05:08:19.771697 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8492 with ReadyReplicas 1, AvailableReplicas 1
  I0901 05:08:21.231831 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8492 with ReadyReplicas 2, AvailableReplicas 2
  I0901 05:08:21.819107 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-8492 with ReadyReplicas 3 found true
  I0901 05:08:21.819254 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8492" for this suite. @ 09/01/25 05:08:21.823
• [7.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 09/01/25 05:08:21.829
  I0901 05:08:21.829135 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:08:21.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:08:21.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:08:21.841
  STEP: creating a replication controller @ 09/01/25 05:08:21.844
  I0901 05:08:21.845005 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 create -f -'
  I0901 05:08:22.019733 21 builder.go:146] stderr: ""
  I0901 05:08:22.019782 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/01/25 05:08:22.019
  I0901 05:08:22.019887 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 05:08:22.117312 21 builder.go:146] stderr: ""
  I0901 05:08:22.117360 21 builder.go:147] stdout: "update-demo-nautilus-56bbp update-demo-nautilus-htx92 "
  I0901 05:08:22.117489 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods update-demo-nautilus-56bbp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 05:08:22.208348 21 builder.go:146] stderr: ""
  I0901 05:08:22.208398 21 builder.go:147] stdout: ""
  I0901 05:08:22.208416 21 kubectl.go:2509] update-demo-nautilus-56bbp is created but not running
  I0901 05:08:27.209404 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0901 05:08:27.309450 21 builder.go:146] stderr: ""
  I0901 05:08:27.309516 21 builder.go:147] stdout: "update-demo-nautilus-56bbp update-demo-nautilus-htx92 "
  I0901 05:08:27.309573 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods update-demo-nautilus-56bbp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 05:08:27.394920 21 builder.go:146] stderr: ""
  I0901 05:08:27.394967 21 builder.go:147] stdout: "true"
  I0901 05:08:27.395019 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods update-demo-nautilus-56bbp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 05:08:27.475958 21 builder.go:146] stderr: ""
  I0901 05:08:27.476010 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 05:08:27.476027 21 kubectl.go:2400] validating pod update-demo-nautilus-56bbp
  I0901 05:08:27.489979 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 05:08:27.490047 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 05:08:27.490065 21 kubectl.go:2527] update-demo-nautilus-56bbp is verified up and running
  I0901 05:08:27.490425 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods update-demo-nautilus-htx92 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0901 05:08:27.573198 21 builder.go:146] stderr: ""
  I0901 05:08:27.573247 21 builder.go:147] stdout: "true"
  I0901 05:08:27.573439 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods update-demo-nautilus-htx92 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0901 05:08:27.661494 21 builder.go:146] stderr: ""
  I0901 05:08:27.661543 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0901 05:08:27.661560 21 kubectl.go:2400] validating pod update-demo-nautilus-htx92
  I0901 05:08:27.673317 21 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0901 05:08:27.673399 21 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0901 05:08:27.673416 21 kubectl.go:2527] update-demo-nautilus-htx92 is verified up and running
  STEP: using delete to clean up resources @ 09/01/25 05:08:27.673
  I0901 05:08:27.673565 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 delete --grace-period=0 --force -f -'
  I0901 05:08:27.766232 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:08:27.766481 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0901 05:08:27.766572 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get rc,svc -l name=update-demo --no-headers'
  I0901 05:08:27.884281 21 builder.go:146] stderr: "No resources found in kubectl-9061 namespace.\n"
  I0901 05:08:27.884337 21 builder.go:147] stdout: ""
  I0901 05:08:27.884394 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9061 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0901 05:08:27.968650 21 builder.go:146] stderr: ""
  I0901 05:08:27.968699 21 builder.go:147] stdout: ""
  I0901 05:08:27.968820 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9061" for this suite. @ 09/01/25 05:08:27.974
• [6.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/01/25 05:08:27.984
  I0901 05:08:27.984219 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 05:08:27.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:08:27.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:08:28.003
  STEP: getting /apis @ 09/01/25 05:08:28.007
  STEP: getting /apis/discovery.k8s.io @ 09/01/25 05:08:28.011
  STEP: getting /apis/discovery.k8s.iov1 @ 09/01/25 05:08:28.012
  STEP: creating @ 09/01/25 05:08:28.015
  STEP: getting @ 09/01/25 05:08:28.029
  STEP: listing @ 09/01/25 05:08:28.033
  STEP: watching @ 09/01/25 05:08:28.037
  I0901 05:08:28.037927 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/01/25 05:08:28.039
  STEP: cluster-wide watching @ 09/01/25 05:08:28.042
  I0901 05:08:28.042598 21 endpointslice.go:459] starting watch
  STEP: patching @ 09/01/25 05:08:28.043
  STEP: updating @ 09/01/25 05:08:28.048
  I0901 05:08:28.057553 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0901 05:08:28.057692 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/01/25 05:08:28.057
  STEP: deleting a collection @ 09/01/25 05:08:28.068
  I0901 05:08:28.168882 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7826" for this suite. @ 09/01/25 05:08:28.174
• [0.202 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 09/01/25 05:08:28.186
  I0901 05:08:28.186957 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:08:28.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:08:28.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:08:28.212
  STEP: Creating resourceQuota "e2e-rq-status-x8frt" @ 09/01/25 05:08:28.219
  I0901 05:08:28.230558 21 resource_quota.go:1102] Resource quota "e2e-rq-status-x8frt" reports spec: hard cpu limit of 500m
  I0901 05:08:28.230808 21 resource_quota.go:1104] Resource quota "e2e-rq-status-x8frt" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-x8frt" /status @ 09/01/25 05:08:28.23
  STEP: Confirm /status for "e2e-rq-status-x8frt" resourceQuota via watch @ 09/01/25 05:08:28.24
  I0901 05:08:28.241764 21 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-x8frt" in namespace "resourcequota-6683" with hard status: v1.ResourceList(nil)
  I0901 05:08:28.242023 21 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-x8frt" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 05:08:28.242121 21 resource_quota.go:1141] ResourceQuota "e2e-rq-status-x8frt" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/01/25 05:08:28.245
  I0901 05:08:28.250989 21 resource_quota.go:1152] Resource quota "e2e-rq-status-x8frt" reports spec: hard cpu limit of 1
  I0901 05:08:28.251094 21 resource_quota.go:1153] Resource quota "e2e-rq-status-x8frt" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-x8frt" /status @ 09/01/25 05:08:28.251
  STEP: Confirm /status for "e2e-rq-status-x8frt" resourceQuota via watch @ 09/01/25 05:08:28.255
  I0901 05:08:28.256726 21 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-x8frt" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0901 05:08:28.256804 21 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-x8frt" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0901 05:08:28.256830 21 resource_quota.go:1185] ResourceQuota "e2e-rq-status-x8frt" /status was patched
  STEP: Get "e2e-rq-status-x8frt" /status @ 09/01/25 05:08:28.256
  I0901 05:08:28.259830 21 resource_quota.go:1196] Resourcequota "e2e-rq-status-x8frt" reports status: hard cpu of 1
  I0901 05:08:28.259873 21 resource_quota.go:1198] Resourcequota "e2e-rq-status-x8frt" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-x8frt" /status before checking Spec is unchanged @ 09/01/25 05:08:28.262
  I0901 05:08:28.266678 21 resource_quota.go:1218] Resourcequota "e2e-rq-status-x8frt" reports status: hard cpu of 2
  I0901 05:08:28.266798 21 resource_quota.go:1220] Resourcequota "e2e-rq-status-x8frt" reports status: hard memory of 2Gi
  I0901 05:08:28.268025 21 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-x8frt" in namespace "resourcequota-6683" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0901 05:08:28.270989 21 resource_quota.go:1263] ResourceQuota "e2e-rq-status-x8frt" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x8frt", GenerateName:"", Namespace:"resourcequota-6683", SelfLink:"", UID:"276eeba4-62d5-4d54-b743-c975a1950d7f", ResourceVersion:"18307", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 5, 8, 28, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x8frt"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 5, 8, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00490edf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 5, 8, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00490ee40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 5, 8, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00490ee70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I0901 05:08:33.274379 21 resource_quota.go:1260] ResourceQuota "e2e-rq-status-x8frt" Spec was unchanged and /status reset
  I0901 05:08:33.274594 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6683" for this suite. @ 09/01/25 05:08:33.278
• [5.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 09/01/25 05:08:33.284
  I0901 05:08:33.284796 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 05:08:33.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:08:33.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:08:33.299
  I0901 05:08:33.319051 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 05:09:33.324402 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 05:09:33.328
  STEP: Adding a custom resource @ 09/01/25 05:09:33.328
  I0901 05:09:33.346307 21 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0901 05:09:33.353225 21 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 05:09:33.354
  I0901 05:09:33.375393 21 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 05:09:33.381440 21 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 05:09:33.381
  I0901 05:09:33.408560 21 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 05:09:33.418715 21 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 05:09:33.418
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/01/25 05:09:35.458
  STEP: Removing a custom resource @ 09/01/25 05:09:39.541
  STEP: Removing a custom resource @ 09/01/25 05:09:39.554
  STEP: Removing a custom resource @ 09/01/25 05:09:39.566
  I0901 05:09:39.576521 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2397" for this suite. @ 09/01/25 05:09:39.58
• [66.301 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 09/01/25 05:09:39.585
  I0901 05:09:39.585564 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 05:09:39.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:09:39.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:09:39.597
  I0901 05:09:39.609306 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 05:10:39.617748 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/01/25 05:10:39.621
  STEP: Adding a custom resource @ 09/01/25 05:10:39.622
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/01/25 05:10:39.635
  I0901 05:10:39.645018 21 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/01/25 05:10:39.645
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/01/25 05:10:41.656
  I0901 05:10:41.662966 21 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/01/25 05:10:41.664
  STEP: Verifying the pod has the pod disruption condition @ 09/01/25 05:10:43.676
  I0901 05:10:43.682888 21 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0901 05:10:44.201151 21 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/01/25 05:10:44.217
  STEP: Removing a custom resource @ 09/01/25 05:10:44.231
  STEP: Removing a custom resource @ 09/01/25 05:10:44.244
  I0901 05:10:44.253475 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1403" for this suite. @ 09/01/25 05:10:44.257
• [64.677 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 09/01/25 05:10:44.263
  I0901 05:10:44.263027 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:10:44.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:10:44.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:10:44.278
  I0901 05:10:46.297041 21 delete.go:62] Deleting pod "var-expansion-b48c1504-a95c-4782-915c-7c44a9a35426" in namespace "var-expansion-2196"
  I0901 05:10:46.308576 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-b48c1504-a95c-4782-915c-7c44a9a35426" to be fully deleted
  I0901 05:10:48.319706 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2196" for this suite. @ 09/01/25 05:10:48.325
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/01/25 05:10:48.335
  I0901 05:10:48.335292 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:10:48.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:10:48.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:10:48.356
  STEP: Creating configMap with name configmap-test-volume-map-c0479495-1ff7-486e-9556-ba65ba1b6bd1 @ 09/01/25 05:10:48.36
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:10:48.365
  STEP: Saw pod success @ 09/01/25 05:10:52.393
  I0901 05:10:52.398600 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-30900576-74d0-4859-a691-fbd19bd94779 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:10:52.427
  I0901 05:10:52.450752 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8338" for this suite. @ 09/01/25 05:10:52.457
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/01/25 05:10:52.466
  I0901 05:10:52.466594 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:10:52.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:10:52.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:10:52.487
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/01/25 05:10:52.49
  STEP: Saw pod success @ 09/01/25 05:10:56.519
  I0901 05:10:56.523889 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-8ad81121-a3f4-409d-8d88-61437c04bd00 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:10:56.532
  I0901 05:10:56.549741 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6169" for this suite. @ 09/01/25 05:10:56.555
• [4.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/01/25 05:10:56.563
  I0901 05:10:56.563716 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename subpath @ 09/01/25 05:10:56.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:10:56.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:10:56.58
  STEP: Setting up data @ 09/01/25 05:10:56.585
  STEP: Creating pod pod-subpath-test-downwardapi-b9vr @ 09/01/25 05:10:56.6
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 05:10:56.6
  STEP: Saw pod success @ 09/01/25 05:11:20.706
  I0901 05:11:20.710289 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-subpath-test-downwardapi-b9vr container test-container-subpath-downwardapi-b9vr: <nil>
  STEP: delete the pod @ 09/01/25 05:11:20.718
  STEP: Deleting pod pod-subpath-test-downwardapi-b9vr @ 09/01/25 05:11:20.733
  I0901 05:11:20.733345 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-b9vr" in namespace "subpath-4731"
  I0901 05:11:20.737030 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4731" for this suite. @ 09/01/25 05:11:20.741
• [24.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/01/25 05:11:20.75
  I0901 05:11:20.750533 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 05:11:20.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:20.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:20.766
  STEP: Creating replication controller my-hostname-basic-cacd11cb-4c63-4215-a42b-a9249a08b4f9 @ 09/01/25 05:11:20.769
  I0901 05:11:20.779756 21 resource.go:87] Pod name my-hostname-basic-cacd11cb-4c63-4215-a42b-a9249a08b4f9: Found 0 pods out of 1
  I0901 05:11:25.783204 21 resource.go:87] Pod name my-hostname-basic-cacd11cb-4c63-4215-a42b-a9249a08b4f9: Found 1 pods out of 1
  I0901 05:11:25.783244 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-cacd11cb-4c63-4215-a42b-a9249a08b4f9" are running
  I0901 05:11:25.787676 21 rc.go:523] Pod "my-hostname-basic-cacd11cb-4c63-4215-a42b-a9249a08b4f9-gz2jp" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:11:21 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:11:20 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:11:21 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:11:21 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:11:20 +0000 UTC Reason: Message:}])
  I0901 05:11:25.787717 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 05:11:25.787
  I0901 05:11:25.816156 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4214" for this suite. @ 09/01/25 05:11:25.82
• [5.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 09/01/25 05:11:25.826
  I0901 05:11:25.827209 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:11:25.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:25.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:25.846
  STEP: creating service in namespace services-5232 @ 09/01/25 05:11:25.851
  STEP: creating service affinity-nodeport in namespace services-5232 @ 09/01/25 05:11:25.851
  STEP: creating replication controller affinity-nodeport in namespace services-5232 @ 09/01/25 05:11:25.866
  I0901 05:11:25.871682      21 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-5232, replica count: 3
  I0901 05:11:28.922949      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 05:11:31.924730      21 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 05:11:31.943353 21 resource.go:361] Creating new exec pod
  I0901 05:11:34.972407 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5232 exec execpod-affinityhmzkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0901 05:11:35.155222 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.43.31.47) 80 port [tcp/http] succeeded!\n"
  I0901 05:11:35.155279 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:11:35.155358 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5232 exec execpod-affinityhmzkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.31.47 80'
  I0901 05:11:35.374451 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.31.47 80\n+ echo hostName\nConnection to 10.43.31.47 80 port [tcp/http] succeeded!\n"
  I0901 05:11:35.374510 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:11:35.374678 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5232 exec execpod-affinityhmzkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.9 32660'
  I0901 05:11:35.566104 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.9 32660\nConnection to 192.168.1.9 32660 port [tcp/*] succeeded!\n"
  I0901 05:11:35.566160 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:11:35.566263 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5232 exec execpod-affinityhmzkf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 32660'
  I0901 05:11:35.763348 21 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.10 32660\n+ echo hostName\nConnection to 192.168.1.10 32660 port [tcp/*] succeeded!\n"
  I0901 05:11:35.763404 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:11:35.763693 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5232 exec execpod-affinityhmzkf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.1.10:32660/ ; done'
  I0901 05:11:36.131629 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32660/\n"
  I0901 05:11:36.131691 21 builder.go:147] stdout: "\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s\naffinity-nodeport-9428s"
  I0901 05:11:36.131713 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131728 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131863 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131877 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131891 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131945 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131957 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.131969 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132021 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132033 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132045 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132137 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132149 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132160 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132242 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132256 21 service.go:242] Received response from host: affinity-nodeport-9428s
  I0901 05:11:36.132425 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5232, will wait for the garbage collector to delete the pods @ 09/01/25 05:11:36.144
  I0901 05:11:36.206952 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 6.665472ms
  I0901 05:11:36.307663 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.707301ms
  I0901 05:11:39.335764 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5232" for this suite. @ 09/01/25 05:11:39.342
• [13.525 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 09/01/25 05:11:39.353
  I0901 05:11:39.353135 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:11:39.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:39.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:39.38
  I0901 05:11:39.384490 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 05:11:40.689
  I0901 05:11:40.690421 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-4774 --namespace=crd-publish-openapi-4774 create -f -'
  I0901 05:11:42.809480 21 builder.go:146] stderr: ""
  I0901 05:11:42.809534 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 05:11:42.809592 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-4774 --namespace=crd-publish-openapi-4774 delete e2e-test-crd-publish-openapi-408-crds test-cr'
  I0901 05:11:42.889918 21 builder.go:146] stderr: ""
  I0901 05:11:42.889990 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0901 05:11:42.890040 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-4774 --namespace=crd-publish-openapi-4774 apply -f -'
  I0901 05:11:43.041438 21 builder.go:146] stderr: ""
  I0901 05:11:43.041516 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0901 05:11:43.042081 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-4774 --namespace=crd-publish-openapi-4774 delete e2e-test-crd-publish-openapi-408-crds test-cr'
  I0901 05:11:43.136668 21 builder.go:146] stderr: ""
  I0901 05:11:43.136750 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-408-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/01/25 05:11:43.136
  I0901 05:11:43.136876 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-4774 explain e2e-test-crd-publish-openapi-408-crds'
  I0901 05:11:43.220919 21 builder.go:146] stderr: ""
  I0901 05:11:43.220969 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-408-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0901 05:11:44.551688 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4774" for this suite. @ 09/01/25 05:11:44.56
• [5.213 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 09/01/25 05:11:44.567
  I0901 05:11:44.567636 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:11:44.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:44.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:44.585
  STEP: Creating a pod to test substitution in container's args @ 09/01/25 05:11:44.591
  STEP: Saw pod success @ 09/01/25 05:11:48.624
  I0901 05:11:48.630873 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod var-expansion-51b677e8-0d80-48dc-80f8-b09d2716aad2 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:11:48.643
  I0901 05:11:48.662974 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3127" for this suite. @ 09/01/25 05:11:48.67
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/01/25 05:11:48.68
  I0901 05:11:48.680877 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:11:48.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:48.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:48.696
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:11:48.7
  STEP: Saw pod success @ 09/01/25 05:11:52.724
  I0901 05:11:52.730402 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-e119ccf3-3b66-4e32-bc3f-a4d16ac7afa4 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:11:52.743
  I0901 05:11:52.764630 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7816" for this suite. @ 09/01/25 05:11:52.771
• [4.099 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/01/25 05:11:52.78
  I0901 05:11:52.780098 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:11:52.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:52.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:52.801
  I0901 05:11:52.831511 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7166" for this suite. @ 09/01/25 05:11:52.872
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/01/25 05:11:52.882
  I0901 05:11:52.883039 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 05:11:52.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:11:52.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:11:52.906
  STEP: Performing setup for networking test in namespace pod-network-test-794 @ 09/01/25 05:11:52.91
  STEP: creating a selector @ 09/01/25 05:11:52.911
  STEP: Creating the service pods in kubernetes @ 09/01/25 05:11:52.911
  I0901 05:11:52.911531 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 05:12:07.087
  I0901 05:12:09.111924 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 05:12:09.112108 21 networking.go:42] Breadth first check of 10.42.2.69 on host 192.168.1.10...
  I0901 05:12:09.117048 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.188:9080/dial?request=hostname&protocol=http&host=10.42.2.69&port=8083&tries=1'] Namespace:pod-network-test-794 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:12:09.117109 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:12:09.117197 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-794/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.69%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 05:12:09.242450 21 utils.go:356] Waiting for responses: map[]
  I0901 05:12:09.242497 21 utils.go:360] reached 10.42.2.69 after 0/1 tries
  I0901 05:12:09.242513 21 networking.go:42] Breadth first check of 10.42.0.52 on host 192.168.1.8...
  I0901 05:12:09.247043 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.188:9080/dial?request=hostname&protocol=http&host=10.42.0.52&port=8083&tries=1'] Namespace:pod-network-test-794 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:12:09.247079 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:12:09.247157 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-794/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.52%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 05:12:09.358686 21 utils.go:356] Waiting for responses: map[]
  I0901 05:12:09.358735 21 utils.go:360] reached 10.42.0.52 after 0/1 tries
  I0901 05:12:09.358751 21 networking.go:42] Breadth first check of 10.42.1.187 on host 192.168.1.9...
  I0901 05:12:09.365051 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.188:9080/dial?request=hostname&protocol=http&host=10.42.1.187&port=8083&tries=1'] Namespace:pod-network-test-794 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:12:09.365091 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:12:09.365152 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-794/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.188%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.187%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 05:12:09.495468 21 utils.go:356] Waiting for responses: map[]
  I0901 05:12:09.495958 21 utils.go:360] reached 10.42.1.187 after 0/1 tries
  I0901 05:12:09.496170 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 05:12:09.496638 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-794" for this suite. @ 09/01/25 05:12:09.503
• [16.632 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 09/01/25 05:12:09.515
  I0901 05:12:09.515040 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:12:09.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:12:09.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:12:09.533
  I0901 05:12:09.539322 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8969" for this suite. @ 09/01/25 05:12:09.604
• [0.099 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/01/25 05:12:09.614
  I0901 05:12:09.614981 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename taint-single-pod @ 09/01/25 05:12:09.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:12:09.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:12:09.637
  I0901 05:12:09.642186 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 05:13:09.643099 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 05:13:09.651524 21 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/01/25 05:13:09.651
  I0901 05:13:09.868552 21 taints.go:294] Pod is running on k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 05:13:09.868
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 05:13:09.885
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/01/25 05:13:09.898
  I0901 05:13:09.898685 21 taints.go:313] Pod wasn't evicted. Proceeding
  I0901 05:13:09.898703 21 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 05:13:09.917
  STEP: Waiting some time to make sure that toleration time passed. @ 09/01/25 05:13:09.935
  I0901 05:14:24.939196 21 taints.go:329] Pod wasn't evicted. Test successful
  I0901 05:14:24.939885 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4712" for this suite. @ 09/01/25 05:14:24.945
• [135.340 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/01/25 05:14:24.955
  I0901 05:14:24.955597 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename init-container @ 09/01/25 05:14:24.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:14:24.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:14:24.975
  STEP: creating the pod @ 09/01/25 05:14:24.979
  I0901 05:14:24.979494 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0901 05:14:29.402045 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3944" for this suite. @ 09/01/25 05:14:29.408
• [4.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/01/25 05:14:29.42
  I0901 05:14:29.420658 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/01/25 05:14:29.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:14:29.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:14:29.44
  I0901 05:14:29.443917 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 05:15:29.444626 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 05:15:29.449036 21 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/01/25 05:15:29.449
  I0901 05:15:29.665604 21 taints.go:463] Pod1 is running on k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae. Tainting Node
  I0901 05:15:31.895470 21 taints.go:471] Pod2 is running on k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/01/25 05:15:31.895
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 05:15:31.908
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/01/25 05:15:31.915
  I0901 05:15:37.414791 21 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0901 05:15:57.461522 21 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/01/25 05:15:57.481
  I0901 05:15:57.490650 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4608" for this suite. @ 09/01/25 05:15:57.494
• [88.082 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/01/25 05:15:57.501
  I0901 05:15:57.501910 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:15:57.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:15:57.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:15:57.607
  STEP: Creating secret with name secret-test-map-6891733b-995a-4e6d-9e5c-29893600723a @ 09/01/25 05:15:57.628
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:15:57.652
  STEP: Saw pod success @ 09/01/25 05:15:59.675
  I0901 05:15:59.681521 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-65c5e9cd-086b-488e-8bea-e0c9b49fca5c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:15:59.706
  I0901 05:15:59.718703 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2417" for this suite. @ 09/01/25 05:15:59.809
• [2.315 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 09/01/25 05:15:59.817
  I0901 05:15:59.817311 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename security-context @ 09/01/25 05:15:59.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:15:59.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:15:59.836
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 05:15:59.841
  STEP: Saw pod success @ 09/01/25 05:16:01.863
  I0901 05:16:01.869126 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod security-context-ef9da7e3-2480-47dd-a952-20633cdcd656 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:16:01.88
  I0901 05:16:01.901498 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9936" for this suite. @ 09/01/25 05:16:01.906
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/01/25 05:16:01.917
  I0901 05:16:01.917243 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:16:01.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:01.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:01.934
  STEP: Creating a pod to test downward api env vars @ 09/01/25 05:16:01.937
  STEP: Saw pod success @ 09/01/25 05:16:05.959
  I0901 05:16:05.964610 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downward-api-cdb13d96-7d10-4b42-ae52-13dae01a2ea0 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:16:05.977
  I0901 05:16:05.996975 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3031" for this suite. @ 09/01/25 05:16:06.002
• [4.090 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/01/25 05:16:06.007
  I0901 05:16:06.007411 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 05:16:06.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:06.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:06.029
  I0901 05:16:06.032904 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-a4936f2c-0523-44b0-b105-6c252d039856
  I0901 05:16:06.046848 21 resource.go:87] Pod name my-hostname-basic-a4936f2c-0523-44b0-b105-6c252d039856: Found 0 pods out of 1
  I0901 05:16:11.052297 21 resource.go:87] Pod name my-hostname-basic-a4936f2c-0523-44b0-b105-6c252d039856: Found 1 pods out of 1
  I0901 05:16:11.052344 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-a4936f2c-0523-44b0-b105-6c252d039856" is running
  I0901 05:16:11.056088 21 replica_set.go:220] Pod "my-hostname-basic-a4936f2c-0523-44b0-b105-6c252d039856-mglpp" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:16:07 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:16:06 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:16:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:16:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-01 05:16:06 +0000 UTC Reason: Message:}])
  I0901 05:16:11.056195 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/01/25 05:16:11.056
  I0901 05:16:11.070460 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1211" for this suite. @ 09/01/25 05:16:11.073
• [5.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/01/25 05:16:11.081
  I0901 05:16:11.081585 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 05:16:11.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:11.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:11.102
  STEP: Create VolumeAttachment "va-e2e-wk5x5" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl" @ 09/01/25 05:16:11.175
  STEP: Get VolumeAttachment "va-e2e-wk5x5" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl" @ 09/01/25 05:16:11.184
  STEP: Patch VolumeAttachment "va-e2e-wk5x5" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl" @ 09/01/25 05:16:11.189
  STEP: List VolumeAttachments with "va-e2e-wk5x5=patched" label @ 09/01/25 05:16:11.196
  STEP: Delete VolumeAttachment "va-e2e-wk5x5" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl" @ 09/01/25 05:16:11.201
  STEP: Confirm deletion of VolumeAttachment "va-e2e-wk5x5" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl" @ 09/01/25 05:16:11.209
  STEP: Create VolumeAttachment "va-e2e-fxdln" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv" @ 09/01/25 05:16:11.275
  STEP: Update the VolumeAttachment "va-e2e-fxdln" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv" with label "va-e2e=updated" @ 09/01/25 05:16:11.283
  STEP: Create VolumeAttachment "va-e2e-9t5t6" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv" @ 09/01/25 05:16:11.376
  STEP: Update the VolumeAttachment "va-e2e-9t5t6" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv" with label "va-e2e=updated" @ 09/01/25 05:16:11.387
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 05:16:11.4
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/01/25 05:16:11.416
  I0901 05:16:11.420261 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2794" for this suite. @ 09/01/25 05:16:11.476
• [0.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 09/01/25 05:16:11.489
  I0901 05:16:11.489606 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 05:16:11.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:11.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:11.511
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 05:16:11.576
  STEP: create the pod with lifecycle hook @ 09/01/25 05:16:13.599
  STEP: check poststart hook @ 09/01/25 05:16:15.62
  STEP: delete the pod with lifecycle hook @ 09/01/25 05:16:15.636
  I0901 05:16:17.652598 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6283" for this suite. @ 09/01/25 05:16:17.659
• [6.175 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/01/25 05:16:17.665
  I0901 05:16:17.665365 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:16:17.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:17.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:17.68
  STEP: Creating configMap with name projected-configmap-test-volume-00aca03a-8d00-4c82-926a-9818ba5cb4df @ 09/01/25 05:16:17.683
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:16:17.688
  STEP: Saw pod success @ 09/01/25 05:16:21.713
  I0901 05:16:21.716734 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-398ef580-d800-47e5-97ee-920de5b5cf97 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:16:21.725
  I0901 05:16:21.739658 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-707" for this suite. @ 09/01/25 05:16:21.744
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/01/25 05:16:21.752
  I0901 05:16:21.752523 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 05:16:21.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:21.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:21.767
  STEP: Performing setup for networking test in namespace pod-network-test-7917 @ 09/01/25 05:16:21.77
  STEP: creating a selector @ 09/01/25 05:16:21.77
  STEP: Creating the service pods in kubernetes @ 09/01/25 05:16:21.77
  I0901 05:16:21.770468 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 05:16:36.001
  I0901 05:16:38.027313 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 05:16:38.027385 21 networking.go:42] Breadth first check of 10.42.2.72 on host 192.168.1.10...
  I0901 05:16:38.031263 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.199:9080/dial?request=hostname&protocol=udp&host=10.42.2.72&port=8081&tries=1'] Namespace:pod-network-test-7917 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:16:38.031331 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:16:38.031429 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7917/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.72%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 05:16:38.161769 21 utils.go:356] Waiting for responses: map[]
  I0901 05:16:38.162333 21 utils.go:360] reached 10.42.2.72 after 0/1 tries
  I0901 05:16:38.162651 21 networking.go:42] Breadth first check of 10.42.0.53 on host 192.168.1.8...
  I0901 05:16:38.167441 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.199:9080/dial?request=hostname&protocol=udp&host=10.42.0.53&port=8081&tries=1'] Namespace:pod-network-test-7917 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:16:38.167502 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:16:38.167689 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7917/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.53%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 05:16:38.291660 21 utils.go:356] Waiting for responses: map[]
  I0901 05:16:38.292215 21 utils.go:360] reached 10.42.0.53 after 0/1 tries
  I0901 05:16:38.292307 21 networking.go:42] Breadth first check of 10.42.1.198 on host 192.168.1.9...
  I0901 05:16:38.297272 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.199:9080/dial?request=hostname&protocol=udp&host=10.42.1.198&port=8081&tries=1'] Namespace:pod-network-test-7917 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:16:38.297329 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:16:38.297455 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7917/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.199%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.198%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0901 05:16:38.408597 21 utils.go:356] Waiting for responses: map[]
  I0901 05:16:38.408672 21 utils.go:360] reached 10.42.1.198 after 0/1 tries
  I0901 05:16:38.408698 21 networking.go:53] Going to retry 0 out of 3 pods....
  I0901 05:16:38.409094 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7917" for this suite. @ 09/01/25 05:16:38.416
• [16.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/01/25 05:16:38.427
  I0901 05:16:38.427836 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:16:38.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:38.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:38.456
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 05:16:38.459
  STEP: Saw pod success @ 09/01/25 05:16:42.493
  I0901 05:16:42.499731 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-e40088c2-a8f5-45ba-a483-0d4e9795619d container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:16:42.513
  I0901 05:16:42.535418 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8290" for this suite. @ 09/01/25 05:16:42.541
• [4.120 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 09/01/25 05:16:42.547
  I0901 05:16:42.547804 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:16:42.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:42.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:42.576
  STEP: Setting up server cert @ 09/01/25 05:16:42.604
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:16:43.007
  STEP: Deploying the webhook pod @ 09/01/25 05:16:43.018
  STEP: Wait for the deployment to be ready @ 09/01/25 05:16:43.029
  I0901 05:16:43.037555 21 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/01/25 05:16:45.055
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:16:45.065
  I0901 05:16:46.066096 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/01/25 05:16:46.078
  STEP: create a pod @ 09/01/25 05:16:46.112
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/01/25 05:16:48.135
  I0901 05:16:48.136112 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=webhook-1429 attach --namespace=webhook-1429 to-be-attached-pod -i -c=container1'
  I0901 05:16:48.268851 21 builder.go:135] rc: 1
  I0901 05:16:48.326030 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1429" for this suite. @ 09/01/25 05:16:48.329
  STEP: Destroying namespace "webhook-markers-8041" for this suite. @ 09/01/25 05:16:48.339
• [5.797 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/01/25 05:16:48.346
  I0901 05:16:48.346894 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename disruption @ 09/01/25 05:16:48.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:48.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:48.36
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/01/25 05:16:48.364
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:16:48.367
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/01/25 05:16:50.378
  STEP: Waiting for all pods to be running @ 09/01/25 05:16:50.379
  I0901 05:16:50.386722 21 disruption.go:680] pods: 1 < 3
  I0901 05:16:52.388400 21 disruption.go:691] running pods: 1 < 3
  STEP: locating a running pod @ 09/01/25 05:16:54.387
  STEP: Updating the pdb to allow a pod to be evicted @ 09/01/25 05:16:54.404
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:16:54.417
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 05:16:56.423
  STEP: Waiting for all pods to be running @ 09/01/25 05:16:56.423
  STEP: Waiting for the pdb to observed all healthy pods @ 09/01/25 05:16:56.429
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/01/25 05:16:56.455
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:16:56.495
  STEP: Waiting for all pods to be running @ 09/01/25 05:16:58.501
  STEP: locating a running pod @ 09/01/25 05:16:58.507
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/01/25 05:16:58.52
  STEP: Waiting for the pdb to be deleted @ 09/01/25 05:16:58.526
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/01/25 05:16:58.529
  STEP: Waiting for all pods to be running @ 09/01/25 05:16:58.53
  I0901 05:16:58.555757 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4157" for this suite. @ 09/01/25 05:16:58.565
• [10.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 09/01/25 05:16:58.574
  I0901 05:16:58.574915 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:16:58.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:16:58.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:16:58.589
  STEP: Setting up server cert @ 09/01/25 05:16:58.614
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:16:59.355
  STEP: Deploying the webhook pod @ 09/01/25 05:16:59.363
  STEP: Wait for the deployment to be ready @ 09/01/25 05:16:59.377
  I0901 05:16:59.384839 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:17:01.404
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:17:01.417
  I0901 05:17:02.418019 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 05:17:02.482
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 05:17:02.552
  STEP: Deleting the collection of validation webhooks @ 09/01/25 05:17:02.61
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/01/25 05:17:02.659
  I0901 05:17:02.706598 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5943" for this suite. @ 09/01/25 05:17:02.713
  STEP: Destroying namespace "webhook-markers-7327" for this suite. @ 09/01/25 05:17:02.72
• [4.151 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/01/25 05:17:02.726
  I0901 05:17:02.726117 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename apf @ 09/01/25 05:17:02.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:02.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:02.742
  STEP: getting /apis @ 09/01/25 05:17:02.747
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/01/25 05:17:02.759
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/01/25 05:17:02.76
  STEP: creating @ 09/01/25 05:17:02.761
  STEP: getting @ 09/01/25 05:17:02.774
  STEP: listing @ 09/01/25 05:17:02.783
  STEP: watching @ 09/01/25 05:17:02.788
  I0901 05:17:02.788035 21 flowcontrol.go:394] starting watch
  STEP: patching @ 09/01/25 05:17:02.789
  STEP: updating @ 09/01/25 05:17:02.794
  I0901 05:17:02.801133 21 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/01/25 05:17:02.801
  STEP: patching /status @ 09/01/25 05:17:02.803
  STEP: updating /status @ 09/01/25 05:17:02.807
  STEP: deleting @ 09/01/25 05:17:02.836
  STEP: deleting a collection @ 09/01/25 05:17:02.849
  I0901 05:17:02.871489 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8360" for this suite. @ 09/01/25 05:17:02.877
• [0.159 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/01/25 05:17:02.885
  I0901 05:17:02.885981 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 05:17:02.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:02.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:02.909
  I0901 05:17:03.004109 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0901 05:17:03.009525 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0901 05:17:03.081513 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:17:03.081775 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 05:17:04.017779 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:17:04.017826 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 05:17:05.020339 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:17:05.020376 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0901 05:17:05.020391 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0901 05:17:05.030149 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0901 05:17:06.049679 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0901 05:17:06.063059 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0901 05:17:06.063133 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0901 05:17:06.068506 21 daemon_set.go:1193] Wrong image for pod: daemon-set-nrh8q. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0901 05:17:06.068612 21 daemon_set.go:1198] Pod daemon-set-nrh8q is not available
  I0901 05:17:09.069027 21 daemon_set.go:1198] Pod daemon-set-v4llp is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 05:17:09.082
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4827, will wait for the garbage collector to delete the pods @ 09/01/25 05:17:09.082
  I0901 05:17:09.148121 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.218927ms
  I0901 05:17:09.248673 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.508162ms
  I0901 05:17:10.555384 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:17:10.555429 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 05:17:10.560547 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20430"},"items":null}

  I0901 05:17:10.565185 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20430"},"items":null}

  I0901 05:17:10.587100 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4827" for this suite. @ 09/01/25 05:17:10.592
• [7.719 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 09/01/25 05:17:10.607
  I0901 05:17:10.607766 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:17:10.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:10.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:10.633
  I0901 05:17:10.638057 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/01/25 05:17:12.006
  I0901 05:17:12.006695 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 create -f -'
  I0901 05:17:12.122095 21 builder.go:146] stderr: ""
  I0901 05:17:12.122173 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9855-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 05:17:12.122423 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 delete e2e-test-crd-publish-openapi-9855-crds test-foo'
  I0901 05:17:12.223464 21 builder.go:146] stderr: ""
  I0901 05:17:12.223534 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9855-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0901 05:17:12.223614 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 apply -f -'
  I0901 05:17:12.310328 21 builder.go:146] stderr: ""
  I0901 05:17:12.310393 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9855-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0901 05:17:12.310552 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 delete e2e-test-crd-publish-openapi-9855-crds test-foo'
  I0901 05:17:12.400854 21 builder.go:146] stderr: ""
  I0901 05:17:12.400903 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9855-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/01/25 05:17:12.4
  I0901 05:17:12.400982 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 create -f -'
  I0901 05:17:12.487476 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/01/25 05:17:12.487
  I0901 05:17:12.487611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 create -f -'
  I0901 05:17:12.573154 21 builder.go:135] rc: 1
  I0901 05:17:12.573247 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 apply -f -'
  I0901 05:17:12.676989 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/01/25 05:17:12.677
  I0901 05:17:12.677122 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 create -f -'
  I0901 05:17:12.758291 21 builder.go:135] rc: 1
  I0901 05:17:12.758869 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 --namespace=crd-publish-openapi-3142 apply -f -'
  I0901 05:17:12.850624 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/01/25 05:17:12.85
  I0901 05:17:12.851020 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 explain e2e-test-crd-publish-openapi-9855-crds'
  I0901 05:17:12.929180 21 builder.go:146] stderr: ""
  I0901 05:17:12.929254 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9855-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/01/25 05:17:12.929
  I0901 05:17:12.930262 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 explain e2e-test-crd-publish-openapi-9855-crds.metadata'
  I0901 05:17:13.017209 21 builder.go:146] stderr: ""
  I0901 05:17:13.017480 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9855-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0901 05:17:13.017866 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 explain e2e-test-crd-publish-openapi-9855-crds.spec'
  I0901 05:17:13.086055 21 builder.go:146] stderr: ""
  I0901 05:17:13.086128 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9855-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0901 05:17:13.086302 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 explain e2e-test-crd-publish-openapi-9855-crds.spec.bars'
  I0901 05:17:13.167570 21 builder.go:146] stderr: ""
  I0901 05:17:13.167626 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9855-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/01/25 05:17:13.168
  I0901 05:17:13.168099 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-3142 explain e2e-test-crd-publish-openapi-9855-crds.spec.bars2'
  I0901 05:17:13.225619 21 builder.go:135] rc: 1
  I0901 05:17:14.574877 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3142" for this suite. @ 09/01/25 05:17:14.584
• [3.984 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 09/01/25 05:17:14.592
  I0901 05:17:14.592059 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:17:14.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:14.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:14.607
  STEP: validating api versions @ 09/01/25 05:17:14.61
  I0901 05:17:14.610560 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-636 api-versions'
  I0901 05:17:14.703453 21 builder.go:146] stderr: ""
  I0901 05:17:14.703508 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0901 05:17:14.703656 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-636" for this suite. @ 09/01/25 05:17:14.71
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/01/25 05:17:14.72
  I0901 05:17:14.720084 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 05:17:14.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:14.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:14.738
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 05:17:14.825
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 05:17:14.829
  I0901 05:17:14.916156 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:17:14.916310 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 05:17:15.838349 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 05:17:15.838416 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl is running 0 daemon pod, expected 1
  I0901 05:17:16.837440 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:17:16.837488 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae is running 0 daemon pod, expected 1
  I0901 05:17:17.838123 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:17:17.838166 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/01/25 05:17:17.841
  STEP: DeleteCollection of the DaemonSets @ 09/01/25 05:17:17.843
  STEP: Verify that ReplicaSets have been deleted @ 09/01/25 05:17:17.849
  I0901 05:17:17.863131 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20533"},"items":null}

  I0901 05:17:17.869485 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20535"},"items":[{"metadata":{"name":"daemon-set-kbk69","generateName":"daemon-set-","namespace":"daemonsets-6510","uid":"27e0db3b-2e11-4b37-8405-a0c5bd63b28f","resourceVersion":"20534","creationTimestamp":"2025-09-01T05:17:14Z","deletionTimestamp":"2025-09-01T05:17:47Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e1bbb842-97a6-4c6e-9b1e-fa5b76c46e26","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-09-01T05:17:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e1bbb842-97a6-4c6e-9b1e-fa5b76c46e26\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-09-01T05:17:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.77\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-94r87","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-94r87","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:14Z"}],"hostIP":"192.168.1.10","hostIPs":[{"ip":"192.168.1.10"}],"podIP":"10.42.2.77","podIPs":[{"ip":"10.42.2.77"}],"startTime":"2025-09-01T05:17:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T05:17:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://44f4f4ceb70a0e11b2329f209d179e7c8d31af46f8bb1ce8e84df45dc497e593","started":true,"volumeMounts":[{"name":"kube-api-access-94r87","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-p742r","generateName":"daemon-set-","namespace":"daemonsets-6510","uid":"529acb3b-ee52-4a70-b51a-2b72f0dddfdf","resourceVersion":"20530","creationTimestamp":"2025-09-01T05:17:14Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e1bbb842-97a6-4c6e-9b1e-fa5b76c46e26","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-09-01T05:17:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e1bbb842-97a6-4c6e-9b1e-fa5b76c46e26\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-09-01T05:17:17Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.207\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-x7z6h","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-x7z6h","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:17Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:17Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:17Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:14Z"}],"hostIP":"192.168.1.9","hostIPs":[{"ip":"192.168.1.9"}],"podIP":"10.42.1.207","podIPs":[{"ip":"10.42.1.207"}],"startTime":"2025-09-01T05:17:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T05:17:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://5c6377a08e34427fbb2a7a16f7e2721b3dded07c7b24e5d3512e3b75ddf01c7a","started":true,"volumeMounts":[{"name":"kube-api-access-x7z6h","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-w75fc","generateName":"daemon-set-","namespace":"daemonsets-6510","uid":"5b1b08ed-8006-459b-ab0c-22fd54683495","resourceVersion":"20535","creationTimestamp":"2025-09-01T05:17:14Z","deletionTimestamp":"2025-09-01T05:17:47Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e1bbb842-97a6-4c6e-9b1e-fa5b76c46e26","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-09-01T05:17:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e1bbb842-97a6-4c6e-9b1e-fa5b76c46e26\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-09-01T05:17:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.56\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rzfqh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rzfqh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-01T05:17:14Z"}],"hostIP":"192.168.1.8","hostIPs":[{"ip":"192.168.1.8"}],"podIP":"10.42.0.56","podIPs":[{"ip":"10.42.0.56"}],"startTime":"2025-09-01T05:17:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-01T05:17:15Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e028e6ccf0e124b92f2de590a523a2f66c96f2f2b6833b46b3cd1bae4a083123","started":true,"volumeMounts":[{"name":"kube-api-access-rzfqh","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0901 05:17:17.949830 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6510" for this suite. @ 09/01/25 05:17:17.953
• [3.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/01/25 05:17:17.959
  I0901 05:17:17.959884 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 05:17:17.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:17.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:17.975
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/01/25 05:17:17.986
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/01/25 05:17:32.064
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/01/25 05:17:32.068
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/01/25 05:17:32.074
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/01/25 05:17:32.074
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/01/25 05:17:32.097
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/01/25 05:17:34.11
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/01/25 05:17:35.118
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/01/25 05:17:35.126
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/01/25 05:17:35.126
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/01/25 05:17:35.152
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/01/25 05:17:36.161
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/01/25 05:17:37.171
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/01/25 05:17:37.182
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/01/25 05:17:37.182
  I0901 05:17:37.214796 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-320" for this suite. @ 09/01/25 05:17:37.22
• [19.269 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/01/25 05:17:37.228
  I0901 05:17:37.228714 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 05:17:37.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:37.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:37.252
  STEP: Creating a test headless service @ 09/01/25 05:17:37.255
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-959.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-959.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 05:17:37.259
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-959.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-959.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/01/25 05:17:37.259
  STEP: creating a pod to probe DNS @ 09/01/25 05:17:37.259
  STEP: submitting the pod to kubernetes @ 09/01/25 05:17:37.259
  STEP: retrieving the pod @ 09/01/25 05:17:39.279
  STEP: looking for the results for each expected name from probers @ 09/01/25 05:17:39.284
  I0901 05:17:39.312563 21 dns_common.go:546] DNS probes using dns-959/dns-test-6e7048ab-1124-4302-8119-55c2090610a1 succeeded

  STEP: deleting the pod @ 09/01/25 05:17:39.312
  STEP: deleting the test headless service @ 09/01/25 05:17:39.332
  I0901 05:17:39.352090 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-959" for this suite. @ 09/01/25 05:17:39.358
• [2.135 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 09/01/25 05:17:39.364
  I0901 05:17:39.364917 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:17:39.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:17:39.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:17:39.379
  STEP: creating the pod @ 09/01/25 05:17:39.382
  STEP: waiting for pod running @ 09/01/25 05:17:39.391
  STEP: creating a file in subpath @ 09/01/25 05:17:41.405
  I0901 05:17:41.415260 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1690 PodName:var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:17:41.415338 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:17:41.415524 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-1690/pods/var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/01/25 05:17:41.522
  I0901 05:17:41.527118 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1690 PodName:var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:17:41.527179 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:17:41.527374 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-1690/pods/var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/01/25 05:17:41.627
  I0901 05:17:42.141830 21 pod_client.go:173] Successfully updated pod "var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c"
  STEP: waiting for annotated pod running @ 09/01/25 05:17:42.141
  STEP: deleting the pod gracefully @ 09/01/25 05:17:42.146
  I0901 05:17:42.146626 21 delete.go:62] Deleting pod "var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c" in namespace "var-expansion-1690"
  I0901 05:17:42.152993 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-cbfb2f74-bfb4-43bb-91c9-7b14f1daa22c" to be fully deleted
  I0901 05:18:14.277010 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1690" for this suite. @ 09/01/25 05:18:14.281
• [34.921 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 09/01/25 05:18:14.286
  I0901 05:18:14.286883 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 05:18:14.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:14.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:14.301
  STEP: creating a ServiceAccount @ 09/01/25 05:18:14.305
  STEP: watching for the ServiceAccount to be added @ 09/01/25 05:18:14.314
  STEP: patching the ServiceAccount @ 09/01/25 05:18:14.317
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/01/25 05:18:14.322
  STEP: deleting the ServiceAccount @ 09/01/25 05:18:14.325
  I0901 05:18:14.343094 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7753" for this suite. @ 09/01/25 05:18:14.382
• [0.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 09/01/25 05:18:14.39
  I0901 05:18:14.390342 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 05:18:14.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:14.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:14.406
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 05:18:14.482
  STEP: create the pod with lifecycle hook @ 09/01/25 05:18:16.51
  STEP: delete the pod with lifecycle hook @ 09/01/25 05:18:18.535
  STEP: check prestop hook @ 09/01/25 05:18:20.553
  I0901 05:18:20.569605 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8501" for this suite. @ 09/01/25 05:18:20.574
• [6.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/01/25 05:18:20.583
  I0901 05:18:20.583623 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:18:20.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:20.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:20.601
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/01/25 05:18:20.604
  STEP: Saw pod success @ 09/01/25 05:18:24.631
  I0901 05:18:24.636685 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-ee9e9c3e-6a8b-40a2-80c1-c4d544e6b36e container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:18:24.649
  I0901 05:18:24.665697 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3733" for this suite. @ 09/01/25 05:18:24.672
• [4.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/01/25 05:18:24.681
  I0901 05:18:24.681638 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:18:24.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:24.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:24.704
  I0901 05:18:24.707742 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: creating the pod @ 09/01/25 05:18:24.708
  STEP: submitting the pod to kubernetes @ 09/01/25 05:18:24.709
  I0901 05:18:26.871700 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4960" for this suite. @ 09/01/25 05:18:26.877
• [2.205 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/01/25 05:18:26.887
  I0901 05:18:26.887849 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:18:26.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:26.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:26.907
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:18:26.915
  STEP: Saw pod success @ 09/01/25 05:18:30.94
  I0901 05:18:30.945776 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-2b5b737a-e9a2-4542-860e-5d8beb89e3de container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:18:30.956
  I0901 05:18:30.968896 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4217" for this suite. @ 09/01/25 05:18:30.972
• [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 09/01/25 05:18:30.978
  I0901 05:18:30.978883 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 05:18:30.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:30.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:30.992
  I0901 05:18:35.018552 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8005" for this suite. @ 09/01/25 05:18:35.025
• [4.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/01/25 05:18:35.034
  I0901 05:18:35.034801 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:18:35.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:35.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:35.055
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:18:35.058
  STEP: Saw pod success @ 09/01/25 05:18:39.082
  I0901 05:18:39.089182 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-6751372f-35b7-4146-9e77-9b4357609f25 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:18:39.1
  I0901 05:18:39.119219 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1614" for this suite. @ 09/01/25 05:18:39.125
• [4.097 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/01/25 05:18:39.133
  I0901 05:18:39.134184 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 05:18:39.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:39.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:39.151
  I0901 05:18:39.155048 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 05:18:39.230134 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 05:18:39.235207 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv before test
  I0901 05:18:39.240171 21 predicates.go:957] civo-csi-node-dzqk5 from kube-system started at 2025-09-01 04:05:10 +0000 UTC (2 container statuses recorded)
  I0901 05:18:39.240205 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:18:39.240217 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:18:39.240229 21 predicates.go:957] coredns-697968c856-xgph7 from kube-system started at 2025-09-01 04:06:57 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.240238 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0901 05:18:39.240250 21 predicates.go:957] traefik-4d7c2 from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.240259 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:18:39.240270 21 predicates.go:957] sonobuoy-e2e-job-a8fc065df4954836 from sonobuoy started at 2025-09-01 04:10:29 +0000 UTC (2 container statuses recorded)
  I0901 05:18:39.240278 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 05:18:39.240287 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 05:18:39.240296 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl before test
  I0901 05:18:39.245312 21 predicates.go:957] civo-ccm-bd7449dd8-smpl5 from kube-system started at 2025-09-01 04:05:01 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.245562 21 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0901 05:18:39.245787 21 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (4 container statuses recorded)
  I0901 05:18:39.245832 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:18:39.246182 21 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0901 05:18:39.246473 21 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0901 05:18:39.246696 21 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0901 05:18:39.246855 21 predicates.go:957] civo-csi-node-9l9jz from kube-system started at 2025-09-01 04:05:09 +0000 UTC (2 container statuses recorded)
  I0901 05:18:39.247163 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:18:39.247194 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:18:39.247432 21 predicates.go:957] metrics-server-7bf7d58749-7jzm4 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.247709 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0901 05:18:39.248038 21 predicates.go:957] traefik-s6p6r from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.248088 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:18:39.248288 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae before test
  I0901 05:18:39.253430 21 predicates.go:957] civo-csi-node-gk8m6 from kube-system started at 2025-09-01 05:15:57 +0000 UTC (2 container statuses recorded)
  I0901 05:18:39.253480 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:18:39.253499 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:18:39.253518 21 predicates.go:957] traefik-f8m2x from kube-system started at 2025-09-01 05:15:57 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.253535 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:18:39.253553 21 predicates.go:957] pod-exec-websocket-ef943537-4d7d-40de-a7db-89bd2c805bc0 from pods-4960 started at 2025-09-01 05:18:24 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.253763 21 predicates.go:959] 	Container main ready: true, restart count 0
  I0901 05:18:39.254004 21 predicates.go:957] busybox-user-65534-880727a6-7ecc-4964-ae4c-4eb627e280ed from security-context-test-8005 started at 2025-09-01 05:18:31 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.254211 21 predicates.go:959] 	Container busybox-user-65534-880727a6-7ecc-4964-ae4c-4eb627e280ed ready: false, restart count 0
  I0901 05:18:39.254459 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 04:10:25 +0000 UTC (1 container statuses recorded)
  I0901 05:18:39.254479 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  STEP: verifying the node has the label node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv @ 09/01/25 05:18:39.27
  STEP: verifying the node has the label node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl @ 09/01/25 05:18:39.281
  STEP: verifying the node has the label node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae @ 09/01/25 05:18:39.29
  I0901 05:18:39.342311 21 predicates.go:372] Pod civo-ccm-bd7449dd8-smpl5 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl
  I0901 05:18:39.342355 21 predicates.go:372] Pod civo-csi-controller-0 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl
  I0901 05:18:39.342432 21 predicates.go:372] Pod civo-csi-node-9l9jz requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl
  I0901 05:18:39.342446 21 predicates.go:372] Pod civo-csi-node-dzqk5 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv
  I0901 05:18:39.342456 21 predicates.go:372] Pod civo-csi-node-gk8m6 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae
  I0901 05:18:39.342469 21 predicates.go:372] Pod coredns-697968c856-xgph7 requesting resource cpu=100m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv
  I0901 05:18:39.342480 21 predicates.go:372] Pod metrics-server-7bf7d58749-7jzm4 requesting resource cpu=100m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl
  I0901 05:18:39.342517 21 predicates.go:372] Pod traefik-4d7c2 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv
  I0901 05:18:39.342541 21 predicates.go:372] Pod traefik-f8m2x requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae
  I0901 05:18:39.342552 21 predicates.go:372] Pod traefik-s6p6r requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl
  I0901 05:18:39.342564 21 predicates.go:372] Pod pod-exec-websocket-ef943537-4d7d-40de-a7db-89bd2c805bc0 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae
  I0901 05:18:39.342575 21 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae
  I0901 05:18:39.342587 21 predicates.go:372] Pod sonobuoy-e2e-job-a8fc065df4954836 requesting resource cpu=0m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/01/25 05:18:39.342
  I0901 05:18:39.342650 21 predicates.go:382] Creating a pod which consumes cpu=1204m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl
  I0901 05:18:39.363200 21 predicates.go:382] Creating a pod which consumes cpu=1274m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae
  I0901 05:18:39.369879 21 predicates.go:382] Creating a pod which consumes cpu=1204m on Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/01/25 05:18:41.407
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654.186110e842a99d8f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2780/filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654 to k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654.186110e86038e34a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654.186110e8615b6e22], Reason = [Created], Message = [Created container: filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654.186110e8688288c8], Reason = [Started], Message = [Started container filler-pod-1dea212c-3411-4f9e-b395-7ce7acb3d654] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8.186110e841b487b7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2780/filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8 to k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8.186110e85e32d7e6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8.186110e85f72418c], Reason = [Created], Message = [Created container: filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8.186110e865921c98], Reason = [Started], Message = [Started container filler-pod-371dea92-68d7-40cc-bc60-eb170f3717c8] @ 09/01/25 05:18:41.412
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be83c9be-4701-4c52-97c7-fad361bef776.186110e84218aad8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2780/filler-pod-be83c9be-4701-4c52-97c7-fad361bef776 to k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae] @ 09/01/25 05:18:41.413
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be83c9be-4701-4c52-97c7-fad361bef776.186110e85f448fbc], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 09/01/25 05:18:41.413
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be83c9be-4701-4c52-97c7-fad361bef776.186110e860368f9a], Reason = [Created], Message = [Created container: filler-pod-be83c9be-4701-4c52-97c7-fad361bef776] @ 09/01/25 05:18:41.413
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-be83c9be-4701-4c52-97c7-fad361bef776.186110e865349359], Reason = [Started], Message = [Started container filler-pod-be83c9be-4701-4c52-97c7-fad361bef776] @ 09/01/25 05:18:41.413
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186110e8bbc844cb], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 09/01/25 05:18:41.425
  STEP: removing the label node off the node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl @ 09/01/25 05:18:42.429
  STEP: verifying the node doesn't have the label node @ 09/01/25 05:18:42.445
  STEP: removing the label node off the node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae @ 09/01/25 05:18:42.451
  STEP: verifying the node doesn't have the label node @ 09/01/25 05:18:42.463
  STEP: removing the label node off the node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv @ 09/01/25 05:18:42.467
  STEP: verifying the node doesn't have the label node @ 09/01/25 05:18:42.48
  I0901 05:18:42.486737 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2780" for this suite. @ 09/01/25 05:18:42.49
• [3.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/01/25 05:18:42.496
  I0901 05:18:42.496930 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 05:18:42.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:42.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:42.512
  STEP: getting /apis @ 09/01/25 05:18:42.518
  STEP: getting /apis/admissionregistration.k8s.io @ 09/01/25 05:18:42.522
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/01/25 05:18:42.522
  STEP: creating @ 09/01/25 05:18:42.523
  STEP: getting @ 09/01/25 05:18:42.532
  STEP: listing @ 09/01/25 05:18:42.534
  STEP: watching @ 09/01/25 05:18:42.537
  I0901 05:18:42.537268 21 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/01/25 05:18:42.538
  STEP: updating @ 09/01/25 05:18:42.544
  I0901 05:18:42.553687 21 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 05:18:42.553
  STEP: deleting a collection @ 09/01/25 05:18:42.563
  I0901 05:18:42.576310 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6022" for this suite. @ 09/01/25 05:18:42.579
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/01/25 05:18:42.585
  I0901 05:18:42.585166 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 05:18:42.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:42.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:42.598
  I0901 05:18:44.631774 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9138" for this suite. @ 09/01/25 05:18:44.638
• [2.062 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/01/25 05:18:44.648
  I0901 05:18:44.649063 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 05:18:44.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:44.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:44.704
  STEP: getting /apis @ 09/01/25 05:18:44.709
  STEP: getting /apis/node.k8s.io @ 09/01/25 05:18:44.714
  STEP: getting /apis/node.k8s.io/v1 @ 09/01/25 05:18:44.716
  STEP: creating @ 09/01/25 05:18:44.717
  STEP: watching @ 09/01/25 05:18:44.738
  I0901 05:18:44.738957 21 runtimeclass.go:275] starting watch
  STEP: getting @ 09/01/25 05:18:44.747
  STEP: listing @ 09/01/25 05:18:44.75
  STEP: patching @ 09/01/25 05:18:44.753
  STEP: updating @ 09/01/25 05:18:44.758
  I0901 05:18:44.763208 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 09/01/25 05:18:44.763
  STEP: deleting a collection @ 09/01/25 05:18:44.772
  I0901 05:18:44.783800 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6204" for this suite. @ 09/01/25 05:18:44.787
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/01/25 05:18:44.794
  I0901 05:18:44.795032 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 05:18:44.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:44.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:44.816
  STEP: create the rc @ 09/01/25 05:18:44.889
  W0901 05:18:44.903778      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/01/25 05:18:48.913
  STEP: wait for the rc to be deleted @ 09/01/25 05:18:48.921
  I0901 05:18:49.942889 21 garbage_collector.go:670] 80 pods remaining
  I0901 05:18:49.943131 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0901 05:18:49.943226 21 garbage_collector.go:678] 
  I0901 05:18:50.934294 21 garbage_collector.go:670] 71 pods remaining
  I0901 05:18:50.934428 21 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0901 05:18:50.934466 21 garbage_collector.go:678] 
  I0901 05:18:51.937121 21 garbage_collector.go:670] 60 pods remaining
  I0901 05:18:51.937271 21 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0901 05:18:51.937340 21 garbage_collector.go:678] 
  I0901 05:18:52.938004 21 garbage_collector.go:670] 40 pods remaining
  I0901 05:18:52.938121 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0901 05:18:52.938139 21 garbage_collector.go:678] 
  I0901 05:18:53.967548 21 garbage_collector.go:670] 31 pods remaining
  I0901 05:18:53.967578 21 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0901 05:18:53.967586 21 garbage_collector.go:678] 
  I0901 05:18:54.936361 21 garbage_collector.go:670] 20 pods remaining
  I0901 05:18:54.936429 21 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0901 05:18:54.936451 21 garbage_collector.go:678] 
  STEP: Gathering metrics @ 09/01/25 05:18:55.928
  W0901 05:18:55.936093      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0901 05:18:55.936168 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 05:18:55.936457 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7679" for this suite. @ 09/01/25 05:18:55.939
• [11.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 09/01/25 05:18:55.947
  I0901 05:18:55.947731 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:18:55.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:18:55.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:18:55.963
  STEP: Counting existing ResourceQuota @ 09/01/25 05:18:55.966
  STEP: Creating a ResourceQuota @ 09/01/25 05:19:00.974
  STEP: Ensuring resource quota status is calculated @ 09/01/25 05:19:00.983
  STEP: Creating a ReplicaSet @ 09/01/25 05:19:02.99
  STEP: Ensuring resource quota status captures replicaset creation @ 09/01/25 05:19:03.002
  STEP: Deleting a ReplicaSet @ 09/01/25 05:19:05.012
  STEP: Ensuring resource quota status released usage @ 09/01/25 05:19:05.023
  I0901 05:19:07.030584 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3748" for this suite. @ 09/01/25 05:19:07.036
• [11.101 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/01/25 05:19:07.05
  I0901 05:19:07.050057 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 05:19:07.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:07.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:07.07
  STEP: Waiting for pod completion @ 09/01/25 05:19:07.08
  I0901 05:19:11.114895 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4230" for this suite. @ 09/01/25 05:19:11.124
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/01/25 05:19:11.137
  I0901 05:19:11.137596 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:19:11.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:11.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:11.16
  STEP: Creating configMap with name projected-configmap-test-volume-map-e2dcb512-524f-476a-bbe2-128daa5fd576 @ 09/01/25 05:19:11.165
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:19:11.174
  STEP: Saw pod success @ 09/01/25 05:19:15.198
  I0901 05:19:15.202793 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-dc6fa205-e3cc-419c-b8b0-d8e8d036417d container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:19:15.211
  I0901 05:19:15.230690 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5380" for this suite. @ 09/01/25 05:19:15.236
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/01/25 05:19:15.247
  I0901 05:19:15.247763 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 05:19:15.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:15.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:15.264
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-356.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-356.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 05:19:15.266
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-356.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-356.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/01/25 05:19:15.267
  STEP: creating a pod to probe /etc/hosts @ 09/01/25 05:19:15.267
  STEP: submitting the pod to kubernetes @ 09/01/25 05:19:15.267
  STEP: retrieving the pod @ 09/01/25 05:19:17.284
  STEP: looking for the results for each expected name from probers @ 09/01/25 05:19:17.288
  I0901 05:19:17.316336 21 dns_common.go:546] DNS probes using dns-356/dns-test-d691f77a-49b4-4075-810c-82a92eb0f014 succeeded

  STEP: deleting the pod @ 09/01/25 05:19:17.316
  I0901 05:19:17.331349 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-356" for this suite. @ 09/01/25 05:19:17.337
• [2.099 seconds]
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/01/25 05:19:17.347
  I0901 05:19:17.347295 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/01/25 05:19:17.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:17.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:17.367
  STEP: Setting up server cert @ 09/01/25 05:19:17.37
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/01/25 05:19:18.21
  STEP: Deploying the custom resource conversion webhook pod @ 09/01/25 05:19:18.219
  STEP: Wait for the deployment to be ready @ 09/01/25 05:19:18.228
  I0901 05:19:18.247747 21 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:19:20.26
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:19:20.27
  I0901 05:19:21.270980 21 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/01/25 05:19:21.284
  I0901 05:19:21.284697 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Creating a custom resource conversion webhook @ 09/01/25 05:19:21.804
  STEP: Watching with field selectors @ 09/01/25 05:19:23.867
  STEP: Registering informers with field selectors @ 09/01/25 05:19:23.877
  STEP: Creating custom resources @ 09/01/25 05:19:23.877
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/01/25 05:19:23.905
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/01/25 05:19:23.909
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/01/25 05:19:23.913
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/01/25 05:19:23.917
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/01/25 05:19:23.921
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 05:19:23.926
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/01/25 05:19:23.927
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/01/25 05:19:23.927
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/01/25 05:19:23.927
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/01/25 05:19:23.927
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/01/25 05:19:23.942
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/01/25 05:19:23.96
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/01/25 05:19:23.965
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/01/25 05:19:23.969
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 05:19:23.975
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/01/25 05:19:23.975
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/01/25 05:19:23.975
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/01/25 05:19:23.975
  I0901 05:19:24.542160 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-6879" for this suite. @ 09/01/25 05:19:24.546
• [7.207 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/01/25 05:19:24.555
  I0901 05:19:24.555062 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svc-latency @ 09/01/25 05:19:24.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:24.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:24.568
  I0901 05:19:24.571505 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3173 @ 09/01/25 05:19:24.572
  I0901 05:19:24.577744      21 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3173, replica count: 1
  I0901 05:19:25.629154      21 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 05:19:25.744597 21 service_latency.go:356] Created: latency-svc-srmpc
  I0901 05:19:25.750632 21 service_latency.go:363] Got endpoints: latency-svc-srmpc [20.790287ms]
  I0901 05:19:25.762487 21 service_latency.go:356] Created: latency-svc-fl2c2
  I0901 05:19:25.770002 21 service_latency.go:363] Got endpoints: latency-svc-fl2c2 [18.573294ms]
  I0901 05:19:25.859407 21 service_latency.go:356] Created: latency-svc-v7h2x
  I0901 05:19:25.860421 21 service_latency.go:356] Created: latency-svc-fj7b9
  I0901 05:19:25.860710 21 service_latency.go:356] Created: latency-svc-8722k
  I0901 05:19:25.860794 21 service_latency.go:356] Created: latency-svc-8qmhs
  I0901 05:19:25.860828 21 service_latency.go:356] Created: latency-svc-gxnmz
  I0901 05:19:25.862256 21 service_latency.go:356] Created: latency-svc-rddkp
  I0901 05:19:25.862312 21 service_latency.go:356] Created: latency-svc-j2fw5
  I0901 05:19:25.862336 21 service_latency.go:356] Created: latency-svc-55mmj
  I0901 05:19:25.863502 21 service_latency.go:356] Created: latency-svc-r7k5j
  I0901 05:19:25.863594 21 service_latency.go:356] Created: latency-svc-mnfg9
  I0901 05:19:25.863752 21 service_latency.go:356] Created: latency-svc-8gqk8
  I0901 05:19:25.868350 21 service_latency.go:356] Created: latency-svc-6ghs5
  I0901 05:19:25.872441 21 service_latency.go:356] Created: latency-svc-87nxh
  I0901 05:19:25.872488 21 service_latency.go:356] Created: latency-svc-whngx
  I0901 05:19:25.872539 21 service_latency.go:356] Created: latency-svc-zf4jd
  I0901 05:19:25.883264 21 service_latency.go:363] Got endpoints: latency-svc-rddkp [131.509965ms]
  I0901 05:19:25.884856 21 service_latency.go:363] Got endpoints: latency-svc-j2fw5 [133.417604ms]
  I0901 05:19:25.884861 21 service_latency.go:363] Got endpoints: latency-svc-55mmj [132.588174ms]
  I0901 05:19:25.884876 21 service_latency.go:363] Got endpoints: latency-svc-v7h2x [132.4436ms]
  I0901 05:19:25.884886 21 service_latency.go:363] Got endpoints: latency-svc-fj7b9 [132.499628ms]
  I0901 05:19:25.892899 21 service_latency.go:363] Got endpoints: latency-svc-8722k [122.652429ms]
  I0901 05:19:25.904245 21 service_latency.go:363] Got endpoints: latency-svc-mnfg9 [152.554188ms]
  I0901 05:19:25.908047 21 service_latency.go:363] Got endpoints: latency-svc-r7k5j [156.446382ms]
  I0901 05:19:25.908632 21 service_latency.go:363] Got endpoints: latency-svc-8qmhs [156.140475ms]
  I0901 05:19:25.908647 21 service_latency.go:363] Got endpoints: latency-svc-gxnmz [156.112983ms]
  I0901 05:19:25.908656 21 service_latency.go:363] Got endpoints: latency-svc-8gqk8 [156.682057ms]
  I0901 05:19:25.913588 21 service_latency.go:356] Created: latency-svc-kfd7n
  I0901 05:19:25.920670 21 service_latency.go:363] Got endpoints: latency-svc-87nxh [168.551663ms]
  I0901 05:19:25.931730 21 service_latency.go:363] Got endpoints: latency-svc-6ghs5 [179.906808ms]
  I0901 05:19:25.932756 21 service_latency.go:356] Created: latency-svc-wlffv
  I0901 05:19:25.933043 21 service_latency.go:363] Got endpoints: latency-svc-kfd7n [49.747786ms]
  I0901 05:19:25.933057 21 service_latency.go:363] Got endpoints: latency-svc-zf4jd [180.818057ms]
  I0901 05:19:25.933064 21 service_latency.go:363] Got endpoints: latency-svc-whngx [180.896213ms]
  I0901 05:19:25.946471 21 service_latency.go:363] Got endpoints: latency-svc-wlffv [60.861387ms]
  I0901 05:19:25.948342 21 service_latency.go:356] Created: latency-svc-8m8tq
  I0901 05:19:25.954847 21 service_latency.go:356] Created: latency-svc-tc7gg
  I0901 05:19:25.957630 21 service_latency.go:363] Got endpoints: latency-svc-8m8tq [71.597625ms]
  I0901 05:19:25.963755 21 service_latency.go:356] Created: latency-svc-k42st
  I0901 05:19:25.966604 21 service_latency.go:363] Got endpoints: latency-svc-tc7gg [80.813838ms]
  I0901 05:19:25.974472 21 service_latency.go:363] Got endpoints: latency-svc-k42st [88.274311ms]
  I0901 05:19:25.984212 21 service_latency.go:356] Created: latency-svc-drs52
  I0901 05:19:25.995912 21 service_latency.go:363] Got endpoints: latency-svc-drs52 [102.96582ms]
  I0901 05:19:26.090084 21 service_latency.go:356] Created: latency-svc-f5xkp
  I0901 05:19:26.090921 21 service_latency.go:356] Created: latency-svc-qz7kd
  I0901 05:19:26.091288 21 service_latency.go:356] Created: latency-svc-dm9db
  I0901 05:19:26.091557 21 service_latency.go:356] Created: latency-svc-62677
  I0901 05:19:26.091395 21 service_latency.go:356] Created: latency-svc-r65hv
  I0901 05:19:26.091619 21 service_latency.go:356] Created: latency-svc-qpfwx
  I0901 05:19:26.091925 21 service_latency.go:356] Created: latency-svc-lgc9t
  I0901 05:19:26.096802 21 service_latency.go:356] Created: latency-svc-78q68
  I0901 05:19:26.096802 21 service_latency.go:356] Created: latency-svc-tq4sj
  I0901 05:19:26.096877 21 service_latency.go:356] Created: latency-svc-9zkfz
  I0901 05:19:26.100349 21 service_latency.go:356] Created: latency-svc-bfsq2
  I0901 05:19:26.100349 21 service_latency.go:356] Created: latency-svc-2d68n
  I0901 05:19:26.100389 21 service_latency.go:356] Created: latency-svc-vpgkh
  I0901 05:19:26.104261 21 service_latency.go:356] Created: latency-svc-s6wp6
  I0901 05:19:26.107802 21 service_latency.go:356] Created: latency-svc-6wnwf
  I0901 05:19:26.110226 21 service_latency.go:363] Got endpoints: latency-svc-r65hv [135.395388ms]
  I0901 05:19:26.110227 21 service_latency.go:363] Got endpoints: latency-svc-f5xkp [200.548947ms]
  I0901 05:19:26.110428 21 service_latency.go:363] Got endpoints: latency-svc-qz7kd [200.328884ms]
  I0901 05:19:26.116278 21 service_latency.go:363] Got endpoints: latency-svc-qpfwx [206.306487ms]
  I0901 05:19:26.130664 21 service_latency.go:363] Got endpoints: latency-svc-dm9db [209.943903ms]
  I0901 05:19:26.130750 21 service_latency.go:363] Got endpoints: latency-svc-lgc9t [198.78849ms]
  I0901 05:19:26.130886 21 service_latency.go:363] Got endpoints: latency-svc-tq4sj [226.352073ms]
  I0901 05:19:26.130976 21 service_latency.go:363] Got endpoints: latency-svc-62677 [135.012396ms]
  I0901 05:19:26.145784 21 service_latency.go:363] Got endpoints: latency-svc-9zkfz [211.562546ms]
  I0901 05:19:26.149107 21 service_latency.go:356] Created: latency-svc-8smsq
  I0901 05:19:26.151634 21 service_latency.go:363] Got endpoints: latency-svc-78q68 [217.185551ms]
  I0901 05:19:26.151826 21 service_latency.go:363] Got endpoints: latency-svc-2d68n [242.059944ms]
  I0901 05:19:26.151886 21 service_latency.go:363] Got endpoints: latency-svc-s6wp6 [194.229396ms]
  I0901 05:19:26.151914 21 service_latency.go:363] Got endpoints: latency-svc-6wnwf [205.415281ms]
  I0901 05:19:26.158118 21 service_latency.go:363] Got endpoints: latency-svc-bfsq2 [224.089654ms]
  I0901 05:19:26.158934 21 service_latency.go:356] Created: latency-svc-g2cfr
  I0901 05:19:26.165837 21 service_latency.go:356] Created: latency-svc-p9wsk
  I0901 05:19:26.171271 21 service_latency.go:356] Created: latency-svc-qklvt
  I0901 05:19:26.171968 21 service_latency.go:363] Got endpoints: latency-svc-vpgkh [205.332572ms]
  I0901 05:19:26.177224 21 service_latency.go:356] Created: latency-svc-6p529
  I0901 05:19:26.180405 21 service_latency.go:356] Created: latency-svc-lfnds
  I0901 05:19:26.185166 21 service_latency.go:356] Created: latency-svc-bgtcj
  I0901 05:19:26.190009 21 service_latency.go:356] Created: latency-svc-jzv4k
  I0901 05:19:26.193215 21 service_latency.go:356] Created: latency-svc-j9s4f
  I0901 05:19:26.197340 21 service_latency.go:356] Created: latency-svc-nmkzd
  I0901 05:19:26.202897 21 service_latency.go:356] Created: latency-svc-772xp
  I0901 05:19:26.207173 21 service_latency.go:356] Created: latency-svc-gwzxz
  I0901 05:19:26.211086 21 service_latency.go:356] Created: latency-svc-xpzkd
  I0901 05:19:26.215902 21 service_latency.go:356] Created: latency-svc-xx7m7
  I0901 05:19:26.219696 21 service_latency.go:363] Got endpoints: latency-svc-8smsq [108.715752ms]
  I0901 05:19:26.223128 21 service_latency.go:356] Created: latency-svc-tb6ks
  I0901 05:19:26.228383 21 service_latency.go:356] Created: latency-svc-n7xqt
  I0901 05:19:26.272883 21 service_latency.go:363] Got endpoints: latency-svc-g2cfr [141.966848ms]
  I0901 05:19:26.288984 21 service_latency.go:356] Created: latency-svc-cn2tq
  I0901 05:19:26.323272 21 service_latency.go:363] Got endpoints: latency-svc-p9wsk [191.844384ms]
  I0901 05:19:26.339128 21 service_latency.go:356] Created: latency-svc-x77m8
  I0901 05:19:26.373958 21 service_latency.go:363] Got endpoints: latency-svc-qklvt [262.723951ms]
  I0901 05:19:26.386762 21 service_latency.go:356] Created: latency-svc-d42jc
  I0901 05:19:26.423043 21 service_latency.go:363] Got endpoints: latency-svc-6p529 [306.562083ms]
  I0901 05:19:26.438851 21 service_latency.go:356] Created: latency-svc-w2sqs
  I0901 05:19:26.469163 21 service_latency.go:363] Got endpoints: latency-svc-lfnds [338.44988ms]
  I0901 05:19:26.480058 21 service_latency.go:356] Created: latency-svc-9z5fw
  I0901 05:19:26.519363 21 service_latency.go:363] Got endpoints: latency-svc-bgtcj [388.565979ms]
  I0901 05:19:26.531440 21 service_latency.go:356] Created: latency-svc-q89ds
  I0901 05:19:26.575140 21 service_latency.go:363] Got endpoints: latency-svc-jzv4k [464.208502ms]
  I0901 05:19:26.585396 21 service_latency.go:356] Created: latency-svc-zldz4
  I0901 05:19:26.622501 21 service_latency.go:363] Got endpoints: latency-svc-j9s4f [476.638142ms]
  I0901 05:19:26.641350 21 service_latency.go:356] Created: latency-svc-jrh2t
  I0901 05:19:26.675768 21 service_latency.go:363] Got endpoints: latency-svc-nmkzd [524.09417ms]
  I0901 05:19:26.693912 21 service_latency.go:356] Created: latency-svc-tz5rh
  I0901 05:19:26.719530 21 service_latency.go:363] Got endpoints: latency-svc-772xp [567.225638ms]
  I0901 05:19:26.730114 21 service_latency.go:356] Created: latency-svc-mnpxr
  I0901 05:19:26.769479 21 service_latency.go:363] Got endpoints: latency-svc-gwzxz [617.473448ms]
  I0901 05:19:26.780619 21 service_latency.go:356] Created: latency-svc-s2f94
  I0901 05:19:26.823406 21 service_latency.go:363] Got endpoints: latency-svc-xpzkd [671.41001ms]
  I0901 05:19:26.836077 21 service_latency.go:356] Created: latency-svc-tp6kj
  I0901 05:19:26.871079 21 service_latency.go:363] Got endpoints: latency-svc-xx7m7 [712.568723ms]
  I0901 05:19:26.885924 21 service_latency.go:356] Created: latency-svc-rk9xk
  I0901 05:19:26.921387 21 service_latency.go:363] Got endpoints: latency-svc-tb6ks [749.192455ms]
  I0901 05:19:26.932071 21 service_latency.go:356] Created: latency-svc-xhbkh
  I0901 05:19:26.969834 21 service_latency.go:363] Got endpoints: latency-svc-n7xqt [749.731704ms]
  I0901 05:19:26.983155 21 service_latency.go:356] Created: latency-svc-6msvp
  I0901 05:19:27.024012 21 service_latency.go:363] Got endpoints: latency-svc-cn2tq [750.738852ms]
  I0901 05:19:27.040261 21 service_latency.go:356] Created: latency-svc-nl8bd
  I0901 05:19:27.077338 21 service_latency.go:363] Got endpoints: latency-svc-x77m8 [753.985051ms]
  I0901 05:19:27.087827 21 service_latency.go:356] Created: latency-svc-nr49r
  I0901 05:19:27.119683 21 service_latency.go:363] Got endpoints: latency-svc-d42jc [745.671512ms]
  I0901 05:19:27.130862 21 service_latency.go:356] Created: latency-svc-mbk6p
  I0901 05:19:27.169456 21 service_latency.go:363] Got endpoints: latency-svc-w2sqs [745.705008ms]
  I0901 05:19:27.182976 21 service_latency.go:356] Created: latency-svc-5x2m9
  I0901 05:19:27.223054 21 service_latency.go:363] Got endpoints: latency-svc-9z5fw [753.396947ms]
  I0901 05:19:27.239178 21 service_latency.go:356] Created: latency-svc-tz4kr
  I0901 05:19:27.274624 21 service_latency.go:363] Got endpoints: latency-svc-q89ds [755.183073ms]
  I0901 05:19:27.286674 21 service_latency.go:356] Created: latency-svc-swmnd
  I0901 05:19:27.319901 21 service_latency.go:363] Got endpoints: latency-svc-zldz4 [744.709951ms]
  I0901 05:19:27.331801 21 service_latency.go:356] Created: latency-svc-vvj8j
  I0901 05:19:27.369968 21 service_latency.go:363] Got endpoints: latency-svc-jrh2t [747.296299ms]
  I0901 05:19:27.381764 21 service_latency.go:356] Created: latency-svc-7t7l7
  I0901 05:19:27.422617 21 service_latency.go:363] Got endpoints: latency-svc-tz5rh [746.645988ms]
  I0901 05:19:27.437469 21 service_latency.go:356] Created: latency-svc-h5kj6
  I0901 05:19:27.489638 21 service_latency.go:363] Got endpoints: latency-svc-mnpxr [769.616605ms]
  I0901 05:19:27.505419 21 service_latency.go:356] Created: latency-svc-zd9w4
  I0901 05:19:27.517661 21 service_latency.go:363] Got endpoints: latency-svc-s2f94 [747.656615ms]
  I0901 05:19:27.526257 21 service_latency.go:356] Created: latency-svc-zxgc7
  I0901 05:19:27.569768 21 service_latency.go:363] Got endpoints: latency-svc-tp6kj [745.571774ms]
  I0901 05:19:27.580636 21 service_latency.go:356] Created: latency-svc-h5752
  I0901 05:19:27.619769 21 service_latency.go:363] Got endpoints: latency-svc-rk9xk [748.529213ms]
  I0901 05:19:27.630327 21 service_latency.go:356] Created: latency-svc-gxl7k
  I0901 05:19:27.669619 21 service_latency.go:363] Got endpoints: latency-svc-xhbkh [747.700654ms]
  I0901 05:19:27.684993 21 service_latency.go:356] Created: latency-svc-pdwzj
  I0901 05:19:27.722361 21 service_latency.go:363] Got endpoints: latency-svc-6msvp [750.866305ms]
  I0901 05:19:27.739203 21 service_latency.go:356] Created: latency-svc-vdz5g
  I0901 05:19:27.773055 21 service_latency.go:363] Got endpoints: latency-svc-nl8bd [748.323643ms]
  I0901 05:19:27.784554 21 service_latency.go:356] Created: latency-svc-fpqq7
  I0901 05:19:27.823360 21 service_latency.go:363] Got endpoints: latency-svc-nr49r [745.65146ms]
  I0901 05:19:27.836630 21 service_latency.go:356] Created: latency-svc-zd5st
  I0901 05:19:27.878004 21 service_latency.go:363] Got endpoints: latency-svc-mbk6p [757.663433ms]
  I0901 05:19:27.890977 21 service_latency.go:356] Created: latency-svc-tbzkk
  I0901 05:19:27.922033 21 service_latency.go:363] Got endpoints: latency-svc-5x2m9 [752.087994ms]
  I0901 05:19:27.940851 21 service_latency.go:356] Created: latency-svc-7dcr5
  I0901 05:19:27.976571 21 service_latency.go:363] Got endpoints: latency-svc-tz4kr [752.932736ms]
  I0901 05:19:27.990729 21 service_latency.go:356] Created: latency-svc-lpfb8
  I0901 05:19:28.026607 21 service_latency.go:363] Got endpoints: latency-svc-swmnd [751.474507ms]
  I0901 05:19:28.042891 21 service_latency.go:356] Created: latency-svc-4v9ms
  I0901 05:19:28.077537 21 service_latency.go:363] Got endpoints: latency-svc-vvj8j [756.479629ms]
  I0901 05:19:28.090469 21 service_latency.go:356] Created: latency-svc-ghq8c
  I0901 05:19:28.124349 21 service_latency.go:363] Got endpoints: latency-svc-7t7l7 [753.917474ms]
  I0901 05:19:28.140298 21 service_latency.go:356] Created: latency-svc-k5sc2
  I0901 05:19:28.173896 21 service_latency.go:363] Got endpoints: latency-svc-h5kj6 [750.329433ms]
  I0901 05:19:28.189177 21 service_latency.go:356] Created: latency-svc-df6bb
  I0901 05:19:28.225206 21 service_latency.go:363] Got endpoints: latency-svc-zd9w4 [735.144979ms]
  I0901 05:19:28.234655 21 service_latency.go:356] Created: latency-svc-n9vth
  I0901 05:19:28.271222 21 service_latency.go:363] Got endpoints: latency-svc-zxgc7 [753.064456ms]
  I0901 05:19:28.284927 21 service_latency.go:356] Created: latency-svc-6bz6j
  I0901 05:19:28.325155 21 service_latency.go:363] Got endpoints: latency-svc-h5752 [755.339831ms]
  I0901 05:19:28.340323 21 service_latency.go:356] Created: latency-svc-7gsbm
  I0901 05:19:28.375425 21 service_latency.go:363] Got endpoints: latency-svc-gxl7k [755.565308ms]
  I0901 05:19:28.390723 21 service_latency.go:356] Created: latency-svc-2zkjx
  I0901 05:19:28.419453 21 service_latency.go:363] Got endpoints: latency-svc-pdwzj [749.765868ms]
  I0901 05:19:28.437088 21 service_latency.go:356] Created: latency-svc-thdpp
  I0901 05:19:28.471012 21 service_latency.go:363] Got endpoints: latency-svc-vdz5g [747.59862ms]
  I0901 05:19:28.481724 21 service_latency.go:356] Created: latency-svc-gfqx6
  I0901 05:19:28.522469 21 service_latency.go:363] Got endpoints: latency-svc-fpqq7 [749.342846ms]
  I0901 05:19:28.537531 21 service_latency.go:356] Created: latency-svc-8zxxj
  I0901 05:19:28.574005 21 service_latency.go:363] Got endpoints: latency-svc-zd5st [750.590918ms]
  I0901 05:19:28.589741 21 service_latency.go:356] Created: latency-svc-frxtt
  I0901 05:19:28.619134 21 service_latency.go:363] Got endpoints: latency-svc-tbzkk [740.723528ms]
  I0901 05:19:28.648909 21 service_latency.go:356] Created: latency-svc-zwfdx
  I0901 05:19:28.671352 21 service_latency.go:363] Got endpoints: latency-svc-7dcr5 [748.346296ms]
  I0901 05:19:28.684811 21 service_latency.go:356] Created: latency-svc-bqmv8
  I0901 05:19:28.722321 21 service_latency.go:363] Got endpoints: latency-svc-lpfb8 [744.526875ms]
  I0901 05:19:28.746524 21 service_latency.go:356] Created: latency-svc-2fgfd
  I0901 05:19:28.775720 21 service_latency.go:363] Got endpoints: latency-svc-4v9ms [747.585013ms]
  I0901 05:19:28.792944 21 service_latency.go:356] Created: latency-svc-4fljn
  I0901 05:19:28.822316 21 service_latency.go:363] Got endpoints: latency-svc-ghq8c [744.519306ms]
  I0901 05:19:28.837437 21 service_latency.go:356] Created: latency-svc-h5jmh
  I0901 05:19:28.897496 21 service_latency.go:363] Got endpoints: latency-svc-k5sc2 [772.940788ms]
  I0901 05:19:28.907831 21 service_latency.go:356] Created: latency-svc-slzv5
  I0901 05:19:28.918108 21 service_latency.go:363] Got endpoints: latency-svc-df6bb [744.072427ms]
  I0901 05:19:28.929591 21 service_latency.go:356] Created: latency-svc-k5dfs
  I0901 05:19:28.969561 21 service_latency.go:363] Got endpoints: latency-svc-n9vth [744.083188ms]
  I0901 05:19:28.981605 21 service_latency.go:356] Created: latency-svc-qw4dz
  I0901 05:19:29.020365 21 service_latency.go:363] Got endpoints: latency-svc-6bz6j [748.40099ms]
  I0901 05:19:29.032054 21 service_latency.go:356] Created: latency-svc-jhx4x
  I0901 05:19:29.069324 21 service_latency.go:363] Got endpoints: latency-svc-7gsbm [743.658599ms]
  I0901 05:19:29.083432 21 service_latency.go:356] Created: latency-svc-kjf47
  I0901 05:19:29.120458 21 service_latency.go:363] Got endpoints: latency-svc-2zkjx [743.874781ms]
  I0901 05:19:29.131646 21 service_latency.go:356] Created: latency-svc-vjlxj
  I0901 05:19:29.179309 21 service_latency.go:363] Got endpoints: latency-svc-thdpp [759.801834ms]
  I0901 05:19:29.191852 21 service_latency.go:356] Created: latency-svc-4n7sp
  I0901 05:19:29.223547 21 service_latency.go:363] Got endpoints: latency-svc-gfqx6 [752.219685ms]
  I0901 05:19:29.245037 21 service_latency.go:356] Created: latency-svc-d9pvd
  I0901 05:19:29.269111 21 service_latency.go:363] Got endpoints: latency-svc-8zxxj [746.523351ms]
  I0901 05:19:29.278614 21 service_latency.go:356] Created: latency-svc-gk5cr
  I0901 05:19:29.321445 21 service_latency.go:363] Got endpoints: latency-svc-frxtt [746.982774ms]
  I0901 05:19:29.336583 21 service_latency.go:356] Created: latency-svc-n47n4
  I0901 05:19:29.371884 21 service_latency.go:363] Got endpoints: latency-svc-zwfdx [752.510159ms]
  I0901 05:19:29.384264 21 service_latency.go:356] Created: latency-svc-mjbbd
  I0901 05:19:29.424396 21 service_latency.go:363] Got endpoints: latency-svc-bqmv8 [751.971339ms]
  I0901 05:19:29.442110 21 service_latency.go:356] Created: latency-svc-s7svn
  I0901 05:19:29.470651 21 service_latency.go:363] Got endpoints: latency-svc-2fgfd [747.852294ms]
  I0901 05:19:29.486022 21 service_latency.go:356] Created: latency-svc-z6dzj
  I0901 05:19:29.520049 21 service_latency.go:363] Got endpoints: latency-svc-4fljn [743.723005ms]
  I0901 05:19:29.531061 21 service_latency.go:356] Created: latency-svc-5jxzn
  I0901 05:19:29.569288 21 service_latency.go:363] Got endpoints: latency-svc-h5jmh [746.380274ms]
  I0901 05:19:29.582246 21 service_latency.go:356] Created: latency-svc-zvk7j
  I0901 05:19:29.631574 21 service_latency.go:363] Got endpoints: latency-svc-slzv5 [733.277399ms]
  I0901 05:19:29.640248 21 service_latency.go:356] Created: latency-svc-tb6ws
  I0901 05:19:29.673739 21 service_latency.go:363] Got endpoints: latency-svc-k5dfs [755.201048ms]
  I0901 05:19:29.686405 21 service_latency.go:356] Created: latency-svc-n876l
  I0901 05:19:29.723458 21 service_latency.go:363] Got endpoints: latency-svc-qw4dz [753.813464ms]
  I0901 05:19:29.734776 21 service_latency.go:356] Created: latency-svc-57hjs
  I0901 05:19:29.767832 21 service_latency.go:363] Got endpoints: latency-svc-jhx4x [747.293633ms]
  I0901 05:19:29.777782 21 service_latency.go:356] Created: latency-svc-fmnwx
  I0901 05:19:29.830527 21 service_latency.go:363] Got endpoints: latency-svc-kjf47 [760.311585ms]
  I0901 05:19:29.849036 21 service_latency.go:356] Created: latency-svc-9zp62
  I0901 05:19:29.872338 21 service_latency.go:363] Got endpoints: latency-svc-vjlxj [751.77543ms]
  I0901 05:19:29.883238 21 service_latency.go:356] Created: latency-svc-4nkjj
  I0901 05:19:29.925808 21 service_latency.go:363] Got endpoints: latency-svc-4n7sp [746.437035ms]
  I0901 05:19:29.940366 21 service_latency.go:356] Created: latency-svc-qlq8x
  I0901 05:19:29.968490 21 service_latency.go:363] Got endpoints: latency-svc-d9pvd [744.770409ms]
  I0901 05:19:29.979496 21 service_latency.go:356] Created: latency-svc-hghgp
  I0901 05:19:30.019380 21 service_latency.go:363] Got endpoints: latency-svc-gk5cr [749.722126ms]
  I0901 05:19:30.034721 21 service_latency.go:356] Created: latency-svc-5qn54
  I0901 05:19:30.096021 21 service_latency.go:363] Got endpoints: latency-svc-n47n4 [774.108532ms]
  I0901 05:19:30.111654 21 service_latency.go:356] Created: latency-svc-nw86n
  I0901 05:19:30.119165 21 service_latency.go:363] Got endpoints: latency-svc-mjbbd [746.837869ms]
  I0901 05:19:30.129991 21 service_latency.go:356] Created: latency-svc-gttdv
  I0901 05:19:30.171072 21 service_latency.go:363] Got endpoints: latency-svc-s7svn [745.969796ms]
  I0901 05:19:30.180913 21 service_latency.go:356] Created: latency-svc-m6z95
  I0901 05:19:30.221255 21 service_latency.go:363] Got endpoints: latency-svc-z6dzj [748.016178ms]
  I0901 05:19:30.234635 21 service_latency.go:356] Created: latency-svc-gcdd9
  I0901 05:19:30.271743 21 service_latency.go:363] Got endpoints: latency-svc-5jxzn [751.262864ms]
  I0901 05:19:30.295823 21 service_latency.go:356] Created: latency-svc-znb26
  I0901 05:19:30.325033 21 service_latency.go:363] Got endpoints: latency-svc-zvk7j [755.517485ms]
  I0901 05:19:30.338822 21 service_latency.go:356] Created: latency-svc-4mbg4
  I0901 05:19:30.370815 21 service_latency.go:363] Got endpoints: latency-svc-tb6ws [739.183696ms]
  I0901 05:19:30.380378 21 service_latency.go:356] Created: latency-svc-pzsnw
  I0901 05:19:30.423457 21 service_latency.go:363] Got endpoints: latency-svc-n876l [749.252036ms]
  I0901 05:19:30.438359 21 service_latency.go:356] Created: latency-svc-5p2j4
  I0901 05:19:30.470303 21 service_latency.go:363] Got endpoints: latency-svc-57hjs [746.44816ms]
  I0901 05:19:30.479228 21 service_latency.go:356] Created: latency-svc-mk7th
  I0901 05:19:30.521368 21 service_latency.go:363] Got endpoints: latency-svc-fmnwx [752.50848ms]
  I0901 05:19:30.532072 21 service_latency.go:356] Created: latency-svc-pcfkk
  I0901 05:19:30.570252 21 service_latency.go:363] Got endpoints: latency-svc-9zp62 [739.15437ms]
  I0901 05:19:30.582592 21 service_latency.go:356] Created: latency-svc-b57cc
  I0901 05:19:30.619664 21 service_latency.go:363] Got endpoints: latency-svc-4nkjj [747.237857ms]
  I0901 05:19:30.632567 21 service_latency.go:356] Created: latency-svc-vhcs4
  I0901 05:19:30.675571 21 service_latency.go:363] Got endpoints: latency-svc-qlq8x [749.370687ms]
  I0901 05:19:30.689057 21 service_latency.go:356] Created: latency-svc-f48s5
  I0901 05:19:30.722408 21 service_latency.go:363] Got endpoints: latency-svc-hghgp [753.41927ms]
  I0901 05:19:30.735241 21 service_latency.go:356] Created: latency-svc-vkxfn
  I0901 05:19:30.769805 21 service_latency.go:363] Got endpoints: latency-svc-5qn54 [749.870545ms]
  I0901 05:19:30.782065 21 service_latency.go:356] Created: latency-svc-h5fp8
  I0901 05:19:30.822422 21 service_latency.go:363] Got endpoints: latency-svc-nw86n [726.347805ms]
  I0901 05:19:30.835119 21 service_latency.go:356] Created: latency-svc-xf9g9
  I0901 05:19:30.871645 21 service_latency.go:363] Got endpoints: latency-svc-gttdv [751.733786ms]
  I0901 05:19:30.884205 21 service_latency.go:356] Created: latency-svc-pxb24
  I0901 05:19:30.919557 21 service_latency.go:363] Got endpoints: latency-svc-m6z95 [748.403161ms]
  I0901 05:19:30.948666 21 service_latency.go:356] Created: latency-svc-2nwnz
  I0901 05:19:30.968721 21 service_latency.go:363] Got endpoints: latency-svc-gcdd9 [746.445188ms]
  I0901 05:19:30.981062 21 service_latency.go:356] Created: latency-svc-vfdrk
  I0901 05:19:31.018305 21 service_latency.go:363] Got endpoints: latency-svc-znb26 [745.681463ms]
  I0901 05:19:31.028102 21 service_latency.go:356] Created: latency-svc-cf4gv
  I0901 05:19:31.072251 21 service_latency.go:363] Got endpoints: latency-svc-4mbg4 [746.659549ms]
  I0901 05:19:31.087142 21 service_latency.go:356] Created: latency-svc-rckqf
  I0901 05:19:31.119093 21 service_latency.go:363] Got endpoints: latency-svc-pzsnw [748.012048ms]
  I0901 05:19:31.131458 21 service_latency.go:356] Created: latency-svc-8tn9v
  I0901 05:19:31.172969 21 service_latency.go:363] Got endpoints: latency-svc-5p2j4 [749.320743ms]
  I0901 05:19:31.191980 21 service_latency.go:356] Created: latency-svc-857jn
  I0901 05:19:31.224554 21 service_latency.go:363] Got endpoints: latency-svc-mk7th [753.913056ms]
  I0901 05:19:31.239422 21 service_latency.go:356] Created: latency-svc-24nfw
  I0901 05:19:31.271844 21 service_latency.go:363] Got endpoints: latency-svc-pcfkk [750.366302ms]
  I0901 05:19:31.285793 21 service_latency.go:356] Created: latency-svc-j7h2x
  I0901 05:19:31.321989 21 service_latency.go:363] Got endpoints: latency-svc-b57cc [751.502866ms]
  I0901 05:19:31.335535 21 service_latency.go:356] Created: latency-svc-c8wjk
  I0901 05:19:31.384187 21 service_latency.go:363] Got endpoints: latency-svc-vhcs4 [764.312616ms]
  I0901 05:19:31.395272 21 service_latency.go:356] Created: latency-svc-2bnpk
  I0901 05:19:31.419761 21 service_latency.go:363] Got endpoints: latency-svc-f48s5 [744.023944ms]
  I0901 05:19:31.430032 21 service_latency.go:356] Created: latency-svc-28rlw
  I0901 05:19:31.471931 21 service_latency.go:363] Got endpoints: latency-svc-vkxfn [749.469175ms]
  I0901 05:19:31.483753 21 service_latency.go:356] Created: latency-svc-c4kqx
  I0901 05:19:31.519603 21 service_latency.go:363] Got endpoints: latency-svc-h5fp8 [749.357127ms]
  I0901 05:19:31.533807 21 service_latency.go:356] Created: latency-svc-wcpq8
  I0901 05:19:31.568999 21 service_latency.go:363] Got endpoints: latency-svc-xf9g9 [746.076866ms]
  I0901 05:19:31.581972 21 service_latency.go:356] Created: latency-svc-wkqvz
  I0901 05:19:31.619092 21 service_latency.go:363] Got endpoints: latency-svc-pxb24 [747.075268ms]
  I0901 05:19:31.629614 21 service_latency.go:356] Created: latency-svc-2mhhz
  I0901 05:19:31.670431 21 service_latency.go:363] Got endpoints: latency-svc-2nwnz [750.275386ms]
  I0901 05:19:31.681414 21 service_latency.go:356] Created: latency-svc-f8g85
  I0901 05:19:31.721176 21 service_latency.go:363] Got endpoints: latency-svc-vfdrk [751.927826ms]
  I0901 05:19:31.732890 21 service_latency.go:356] Created: latency-svc-g5c6t
  I0901 05:19:31.769990 21 service_latency.go:363] Got endpoints: latency-svc-cf4gv [750.924043ms]
  I0901 05:19:31.780683 21 service_latency.go:356] Created: latency-svc-2djc2
  I0901 05:19:31.820227 21 service_latency.go:363] Got endpoints: latency-svc-rckqf [747.919649ms]
  I0901 05:19:31.832129 21 service_latency.go:356] Created: latency-svc-rs8w5
  I0901 05:19:31.873737 21 service_latency.go:363] Got endpoints: latency-svc-8tn9v [754.437618ms]
  I0901 05:19:31.885228 21 service_latency.go:356] Created: latency-svc-86848
  I0901 05:19:31.924890 21 service_latency.go:363] Got endpoints: latency-svc-857jn [751.434931ms]
  I0901 05:19:31.939674 21 service_latency.go:356] Created: latency-svc-hxglk
  I0901 05:19:31.969811 21 service_latency.go:363] Got endpoints: latency-svc-24nfw [745.089923ms]
  I0901 05:19:31.979694 21 service_latency.go:356] Created: latency-svc-dmxgq
  I0901 05:19:32.019995 21 service_latency.go:363] Got endpoints: latency-svc-j7h2x [747.750272ms]
  I0901 05:19:32.030392 21 service_latency.go:356] Created: latency-svc-zr9s8
  I0901 05:19:32.070039 21 service_latency.go:363] Got endpoints: latency-svc-c8wjk [748.001135ms]
  I0901 05:19:32.080304 21 service_latency.go:356] Created: latency-svc-ggnrt
  I0901 05:19:32.119396 21 service_latency.go:363] Got endpoints: latency-svc-2bnpk [735.108886ms]
  I0901 05:19:32.141406 21 service_latency.go:356] Created: latency-svc-glcmp
  I0901 05:19:32.170511 21 service_latency.go:363] Got endpoints: latency-svc-28rlw [750.190942ms]
  I0901 05:19:32.181451 21 service_latency.go:356] Created: latency-svc-98lnt
  I0901 05:19:32.220041 21 service_latency.go:363] Got endpoints: latency-svc-c4kqx [747.731611ms]
  I0901 05:19:32.231177 21 service_latency.go:356] Created: latency-svc-jllhp
  I0901 05:19:32.277054 21 service_latency.go:363] Got endpoints: latency-svc-wcpq8 [756.978532ms]
  I0901 05:19:32.290877 21 service_latency.go:356] Created: latency-svc-h5dpx
  I0901 05:19:32.324073 21 service_latency.go:363] Got endpoints: latency-svc-wkqvz [754.899901ms]
  I0901 05:19:32.335779 21 service_latency.go:356] Created: latency-svc-2msck
  I0901 05:19:32.372023 21 service_latency.go:363] Got endpoints: latency-svc-2mhhz [752.712975ms]
  I0901 05:19:32.383092 21 service_latency.go:356] Created: latency-svc-tpds8
  I0901 05:19:32.422721 21 service_latency.go:363] Got endpoints: latency-svc-f8g85 [751.323686ms]
  I0901 05:19:32.435939 21 service_latency.go:356] Created: latency-svc-wkm9g
  I0901 05:19:32.469603 21 service_latency.go:363] Got endpoints: latency-svc-g5c6t [747.907128ms]
  I0901 05:19:32.484401 21 service_latency.go:356] Created: latency-svc-mthkm
  I0901 05:19:32.519801 21 service_latency.go:363] Got endpoints: latency-svc-2djc2 [748.976159ms]
  I0901 05:19:32.536946 21 service_latency.go:356] Created: latency-svc-mvmgc
  I0901 05:19:32.574929 21 service_latency.go:363] Got endpoints: latency-svc-rs8w5 [754.641842ms]
  I0901 05:19:32.590949 21 service_latency.go:356] Created: latency-svc-nz8jf
  I0901 05:19:32.622960 21 service_latency.go:363] Got endpoints: latency-svc-86848 [749.008863ms]
  I0901 05:19:32.634338 21 service_latency.go:356] Created: latency-svc-kxkft
  I0901 05:19:32.672906 21 service_latency.go:363] Got endpoints: latency-svc-hxglk [747.761389ms]
  I0901 05:19:32.685441 21 service_latency.go:356] Created: latency-svc-qcxcd
  I0901 05:19:32.721537 21 service_latency.go:363] Got endpoints: latency-svc-dmxgq [751.676461ms]
  I0901 05:19:32.736547 21 service_latency.go:356] Created: latency-svc-77qb6
  I0901 05:19:32.771805 21 service_latency.go:363] Got endpoints: latency-svc-zr9s8 [750.754865ms]
  I0901 05:19:32.787120 21 service_latency.go:356] Created: latency-svc-9sstb
  I0901 05:19:32.824343 21 service_latency.go:363] Got endpoints: latency-svc-ggnrt [753.988217ms]
  I0901 05:19:32.837514 21 service_latency.go:356] Created: latency-svc-g7k4s
  I0901 05:19:32.871988 21 service_latency.go:363] Got endpoints: latency-svc-glcmp [752.537997ms]
  I0901 05:19:32.885019 21 service_latency.go:356] Created: latency-svc-ftfhd
  I0901 05:19:32.923152 21 service_latency.go:363] Got endpoints: latency-svc-98lnt [752.042252ms]
  I0901 05:19:32.934649 21 service_latency.go:356] Created: latency-svc-2g58x
  I0901 05:19:32.971144 21 service_latency.go:363] Got endpoints: latency-svc-jllhp [750.264101ms]
  I0901 05:19:32.986882 21 service_latency.go:356] Created: latency-svc-49v69
  I0901 05:19:33.021734 21 service_latency.go:363] Got endpoints: latency-svc-h5dpx [744.621451ms]
  I0901 05:19:33.030520 21 service_latency.go:356] Created: latency-svc-64p5p
  I0901 05:19:33.074431 21 service_latency.go:363] Got endpoints: latency-svc-2msck [749.910186ms]
  I0901 05:19:33.087630 21 service_latency.go:356] Created: latency-svc-wm9td
  I0901 05:19:33.124238 21 service_latency.go:363] Got endpoints: latency-svc-tpds8 [752.154678ms]
  I0901 05:19:33.143088 21 service_latency.go:356] Created: latency-svc-lhcc8
  I0901 05:19:33.173307 21 service_latency.go:363] Got endpoints: latency-svc-wkm9g [750.066605ms]
  I0901 05:19:33.189307 21 service_latency.go:356] Created: latency-svc-9hpkw
  I0901 05:19:33.224578 21 service_latency.go:363] Got endpoints: latency-svc-mthkm [754.254285ms]
  I0901 05:19:33.237387 21 service_latency.go:356] Created: latency-svc-vrzjp
  I0901 05:19:33.269889 21 service_latency.go:363] Got endpoints: latency-svc-mvmgc [749.73421ms]
  I0901 05:19:33.285367 21 service_latency.go:356] Created: latency-svc-5g7gl
  I0901 05:19:33.319573 21 service_latency.go:363] Got endpoints: latency-svc-nz8jf [744.455055ms]
  I0901 05:19:33.343891 21 service_latency.go:356] Created: latency-svc-68bnp
  I0901 05:19:33.369678 21 service_latency.go:363] Got endpoints: latency-svc-kxkft [746.434977ms]
  I0901 05:19:33.384617 21 service_latency.go:356] Created: latency-svc-4pprf
  I0901 05:19:33.421462 21 service_latency.go:363] Got endpoints: latency-svc-qcxcd [748.167196ms]
  I0901 05:19:33.436782 21 service_latency.go:356] Created: latency-svc-q6zw6
  I0901 05:19:33.475275 21 service_latency.go:363] Got endpoints: latency-svc-77qb6 [753.679886ms]
  I0901 05:19:33.487909 21 service_latency.go:356] Created: latency-svc-xldnj
  I0901 05:19:33.522307 21 service_latency.go:363] Got endpoints: latency-svc-9sstb [750.447904ms]
  I0901 05:19:33.540046 21 service_latency.go:356] Created: latency-svc-cw7l6
  I0901 05:19:33.583278 21 service_latency.go:363] Got endpoints: latency-svc-g7k4s [758.879643ms]
  I0901 05:19:33.602839 21 service_latency.go:356] Created: latency-svc-8p9hz
  I0901 05:19:33.621076 21 service_latency.go:363] Got endpoints: latency-svc-ftfhd [749.031619ms]
  I0901 05:19:33.671978 21 service_latency.go:363] Got endpoints: latency-svc-2g58x [748.387326ms]
  I0901 05:19:33.723099 21 service_latency.go:363] Got endpoints: latency-svc-49v69 [751.412568ms]
  I0901 05:19:33.773199 21 service_latency.go:363] Got endpoints: latency-svc-64p5p [751.397075ms]
  I0901 05:19:33.823528 21 service_latency.go:363] Got endpoints: latency-svc-wm9td [749.019202ms]
  I0901 05:19:33.871473 21 service_latency.go:363] Got endpoints: latency-svc-lhcc8 [746.388016ms]
  I0901 05:19:33.924997 21 service_latency.go:363] Got endpoints: latency-svc-9hpkw [751.257286ms]
  I0901 05:19:33.972144 21 service_latency.go:363] Got endpoints: latency-svc-vrzjp [747.149356ms]
  I0901 05:19:34.022793 21 service_latency.go:363] Got endpoints: latency-svc-5g7gl [752.792313ms]
  I0901 05:19:34.070788 21 service_latency.go:363] Got endpoints: latency-svc-68bnp [751.08164ms]
  I0901 05:19:34.125138 21 service_latency.go:363] Got endpoints: latency-svc-4pprf [755.406744ms]
  I0901 05:19:34.176341 21 service_latency.go:363] Got endpoints: latency-svc-q6zw6 [754.819307ms]
  I0901 05:19:34.222930 21 service_latency.go:363] Got endpoints: latency-svc-xldnj [746.535265ms]
  I0901 05:19:34.274148 21 service_latency.go:363] Got endpoints: latency-svc-cw7l6 [751.35629ms]
  I0901 05:19:34.323188 21 service_latency.go:363] Got endpoints: latency-svc-8p9hz [739.684443ms]
  I0901 05:19:34.323886 21 service_latency.go:114] Latencies: [18.573294ms 49.747786ms 60.861387ms 71.597625ms 80.813838ms 88.274311ms 102.96582ms 108.715752ms 122.652429ms 131.509965ms 132.4436ms 132.499628ms 132.588174ms 133.417604ms 135.012396ms 135.395388ms 141.966848ms 152.554188ms 156.112983ms 156.140475ms 156.446382ms 156.682057ms 168.551663ms 179.906808ms 180.818057ms 180.896213ms 191.844384ms 194.229396ms 198.78849ms 200.328884ms 200.548947ms 205.332572ms 205.415281ms 206.306487ms 209.943903ms 211.562546ms 217.185551ms 224.089654ms 226.352073ms 242.059944ms 262.723951ms 306.562083ms 338.44988ms 388.565979ms 464.208502ms 476.638142ms 524.09417ms 567.225638ms 617.473448ms 671.41001ms 712.568723ms 726.347805ms 733.277399ms 735.108886ms 735.144979ms 739.15437ms 739.183696ms 739.684443ms 740.723528ms 743.658599ms 743.723005ms 743.874781ms 744.023944ms 744.072427ms 744.083188ms 744.455055ms 744.519306ms 744.526875ms 744.621451ms 744.709951ms 744.770409ms 745.089923ms 745.571774ms 745.65146ms 745.671512ms 745.681463ms 745.705008ms 745.969796ms 746.076866ms 746.380274ms 746.388016ms 746.434977ms 746.437035ms 746.445188ms 746.44816ms 746.523351ms 746.535265ms 746.645988ms 746.659549ms 746.837869ms 746.982774ms 747.075268ms 747.149356ms 747.237857ms 747.293633ms 747.296299ms 747.585013ms 747.59862ms 747.656615ms 747.700654ms 747.731611ms 747.750272ms 747.761389ms 747.852294ms 747.907128ms 747.919649ms 748.001135ms 748.012048ms 748.016178ms 748.167196ms 748.323643ms 748.346296ms 748.387326ms 748.40099ms 748.403161ms 748.529213ms 748.976159ms 749.008863ms 749.019202ms 749.031619ms 749.192455ms 749.252036ms 749.320743ms 749.342846ms 749.357127ms 749.370687ms 749.469175ms 749.722126ms 749.731704ms 749.73421ms 749.765868ms 749.870545ms 749.910186ms 750.066605ms 750.190942ms 750.264101ms 750.275386ms 750.329433ms 750.366302ms 750.447904ms 750.590918ms 750.738852ms 750.754865ms 750.866305ms 750.924043ms 751.08164ms 751.257286ms 751.262864ms 751.323686ms 751.35629ms 751.397075ms 751.412568ms 751.434931ms 751.474507ms 751.502866ms 751.676461ms 751.733786ms 751.77543ms 751.927826ms 751.971339ms 752.042252ms 752.087994ms 752.154678ms 752.219685ms 752.50848ms 752.510159ms 752.537997ms 752.712975ms 752.792313ms 752.932736ms 753.064456ms 753.396947ms 753.41927ms 753.679886ms 753.813464ms 753.913056ms 753.917474ms 753.985051ms 753.988217ms 754.254285ms 754.437618ms 754.641842ms 754.819307ms 754.899901ms 755.183073ms 755.201048ms 755.339831ms 755.406744ms 755.517485ms 755.565308ms 756.479629ms 756.978532ms 757.663433ms 758.879643ms 759.801834ms 760.311585ms 764.312616ms 769.616605ms 772.940788ms 774.108532ms]
  I0901 05:19:34.324567 21 service_latency.go:118] 50 %ile: 747.731611ms
  I0901 05:19:34.324713 21 service_latency.go:119] 90 %ile: 754.437618ms
  I0901 05:19:34.324843 21 service_latency.go:120] 99 %ile: 772.940788ms
  I0901 05:19:34.324986 21 service_latency.go:121] Total sample count: 200
  I0901 05:19:34.325521 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3173" for this suite. @ 09/01/25 05:19:34.331
• [9.786 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/01/25 05:19:34.342
  I0901 05:19:34.342961 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:19:34.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:34.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:34.366
  STEP: Creating Pod @ 09/01/25 05:19:34.369
  STEP: Reading file content from the nginx-container @ 09/01/25 05:19:36.394
  I0901 05:19:36.394247 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4746 PodName:pod-sharedvolume-d27cc8eb-96de-4c92-85f1-fcff3db0c3b4 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:19:36.394273 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:19:36.394352 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-4746/pods/pod-sharedvolume-d27cc8eb-96de-4c92-85f1-fcff3db0c3b4/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0901 05:19:36.506764 21 exec_util.go:108] Exec stderr: ""
  I0901 05:19:36.507293 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4746" for this suite. @ 09/01/25 05:19:36.512
• [2.177 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/01/25 05:19:36.519
  I0901 05:19:36.520003 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:19:36.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:36.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:36.539
  STEP: Creating a pod to test downward api env vars @ 09/01/25 05:19:36.542
  STEP: Saw pod success @ 09/01/25 05:19:40.576
  I0901 05:19:40.583338 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod downward-api-75d72805-8882-47d3-8b58-1015d9c97838 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:19:40.598
  I0901 05:19:40.619975 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4130" for this suite. @ 09/01/25 05:19:40.643
• [4.132 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 09/01/25 05:19:40.652
  I0901 05:19:40.652757 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 05:19:40.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:40.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:40.745
  I0901 05:19:44.840470 21 security_context.go:538] Got logs for pod "busybox-privileged-false-4737cace-b8dc-4a73-936e-f93ea9089b50": "ip: RTNETLINK answers: Operation not permitted\n"
  I0901 05:19:44.840659 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3753" for this suite. @ 09/01/25 05:19:44.844
• [4.199 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 09/01/25 05:19:44.851
  I0901 05:19:44.851839 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:19:44.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:44.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:44.866
  STEP: Creating a ResourceQuota @ 09/01/25 05:19:44.869
  STEP: Getting a ResourceQuota @ 09/01/25 05:19:44.874
  STEP: Updating a ResourceQuota @ 09/01/25 05:19:44.883
  STEP: Verifying a ResourceQuota was modified @ 09/01/25 05:19:44.888
  STEP: Deleting a ResourceQuota @ 09/01/25 05:19:44.894
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 05:19:44.9
  I0901 05:19:44.904432 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9641" for this suite. @ 09/01/25 05:19:44.947
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/01/25 05:19:44.957
  I0901 05:19:44.957768 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:19:44.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:44.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:44.984
  STEP: Creating projection with secret that has name projected-secret-test-4b233709-19ee-44d9-bc1f-52e8b62e7567 @ 09/01/25 05:19:44.986
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:19:44.991
  STEP: Saw pod success @ 09/01/25 05:19:49.028
  I0901 05:19:49.034666 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-secrets-f9297f44-fd8d-4783-9579-c9ab75c4141b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:19:49.047
  I0901 05:19:49.067147 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9667" for this suite. @ 09/01/25 05:19:49.072
• [4.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 09/01/25 05:19:49.081
  I0901 05:19:49.081879 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:19:49.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:49.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:49.1
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 05:19:49.107
  I0901 05:19:49.107801 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1278 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 05:19:49.206561 21 builder.go:146] stderr: ""
  I0901 05:19:49.206757 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/01/25 05:19:49.206
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/01/25 05:19:54.258
  I0901 05:19:54.258330 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1278 get pod e2e-test-httpd-pod -o json'
  I0901 05:19:54.342842 21 builder.go:146] stderr: ""
  I0901 05:19:54.342961 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-01T05:19:49Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1278\",\n        \"resourceVersion\": \"24935\",\n        \"uid\": \"0b785b4b-b9b2-4cb8-a2a6-49acca600a0d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k2796\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-k2796\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T05:19:50Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T05:19:49Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T05:19:50Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T05:19:50Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-01T05:19:49Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://0f513c92c69b514a4dd70062fe1908b518eb0cbf8224e811b5b60b4e529efa77\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-01T05:19:49Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-k2796\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.1.9\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.1.9\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.9\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.9\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-01T05:19:49Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/01/25 05:19:54.342
  I0901 05:19:54.343079 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1278 replace -f -'
  I0901 05:19:54.517496 21 builder.go:146] stderr: ""
  I0901 05:19:54.517550 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/01/25 05:19:54.517
  I0901 05:19:54.528566 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1278 delete pods e2e-test-httpd-pod'
  I0901 05:19:56.378401 21 builder.go:146] stderr: ""
  I0901 05:19:56.378449 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 05:19:56.378680 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1278" for this suite. @ 09/01/25 05:19:56.386
• [7.316 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/01/25 05:19:56.397
  I0901 05:19:56.397707 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename discovery @ 09/01/25 05:19:56.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:56.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:56.418
  STEP: Setting up server cert @ 09/01/25 05:19:56.423
  I0901 05:19:56.844916 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0901 05:19:56.847467 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0901 05:19:56.847511 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0901 05:19:56.847524 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0901 05:19:56.847535 21 discovery.go:139] Checking APIGroup: apps
  I0901 05:19:56.849516 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0901 05:19:56.849572 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0901 05:19:56.849592 21 discovery.go:154] apps/v1 matches apps/v1
  I0901 05:19:56.849611 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0901 05:19:56.851742 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0901 05:19:56.851776 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0901 05:19:56.851791 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0901 05:19:56.851801 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0901 05:19:56.853572 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0901 05:19:56.853601 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0901 05:19:56.853612 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0901 05:19:56.853622 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0901 05:19:56.855697 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0901 05:19:56.855772 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0901 05:19:56.855799 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0901 05:19:56.855858 21 discovery.go:139] Checking APIGroup: autoscaling
  I0901 05:19:56.858111 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0901 05:19:56.858165 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0901 05:19:56.858219 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0901 05:19:56.858237 21 discovery.go:139] Checking APIGroup: batch
  I0901 05:19:56.860636 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0901 05:19:56.860685 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0901 05:19:56.860734 21 discovery.go:154] batch/v1 matches batch/v1
  I0901 05:19:56.860772 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0901 05:19:56.863010 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0901 05:19:56.863062 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0901 05:19:56.863082 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0901 05:19:56.863100 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0901 05:19:56.865159 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0901 05:19:56.865213 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0901 05:19:56.865233 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0901 05:19:56.865311 21 discovery.go:139] Checking APIGroup: policy
  I0901 05:19:56.867808 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0901 05:19:56.867861 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0901 05:19:56.867880 21 discovery.go:154] policy/v1 matches policy/v1
  I0901 05:19:56.868095 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0901 05:19:56.870215 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0901 05:19:56.870284 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0901 05:19:56.870304 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0901 05:19:56.870321 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0901 05:19:56.872674 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0901 05:19:56.872725 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0901 05:19:56.872745 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0901 05:19:56.872763 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0901 05:19:56.875192 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0901 05:19:56.875239 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0901 05:19:56.875257 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0901 05:19:56.875274 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0901 05:19:56.878120 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0901 05:19:56.878180 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0901 05:19:56.878263 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0901 05:19:56.878281 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0901 05:19:56.880508 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0901 05:19:56.880795 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0901 05:19:56.881037 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0901 05:19:56.881061 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0901 05:19:56.883093 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0901 05:19:56.883429 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0901 05:19:56.883706 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0901 05:19:56.884014 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0901 05:19:56.886217 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0901 05:19:56.886275 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0901 05:19:56.886325 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0901 05:19:56.886604 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0901 05:19:56.888922 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0901 05:19:56.889303 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0901 05:19:56.889668 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0901 05:19:56.890063 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0901 05:19:56.892109 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0901 05:19:56.892153 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0901 05:19:56.892172 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0901 05:19:56.892421 21 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0901 05:19:56.894503 21 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0901 05:19:56.894559 21 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0901 05:19:56.894579 21 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0901 05:19:56.894837 21 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0901 05:19:56.897162 21 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0901 05:19:56.897217 21 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0901 05:19:56.897237 21 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0901 05:19:56.897255 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0901 05:19:56.899165 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0901 05:19:56.899219 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0901 05:19:56.899273 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0901 05:19:56.899858 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8183" for this suite. @ 09/01/25 05:19:56.906
• [0.518 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/01/25 05:19:56.917
  I0901 05:19:56.917935 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 05:19:56.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:19:56.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:19:56.94
  STEP: Creating pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441 @ 09/01/25 05:19:56.945
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 05:19:58.966
  I0901 05:19:58.973788 21 container_probe.go:1749] Initial restart count of pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab is 0
  I0901 05:19:58.978463 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:00.984533 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:02.993475 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:05.004015 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:07.013249 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:09.019690 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:11.028572 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:13.036834 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:15.044607 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:17.050182 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:19.058163 21 container_probe.go:1759] Get pod liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab in namespace container-probe-9441
  I0901 05:20:19.058244 21 container_probe.go:1763] Restart count of pod container-probe-9441/liveness-f33ffdf5-5530-495d-8190-a20f47bc4eab is now 1 (20.084402745s elapsed)
  STEP: deleting the pod @ 09/01/25 05:20:19.058
  I0901 05:20:19.080143 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9441" for this suite. @ 09/01/25 05:20:19.088
• [22.181 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/01/25 05:20:19.099
  I0901 05:20:19.099303 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename subjectreview @ 09/01/25 05:20:19.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:19.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:19.12
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1800" @ 09/01/25 05:20:19.123
  I0901 05:20:19.129354 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1800:e2e"
  I0901 05:20:19.129408 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1800"}
  I0901 05:20:19.129420 21 subjectreviews.go:71] saUID: "2a3188db-796f-4c11-9980-b3f4ed3873d1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1800:e2e" @ 09/01/25 05:20:19.129
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1800:e2e" @ 09/01/25 05:20:19.129
  I0901 05:20:19.131978 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1800:e2e" api 'list' configmaps in "subjectreview-1800" namespace @ 09/01/25 05:20:19.132
  I0901 05:20:19.134460 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1800:e2e" @ 09/01/25 05:20:19.134
  I0901 05:20:19.136596 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0901 05:20:19.136699 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0901 05:20:19.136861 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1800" for this suite. @ 09/01/25 05:20:19.19
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/01/25 05:20:19.202
  I0901 05:20:19.202545 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:20:19.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:19.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:19.22
  STEP: Creating configMap with name configmap-test-volume-map-54561df9-76da-4589-b8f0-98e4f693d76e @ 09/01/25 05:20:19.224
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:20:19.229
  STEP: Saw pod success @ 09/01/25 05:20:23.264
  I0901 05:20:23.272683 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-dd32ac67-62a6-4ca5-b6be-165abf3b1df9 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:20:23.288
  I0901 05:20:23.315838 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7001" for this suite. @ 09/01/25 05:20:23.322
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/01/25 05:20:23.336
  I0901 05:20:23.336476 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 05:20:23.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:23.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:23.359
  I0901 05:20:23.362148 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0901 05:20:23.368121 21 deployment.go:1200] Waiting for observed generation 1
  I0901 05:20:25.379400 21 deployment.go:1205] Waiting for all required pods to come up
  I0901 05:20:25.384812 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/01/25 05:20:25.384
  I0901 05:20:27.409592 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0901 05:20:27.426024 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0901 05:20:27.438877 21 deployment.go:314] Updating deployment webserver-deployment
  I0901 05:20:27.438934 21 deployment.go:1224] Waiting for observed generation 2
  I0901 05:20:29.451034 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0901 05:20:29.455941 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0901 05:20:29.460201 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 05:20:29.472711 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0901 05:20:29.473002 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0901 05:20:29.477112 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0901 05:20:29.489098 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0901 05:20:29.489552 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0901 05:20:29.507417 21 deployment.go:314] Updating deployment webserver-deployment
  I0901 05:20:29.507470 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0901 05:20:29.524513 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0901 05:20:31.531574 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0901 05:20:31.541197 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc9bc78d-897b-4366-b901-b37a14635719",
      ResourceVersion: (string) (len=5) "25479",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 13,
      AvailableReplicas: (int32) 13,
      UnavailableReplicas: (int32) 20,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 05:20:31.569582 21 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
      ResourceVersion: (string) (len=5) "25367",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "bc9bc78d-897b-4366-b901-b37a14635719",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 39 62 63 37  38 64 2d 38 39 37 62 2d  |\"bc9bc78d-897b-|
              00000120  34 33 36 36 2d 62 39 30  31 2d 62 33 37 61 31 34  |4366-b901-b37a14|
              00000130  36 33 35 37 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |635719\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:20:31.573425 21 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0901 05:20:31.573856 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
      ResourceVersion: (string) (len=5) "25482",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "bc9bc78d-897b-4366-b901-b37a14635719",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 39 62 63 37  38 64 2d 38 39 37 62 2d  |\"bc9bc78d-897b-|
              00000120  34 33 36 36 2d 62 39 30  31 2d 62 33 37 61 31 34  |4366-b901-b37a14|
              00000130  36 33 35 37 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |635719\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 14,
      AvailableReplicas: (int32) 14,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:20:31.606842 21 deployment.go:68] Pod "webserver-deployment-685b768f58-2p28p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2p28p",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a83ae88f-8905-485c-b072-cbe03872b093",
      ResourceVersion: (string) (len=5) "25481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 31  5c 22 7d 22 3a 7b 22 2e  |.42.1.21\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vfc99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vfc99",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300831,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://248995022f0c915e6af3d4c37ba0da6188ccc294c96f759190ffe6f7111ee6ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vfc99",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.618122 21 deployment.go:68] Pod "webserver-deployment-685b768f58-77rqv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-77rqv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "baa3b0ad-f77c-47b0-92bc-ef8c33031337",
      ResourceVersion: (string) (len=5) "25443",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 35  5c 22 7d 22 3a 7b 22 2e  |.42.0.95\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-msf6r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-msf6r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.95",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.95"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300830,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://19b4b89926eda77b10e5ea0880049bb8f58ec388a94e2832e39dd3059c014078",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-msf6r",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.622089 21 deployment.go:68] Pod "webserver-deployment-685b768f58-8qb77" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8qb77",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9d59445-a0e1-44ac-a897-a38a5e2454b4",
      ResourceVersion: (string) (len=5) "25475",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 38  5c 22 7d 22 3a 7b 22 2e  |.42.1.18\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8lbqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8lbqj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300830,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://559248b9e748ac65e6d4ecb8ea0fbe209eea7fa9309889de178c7cffbb3e9516",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8lbqj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.629952 21 deployment.go:68] Pod "webserver-deployment-685b768f58-92mjf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-92mjf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41f4efcf-8d6b-4cca-bde5-53bea1286508",
      ResourceVersion: (string) (len=5) "25380",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9mwb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9mwb8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9mwb8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.632925 21 deployment.go:68] Pod "webserver-deployment-685b768f58-dvggc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-dvggc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1b4fce6-6a1e-4d9d-8e4e-7bfe54015bff",
      ResourceVersion: (string) (len=5) "25175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 38 39  5c 22 7d 22 3a 7b 22 2e  |.42.0.89\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f4kvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f4kvm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://41684f776470d052073037e42aa9a8bdfb422caa978ad0c48a57ba3c4861930f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f4kvm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.637538 21 deployment.go:68] Pod "webserver-deployment-685b768f58-ggg5q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ggg5q",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3a207d8-369b-477c-b0d6-f14599a09ab2",
      ResourceVersion: (string) (len=5) "25183",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  5c 22 7d 22 3a 7b 22 2e  |.42.1.15\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmq4q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmq4q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a198a3b91b8f3fbbca34c7a9436995423ed7393560053f772d684c9a95ac9b97",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tmq4q",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.640897 21 deployment.go:68] Pod "webserver-deployment-685b768f58-k59lr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-k59lr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a6a0612-513b-4a70-9210-79654bf2e283",
      ResourceVersion: (string) (len=5) "25172",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 31  5c 22 7d 22 3a 7b 22 2e  |.42.0.91\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hjppw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hjppw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://262f010b5d3afba9825ab99fe180a42802dfbe87c964fbcca287b3a5a81e4f8e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hjppw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.645644 21 deployment.go:68] Pod "webserver-deployment-685b768f58-kv7gc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kv7gc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46e9b840-19fa-4116-aa7e-f38b1a92ad71",
      ResourceVersion: (string) (len=5) "25151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 31  39 5c 22 7d 22 3a 7b 22  |.42.2.119\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwrqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwrqq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://24d4edcedcfad761017b356388f4c88d1f8c896b81e2076dea2c0f7a87df1ffa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kwrqq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.648051 21 deployment.go:68] Pod "webserver-deployment-685b768f58-lbl2c" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lbl2c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fb3b6ff-d93b-4005-bbfc-92d20a4b55b6",
      ResourceVersion: (string) (len=5) "25148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 31  38 5c 22 7d 22 3a 7b 22  |.42.2.118\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mczq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mczq9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://46d34229e4f45b762304022f6c70d50097be2da33f776bec406227620334eab1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mczq9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.656528 21 deployment.go:68] Pod "webserver-deployment-685b768f58-lczzn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lczzn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca686858-d2ff-4d1a-98a1-4846c1337935",
      ResourceVersion: (string) (len=5) "25491",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 30  5c 22 7d 22 3a 7b 22 2e  |.42.1.20\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54krb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54krb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300831,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e0ec15fb93a9fa7fbd236df2f10f28c386bf55571fd11fe80c13fe4a2cc64322",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-54krb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.659274 21 deployment.go:68] Pod "webserver-deployment-685b768f58-m27jm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m27jm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8853b430-623d-43fc-b23a-1f447b38e78b",
      ResourceVersion: (string) (len=5) "25190",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.12\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sz7k9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sz7k9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300825,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://65c46a2c13b5bd5fdd3d1ea5dc79dfbb964f0a327987d7b4dfbb105068ff114e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sz7k9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.662605 21 deployment.go:68] Pod "webserver-deployment-685b768f58-m5mbj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-m5mbj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17667448-6f43-4094-9616-1eee9f3243b4",
      ResourceVersion: (string) (len=5) "25169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 30  5c 22 7d 22 3a 7b 22 2e  |.42.0.90\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mtsk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mtsk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4e0dfa23dce4058f897ed759f571c9398f4f369f0825adcadca314f97d886c8e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7mtsk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.674822 21 deployment.go:68] Pod "webserver-deployment-685b768f58-nl28r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nl28r",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8218b940-d46c-4f20-95a7-9540485d80ef",
      ResourceVersion: (string) (len=5) "25144",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 31  37 5c 22 7d 22 3a 7b 22  |.42.2.117\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ck5sv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ck5sv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300823,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300824,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://853c7b1ab693c6741b5f6f13fe2638d7a25de543082ae64a3598b0c27e256df7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ck5sv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.681159 21 deployment.go:68] Pod "webserver-deployment-685b768f58-ps7fz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-ps7fz",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a5ba219-80ea-4d1b-9c45-b856f0934ffa",
      ResourceVersion: (string) (len=5) "25452",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 34  5c 22 7d 22 3a 7b 22 2e  |.42.0.94\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmbsf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmbsf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300830,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f0629bf7eb7af5053fd250ae92636d29bd2cfcb0f7015b30a430a3afd04bb645",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jmbsf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.685696 21 deployment.go:68] Pod "webserver-deployment-685b768f58-q5t6j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-q5t6j",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aae1b499-d580-46a5-8aac-968c74697ccc",
      ResourceVersion: (string) (len=5) "25487",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 32  36 5c 22 7d 22 3a 7b 22  |.42.2.126\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ggsx7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ggsx7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300830,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://98aa5e83dcb060effbced9780c4a837c0530977b53414271ab38708572563ac9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ggsx7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.692926 21 deployment.go:68] Pod "webserver-deployment-685b768f58-vh2m4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vh2m4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42f9aca8-359e-4536-b2b1-fc83c089c701",
      ResourceVersion: (string) (len=5) "25416",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 32  32 5c 22 7d 22 3a 7b 22  |.42.2.122\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zs7bm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zs7bm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300830,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2a6da17e6cab9a3e08dfb4fff66128457ffe815d7bb4aa4ce7468ef7d8131a22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zs7bm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.700326 21 deployment.go:68] Pod "webserver-deployment-685b768f58-wlh8s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wlh8s",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79d1cddb-0b21-4483-b401-07f6256bdb02",
      ResourceVersion: (string) (len=5) "25455",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 39 38  5c 22 7d 22 3a 7b 22 2e  |.42.0.98\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czznj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czznj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.98",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.98"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300830,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://28eb7fcfaafde9c707778d783c899562a0d472d9f402d6cf72e6a59ed5a57759",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-czznj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.713900 21 deployment.go:68] Pod "webserver-deployment-685b768f58-xdlkt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xdlkt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c5c422d-fba4-4818-bf0b-ab8ecbb66dd2",
      ResourceVersion: (string) (len=5) "25484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.22\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k5sj6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k5sj6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892300831,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d6108971bda3732128ba0dbe103e1d07a1f3a35c53aa9d3d124c72d48413fc53",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k5sj6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.725817 21 deployment.go:68] Pod "webserver-deployment-685b768f58-z7mss" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-z7mss",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf74baec-ee97-42c5-87cc-7a699ec73f16",
      ResourceVersion: (string) (len=5) "25372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hdrbj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hdrbj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hdrbj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.739562 21 deployment.go:68] Pod "webserver-deployment-685b768f58-zxkvr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zxkvr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "370b095d-8c9c-4bdc-8d59-f8c8ad3d304c",
      ResourceVersion: (string) (len=5) "25381",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "eb54823b-4cce-4687-a2e3-751a72244720",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 62  35 34 38 32 33 62 2d 34  |d\":\"eb54823b-4|
              00000090  63 63 65 2d 34 36 38 37  2d 61 32 65 33 2d 37 35  |cce-4687-a2e3-75|
              000000a0  31 61 37 32 32 34 34 37  32 30 5c 22 7d 22 3a 7b  |1a72244720\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wr729",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wr729",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wr729",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.741862 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-28j74" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-28j74",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d2034c8-f6bc-4078-a2ee-edb3e3413eea",
      ResourceVersion: (string) (len=5) "25480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 39 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.19\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gv9rj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gv9rj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gv9rj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.747616 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-5wwc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-5wwc9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b70421c-d886-4eb1-8c76-bb42e3d527d0",
      ResourceVersion: (string) (len=5) "25276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 39 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.92\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r65j7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r65j7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r65j7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.763101 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6b67k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6b67k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2af6164f-90d1-4182-8c91-1c5022228937",
      ResourceVersion: (string) (len=5) "25264",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 31 32 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |.2.120\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szcxn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szcxn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-szcxn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.766351 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9d5lb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9d5lb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85873260-4017-4cfa-908c-dcfccae0d092",
      ResourceVersion: (string) (len=5) "25354",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9fw4v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9fw4v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9fw4v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.777830 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dxb4x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dxb4x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3aec4788-e8a4-4435-8b9c-c90e6b604f92",
      ResourceVersion: (string) (len=5) "25450",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 39 33 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.93\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jscnd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jscnd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=10) "10.42.0.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jscnd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.779215 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-ftv55" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-ftv55",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19749c9e-f3ac-4907-9600-498adaa6d0d1",
      ResourceVersion: (string) (len=5) "25376",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n2f5s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n2f5s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n2f5s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.787988 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hrbjt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hrbjt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9044243c-ec08-4a94-aee0-dcadd2c49645",
      ResourceVersion: (string) (len=5) "25383",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n6dbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n6dbv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n6dbv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.801651 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-l7mjq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-l7mjq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca83da50-cbb5-4256-9acf-7e66ff183f00",
      ResourceVersion: (string) (len=5) "25386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gfdpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gfdpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gfdpm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.806204 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rzcm9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rzcm9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "db20f3f2-7d6c-44c4-af7f-963aee8351b9",
      ResourceVersion: (string) (len=5) "25382",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5shg8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5shg8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5shg8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.808004 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rzscz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rzscz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9e6ddbc-9b9c-4959-a8da-c154ff842691",
      ResourceVersion: (string) (len=5) "25283",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 37 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.17\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4m4md",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4m4md",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4m4md",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.823132 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tvdww" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tvdww",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d7a8435-1458-4b84-ae04-03cf29fe80d8",
      ResourceVersion: (string) (len=5) "25387",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bj4cc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bj4cc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bj4cc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.834602 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vwxsw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vwxsw",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e41095f-9a25-40e5-8f01-8a6a46b436b2",
      ResourceVersion: (string) (len=5) "25290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 31 32 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |.2.121\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r698t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r698t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) (len=11) "10.42.2.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r698t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.845319 21 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wk5bq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wk5bq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7676",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff157261-03a6-4178-8632-306bcd7b0733",
      ResourceVersion: (string) (len=5) "25280",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "1526b027-08b4-475e-a771-fdfd8e0aa62b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 35  32 36 62 30 32 37 2d 30  |d\":\"1526b027-0|
              00000090  38 62 34 2d 34 37 35 65  2d 61 37 37 31 2d 66 64  |8b4-475e-a771-fd|
              000000a0  66 64 38 65 30 61 61 36  32 62 5c 22 7d 22 3a 7b  |fd8e0aa62b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 36 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.1.16\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2dbmx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2dbmx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892300827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892300827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2dbmx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:20:31.852968 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7676" for this suite. @ 09/01/25 05:20:31.859
• [8.531 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/01/25 05:20:31.874
  I0901 05:20:31.874110 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:20:31.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:31.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:31.91
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/01/25 05:20:31.914
  STEP: Saw pod success @ 09/01/25 05:20:35.942
  I0901 05:20:35.947820 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-c3161957-2e8b-4416-b3f8-758d06fc27d4 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:20:35.96
  I0901 05:20:35.986094 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1947" for this suite. @ 09/01/25 05:20:35.991
• [4.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 09/01/25 05:20:35.998
  I0901 05:20:35.998236 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:20:35.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:36.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:36.015
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5054 @ 09/01/25 05:20:36.018
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 05:20:36.026
  STEP: creating service externalsvc in namespace services-5054 @ 09/01/25 05:20:36.026
  STEP: creating replication controller externalsvc in namespace services-5054 @ 09/01/25 05:20:36.042
  I0901 05:20:36.051686      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5054, replica count: 2
  I0901 05:20:39.102960      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/01/25 05:20:39.108
  I0901 05:20:39.127683 21 resource.go:361] Creating new exec pod
  I0901 05:20:41.150602 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5054 exec execpodwbngc -- /bin/sh -x -c nslookup clusterip-service.services-5054.svc.cluster.local'
  I0901 05:20:41.476027 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-5054.svc.cluster.local\n"
  I0901 05:20:41.476091 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-5054.svc.cluster.local\tcanonical name = externalsvc.services-5054.svc.cluster.local.\nName:\texternalsvc.services-5054.svc.cluster.local\nAddress: 10.43.120.243\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5054, will wait for the garbage collector to delete the pods @ 09/01/25 05:20:41.476
  I0901 05:20:41.550236 21 resources.go:139] Deleting ReplicationController externalsvc took: 16.478689ms
  I0901 05:20:41.650751 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.508988ms
  I0901 05:20:44.784969 21 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0901 05:20:44.804595 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5054" for this suite. @ 09/01/25 05:20:44.809
• [8.818 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/01/25 05:20:44.816
  I0901 05:20:44.816495 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 05:20:44.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:44.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:44.831
  I0901 05:20:44.844182 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1678" for this suite. @ 09/01/25 05:20:44.91
• [0.110 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/01/25 05:20:44.926
  I0901 05:20:44.926113 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:20:44.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:44.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:44.949
  STEP: Creating secret with name projected-secret-test-46872d80-0d6a-45b5-b883-02189d3ccb95 @ 09/01/25 05:20:44.952
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:20:44.96
  STEP: Saw pod success @ 09/01/25 05:20:46.992
  I0901 05:20:47.001629 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-secrets-951a1cb5-ccc8-4946-b474-f56141f89813 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:20:47.018
  I0901 05:20:47.045839 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9658" for this suite. @ 09/01/25 05:20:47.053
• [2.140 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/01/25 05:20:47.067
  I0901 05:20:47.068103 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:20:47.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:47.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:47.087
  STEP: creating a Pod with a static label @ 09/01/25 05:20:47.094
  STEP: watching for Pod to be ready @ 09/01/25 05:20:47.102
  I0901 05:20:47.104614 21 pods.go:945] observed Pod pod-test in namespace pods-2219 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0901 05:20:47.108306 21 pods.go:945] observed Pod pod-test in namespace pods-2219 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC  }]
  I0901 05:20:47.123197 21 pods.go:945] observed Pod pod-test in namespace pods-2219 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC  }]
  I0901 05:20:48.702961 21 pods.go:948] Found Pod pod-test in namespace pods-2219 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:48 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:48 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-09-01 05:20:47 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/01/25 05:20:48.71
  STEP: getting the Pod and ensuring that it's patched @ 09/01/25 05:20:48.725
  STEP: replacing the Pod's status Ready condition to False @ 09/01/25 05:20:48.731
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/01/25 05:20:48.755
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/01/25 05:20:48.755
  STEP: watching for the Pod to be deleted @ 09/01/25 05:20:48.769
  I0901 05:20:48.771575 21 pods.go:1058] observed event type MODIFIED
  I0901 05:20:48.790180 21 pods.go:1058] observed event type MODIFIED
  I0901 05:20:50.961933 21 pods.go:1058] observed event type MODIFIED
  I0901 05:20:51.726819 21 pods.go:1058] observed event type MODIFIED
  I0901 05:20:51.743939 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2219" for this suite. @ 09/01/25 05:20:51.753
• [4.697 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 09/01/25 05:20:51.766
  I0901 05:20:51.767241 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 05:20:51.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:51.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:51.796
  STEP: Read namespace status @ 09/01/25 05:20:51.799
  I0901 05:20:51.803981 21 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/01/25 05:20:51.804
  I0901 05:20:51.809997 21 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/01/25 05:20:51.81
  I0901 05:20:51.820213 21 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0901 05:20:51.820509 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7016" for this suite. @ 09/01/25 05:20:51.854
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 09/01/25 05:20:51.869
  I0901 05:20:51.869513 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/01/25 05:20:51.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:51.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:51.887
  STEP: create the container to handle the HTTPGet hook request. @ 09/01/25 05:20:51.955
  STEP: create the pod with lifecycle hook @ 09/01/25 05:20:53.994
  STEP: check poststart hook @ 09/01/25 05:20:56.024
  STEP: delete the pod with lifecycle hook @ 09/01/25 05:20:56.041
  I0901 05:20:58.067308 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4120" for this suite. @ 09/01/25 05:20:58.074
• [6.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/01/25 05:20:58.083
  I0901 05:20:58.084042 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename proxy @ 09/01/25 05:20:58.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:20:58.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:20:58.107
  I0901 05:20:58.112553 21 proxy.go:293] Creating pod...
  I0901 05:21:00.148001 21 proxy.go:317] Creating service...
  I0901 05:21:00.162845 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/DELETE
  I0901 05:21:00.172064 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 05:21:00.172336 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/GET
  I0901 05:21:00.178271 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 05:21:00.178313 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/HEAD
  I0901 05:21:00.190890 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0901 05:21:00.191042 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/OPTIONS
  I0901 05:21:00.198936 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 05:21:00.199125 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/PATCH
  I0901 05:21:00.206730 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 05:21:00.207048 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/POST
  I0901 05:21:00.225722 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 05:21:00.225810 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/pods/agnhost/proxy/some/path/with/PUT
  I0901 05:21:00.231026 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 05:21:00.231196 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/DELETE
  I0901 05:21:00.237471 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0901 05:21:00.237524 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/GET
  I0901 05:21:00.243670 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0901 05:21:00.243728 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/HEAD
  I0901 05:21:00.251812 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0901 05:21:00.251867 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/OPTIONS
  I0901 05:21:00.264815 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0901 05:21:00.264874 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/PATCH
  I0901 05:21:00.279336 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0901 05:21:00.279395 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/POST
  I0901 05:21:00.293754 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0901 05:21:00.293806 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-5118/services/test-service/proxy/some/path/with/PUT
  I0901 05:21:00.305035 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0901 05:21:00.305404 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5118" for this suite. @ 09/01/25 05:21:00.313
• [2.248 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/01/25 05:21:00.331
  I0901 05:21:00.331917 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:21:00.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:00.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:00.353
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/01/25 05:21:00.357
  STEP: Saw pod success @ 09/01/25 05:21:04.389
  I0901 05:21:04.397682 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-f35e9862-f694-4829-85de-1644603fb6a8 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:21:04.418
  I0901 05:21:04.450668 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4854" for this suite. @ 09/01/25 05:21:04.458
• [4.137 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/01/25 05:21:04.47
  I0901 05:21:04.470190 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 05:21:04.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:04.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:04.494
  STEP: apply creating a deployment @ 09/01/25 05:21:04.499
  I0901 05:21:04.524049 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7573" for this suite. @ 09/01/25 05:21:04.558
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 09/01/25 05:21:04.57
  I0901 05:21:04.570958 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:21:04.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:04.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:04.592
  STEP: creating service in namespace services-1347 @ 09/01/25 05:21:04.596
  STEP: creating service affinity-clusterip in namespace services-1347 @ 09/01/25 05:21:04.597
  STEP: creating replication controller affinity-clusterip in namespace services-1347 @ 09/01/25 05:21:04.609
  I0901 05:21:04.617649      21 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1347, replica count: 3
  I0901 05:21:07.668461      21 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 05:21:07.684414 21 resource.go:361] Creating new exec pod
  I0901 05:21:10.706582 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1347 exec execpod-affinity9fjsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0901 05:21:10.932198 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip (10.43.46.88) 80 port [tcp/http] succeeded!\n"
  I0901 05:21:10.932279 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:21:10.932394 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1347 exec execpod-affinity9fjsq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.46.88 80'
  I0901 05:21:11.149981 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.46.88 80\n+ echo hostName\nConnection to 10.43.46.88 80 port [tcp/http] succeeded!\n"
  I0901 05:21:11.150088 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:21:11.150283 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-1347 exec execpod-affinity9fjsq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.46.88:80/ ; done'
  I0901 05:21:11.474820 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.46.88:80/\n"
  I0901 05:21:11.474918 21 builder.go:147] stdout: "\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj\naffinity-clusterip-np5nj"
  I0901 05:21:11.474952 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.474975 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475431 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475474 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475493 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475688 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475711 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475729 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.475826 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476033 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476051 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476069 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476086 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476106 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476124 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476245 21 service.go:242] Received response from host: affinity-clusterip-np5nj
  I0901 05:21:11.476585 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1347, will wait for the garbage collector to delete the pods @ 09/01/25 05:21:11.505
  I0901 05:21:11.578077 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 13.482968ms
  I0901 05:21:11.678313 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.231159ms
  I0901 05:21:14.910390 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1347" for this suite. @ 09/01/25 05:21:14.915
• [10.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/01/25 05:21:14.924
  I0901 05:21:14.924366 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:21:14.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:14.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:14.944
  STEP: Creating projection with secret that has name projected-secret-test-map-2027b292-812b-4a07-b6b6-98538555c5e1 @ 09/01/25 05:21:14.947
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:21:14.955
  STEP: Saw pod success @ 09/01/25 05:21:18.985
  I0901 05:21:18.993964 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-secrets-69a4eace-0679-4f37-8179-6cc3278cede1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:21:19.005
  I0901 05:21:19.031225 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5157" for this suite. @ 09/01/25 05:21:19.037
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 09/01/25 05:21:19.047
  I0901 05:21:19.047203 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:21:19.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:19.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:19.066
  STEP: Setting up server cert @ 09/01/25 05:21:19.09
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:21:19.683
  STEP: Deploying the webhook pod @ 09/01/25 05:21:19.69
  STEP: Wait for the deployment to be ready @ 09/01/25 05:21:19.703
  I0901 05:21:19.716369 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:21:21.74
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:21:21.757
  I0901 05:21:22.760617 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 05:21:22.778
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/01/25 05:21:22.801
  STEP: Creating a dummy validating-webhook-configuration object @ 09/01/25 05:21:22.827
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/01/25 05:21:22.839
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/01/25 05:21:22.849
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/01/25 05:21:22.86
  I0901 05:21:22.934822 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3211" for this suite. @ 09/01/25 05:21:22.942
  STEP: Destroying namespace "webhook-markers-2125" for this suite. @ 09/01/25 05:21:22.951
• [3.912 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 09/01/25 05:21:22.96
  I0901 05:21:22.960410 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 05:21:22.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:22.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:22.981
  STEP: Creating service test in namespace statefulset-4371 @ 09/01/25 05:21:22.985
  STEP: Creating statefulset ss in namespace statefulset-4371 @ 09/01/25 05:21:22.991
  I0901 05:21:23.010465 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0901 05:21:33.014524 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/01/25 05:21:33.024
  STEP: updating a scale subresource @ 09/01/25 05:21:33.03
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 05:21:33.038
  STEP: Patch a scale subresource @ 09/01/25 05:21:33.048
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/01/25 05:21:33.074
  I0901 05:21:33.080062 21 statefulset.go:138] Deleting all statefulset in ns statefulset-4371
  I0901 05:21:33.084789 21 rest.go:152] Scaling statefulset ss to 0
  I0901 05:21:43.126633 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 05:21:43.131705 21 rest.go:90] Deleting statefulset ss
  I0901 05:21:43.148938 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4371" for this suite. @ 09/01/25 05:21:43.157
• [20.206 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/01/25 05:21:43.167
  I0901 05:21:43.167172 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 05:21:43.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:43.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:43.191
  STEP: apply creating a deployment @ 09/01/25 05:21:43.197
  I0901 05:21:43.221687 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5502" for this suite. @ 09/01/25 05:21:43.258
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/01/25 05:21:43.268
  I0901 05:21:43.268951 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:21:43.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:43.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:43.296
  STEP: Create set of pods @ 09/01/25 05:21:43.301
  I0901 05:21:43.312505 21 pods.go:871] created test-pod-1
  I0901 05:21:43.324032 21 pods.go:871] created test-pod-2
  I0901 05:21:43.348915 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/01/25 05:21:43.348
  STEP: waiting for all pods to be deleted @ 09/01/25 05:21:45.389
  I0901 05:21:45.394505 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0901 05:21:46.402768 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0901 05:21:47.403223 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0901 05:21:48.398485 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1097" for this suite. @ 09/01/25 05:21:48.406
• [5.149 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 09/01/25 05:21:48.418
  I0901 05:21:48.418911 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:21:48.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:48.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:48.442
  STEP: creating an Endpoint @ 09/01/25 05:21:48.449
  STEP: waiting for available Endpoint @ 09/01/25 05:21:48.453
  STEP: listing all Endpoints @ 09/01/25 05:21:48.454
  STEP: updating the Endpoint @ 09/01/25 05:21:48.458
  STEP: fetching the Endpoint @ 09/01/25 05:21:48.471
  STEP: patching the Endpoint @ 09/01/25 05:21:48.476
  STEP: fetching the Endpoint @ 09/01/25 05:21:48.486
  STEP: deleting the Endpoint by Collection @ 09/01/25 05:21:48.489
  STEP: waiting for Endpoint deletion @ 09/01/25 05:21:48.496
  STEP: fetching the Endpoint @ 09/01/25 05:21:48.498
  I0901 05:21:48.504864 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7458" for this suite. @ 09/01/25 05:21:48.508
• [0.097 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 09/01/25 05:21:48.515
  I0901 05:21:48.515492 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:21:48.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:21:48.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:21:48.534
  STEP: Setting up server cert @ 09/01/25 05:21:48.556
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:21:49.211
  STEP: Deploying the webhook pod @ 09/01/25 05:21:49.221
  STEP: Wait for the deployment to be ready @ 09/01/25 05:21:49.237
  I0901 05:21:49.256144 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0901 05:21:51.284292 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 05:21:53.291838 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 05:21:55.299477 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0901 05:21:57.292746 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 21, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/01/25 05:21:59.293
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:21:59.312
  I0901 05:22:00.313604 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 05:22:00.329
  STEP: verifying the validating webhook match conditions @ 09/01/25 05:22:00.337
  STEP: updating the validating webhook match conditions @ 09/01/25 05:22:00.342
  STEP: verifying the validating webhook match conditions @ 09/01/25 05:22:00.349
  I0901 05:22:00.421897 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8009" for this suite. @ 09/01/25 05:22:00.427
  STEP: Destroying namespace "webhook-markers-4392" for this suite. @ 09/01/25 05:22:00.448
• [11.939 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/01/25 05:22:00.456
  I0901 05:22:00.456493 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 05:22:00.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:22:00.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:22:00.476
  STEP: Creating service test in namespace statefulset-8489 @ 09/01/25 05:22:00.479
  STEP: Creating a new StatefulSet @ 09/01/25 05:22:00.483
  I0901 05:22:00.501788 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0901 05:22:10.510536 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:22:10.510619 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:22:10.510651 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:22:10.526114 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-8489 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 05:22:10.778835 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 05:22:10.778885 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 05:22:10.778902 21 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 05:22:20.791
  I0901 05:22:20.802565 21 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 05:22:20.802
  STEP: Updating Pods in reverse ordinal order @ 09/01/25 05:22:30.815
  I0901 05:22:30.820842 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-8489 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 05:22:31.000773 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 05:22:31.000842 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 05:22:31.000859 21 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 09/01/25 05:22:51.116
  I0901 05:22:51.116177 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-8489 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 05:22:51.358019 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 05:22:51.358081 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 05:22:51.358108 21 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 05:23:01.388440 21 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/01/25 05:23:11.409
  I0901 05:23:11.417562 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-8489 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 05:23:11.635270 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 05:23:11.635320 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 05:23:11.635336 21 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 05:23:21.661636 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8489
  I0901 05:23:21.668696 21 rest.go:152] Scaling statefulset ss2 to 0
  I0901 05:23:31.690520 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 05:23:31.698596 21 rest.go:90] Deleting statefulset ss2
  I0901 05:23:31.719211 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8489" for this suite. @ 09/01/25 05:23:31.724
• [91.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 09/01/25 05:23:31.735
  I0901 05:23:31.735842 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:23:31.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:23:31.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:23:31.752
  STEP: Creating a job @ 09/01/25 05:23:31.755
  STEP: Ensuring job reaches completions @ 09/01/25 05:23:31.76
  I0901 05:23:41.807520 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7561" for this suite. @ 09/01/25 05:23:41.812
• [10.088 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 09/01/25 05:23:41.823
  I0901 05:23:41.823910 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 05:23:41.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:23:41.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:23:41.844
  STEP: Creating namespace "e2e-ns-ncrm9" @ 09/01/25 05:23:41.847
  I0901 05:23:41.859433 21 namespace.go:412] Namespace "e2e-ns-ncrm9-8716" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-ncrm9-8716" @ 09/01/25 05:23:41.859
  I0901 05:23:41.867727 21 namespace.go:435] Namespace "e2e-ns-ncrm9-8716" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-ncrm9-8716" @ 09/01/25 05:23:41.867
  I0901 05:23:41.876081 21 namespace.go:464] Namespace "e2e-ns-ncrm9-8716" has []v1.FinalizerName{"kubernetes"}
  I0901 05:23:41.876339 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2447" for this suite. @ 09/01/25 05:23:41.913
  STEP: Destroying namespace "e2e-ns-ncrm9-8716" for this suite. @ 09/01/25 05:23:41.924
• [0.110 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/01/25 05:23:41.933
  I0901 05:23:41.933981 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename tables @ 09/01/25 05:23:41.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:23:41.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:23:41.952
  I0901 05:23:41.957673 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-2551" for this suite. @ 09/01/25 05:23:42.015
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/01/25 05:23:42.036
  I0901 05:23:42.036259 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:23:42.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:23:42.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:23:42.065
  STEP: Creating secret with name s-test-opt-del-609e229d-4afa-42e7-be64-9025e23a9ca5 @ 09/01/25 05:23:42.115
  STEP: Creating secret with name s-test-opt-upd-cce00b41-0bf7-47a0-8d49-5075ae07a24f @ 09/01/25 05:23:42.125
  STEP: Creating the pod @ 09/01/25 05:23:42.132
  STEP: Deleting secret s-test-opt-del-609e229d-4afa-42e7-be64-9025e23a9ca5 @ 09/01/25 05:23:44.233
  STEP: Updating secret s-test-opt-upd-cce00b41-0bf7-47a0-8d49-5075ae07a24f @ 09/01/25 05:23:44.246
  STEP: Creating secret with name s-test-opt-create-2de9df93-f30c-4886-bdbc-f219871d9019 @ 09/01/25 05:23:44.253
  STEP: waiting to observe update in volume @ 09/01/25 05:23:44.262
  I0901 05:25:07.035680 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7466" for this suite. @ 09/01/25 05:25:07.044
• [85.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 09/01/25 05:25:07.057
  I0901 05:25:07.057899 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:25:07.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:07.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:07.083
  STEP: Counting existing ResourceQuota @ 09/01/25 05:25:07.086
  STEP: Creating a ResourceQuota @ 09/01/25 05:25:12.091
  STEP: Ensuring resource quota status is calculated @ 09/01/25 05:25:12.096
  I0901 05:25:14.105606 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6750" for this suite. @ 09/01/25 05:25:14.114
• [7.073 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 09/01/25 05:25:14.133
  I0901 05:25:14.133049 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:25:14.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:14.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:14.156
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/01/25 05:25:14.16
  I0901 05:25:14.161096 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/01/25 05:25:19.697
  I0901 05:25:19.697892 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 05:25:20.942246 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 05:25:26.422887 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-78" for this suite. @ 09/01/25 05:25:26.436
• [12.316 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/01/25 05:25:26.449
  I0901 05:25:26.449986 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename conformance-tests @ 09/01/25 05:25:26.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:26.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:26.469
  STEP: Getting node addresses @ 09/01/25 05:25:26.48
  I0901 05:25:26.480702 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0901 05:25:26.538380 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-9624" for this suite. @ 09/01/25 05:25:26.544
• [0.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 09/01/25 05:25:26.554
  I0901 05:25:26.554855 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:25:26.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:26.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:26.574
  STEP: Creating a job @ 09/01/25 05:25:26.578
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/01/25 05:25:26.585
  STEP: patching /status @ 09/01/25 05:25:28.601
  STEP: updating /status @ 09/01/25 05:25:28.622
  STEP: get /status @ 09/01/25 05:25:28.635
  I0901 05:25:28.641405 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5922" for this suite. @ 09/01/25 05:25:28.646
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 09/01/25 05:25:28.655
  I0901 05:25:28.655920 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:25:28.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:28.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:28.674
  STEP: set up a multi version CRD @ 09/01/25 05:25:28.677
  I0901 05:25:28.678493 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: mark a version not serverd @ 09/01/25 05:25:32.179
  STEP: check the unserved version gets removed @ 09/01/25 05:25:32.196
  STEP: check the other version is not changed @ 09/01/25 05:25:33.022
  I0901 05:25:35.783712 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4865" for this suite. @ 09/01/25 05:25:35.797
• [7.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/01/25 05:25:35.811
  I0901 05:25:35.811107 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename volumeattachment @ 09/01/25 05:25:35.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:35.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:35.826
  STEP: Create VolumeAttachment "va-e2e-kr8bd" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae" @ 09/01/25 05:25:35.896
  STEP: Patch VolumeAttachment "va-e2e-kr8bd" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae" @ 09/01/25 05:25:35.902
  STEP: Reading "va-e2e-kr8bd" Status @ 09/01/25 05:25:35.908
  STEP: Patching "va-e2e-kr8bd" Status @ 09/01/25 05:25:35.916
  I0901 05:25:35.922493 21 volume_attachment.go:224] "va-e2e-kr8bd" Status.Attached: true
  STEP: Updating "va-e2e-kr8bd" Status @ 09/01/25 05:25:35.922
  I0901 05:25:35.933653 21 volume_attachment.go:240] "va-e2e-kr8bd" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-kr8bd" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae" @ 09/01/25 05:25:35.933
  STEP: Confirm deletion of VolumeAttachment "va-e2e-kr8bd" on node "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae" @ 09/01/25 05:25:35.942
  I0901 05:25:35.946787 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1705" for this suite. @ 09/01/25 05:25:35.997
• [0.197 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/01/25 05:25:36.009
  I0901 05:25:36.009202 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename disruption @ 09/01/25 05:25:36.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:36.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:36.034
  STEP: Creating a kubernetes client @ 09/01/25 05:25:36.039
  I0901 05:25:36.039559 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename disruption-2 @ 09/01/25 05:25:36.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:36.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:36.064
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:25:36.073
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:25:38.09
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:25:40.108
  STEP: listing a collection of PDBs across all namespaces @ 09/01/25 05:25:42.118
  STEP: listing a collection of PDBs in namespace disruption-7836 @ 09/01/25 05:25:42.127
  STEP: deleting a collection of PDBs @ 09/01/25 05:25:42.133
  STEP: Waiting for the PDB collection to be deleted @ 09/01/25 05:25:42.161
  I0901 05:25:42.169957 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-2163" for this suite. @ 09/01/25 05:25:42.182
  I0901 05:25:42.189880 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7836" for this suite. @ 09/01/25 05:25:42.283
• [6.288 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/01/25 05:25:42.298
  I0901 05:25:42.298099 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:25:42.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:25:42.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:25:42.325
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-bd01fa47-eaf4-4117-bb34-ef5069fb1d72 @ 09/01/25 05:25:42.383
  STEP: Creating the pod @ 09/01/25 05:25:42.392
  STEP: Updating configmap projected-configmap-test-upd-bd01fa47-eaf4-4117-bb34-ef5069fb1d72 @ 09/01/25 05:25:44.457
  STEP: waiting to observe update in volume @ 09/01/25 05:25:44.465
  I0901 05:26:47.025091 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4643" for this suite. @ 09/01/25 05:26:47.033
• [64.750 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 09/01/25 05:26:47.049
  I0901 05:26:47.049351 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:26:47.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:26:47.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:26:47.076
  STEP: Creating secret with name secret-test-289ab3e2-34d1-406a-8c44-8382357da788 @ 09/01/25 05:26:47.079
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:26:47.085
  STEP: Saw pod success @ 09/01/25 05:26:49.112
  I0901 05:26:49.120705 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-91cf6b63-8d0e-4b18-a783-8eea2f1b9abd container secret-env-test: <nil>
  STEP: delete the pod @ 09/01/25 05:26:49.136
  I0901 05:26:49.166110 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1566" for this suite. @ 09/01/25 05:26:49.174
• [2.138 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/01/25 05:26:49.188
  I0901 05:26:49.188514 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename watch @ 09/01/25 05:26:49.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:26:49.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:26:49.215
  STEP: creating a watch on configmaps with label A @ 09/01/25 05:26:49.218
  STEP: creating a watch on configmaps with label B @ 09/01/25 05:26:49.222
  STEP: creating a watch on configmaps with label A or B @ 09/01/25 05:26:49.226
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/01/25 05:26:49.229
  I0901 05:26:49.234633 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27675 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:26:49.235168 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27675 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/01/25 05:26:49.235
  I0901 05:26:49.245657 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27676 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:26:49.245943 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27676 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/01/25 05:26:49.246
  I0901 05:26:49.256301 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27677 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:26:49.256419 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27677 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/01/25 05:26:49.256
  I0901 05:26:49.264556 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27678 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:26:49.264683 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2091  fdf21db5-6958-4ac8-8133-74c2765bf352 27678 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/01/25 05:26:49.264
  I0901 05:26:49.272907 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2091  95f75ed7-afbd-48f7-a14b-2c9b5e79603a 27679 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:26:49.273092 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2091  95f75ed7-afbd-48f7-a14b-2c9b5e79603a 27679 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/01/25 05:26:59.274
  I0901 05:26:59.284029 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2091  95f75ed7-afbd-48f7-a14b-2c9b5e79603a 27710 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:26:59.284260 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2091  95f75ed7-afbd-48f7-a14b-2c9b5e79603a 27710 0 2025-09-01 05:26:49 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-01 05:26:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:27:09.288409 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2091" for this suite. @ 09/01/25 05:27:09.294
• [20.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/01/25 05:27:09.301
  I0901 05:27:09.302074 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 05:27:09.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:09.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:09.319
  STEP: create the deployment @ 09/01/25 05:27:09.322
  W0901 05:27:09.329373      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/01/25 05:27:09.33
  STEP: delete the deployment @ 09/01/25 05:27:09.336
  STEP: wait for all rs to be garbage collected @ 09/01/25 05:27:09.348
  STEP: expected 0 rs, got 1 rs @ 09/01/25 05:27:09.356
  STEP: expected 0 pods, got 2 pods @ 09/01/25 05:27:09.367
  STEP: Gathering metrics @ 09/01/25 05:27:09.866
  W0901 05:27:09.873176      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0901 05:27:09.873409 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 05:27:09.874976 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6106" for this suite. @ 09/01/25 05:27:09.879
• [0.585 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 09/01/25 05:27:09.887
  I0901 05:27:09.887867 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 05:27:09.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:09.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:09.91
  STEP: Creating a test namespace @ 09/01/25 05:27:09.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:09.925
  STEP: Creating a service in the namespace @ 09/01/25 05:27:09.927
  STEP: Deleting the namespace @ 09/01/25 05:27:09.934
  STEP: Waiting for the namespace to be removed. @ 09/01/25 05:27:09.942
  STEP: Recreating the namespace @ 09/01/25 05:27:15.947
  STEP: Verifying there is no service in the namespace @ 09/01/25 05:27:15.956
  I0901 05:27:15.959959 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3307" for this suite. @ 09/01/25 05:27:15.964
  STEP: Destroying namespace "nsdeletetest-7921" for this suite. @ 09/01/25 05:27:15.972
  I0901 05:27:15.977938 21 framework.go:370] Namespace nsdeletetest-7921 was already deleted
  STEP: Destroying namespace "nsdeletetest-8005" for this suite. @ 09/01/25 05:27:15.978
• [6.096 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/01/25 05:27:15.984
  I0901 05:27:15.984066 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:27:15.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:15.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:15.996
  I0901 05:27:15.999659 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: creating the pod @ 09/01/25 05:27:16
  STEP: submitting the pod to kubernetes @ 09/01/25 05:27:16
  I0901 05:27:18.042799 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5151" for this suite. @ 09/01/25 05:27:18.046
• [2.069 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/01/25 05:27:18.053
  I0901 05:27:18.053683 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 05:27:18.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:18.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:18.068
  STEP: Creating two CSIDrivers @ 09/01/25 05:27:18.071
  STEP: Getting "inline-driver-38b9445c-0305-4d34-85b6-a23e0882fe49" & "inline-driver-93c1adbf-f536-49b1-898d-48685fe9e6a4" @ 09/01/25 05:27:18.083
  STEP: Patching the CSIDriver "inline-driver-93c1adbf-f536-49b1-898d-48685fe9e6a4" @ 09/01/25 05:27:18.089
  STEP: Updating the CSIDriver "inline-driver-93c1adbf-f536-49b1-898d-48685fe9e6a4" @ 09/01/25 05:27:18.097
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2918" @ 09/01/25 05:27:18.104
  STEP: Deleting CSIDriver "inline-driver-38b9445c-0305-4d34-85b6-a23e0882fe49" @ 09/01/25 05:27:18.107
  STEP: Confirm deletion of CSIDriver "inline-driver-38b9445c-0305-4d34-85b6-a23e0882fe49" @ 09/01/25 05:27:18.112
  STEP: Deleting CSIDriver "inline-driver-93c1adbf-f536-49b1-898d-48685fe9e6a4" via DeleteCollection @ 09/01/25 05:27:18.114
  STEP: Confirm deletion of CSIDriver "inline-driver-93c1adbf-f536-49b1-898d-48685fe9e6a4" @ 09/01/25 05:27:18.12
  I0901 05:27:18.123223 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2918" for this suite. @ 09/01/25 05:27:18.147
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/01/25 05:27:18.154
  I0901 05:27:18.154180 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 05:27:18.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:18.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:18.171
  I0901 05:27:18.175024 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  W0901 05:27:20.710535      21 warnings.go:70] unknown field "alpha"
  W0901 05:27:20.710579      21 warnings.go:70] unknown field "beta"
  W0901 05:27:20.710592      21 warnings.go:70] unknown field "delta"
  W0901 05:27:20.710601      21 warnings.go:70] unknown field "epsilon"
  W0901 05:27:20.710610      21 warnings.go:70] unknown field "gamma"
  I0901 05:27:21.257450 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4192" for this suite. @ 09/01/25 05:27:21.262
• [3.115 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/01/25 05:27:21.269
  I0901 05:27:21.269991 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:27:21.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:21.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:21.292
  STEP: creating the pod @ 09/01/25 05:27:21.297
  STEP: setting up watch @ 09/01/25 05:27:21.298
  STEP: submitting the pod to kubernetes @ 09/01/25 05:27:21.404
  STEP: verifying the pod is in kubernetes @ 09/01/25 05:27:21.419
  STEP: verifying pod creation was observed @ 09/01/25 05:27:21.422
  STEP: deleting the pod gracefully @ 09/01/25 05:27:23.435
  STEP: verifying pod deletion was observed @ 09/01/25 05:27:23.441
  I0901 05:27:24.896940 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2444" for this suite. @ 09/01/25 05:27:24.901
• [3.637 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/01/25 05:27:24.907
  I0901 05:27:24.907497 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 05:27:24.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:24.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:24.92
  I0901 05:27:24.924499 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0901 05:27:24.936236 21 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 09/01/25 05:27:26.958
  STEP: updating a scale subresource @ 09/01/25 05:27:26.961
  STEP: verifying the deployment Spec.Replicas was modified @ 09/01/25 05:27:26.967
  STEP: Patch a scale subresource @ 09/01/25 05:27:26.971
  I0901 05:27:27.002761 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0b9c573-0d69-4bb7-aba5-440be9415ea4",
      ResourceVersion: (string) (len=5) "27909",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 05:27:27.044766 21 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08521935-4674-4c81-b1c8-a9bad884f883",
      ResourceVersion: (string) (len=5) "27929",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "c0b9c573-0d69-4bb7-aba5-440be9415ea4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 30 62 39 63 35  37 33 2d 30 64 36 39 2d  |\"c0b9c573-0d69-|
              00000120  34 62 62 37 2d 61 62 61  35 2d 34 34 30 62 65 39  |4bb7-aba5-440be9|
              00000130  34 31 35 65 61 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |415ea4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:27:27.051659 21 deployment.go:68] Pod "test-new-deployment-685b768f58-2z786" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-2z786",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "287ff6d2-925f-456b-8587-47621c509167",
      ResourceVersion: (string) (len=5) "27920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301246,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "08521935-4674-4c81-b1c8-a9bad884f883",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  35 32 31 39 33 35 2d 34  |d\":\"08521935-4|
              00000090  36 37 34 2d 34 63 38 31  2d 62 31 63 38 2d 61 39  |674-4c81-b1c8-a9|
              000000a0  62 61 64 38 38 34 66 38  38 33 5c 22 7d 22 3a 7b  |bad884f883\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxl47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxl47",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.1.10",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.1.10"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301246,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bxl47",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:27:27.053160 21 deployment.go:68] Pod "test-new-deployment-685b768f58-6nzrq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-6nzrq",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82ef34ae-403f-4c2d-bd01-1f1dd3d9afe5",
      ResourceVersion: (string) (len=5) "27898",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "08521935-4674-4c81-b1c8-a9bad884f883",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  35 32 31 39 33 35 2d 34  |d\":\"08521935-4|
              00000090  36 37 34 2d 34 63 38 31  2d 62 31 63 38 2d 61 39  |674-4c81-b1c8-a9|
              000000a0  62 61 64 38 38 34 66 38  38 33 5c 22 7d 22 3a 7b  |bad884f883\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |.42.1.55\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5gqzh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5gqzh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892301245,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a7edf86369cfb5fbe23a71a283cde6205889a2b374ba0f3abe6f5cdba544e83b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5gqzh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:27:27.054659 21 deployment.go:68] Pod "test-new-deployment-685b768f58-glbv2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-glbv2",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "165337a7-8ac0-4b5d-9506-dee68cec86e5",
      ResourceVersion: (string) (len=5) "27927",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "08521935-4674-4c81-b1c8-a9bad884f883",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  35 32 31 39 33 35 2d 34  |d\":\"08521935-4|
              00000090  36 37 34 2d 34 63 38 31  2d 62 31 63 38 2d 61 39  |674-4c81-b1c8-a9|
              000000a0  62 61 64 38 38 34 66 38  38 33 5c 22 7d 22 3a 7b  |bad884f883\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7td6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7td6k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:27:27.055757 21 deployment.go:68] Pod "test-new-deployment-685b768f58-s4vtj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-s4vtj",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-6799",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1caeba97-e054-4a94-8d9e-071af12c1afb",
      ResourceVersion: (string) (len=5) "27930",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "08521935-4674-4c81-b1c8-a9bad884f883",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 38  35 32 31 39 33 35 2d 34  |d\":\"08521935-4|
              00000090  36 37 34 2d 34 63 38 31  2d 62 31 63 38 2d 61 39  |674-4c81-b1c8-a9|
              000000a0  62 61 64 38 38 34 66 38  38 33 5c 22 7d 22 3a 7b  |bad884f883\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74bjf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74bjf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-74bjf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:27:27.070474 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6799" for this suite. @ 09/01/25 05:27:27.074
• [2.172 seconds]
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/01/25 05:27:27.079
  I0901 05:27:27.079371 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename events @ 09/01/25 05:27:27.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:27.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:27.092
  STEP: Create set of events @ 09/01/25 05:27:27.095
  I0901 05:27:27.098099 21 core_events.go:198] created test-event-1
  I0901 05:27:27.101924 21 core_events.go:198] created test-event-2
  I0901 05:27:27.105661 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/01/25 05:27:27.105
  STEP: delete collection of events @ 09/01/25 05:27:27.108
  I0901 05:27:27.108310 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/01/25 05:27:27.122
  I0901 05:27:27.123011 21 core_events.go:230] requesting list of events to confirm quantity
  I0901 05:27:27.126588 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2093" for this suite. @ 09/01/25 05:27:27.177
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/01/25 05:27:27.189
  I0901 05:27:27.189686 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:27:27.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:27.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:27.221
  STEP: Creating the pod @ 09/01/25 05:27:27.225
  I0901 05:27:29.780792 21 pod_client.go:173] Successfully updated pod "annotationupdatecf8de8e1-ec51-4a2f-a6c5-e41bc3d458f4"
  I0901 05:27:33.815361 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2623" for this suite. @ 09/01/25 05:27:33.822
• [6.639 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/01/25 05:27:33.828
  I0901 05:27:33.828391 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:27:33.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:33.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:33.842
  STEP: creating the pod @ 09/01/25 05:27:33.845
  STEP: submitting the pod to kubernetes @ 09/01/25 05:27:33.846
  W0901 05:27:33.852993      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 09/01/25 05:27:35.87
  STEP: updating the pod @ 09/01/25 05:27:35.875
  I0901 05:27:36.388612 21 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-2eb4aa69-0f1f-43e2-8eb8-6e7fd5970163"
  I0901 05:27:40.410674 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6732" for this suite. @ 09/01/25 05:27:40.416
• [6.597 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 09/01/25 05:27:40.425
  I0901 05:27:40.425826 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:27:40.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:40.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:40.446
  STEP: creating Agnhost RC @ 09/01/25 05:27:40.449
  I0901 05:27:40.449774 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1435 create -f -'
  I0901 05:27:40.594132 21 builder.go:146] stderr: ""
  I0901 05:27:40.594198 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 05:27:40.594
  I0901 05:27:41.601581 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:27:41.601664 21 framework.go:733] Found 0 / 1
  I0901 05:27:42.602018 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:27:42.602061 21 framework.go:733] Found 1 / 1
  I0901 05:27:42.602081 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/01/25 05:27:42.602
  I0901 05:27:42.607397 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:27:42.607456 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 05:27:42.607568 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-1435 patch pod agnhost-primary-45vrv -p {"metadata":{"annotations":{"x":"y"}}}'
  I0901 05:27:42.708977 21 builder.go:146] stderr: ""
  I0901 05:27:42.709050 21 builder.go:147] stdout: "pod/agnhost-primary-45vrv patched\n"
  STEP: checking annotations @ 09/01/25 05:27:42.709
  I0901 05:27:42.715946 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:27:42.715979 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 05:27:42.716244 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1435" for this suite. @ 09/01/25 05:27:42.722
• [2.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/01/25 05:27:42.731
  I0901 05:27:42.731423 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename subpath @ 09/01/25 05:27:42.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:27:42.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:27:42.75
  STEP: Setting up data @ 09/01/25 05:27:42.753
  STEP: Creating pod pod-subpath-test-projected-92qw @ 09/01/25 05:27:42.76
  STEP: Creating a pod to test atomic-volume-subpath @ 09/01/25 05:27:42.76
  STEP: Saw pod success @ 09/01/25 05:28:04.852
  I0901 05:28:04.858923 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod pod-subpath-test-projected-92qw container test-container-subpath-projected-92qw: <nil>
  STEP: delete the pod @ 09/01/25 05:28:04.87
  STEP: Deleting pod pod-subpath-test-projected-92qw @ 09/01/25 05:28:04.89
  I0901 05:28:04.890648 21 delete.go:62] Deleting pod "pod-subpath-test-projected-92qw" in namespace "subpath-9673"
  I0901 05:28:04.895318 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9673" for this suite. @ 09/01/25 05:28:04.901
• [22.177 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 09/01/25 05:28:04.908
  I0901 05:28:04.908756 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 05:28:04.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:04.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:28:04.924
  STEP: Creating service test in namespace statefulset-8468 @ 09/01/25 05:28:04.927
  I0901 05:28:04.943784 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I0901 05:28:14.947148 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/01/25 05:28:14.961
  I0901 05:28:14.996250 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:28:14.996778 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0901 05:28:24.994517 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:28:24.994567 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/01/25 05:28:25.003
  STEP: Delete all of the StatefulSets @ 09/01/25 05:28:25.007
  STEP: Verify that StatefulSets have been deleted @ 09/01/25 05:28:25.014
  I0901 05:28:25.017467 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8468
  I0901 05:28:25.036879 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8468" for this suite. @ 09/01/25 05:28:25.043
• [20.145 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 09/01/25 05:28:25.053
  I0901 05:28:25.054024 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:28:25.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:25.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:28:25.069
  STEP: Creating a ResourceQuota with terminating scope @ 09/01/25 05:28:25.072
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 05:28:25.078
  STEP: Creating a ResourceQuota with not terminating scope @ 09/01/25 05:28:27.084
  STEP: Ensuring ResourceQuota status is calculated @ 09/01/25 05:28:27.089
  STEP: Creating a long running pod @ 09/01/25 05:28:29.093
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/01/25 05:28:29.104
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/01/25 05:28:31.11
  STEP: Deleting the pod @ 09/01/25 05:28:33.117
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 05:28:33.129
  STEP: Creating a terminating pod @ 09/01/25 05:28:35.134
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/01/25 05:28:35.147
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/01/25 05:28:37.153
  STEP: Deleting the pod @ 09/01/25 05:28:39.157
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 05:28:39.173
  I0901 05:28:41.181310 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8435" for this suite. @ 09/01/25 05:28:41.189
• [16.145 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 09/01/25 05:28:41.199
  I0901 05:28:41.199627 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 05:28:41.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:41.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:28:41.219
  STEP: Creating a test namespace @ 09/01/25 05:28:41.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:41.236
  STEP: Creating a pod in the namespace @ 09/01/25 05:28:41.239
  STEP: Waiting for the pod to have running status @ 09/01/25 05:28:41.247
  STEP: Deleting the namespace @ 09/01/25 05:28:43.256
  STEP: Waiting for the namespace to be removed. @ 09/01/25 05:28:43.266
  STEP: Recreating the namespace @ 09/01/25 05:28:54.272
  STEP: Verifying there are no pods in the namespace @ 09/01/25 05:28:54.283
  I0901 05:28:54.287752 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1614" for this suite. @ 09/01/25 05:28:54.292
  STEP: Destroying namespace "nsdeletetest-3980" for this suite. @ 09/01/25 05:28:54.298
  I0901 05:28:54.308358 21 framework.go:370] Namespace nsdeletetest-3980 was already deleted
  STEP: Destroying namespace "nsdeletetest-1349" for this suite. @ 09/01/25 05:28:54.308
• [13.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/01/25 05:28:54.316
  I0901 05:28:54.317042 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 05:28:54.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:54.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:28:54.332
  I0901 05:28:56.377483 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8752" for this suite. @ 09/01/25 05:28:56.383
• [2.074 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/01/25 05:28:56.391
  I0901 05:28:56.391512 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:28:56.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:56.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:28:56.41
  STEP: Creating configMap with name projected-configmap-test-volume-map-30617de2-4ddb-400b-9218-b82d6702c4fd @ 09/01/25 05:28:56.414
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:28:56.418
  STEP: Saw pod success @ 09/01/25 05:28:58.435
  I0901 05:28:58.439537 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-240f851b-1ca3-4093-80af-cd62525a6878 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:28:58.449
  I0901 05:28:58.473491 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-520" for this suite. @ 09/01/25 05:28:58.479
• [2.097 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/01/25 05:28:58.488
  I0901 05:28:58.489042 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:28:58.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:28:58.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:28:58.511
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:28:58.516
  STEP: Saw pod success @ 09/01/25 05:29:00.536
  I0901 05:29:00.542523 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-0af269e7-ee39-4e5d-bd5b-3999ad6d9abc container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:29:00.552
  I0901 05:29:00.570778 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2604" for this suite. @ 09/01/25 05:29:00.576
• [2.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 09/01/25 05:29:00.583
  I0901 05:29:00.583305 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:29:00.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:00.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:00.596
  STEP: Creating a pod to test env composition @ 09/01/25 05:29:00.599
  STEP: Saw pod success @ 09/01/25 05:29:04.627
  I0901 05:29:04.631174 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod var-expansion-c7199204-91dc-4421-87cf-8967ca04e443 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:29:04.639
  I0901 05:29:04.653849 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1936" for this suite. @ 09/01/25 05:29:04.659
• [4.083 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/01/25 05:29:04.666
  I0901 05:29:04.666470 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:29:04.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:04.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:04.683
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:29:04.686
  STEP: Saw pod success @ 09/01/25 05:29:08.714
  I0901 05:29:08.721229 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-6def6bdc-76a0-4c11-98d0-b2439550f8e1 container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:29:08.731
  I0901 05:29:08.747813 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9739" for this suite. @ 09/01/25 05:29:08.753
• [4.094 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/01/25 05:29:08.76
  I0901 05:29:08.760210 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:29:08.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:08.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:08.81
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:29:08.814
  STEP: Saw pod success @ 09/01/25 05:29:12.842
  I0901 05:29:12.847221 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-7482cf08-2d3b-463b-bed2-2477fc15c9de container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:29:12.86
  I0901 05:29:12.879250 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2329" for this suite. @ 09/01/25 05:29:12.884
• [4.132 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 09/01/25 05:29:12.896
  I0901 05:29:12.896674 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:29:12.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:12.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:12.917
  STEP: Setting up server cert @ 09/01/25 05:29:12.939
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:29:13.217
  STEP: Deploying the webhook pod @ 09/01/25 05:29:13.224
  STEP: Wait for the deployment to be ready @ 09/01/25 05:29:13.24
  I0901 05:29:13.251744 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:29:15.264
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:29:15.272
  I0901 05:29:16.272774 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/01/25 05:29:16.285
  STEP: create a configmap that should be updated by the webhook @ 09/01/25 05:29:16.306
  I0901 05:29:16.374122 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4667" for this suite. @ 09/01/25 05:29:16.378
  STEP: Destroying namespace "webhook-markers-9334" for this suite. @ 09/01/25 05:29:16.383
• [3.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 09/01/25 05:29:16.39
  I0901 05:29:16.390494 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:29:16.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:16.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:16.404
  STEP: creating a collection of services @ 09/01/25 05:29:16.406
  I0901 05:29:16.406989 21 service.go:3635] Creating e2e-svc-a-62st4
  I0901 05:29:16.415764 21 service.go:3635] Creating e2e-svc-b-cnzhc
  I0901 05:29:16.424980 21 service.go:3635] Creating e2e-svc-c-8m64t
  STEP: deleting service collection @ 09/01/25 05:29:16.439
  I0901 05:29:16.482786 21 service.go:3670] Collection of services has been deleted
  I0901 05:29:16.482972 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2327" for this suite. @ 09/01/25 05:29:16.489
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/01/25 05:29:16.499
  I0901 05:29:16.499295 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename disruption @ 09/01/25 05:29:16.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:16.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:16.522
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:29:16.529
  STEP: Waiting for all pods to be running @ 09/01/25 05:29:18.568
  I0901 05:29:18.578717 21 disruption.go:691] running pods: 0 < 3
  I0901 05:29:20.573773 21 disruption.go:691] running pods: 1 < 3
  I0901 05:29:22.578930 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2762" for this suite. @ 09/01/25 05:29:22.583
• [6.090 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/01/25 05:29:22.589
  I0901 05:29:22.589135 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 05:29:22.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:22.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:22.612
  STEP: create the container @ 09/01/25 05:29:22.615
  W0901 05:29:22.624594      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/01/25 05:29:22.624
  STEP: get the container status @ 09/01/25 05:29:24.638
  STEP: the container should be terminated @ 09/01/25 05:29:24.642
  STEP: the termination message should be set @ 09/01/25 05:29:24.642
  I0901 05:29:24.642291 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/01/25 05:29:24.642
  I0901 05:29:24.667563 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-315" for this suite. @ 09/01/25 05:29:24.673
• [2.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 09/01/25 05:29:24.68
  I0901 05:29:24.680310 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:29:24.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:24.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:24.696
  STEP: Creating a job @ 09/01/25 05:29:24.699
  STEP: Ensuring active pods == parallelism @ 09/01/25 05:29:24.704
  STEP: delete a job @ 09/01/25 05:29:26.715
  STEP: deleting Job.batch foo in namespace job-5311, will wait for the garbage collector to delete the pods @ 09/01/25 05:29:26.715
  I0901 05:29:26.780136 21 resources.go:139] Deleting Job.batch foo took: 7.184788ms
  I0901 05:29:26.880702 21 resources.go:163] Terminating Job.batch foo pods took: 100.56468ms
  STEP: Ensuring job was deleted @ 09/01/25 05:29:29.381
  I0901 05:29:29.387283 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5311" for this suite. @ 09/01/25 05:29:29.394
• [4.732 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 09/01/25 05:29:29.412
  I0901 05:29:29.413005 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:29:29.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:29.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:29.438
  STEP: Creating a job @ 09/01/25 05:29:29.441
  STEP: Ensuring active pods == parallelism @ 09/01/25 05:29:29.446
  STEP: Orphaning one of the Job's Pods @ 09/01/25 05:29:31.458
  I0901 05:29:31.977333 21 pod_client.go:173] Successfully updated pod "adopt-release-6wvsc"
  STEP: Checking that the Job readopts the Pod @ 09/01/25 05:29:31.977
  STEP: Removing the labels from the Job's Pod @ 09/01/25 05:29:33.989
  I0901 05:29:34.508314 21 pod_client.go:173] Successfully updated pod "adopt-release-6wvsc"
  STEP: Checking that the Job releases the Pod @ 09/01/25 05:29:34.508
  I0901 05:29:36.522172 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5803" for this suite. @ 09/01/25 05:29:36.528
• [7.122 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/01/25 05:29:36.535
  I0901 05:29:36.535828 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename csi-storageclass @ 09/01/25 05:29:36.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:36.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:36.551
  STEP: Creating a StorageClass @ 09/01/25 05:29:36.555
  STEP: Get StorageClass "e2e-5lmdw" @ 09/01/25 05:29:36.561
  STEP: Patching the StorageClass "e2e-5lmdw" @ 09/01/25 05:29:36.565
  STEP: Delete StorageClass "e2e-5lmdw" @ 09/01/25 05:29:36.571
  STEP: Confirm deletion of StorageClass "e2e-5lmdw" @ 09/01/25 05:29:36.576
  STEP: Create a replacement StorageClass @ 09/01/25 05:29:36.58
  STEP: Updating StorageClass "e2e-v2-67gnj" @ 09/01/25 05:29:36.583
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-67gnj=updated" @ 09/01/25 05:29:36.59
  STEP: Deleting StorageClass "e2e-v2-67gnj" via DeleteCollection @ 09/01/25 05:29:36.592
  STEP: Confirm deletion of StorageClass "e2e-v2-67gnj" @ 09/01/25 05:29:36.599
  I0901 05:29:36.601918 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7" for this suite. @ 09/01/25 05:29:36.628
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 09/01/25 05:29:36.641
  I0901 05:29:36.641040 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:29:36.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:36.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:36.66
  STEP: creating service in namespace services-5544 @ 09/01/25 05:29:36.662
  STEP: creating service affinity-nodeport-transition in namespace services-5544 @ 09/01/25 05:29:36.663
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5544 @ 09/01/25 05:29:36.675
  I0901 05:29:36.684333      21 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5544, replica count: 3
  I0901 05:29:39.736415      21 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 05:29:39.751602 21 resource.go:361] Creating new exec pod
  I0901 05:29:42.785566 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5544 exec execpod-affinitys7mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0901 05:29:42.955084 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition (10.43.10.92) 80 port [tcp/http] succeeded!\n"
  I0901 05:29:42.955136 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:29:42.955211 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5544 exec execpod-affinitys7mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.92 80'
  I0901 05:29:43.161875 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.10.92 80\nConnection to 10.43.10.92 80 port [tcp/http] succeeded!\n"
  I0901 05:29:43.161960 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:29:43.162194 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5544 exec execpod-affinitys7mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.9 32351'
  I0901 05:29:43.337976 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.9 32351\nConnection to 192.168.1.9 32351 port [tcp/*] succeeded!\n"
  I0901 05:29:43.338035 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:29:43.338148 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5544 exec execpod-affinitys7mgs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.10 32351'
  I0901 05:29:43.500328 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.10 32351\nConnection to 192.168.1.10 32351 port [tcp/*] succeeded!\n"
  I0901 05:29:43.500382 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:29:43.509001 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5544 exec execpod-affinitys7mgs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.1.10:32351/ ; done'
  I0901 05:29:43.855854 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n"
  I0901 05:29:43.855916 21 builder.go:147] stdout: "\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-v2828\naffinity-nodeport-transition-v2828\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-v2828\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-v2828\naffinity-nodeport-transition-jkfvs\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4"
  I0901 05:29:43.855938 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.855951 21 service.go:242] Received response from host: affinity-nodeport-transition-v2828
  I0901 05:29:43.855962 21 service.go:242] Received response from host: affinity-nodeport-transition-v2828
  I0901 05:29:43.855972 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.855983 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.855992 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:43.856001 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.856010 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:43.856022 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.856032 21 service.go:242] Received response from host: affinity-nodeport-transition-v2828
  I0901 05:29:43.856041 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.856050 21 service.go:242] Received response from host: affinity-nodeport-transition-v2828
  I0901 05:29:43.856062 21 service.go:242] Received response from host: affinity-nodeport-transition-jkfvs
  I0901 05:29:43.856070 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:43.856079 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:43.856092 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:43.865339 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5544 exec execpod-affinitys7mgs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.1.10:32351/ ; done'
  I0901 05:29:44.201823 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.10:32351/\n"
  I0901 05:29:44.201885 21 builder.go:147] stdout: "\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4\naffinity-nodeport-transition-mrkk4"
  I0901 05:29:44.201906 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201920 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201933 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201946 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201958 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201971 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201982 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.201995 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202007 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202018 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202032 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202043 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202054 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202065 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202076 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202087 21 service.go:242] Received response from host: affinity-nodeport-transition-mrkk4
  I0901 05:29:44.202160 21 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5544, will wait for the garbage collector to delete the pods @ 09/01/25 05:29:44.216
  I0901 05:29:44.280256 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.159396ms
  I0901 05:29:44.381694 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.432543ms
  I0901 05:29:47.512083 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5544" for this suite. @ 09/01/25 05:29:47.516
• [10.879 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 09/01/25 05:29:47.52
  I0901 05:29:47.520808 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:29:47.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:47.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:47.532
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/01/25 05:29:47.534
  I0901 05:29:47.535104 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 05:29:48.879119 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  I0901 05:29:54.362211 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3734" for this suite. @ 09/01/25 05:29:54.374
• [6.862 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 09/01/25 05:29:54.385
  I0901 05:29:54.385685 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:29:54.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:54.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:54.408
  STEP: Creating a pod to test downward api env vars @ 09/01/25 05:29:54.412
  STEP: Saw pod success @ 09/01/25 05:29:58.443
  I0901 05:29:58.450579 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downward-api-f50d7abe-ac62-4036-99c7-7c54299dd686 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:29:58.464
  I0901 05:29:58.481506 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9909" for this suite. @ 09/01/25 05:29:58.488
• [4.109 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/01/25 05:29:58.495
  I0901 05:29:58.495855 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-watch @ 09/01/25 05:29:58.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:29:58.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:29:58.519
  I0901 05:29:58.522676 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Creating first CR  @ 09/01/25 05:30:01.08
  I0901 05:30:01.086747 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T05:30:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T05:30:01Z]] name:name1 resourceVersion:29073 uid:f91100cb-78d4-4c0a-95fb-4f978d07fed1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/01/25 05:30:11.087
  I0901 05:30:11.100105 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T05:30:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T05:30:11Z]] name:name2 resourceVersion:29091 uid:c2356040-c51f-4f93-a310-2d592c386fe2] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/01/25 05:30:21.1
  I0901 05:30:21.108380 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T05:30:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T05:30:21Z]] name:name1 resourceVersion:29102 uid:f91100cb-78d4-4c0a-95fb-4f978d07fed1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/01/25 05:30:31.109
  I0901 05:30:31.117615 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T05:30:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T05:30:31Z]] name:name2 resourceVersion:29113 uid:c2356040-c51f-4f93-a310-2d592c386fe2] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/01/25 05:30:41.117
  I0901 05:30:41.126106 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T05:30:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T05:30:21Z]] name:name1 resourceVersion:29123 uid:f91100cb-78d4-4c0a-95fb-4f978d07fed1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/01/25 05:30:51.127
  I0901 05:30:51.142283 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-01T05:30:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-01T05:30:31Z]] name:name2 resourceVersion:29134 uid:c2356040-c51f-4f93-a310-2d592c386fe2] num:map[num1:9223372036854775807 num2:1000000]]}
  I0901 05:31:01.664708 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4539" for this suite. @ 09/01/25 05:31:01.674
• [63.189 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/01/25 05:31:01.685
  I0901 05:31:01.685473 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename init-container @ 09/01/25 05:31:01.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:31:01.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:31:01.71
  STEP: creating the pod @ 09/01/25 05:31:01.714
  I0901 05:31:01.714864 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0901 05:31:41.717527 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-da6b317a-3f8d-4d0a-af80-9189f2b1db0a", GenerateName:"", Namespace:"init-container-4207", SelfLink:"", UID:"100ef427-f148-4cda-b027-986a3af42e19", ResourceVersion:"29222", Generation:0, CreationTimestamp:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"714852415"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005239158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 1, 5, 31, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052391b8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-g7c5b", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005023500), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g7c5b", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g7c5b", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-g7c5b", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000ce54d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005509440), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000ce5560)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000ce5580)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc000ce5588), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000ce558c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003d00ce0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 5, 31, 2, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.1.9", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.1.9"}}, PodIP:"10.42.1.77", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.77"}}, StartTime:time.Date(2025, time.September, 1, 5, 31, 1, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004227260)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004227420)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://759762077d116506e7af4202316936efbd6c99b257f915281ee669b4a4d5b947", Started:(*bool)(0xc000ce564a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-g7c5b", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003d00d00)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005023560), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc000ce565d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-g7c5b", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003d00d10)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005023540), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc000ce561f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-g7c5b", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003d00cf0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0901 05:31:41.718668 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4207" for this suite. @ 09/01/25 05:31:41.725
• [40.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 09/01/25 05:31:41.739
  I0901 05:31:41.739796 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:31:41.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:31:41.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:31:41.76
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6416 @ 09/01/25 05:31:41.764
  STEP: changing the ExternalName service to type=ClusterIP @ 09/01/25 05:31:41.771
  STEP: creating replication controller externalname-service in namespace services-6416 @ 09/01/25 05:31:41.785
  I0901 05:31:41.791105      21 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6416, replica count: 2
  I0901 05:31:44.842166      21 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0901 05:31:44.842273 21 resource.go:361] Creating new exec pod
  I0901 05:31:47.862818 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-6416 exec execpodnlz72 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0901 05:31:48.059943 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.43.193.178) 80 port [tcp/http] succeeded!\n"
  I0901 05:31:48.059996 21 builder.go:147] stdout: "externalname-service-cpgq5"
  I0901 05:31:48.060078 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-6416 exec execpodnlz72 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.193.178 80'
  I0901 05:31:48.267884 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.193.178 80\n+ echo hostName\nConnection to 10.43.193.178 80 port [tcp/http] succeeded!\n"
  I0901 05:31:48.267961 21 builder.go:147] stdout: "externalname-service-6f9zp"
  I0901 05:31:48.268538 21 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0901 05:31:48.300039 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6416" for this suite. @ 09/01/25 05:31:48.303
• [6.569 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/01/25 05:31:48.308
  I0901 05:31:48.308943 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename lease-test @ 09/01/25 05:31:48.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:31:48.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:31:48.32
  I0901 05:31:48.378001 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7899" for this suite. @ 09/01/25 05:31:48.403
• [0.107 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 09/01/25 05:31:48.416
  I0901 05:31:48.416754 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:31:48.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:31:48.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:31:48.435
  STEP: Creating configMap that has name configmap-test-emptyKey-14440e6d-a239-449c-9ffc-eadcd6bb0c4e @ 09/01/25 05:31:48.439
  I0901 05:31:48.441772 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9725" for this suite. @ 09/01/25 05:31:48.504
• [0.098 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/01/25 05:31:48.515
  I0901 05:31:48.515690 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pod-network-test @ 09/01/25 05:31:48.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:31:48.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:31:48.537
  STEP: Performing setup for networking test in namespace pod-network-test-7916 @ 09/01/25 05:31:48.54
  STEP: creating a selector @ 09/01/25 05:31:48.54
  STEP: Creating the service pods in kubernetes @ 09/01/25 05:31:48.54
  I0901 05:31:48.540909 21 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/01/25 05:32:02.729
  I0901 05:32:04.778133 21 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0901 05:32:04.778180 21 utils.go:496] Going to poll 10.42.2.144 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 05:32:04.781549 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.144 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7916 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:32:04.781583 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:32:04.781694 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7916/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.144+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 05:32:05.911158 21 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0901 05:32:05.911243 21 utils.go:496] Going to poll 10.42.0.104 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 05:32:05.918907 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.104 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7916 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:32:05.918945 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:32:05.919000 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7916/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.104+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 05:32:07.037306 21 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0901 05:32:07.037697 21 utils.go:496] Going to poll 10.42.1.80 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0901 05:32:07.042810 21 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.80 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7916 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:32:07.042877 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:32:07.043254 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7916/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.80+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0901 05:32:08.181061 21 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0901 05:32:08.181582 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7916" for this suite. @ 09/01/25 05:32:08.188
• [19.685 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/01/25 05:32:08.201
  I0901 05:32:08.201871 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 05:32:08.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:32:08.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:32:08.22
  I0901 05:32:08.223878 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0901 05:32:08.233125 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0901 05:32:13.239524 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 05:32:13.239
  I0901 05:32:13.239669 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0901 05:32:13.245480 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0901 05:32:13.257189 21 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0901 05:32:15.265728 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0901 05:32:15.268645 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0901 05:32:15.277713 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc9ba935-f8b2-4535-8fe2-116909058031",
      ResourceVersion: (string) (len=5) "29508",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 05:32:15.283039 21 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b343e91-8731-460c-a469-bb0ceac6d022",
      ResourceVersion: (string) (len=5) "29496",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "bc9ba935-f8b2-4535-8fe2-116909058031",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 39 62 61 39  33 35 2d 66 38 62 32 2d  |\"bc9ba935-f8b2-|
              00000120  34 35 33 35 2d 38 66 65  32 2d 31 31 36 39 30 39  |4535-8fe2-116909|
              00000130  30 35 38 30 33 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |058031\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:32:15.287908 21 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0901 05:32:15.288318 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48c5f411-be19-410e-8d9d-781ecaa653dd",
      ResourceVersion: (string) (len=5) "29507",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "bc9ba935-f8b2-4535-8fe2-116909058031",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 63 39 62 61 39 33  |"uid\":\"bc9ba93|
              000000b0  35 2d 66 38 62 32 2d 34  35 33 35 2d 38 66 65 32  |5-f8b2-4535-8fe2|
              000000c0  2d 31 31 36 39 30 39 30  35 38 30 33 31 5c 22 7d  |-116909058031\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:32:15.292694 21 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-w9xnf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-w9xnf",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-9275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba89a9a5-dd4e-4a4c-aa45-1cef96e130d0",
      ResourceVersion: (string) (len=5) "29495",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "0b343e91-8731-460c-a469-bb0ceac6d022",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 62  33 34 33 65 39 31 2d 38  |d\":\"0b343e91-8|
              00000090  37 33 31 2d 34 36 30 63  2d 61 34 36 39 2d 62 62  |731-460c-a469-bb|
              000000a0  30 63 65 61 63 36 64 30  32 32 5c 22 7d 22 3a 7b  |0ceac6d022\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.82\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bn8vq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bn8vq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892301533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=10) "10.42.1.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892301533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892301533,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://43c8ec8b24076f68b8e55c7f3964770ffb7354696bb71a86c8731378fbc13486",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bn8vq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:32:15.294668 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9275" for this suite. @ 09/01/25 05:32:15.298
• [7.102 seconds]
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 09/01/25 05:32:15.303
  I0901 05:32:15.303835 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:32:15.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:32:15.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:32:15.318
  STEP: creating a Service @ 09/01/25 05:32:15.325
  STEP: watching for the Service to be added @ 09/01/25 05:32:15.336
  I0901 05:32:15.337930 21 service.go:3425] Found Service test-service-zplpd in namespace services-3616 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31026}]
  I0901 05:32:15.337960 21 service.go:3432] Service test-service-zplpd created
  STEP: Getting /status @ 09/01/25 05:32:15.337
  I0901 05:32:15.341852 21 service.go:3443] Service test-service-zplpd has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/01/25 05:32:15.341
  STEP: watching for the Service to be patched @ 09/01/25 05:32:15.346
  I0901 05:32:15.348596 21 service.go:3466] observed Service test-service-zplpd in namespace services-3616 with annotations: map[] & LoadBalancer: {[]}
  I0901 05:32:15.348634 21 service.go:3469] Found Service test-service-zplpd in namespace services-3616 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000fdfec0 []}]}
  I0901 05:32:15.348647 21 service.go:3476] Service test-service-zplpd has service status patched
  STEP: updating the ServiceStatus @ 09/01/25 05:32:15.348
  I0901 05:32:15.355824 21 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/01/25 05:32:15.355
  I0901 05:32:15.358096 21 service.go:3507] Observed Service test-service-zplpd in namespace services-3616 with annotations: map[] & Conditions: []
  I0901 05:32:15.358126 21 service.go:3518] Observed Service test-service-zplpd in namespace services-3616 with annotations: map[patchedstatus:true] & Conditions: []
  I0901 05:32:15.359723 21 service.go:3514] Found Service test-service-zplpd in namespace services-3616 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 05:32:15.359757 21 service.go:3525] Service test-service-zplpd has service status updated
  STEP: patching the service @ 09/01/25 05:32:15.359
  STEP: watching for the Service to be patched @ 09/01/25 05:32:15.377
  I0901 05:32:15.379781 21 service.go:3548] observed Service test-service-zplpd in namespace services-3616 with labels: map[test-service-static:true]
  I0901 05:32:15.379819 21 service.go:3548] observed Service test-service-zplpd in namespace services-3616 with labels: map[test-service-static:true]
  I0901 05:32:15.379831 21 service.go:3548] observed Service test-service-zplpd in namespace services-3616 with labels: map[test-service-static:true]
  I0901 05:32:15.379853 21 service.go:3551] Found Service test-service-zplpd in namespace services-3616 with labels: map[test-service:patched test-service-static:true]
  I0901 05:32:15.379862 21 service.go:3558] Service test-service-zplpd patched
  STEP: deleting the service @ 09/01/25 05:32:15.379
  STEP: watching for the Service to be deleted @ 09/01/25 05:32:15.393
  I0901 05:32:15.395666 21 service.go:3582] Observed event: ADDED
  I0901 05:32:15.395785 21 service.go:3582] Observed event: MODIFIED
  I0901 05:32:15.395993 21 service.go:3582] Observed event: MODIFIED
  I0901 05:32:15.396232 21 service.go:3582] Observed event: MODIFIED
  I0901 05:32:15.396277 21 service.go:3578] Found Service test-service-zplpd in namespace services-3616 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0901 05:32:15.396389 21 service.go:3587] Service test-service-zplpd deleted
  I0901 05:32:15.396583 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3616" for this suite. @ 09/01/25 05:32:15.4
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/01/25 05:32:15.407
  I0901 05:32:15.407154 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 05:32:15.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:32:15.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:32:15.425
  STEP: Creating pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324 @ 09/01/25 05:32:15.429
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 05:32:17.444
  I0901 05:32:17.448153 21 container_probe.go:1749] Initial restart count of pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 is 0
  I0901 05:32:17.451314 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:19.457107 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:21.462062 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:23.468819 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:25.474120 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:27.478954 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:29.487063 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:31.492449 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:33.499835 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:35.504603 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:37.510347 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:39.516556 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:41.523074 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:43.530637 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:45.538383 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:47.546105 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:49.553729 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:51.560766 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:53.566145 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:55.572813 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:57.579951 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:32:59.587920 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:01.595935 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:03.601547 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:05.609226 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:07.616650 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:09.625058 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:11.632178 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:13.639277 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:15.644999 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:17.650625 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:19.657863 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:21.664672 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:23.673096 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:25.678101 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:27.682784 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:29.690783 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:31.696345 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:33.703570 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:35.709890 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:37.717991 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:39.724604 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:41.730654 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:43.736286 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:45.743518 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:47.750160 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:49.755204 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:51.763337 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:53.770086 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:55.777898 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:57.784444 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:33:59.791974 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:01.798622 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:03.806394 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:05.811798 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:07.822230 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:09.826956 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:11.833846 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:13.841523 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:15.847026 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:17.852942 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:19.859136 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:21.867015 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:23.872109 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:25.877782 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:27.884984 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:29.891973 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:31.899574 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:33.908549 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:35.914812 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:37.919826 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:39.928688 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:41.936535 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:43.941828 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:45.950241 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:47.957888 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:49.965770 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:51.973913 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:53.982560 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:55.990222 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:34:57.998602 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:00.004670 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:02.012534 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:04.020510 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:06.026387 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:08.033712 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:10.041819 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:12.050904 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:14.058101 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:16.064295 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:18.073245 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:20.078538 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:22.084341 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:24.090126 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:26.096398 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:28.101745 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:30.106845 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:32.111639 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:34.118422 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:36.124062 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:38.128652 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:40.134286 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:42.144731 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:44.152434 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:46.159298 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:48.167837 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:50.173974 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:52.181318 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:54.189698 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:56.201388 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:35:58.209732 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:00.216591 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:02.225015 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:04.232290 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:06.238084 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:08.245553 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:10.253364 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:12.261493 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:14.271242 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  I0901 05:36:16.277005 21 container_probe.go:1759] Get pod test-webserver-f4bcbf42-ca68-41a3-94c7-0b2813ed4b61 in namespace container-probe-3324
  STEP: deleting the pod @ 09/01/25 05:36:18.277
  I0901 05:36:18.310874 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3324" for this suite. @ 09/01/25 05:36:18.317
• [242.917 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/01/25 05:36:18.324
  I0901 05:36:18.324301 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 05:36:18.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:36:18.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:36:18.356
  STEP: Creating service test in namespace statefulset-2387 @ 09/01/25 05:36:18.36
  STEP: Creating a new StatefulSet @ 09/01/25 05:36:18.365
  I0901 05:36:18.376497 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I0901 05:36:28.377687 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:36:28.377733 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:36:28.377748 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/01/25 05:36:28.391
  I0901 05:36:28.404766 21 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 09/01/25 05:36:28.404
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/01/25 05:36:38.418
  STEP: Performing a canary update @ 09/01/25 05:36:38.418
  I0901 05:36:38.434415 21 statefulset.go:2510] Updating stateful set ss2
  I0901 05:36:38.448837 21 wait.go:74] Waiting for Pod statefulset-2387/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/01/25 05:36:48.452
  I0901 05:36:48.512645 21 wait.go:40] Found 2 stateful pods, waiting for 3
  I0901 05:36:58.506977 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:36:58.507026 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:36:58.507042 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/01/25 05:36:58.515
  I0901 05:36:58.525981 21 statefulset.go:2510] Updating stateful set ss2
  I0901 05:36:58.535046 21 wait.go:74] Waiting for Pod statefulset-2387/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0901 05:37:08.554961 21 statefulset.go:2510] Updating stateful set ss2
  I0901 05:37:08.568394 21 wait.go:56] Waiting for StatefulSet statefulset-2387/ss2 to complete update
  I0901 05:37:08.568481 21 wait.go:63] Waiting for Pod statefulset-2387/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0901 05:37:18.567996 21 statefulset.go:138] Deleting all statefulset in ns statefulset-2387
  I0901 05:37:18.571016 21 rest.go:152] Scaling statefulset ss2 to 0
  I0901 05:37:28.589764 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 05:37:28.593870 21 rest.go:90] Deleting statefulset ss2
  I0901 05:37:28.611579 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2387" for this suite. @ 09/01/25 05:37:28.616
• [70.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/01/25 05:37:28.623
  I0901 05:37:28.623833 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 05:37:28.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:37:28.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:37:28.636
  STEP: Cleaning up the secret @ 09/01/25 05:37:30.666
  STEP: Cleaning up the configmap @ 09/01/25 05:37:30.672
  STEP: Cleaning up the pod @ 09/01/25 05:37:30.683
  I0901 05:37:30.695531 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4731" for this suite. @ 09/01/25 05:37:30.7
• [2.084 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/01/25 05:37:30.708
  I0901 05:37:30.708891 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 05:37:30.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:37:30.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:37:30.733
  I0901 05:38:30.752102 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4064" for this suite. @ 09/01/25 05:38:30.755
• [60.054 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/01/25 05:38:30.762
  I0901 05:38:30.762693 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:38:30.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:38:30.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:38:30.776
  STEP: creating the pod @ 09/01/25 05:38:30.779
  STEP: submitting the pod to kubernetes @ 09/01/25 05:38:30.779
  STEP: verifying the pod is in kubernetes @ 09/01/25 05:38:32.797
  STEP: updating the pod @ 09/01/25 05:38:32.801
  I0901 05:38:33.319144 21 pod_client.go:173] Successfully updated pod "pod-update-9c7479c5-235b-4d13-95d1-90789f86438e"
  STEP: verifying the updated pod is in kubernetes @ 09/01/25 05:38:33.325
  I0901 05:38:33.330080 21 pods.go:391] Pod update OK
  I0901 05:38:33.330671 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8154" for this suite. @ 09/01/25 05:38:33.336
• [2.581 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/01/25 05:38:33.343
  I0901 05:38:33.343457 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 05:38:33.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:38:33.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:38:33.363
  STEP: Creating a ReplaceConcurrent cronjob @ 09/01/25 05:38:33.366
  STEP: Ensuring a job is scheduled @ 09/01/25 05:38:33.37
  STEP: Ensuring exactly one is scheduled @ 09/01/25 05:39:01.377
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/01/25 05:39:01.383
  STEP: Ensuring the job is replaced with a new one @ 09/01/25 05:39:01.388
  STEP: Removing cronjob @ 09/01/25 05:40:01.395
  I0901 05:40:01.404795 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3206" for this suite. @ 09/01/25 05:40:01.412
• [88.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/01/25 05:40:01.421
  I0901 05:40:01.422153 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 05:40:01.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:40:01.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:40:01.438
  STEP: Creating LimitRange "e2e-limitrange-ksktw" in namespace "limitrange-8919" @ 09/01/25 05:40:01.441
  STEP: Creating another limitRange in another namespace @ 09/01/25 05:40:01.445
  I0901 05:40:01.456733 21 limit_range.go:299] Namespace "e2e-limitrange-ksktw-1420" created
  I0901 05:40:01.456769 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-ksktw" in namespace "e2e-limitrange-ksktw-1420"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-ksktw" @ 09/01/25 05:40:01.461
  I0901 05:40:01.464034 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-ksktw" in "limitrange-8919" namespace @ 09/01/25 05:40:01.464
  I0901 05:40:01.469871 21 limit_range.go:335] LimitRange "e2e-limitrange-ksktw" has been patched
  STEP: Delete LimitRange "e2e-limitrange-ksktw" by Collection with labelSelector: "e2e-limitrange-ksktw=patched" @ 09/01/25 05:40:01.469
  STEP: Confirm that the limitRange "e2e-limitrange-ksktw" has been deleted @ 09/01/25 05:40:01.475
  I0901 05:40:01.475835 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0901 05:40:01.478227 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-ksktw=patched"
  I0901 05:40:01.478329 21 limit_range.go:344] LimitRange "e2e-limitrange-ksktw" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-ksktw" @ 09/01/25 05:40:01.478
  I0901 05:40:01.482010 21 limit_range.go:350] Found 1 limitRange
  I0901 05:40:01.482139 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8919" for this suite. @ 09/01/25 05:40:01.513
  STEP: Destroying namespace "e2e-limitrange-ksktw-1420" for this suite. @ 09/01/25 05:40:01.522
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/01/25 05:40:01.531
  I0901 05:40:01.531467 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename ingress @ 09/01/25 05:40:01.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:40:01.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:40:01.549
  STEP: getting /apis @ 09/01/25 05:40:01.552
  STEP: getting /apis/networking.k8s.io @ 09/01/25 05:40:01.559
  STEP: getting /apis/networking.k8s.iov1 @ 09/01/25 05:40:01.56
  STEP: creating @ 09/01/25 05:40:01.562
  STEP: getting @ 09/01/25 05:40:01.579
  STEP: listing @ 09/01/25 05:40:01.586
  STEP: watching @ 09/01/25 05:40:01.593
  I0901 05:40:01.593401 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/01/25 05:40:01.594
  STEP: cluster-wide watching @ 09/01/25 05:40:01.603
  I0901 05:40:01.603949 21 ingress.go:198] starting watch
  STEP: patching @ 09/01/25 05:40:01.605
  STEP: updating @ 09/01/25 05:40:01.61
  I0901 05:40:01.617284 21 ingress.go:221] waiting for watch events with expected annotations
  I0901 05:40:01.617346 21 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I0901 05:40:01.617480 21 ingress.go:238] missing expected annotations, waiting: map[string]string(nil)
  I0901 05:40:01.617503 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 05:40:01.617
  STEP: updating /status @ 09/01/25 05:40:01.621
  STEP: get /status @ 09/01/25 05:40:01.654
  STEP: deleting @ 09/01/25 05:40:01.663
  STEP: deleting a collection @ 09/01/25 05:40:01.673
  I0901 05:40:01.685188 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1641" for this suite. @ 09/01/25 05:40:01.689
• [0.163 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 09/01/25 05:40:01.695
  I0901 05:40:01.695325 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:40:01.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:40:01.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:40:01.709
  STEP: Setting up server cert @ 09/01/25 05:40:01.725
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:40:02.186
  STEP: Deploying the webhook pod @ 09/01/25 05:40:02.198
  STEP: Wait for the deployment to be ready @ 09/01/25 05:40:02.214
  I0901 05:40:02.224256 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:40:04.244
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:40:04.255
  I0901 05:40:05.256302 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/01/25 05:40:05.268
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 05:40:05.268
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/01/25 05:40:05.298
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/01/25 05:40:06.313
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 05:40:06.313
  STEP: Having no error when timeout is longer than webhook latency @ 09/01/25 05:40:07.352
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 05:40:07.352
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/01/25 05:40:12.404
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/01/25 05:40:12.404
  I0901 05:40:17.499847 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9594" for this suite. @ 09/01/25 05:40:17.504
  STEP: Destroying namespace "webhook-markers-5930" for this suite. @ 09/01/25 05:40:17.509
• [15.839 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 09/01/25 05:40:17.535
  I0901 05:40:17.535488 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 05:40:17.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:40:17.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:40:17.552
  I0901 05:40:17.567073 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 05:41:17.573115 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/01/25 05:41:17.577
  STEP: Adding a custom resource @ 09/01/25 05:41:17.577
  I0901 05:41:17.603640 21 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0901 05:41:17.611686 21 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 05:41:17.611
  I0901 05:41:17.642175 21 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0901 05:41:17.655262 21 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/01/25 05:41:17.655
  I0901 05:41:17.683449 21 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0901 05:41:17.696136 21 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/01/25 05:41:17.696
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/01/25 05:41:19.738
  STEP: Removing a custom resource @ 09/01/25 05:41:23.802
  STEP: Removing a custom resource @ 09/01/25 05:41:23.815
  STEP: Removing a custom resource @ 09/01/25 05:41:23.83
  I0901 05:41:23.842301 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5247" for this suite. @ 09/01/25 05:41:23.846
• [66.316 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/01/25 05:41:23.851
  I0901 05:41:23.851160 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 05:41:23.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:23.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:23.864
  STEP: fetching the /apis discovery document @ 09/01/25 05:41:23.867
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/01/25 05:41:23.868
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 05:41:23.868
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/01/25 05:41:23.868
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/01/25 05:41:23.87
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 05:41:23.87
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/01/25 05:41:23.871
  I0901 05:41:23.871524 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4067" for this suite. @ 09/01/25 05:41:23.88
• [0.037 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/01/25 05:41:23.888
  I0901 05:41:23.888774 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename runtimeclass @ 09/01/25 05:41:23.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:23.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:23.906
  STEP: Deleting RuntimeClass runtimeclass-1549-delete-me @ 09/01/25 05:41:23.914
  STEP: Waiting for the RuntimeClass to disappear @ 09/01/25 05:41:23.919
  I0901 05:41:23.928298 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1549" for this suite. @ 09/01/25 05:41:23.976
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/01/25 05:41:23.986
  I0901 05:41:23.986166 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename watch @ 09/01/25 05:41:23.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:23.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:24.003
  STEP: creating a watch on configmaps @ 09/01/25 05:41:24.006
  STEP: creating a new configmap @ 09/01/25 05:41:24.009
  STEP: modifying the configmap once @ 09/01/25 05:41:24.017
  STEP: closing the watch once it receives two notifications @ 09/01/25 05:41:24.026
  I0901 05:41:24.026939 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4540  5cff9f11-cac5-4f3a-9447-f5a0e8a42ab5 30787 0 2025-09-01 05:41:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 05:41:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:41:24.027250 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4540  5cff9f11-cac5-4f3a-9447-f5a0e8a42ab5 30788 0 2025-09-01 05:41:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 05:41:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/01/25 05:41:24.027
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/01/25 05:41:24.042
  STEP: deleting the configmap @ 09/01/25 05:41:24.044
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/01/25 05:41:24.052
  I0901 05:41:24.052635 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4540  5cff9f11-cac5-4f3a-9447-f5a0e8a42ab5 30789 0 2025-09-01 05:41:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 05:41:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:41:24.052843 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4540  5cff9f11-cac5-4f3a-9447-f5a0e8a42ab5 30790 0 2025-09-01 05:41:24 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-01 05:41:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0901 05:41:24.053004 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4540" for this suite. @ 09/01/25 05:41:24.077
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 09/01/25 05:41:24.089
  I0901 05:41:24.089127 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:41:24.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:24.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:24.107
  STEP: Counting existing ResourceQuota @ 09/01/25 05:41:24.11
  STEP: Creating a ResourceQuota @ 09/01/25 05:41:29.118
  STEP: Ensuring resource quota status is calculated @ 09/01/25 05:41:29.127
  STEP: Creating a Pod that fits quota @ 09/01/25 05:41:31.134
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/01/25 05:41:31.149
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/01/25 05:41:33.156
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/01/25 05:41:33.161
  STEP: Ensuring a pod cannot update its resource requirements @ 09/01/25 05:41:33.165
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/01/25 05:41:33.17
  STEP: Deleting the pod @ 09/01/25 05:41:35.178
  STEP: Ensuring resource quota status released the pod usage @ 09/01/25 05:41:35.212
  I0901 05:41:37.220678 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4017" for this suite. @ 09/01/25 05:41:37.226
• [13.145 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 09/01/25 05:41:37.235
  I0901 05:41:37.235859 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename security-context @ 09/01/25 05:41:37.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:37.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:37.254
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/01/25 05:41:37.259
  STEP: Saw pod success @ 09/01/25 05:41:41.285
  I0901 05:41:41.292039 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod security-context-65b27ab8-a590-4328-a17e-c6b346a68ecc container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:41:41.321
  I0901 05:41:41.353046 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8936" for this suite. @ 09/01/25 05:41:41.36
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/01/25 05:41:41.368
  I0901 05:41:41.368796 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pods @ 09/01/25 05:41:41.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:41.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:41.385
  STEP: creating pod @ 09/01/25 05:41:41.388
  I0901 05:41:43.417877 21 pods.go:83] Pod pod-hostip-aa88c07d-d0bc-441e-b8dc-d089ccff4202 has hostIP: 192.168.1.9
  I0901 05:41:43.418980 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5490" for this suite. @ 09/01/25 05:41:43.425
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/01/25 05:41:43.435
  I0901 05:41:43.435248 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 05:41:43.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:43.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:43.45
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 05:41:43.544
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 05:41:43.549
  I0901 05:41:43.628630 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:41:43.628771 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 05:41:44.561048 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:41:44.561092 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl is running 0 daemon pod, expected 1
  I0901 05:41:45.563927 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:41:45.564300 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/01/25 05:41:45.568
  I0901 05:41:45.574626 21 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/01/25 05:41:45.574
  I0901 05:41:45.582330 21 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/01/25 05:41:45.582
  I0901 05:41:45.585108 21 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0901 05:41:45.585276 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.585418 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.585803 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.585931 21 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.585957 21 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-2377 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 05:41:45.585971 21 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/01/25 05:41:45.586
  STEP: watching for the daemon set status to be patched @ 09/01/25 05:41:45.591
  I0901 05:41:45.594610 21 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0901 05:41:45.594858 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.595116 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.595314 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.595535 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.595608 21 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-2377 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 05:41:45.595753 21 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0901 05:41:45.595790 21 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-2377 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0901 05:41:45.595804 21 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 05:41:45.598
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2377, will wait for the garbage collector to delete the pods @ 09/01/25 05:41:45.598
  I0901 05:41:45.661594 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.665922ms
  I0901 05:41:45.763085 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.488488ms
  I0901 05:41:46.870892 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:41:46.871076 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 05:41:46.876678 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30999"},"items":null}

  I0901 05:41:46.880705 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30999"},"items":null}

  I0901 05:41:46.897237 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2377" for this suite. @ 09/01/25 05:41:46.9
• [3.471 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 09/01/25 05:41:46.906
  I0901 05:41:46.906846 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:41:46.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:46.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:46.922
  STEP: validating cluster-info @ 09/01/25 05:41:46.925
  I0901 05:41:46.925538 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-5250 cluster-info'
  I0901 05:41:47.007062 21 builder.go:146] stderr: ""
  I0901 05:41:47.007120 21 builder.go:147] stdout: "Kubernetes control plane is running at https://10.43.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0901 05:41:47.007506 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5250" for this suite. @ 09/01/25 05:41:47.012
• [0.115 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/01/25 05:41:47.021
  I0901 05:41:47.021898 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/01/25 05:41:47.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:47.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:47.037
  STEP: Setting up the test @ 09/01/25 05:41:47.04
  STEP: Creating hostNetwork=false pod @ 09/01/25 05:41:47.04
  STEP: Creating hostNetwork=true pod @ 09/01/25 05:41:49.064
  STEP: Running the test @ 09/01/25 05:41:51.088
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/01/25 05:41:51.088
  I0901 05:41:51.088837 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.089239 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.089333 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 05:41:51.220860 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:51.221339 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.221363 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.221437 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 05:41:51.329235 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:51.329618 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.329694 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.329917 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0901 05:41:51.452671 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:51.452757 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.452783 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.453090 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 05:41:51.569943 21 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/01/25 05:41:51.57
  I0901 05:41:51.570096 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.570118 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.570217 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0901 05:41:51.687848 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:51.688216 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.688602 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.689086 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0901 05:41:51.795960 21 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/01/25 05:41:51.796
  I0901 05:41:51.796540 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.796708 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.796959 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0901 05:41:51.914164 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:51.914657 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:51.914707 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:51.914813 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0901 05:41:52.022834 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:52.023110 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:52.023233 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:52.023465 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0901 05:41:52.135048 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:52.135121 21 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2779 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:41:52.135404 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:41:52.135581 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2779/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0901 05:41:52.238888 21 exec_util.go:108] Exec stderr: ""
  I0901 05:41:52.239371 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2779" for this suite. @ 09/01/25 05:41:52.244
• [5.232 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/01/25 05:41:52.255
  I0901 05:41:52.255047 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/01/25 05:41:52.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:52.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:52.271
  STEP: creating @ 09/01/25 05:41:52.275
  STEP: getting @ 09/01/25 05:41:52.29
  STEP: listing in namespace @ 09/01/25 05:41:52.297
  STEP: patching @ 09/01/25 05:41:52.3
  STEP: deleting @ 09/01/25 05:41:52.305
  I0901 05:41:52.318122 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1104" for this suite. @ 09/01/25 05:41:52.344
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 09/01/25 05:41:52.351
  I0901 05:41:52.351500 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename security-context-test @ 09/01/25 05:41:52.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:52.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:52.378
  I0901 05:41:56.413484 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6646" for this suite. @ 09/01/25 05:41:56.419
• [4.074 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 09/01/25 05:41:56.425
  I0901 05:41:56.425729 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption @ 09/01/25 05:41:56.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:41:56.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:41:56.441
  I0901 05:41:56.460401 21 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0901 05:42:56.468259 21 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/01/25 05:42:56.473
  I0901 05:42:56.473623 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/01/25 05:42:56.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:42:56.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:42:56.5
  I0901 05:42:56.518113 21 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0901 05:42:56.522232 21 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/01/25 05:42:56.565
  STEP: Removing a custom resource @ 09/01/25 05:42:56.575
  STEP: Removing a custom resource @ 09/01/25 05:42:56.584
  I0901 05:42:56.597568 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1027" for this suite. @ 09/01/25 05:42:56.603
  I0901 05:42:56.612959 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1030" for this suite. @ 09/01/25 05:42:56.709
• [60.295 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/01/25 05:42:56.721
  I0901 05:42:56.721237 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename limitrange @ 09/01/25 05:42:56.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:42:56.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:42:56.743
  STEP: Creating a LimitRange @ 09/01/25 05:42:56.748
  STEP: Setting up watch @ 09/01/25 05:42:56.749
  STEP: Submitting a LimitRange @ 09/01/25 05:42:56.854
  STEP: Verifying LimitRange creation was observed @ 09/01/25 05:42:56.862
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/01/25 05:42:56.862
  I0901 05:42:56.869175 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 05:42:56.869268 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/01/25 05:42:56.869
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/01/25 05:42:56.876
  I0901 05:42:56.881895 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0901 05:42:56.881969 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/01/25 05:42:56.882
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/01/25 05:42:56.892
  I0901 05:42:56.896781 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0901 05:42:56.896885 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/01/25 05:42:56.896
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 05:42:56.9
  STEP: Updating a LimitRange @ 09/01/25 05:42:56.903
  STEP: Verifying LimitRange updating is effective @ 09/01/25 05:42:56.908
  STEP: Creating a Pod with less than former min resources @ 09/01/25 05:42:58.914
  STEP: Failing to create a Pod with more than max resources @ 09/01/25 05:42:58.921
  STEP: Deleting a LimitRange @ 09/01/25 05:42:58.929
  STEP: Verifying the LimitRange was deleted @ 09/01/25 05:42:58.936
  I0901 05:43:03.945374 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/01/25 05:43:03.945
  I0901 05:43:03.956824 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7623" for this suite. @ 09/01/25 05:43:03.962
• [7.252 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 09/01/25 05:43:03.973
  I0901 05:43:03.973937 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:43:03.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:03.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:03.987
  STEP: Setting up server cert @ 09/01/25 05:43:04.01
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:43:04.421
  STEP: Deploying the webhook pod @ 09/01/25 05:43:04.429
  STEP: Wait for the deployment to be ready @ 09/01/25 05:43:04.443
  I0901 05:43:04.451456 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:43:06.471
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:43:06.481
  I0901 05:43:07.482203 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/01/25 05:43:07.494
  STEP: create the configmap with a random name @ 09/01/25 05:43:07.527
  STEP: verify the configmap is mutated @ 09/01/25 05:43:07.554
  STEP: create the configmap with 'skip-me' name @ 09/01/25 05:43:07.554
  I0901 05:43:07.609548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5601" for this suite. @ 09/01/25 05:43:07.614
  STEP: Destroying namespace "webhook-markers-4904" for this suite. @ 09/01/25 05:43:07.622
• [3.653 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 09/01/25 05:43:07.629
  I0901 05:43:07.630022 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:43:07.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:07.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:07.647
  STEP: Setting up server cert @ 09/01/25 05:43:07.665
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:43:08.041
  STEP: Deploying the webhook pod @ 09/01/25 05:43:08.046
  STEP: Wait for the deployment to be ready @ 09/01/25 05:43:08.057
  I0901 05:43:08.070660 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/01/25 05:43:10.086
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:43:10.1
  I0901 05:43:11.101163 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/01/25 05:43:11.183
  STEP: Creating a configMap that should be mutated @ 09/01/25 05:43:11.204
  STEP: Deleting the collection of validation webhooks @ 09/01/25 05:43:11.256
  STEP: Creating a configMap that should not be mutated @ 09/01/25 05:43:11.315
  I0901 05:43:11.378252 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5529" for this suite. @ 09/01/25 05:43:11.392
  STEP: Destroying namespace "webhook-markers-1030" for this suite. @ 09/01/25 05:43:11.398
• [3.782 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 09/01/25 05:43:11.412
  I0901 05:43:11.412669 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:43:11.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:11.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:11.437
  STEP: Discovering how many secrets are in namespace by default @ 09/01/25 05:43:11.441
  STEP: Counting existing ResourceQuota @ 09/01/25 05:43:16.447
  STEP: Creating a ResourceQuota @ 09/01/25 05:43:21.452
  STEP: Ensuring resource quota status is calculated @ 09/01/25 05:43:21.457
  STEP: Creating a Secret @ 09/01/25 05:43:23.462
  STEP: Ensuring resource quota status captures secret creation @ 09/01/25 05:43:23.471
  STEP: Deleting a secret @ 09/01/25 05:43:25.477
  STEP: Ensuring resource quota status released usage @ 09/01/25 05:43:25.484
  I0901 05:43:27.492014 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-89" for this suite. @ 09/01/25 05:43:27.498
• [16.094 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/01/25 05:43:27.507
  I0901 05:43:27.507459 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:43:27.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:27.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:27.527
  STEP: Creating secret with name secret-test-c8c36d6a-3f3f-4029-8295-73970027d6db @ 09/01/25 05:43:27.53
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:43:27.534
  STEP: Saw pod success @ 09/01/25 05:43:31.558
  I0901 05:43:31.561959 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-ceeb3a0a-9b63-49e1-ab9f-543809f90c20 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:43:31.58
  I0901 05:43:31.592760 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3801" for this suite. @ 09/01/25 05:43:31.597
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/01/25 05:43:31.605
  I0901 05:43:31.605689 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 05:43:31.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:31.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:31.621
  STEP: creating a target pod @ 09/01/25 05:43:31.624
  STEP: adding an ephemeral container @ 09/01/25 05:43:33.648
  STEP: checking pod container endpoints @ 09/01/25 05:43:35.685
  I0901 05:43:35.685704 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4113 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:43:35.685725 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:43:35.685774 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-4113/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 05:43:35.790049 21 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/01/25 05:43:35.799
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/01/25 05:43:35.804
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/01/25 05:43:35.813
  I0901 05:43:35.825320 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4113" for this suite. @ 09/01/25 05:43:35.829
• [4.230 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 09/01/25 05:43:35.835
  I0901 05:43:35.835790 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:43:35.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:35.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:35.851
  STEP: Creating a pod to test downward api env vars @ 09/01/25 05:43:35.854
  STEP: Saw pod success @ 09/01/25 05:43:37.872
  I0901 05:43:37.878653 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downward-api-dec7d2d5-4656-49d8-a691-a387dd10bf97 container dapi-container: <nil>
  STEP: delete the pod @ 09/01/25 05:43:37.89
  I0901 05:43:37.911987 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7983" for this suite. @ 09/01/25 05:43:37.917
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/01/25 05:43:37.929
  I0901 05:43:37.929739 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename chunking @ 09/01/25 05:43:37.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:37.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:37.952
  STEP: creating a large number of resources @ 09/01/25 05:43:37.957
  STEP: retrieving those results in paged fashion several times @ 09/01/25 05:43:55.64
  I0901 05:43:55.689974 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 05:43:55.746047 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 05:43:55.792824 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 05:43:55.842872 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 05:43:55.891906 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 05:43:55.943608 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 05:43:55.992525 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 05:43:56.042431 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 05:43:56.093624 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 05:43:56.141274 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 05:43:56.188087 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 05:43:56.244641 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 05:43:56.290283 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 05:43:56.336654 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 05:43:56.389046 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 05:43:56.440826 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 05:43:56.490482 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 05:43:56.540828 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 05:43:56.586790 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 05:43:56.640065 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 05:43:56.690588 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 05:43:56.739904 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 05:43:56.790291 21 chunking.go:98] Retrieved 17/17 results with rv 31983 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 05:43:56.837555 21 chunking.go:98] Retrieved 9/17 results with rv 31983 and continue 
  I0901 05:43:56.888647 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 05:43:56.941649 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 05:43:56.990753 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 05:43:57.042830 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 05:43:57.090406 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 05:43:57.143544 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 05:43:57.188720 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 05:43:57.241869 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 05:43:57.289776 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 05:43:57.343756 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 05:43:57.391624 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 05:43:57.441743 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 05:43:57.491891 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 05:43:57.543569 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 05:43:57.591438 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 05:43:57.640600 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 05:43:57.690526 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 05:43:57.740023 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 05:43:57.790786 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 05:43:57.841378 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 05:43:57.889781 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 05:43:57.941131 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 05:43:57.990181 21 chunking.go:98] Retrieved 17/17 results with rv 31985 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 05:43:58.038884 21 chunking.go:98] Retrieved 9/17 results with rv 31985 and continue 
  I0901 05:43:58.088523 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0901 05:43:58.139219 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0901 05:43:58.189924 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0901 05:43:58.239338 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0901 05:43:58.288321 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0901 05:43:58.338129 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0901 05:43:58.392629 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0901 05:43:58.438701 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0901 05:43:58.491461 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0901 05:43:58.540225 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0901 05:43:58.589773 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0901 05:43:58.640665 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0901 05:43:58.690993 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0901 05:43:58.741334 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0901 05:43:58.789251 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0901 05:43:58.840587 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0901 05:43:58.890552 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0901 05:43:58.937773 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0901 05:43:58.989567 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0901 05:43:59.040114 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0901 05:43:59.086597 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0901 05:43:59.140458 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0901 05:43:59.190553 21 chunking.go:98] Retrieved 17/17 results with rv 31986 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzE5ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0901 05:43:59.238692 21 chunking.go:98] Retrieved 9/17 results with rv 31986 and continue 
  STEP: retrieving those results all at once @ 09/01/25 05:43:59.239
  I0901 05:43:59.296928 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7816" for this suite. @ 09/01/25 05:43:59.338
• [21.463 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 09/01/25 05:43:59.393
  I0901 05:43:59.393087 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:43:59.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:43:59.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:43:59.423
  STEP: Creating a suspended job @ 09/01/25 05:43:59.431
  STEP: Patching the Job @ 09/01/25 05:43:59.437
  STEP: Watching for Job to be patched @ 09/01/25 05:43:59.456
  I0901 05:43:59.457919 21 job.go:1309] Event ADDED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v] and annotations: map[]
  I0901 05:43:59.458076 21 job.go:1309] Event MODIFIED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v] and annotations: map[]
  I0901 05:43:59.458113 21 job.go:1312] Event MODIFIED found for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[]
  STEP: Updating the job @ 09/01/25 05:43:59.458
  STEP: Watching for Job to be updated @ 09/01/25 05:43:59.466
  I0901 05:43:59.468972 21 job.go:1312] Event MODIFIED found for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  I0901 05:43:59.469481 21 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/01/25 05:43:59.469
  I0901 05:43:59.474044 21 job.go:1187] Job: e2e-sxl6v as labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched]
  STEP: Waiting for job to complete @ 09/01/25 05:43:59.474
  STEP: Delete a job collection with a labelselector @ 09/01/25 05:44:07.512
  STEP: Watching for Job to be deleted @ 09/01/25 05:44:07.523
  I0901 05:44:07.526877 21 job.go:1309] Event MODIFIED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  I0901 05:44:07.527348 21 job.go:1309] Event MODIFIED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  I0901 05:44:07.527550 21 job.go:1309] Event MODIFIED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  I0901 05:44:07.527878 21 job.go:1309] Event MODIFIED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  I0901 05:44:07.528077 21 job.go:1309] Event MODIFIED observed for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  I0901 05:44:07.528429 21 job.go:1312] Event DELETED found for Job e2e-sxl6v in namespace job-6728 with labels: map[e2e-job-label:e2e-sxl6v e2e-sxl6v:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/01/25 05:44:07.528
  I0901 05:44:07.532515 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6728" for this suite. @ 09/01/25 05:44:07.539
• [8.159 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/01/25 05:44:07.551
  I0901 05:44:07.551862 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename controllerrevisions @ 09/01/25 05:44:07.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:07.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:07.572
  STEP: Creating DaemonSet "e2e-hxsxm-daemon-set" @ 09/01/25 05:44:07.652
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 05:44:07.66
  I0901 05:44:07.744376 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-hxsxm-daemon-set: 0
  I0901 05:44:07.744425 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 05:44:08.696633 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-hxsxm-daemon-set: 0
  I0901 05:44:08.696704 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  I0901 05:44:09.673139 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-hxsxm-daemon-set: 3
  I0901 05:44:09.673299 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-hxsxm-daemon-set
  STEP: Confirm DaemonSet "e2e-hxsxm-daemon-set" successfully created with "daemonset-name=e2e-hxsxm-daemon-set" label @ 09/01/25 05:44:09.678
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-hxsxm-daemon-set" @ 09/01/25 05:44:09.69
  I0901 05:44:09.696372 21 controller_revision.go:162] Located ControllerRevision: "e2e-hxsxm-daemon-set-5d9cf88b"
  STEP: Patching ControllerRevision "e2e-hxsxm-daemon-set-5d9cf88b" @ 09/01/25 05:44:09.702
  I0901 05:44:09.712384 21 controller_revision.go:173] e2e-hxsxm-daemon-set-5d9cf88b has been patched
  STEP: Create a new ControllerRevision @ 09/01/25 05:44:09.712
  I0901 05:44:09.725542 21 controller_revision.go:191] Created ControllerRevision: e2e-hxsxm-daemon-set-7778cb8b48
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 05:44:09.725
  I0901 05:44:09.725687 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 05:44:09.729605 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-hxsxm-daemon-set-5d9cf88b" @ 09/01/25 05:44:09.729
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 05:44:09.735
  I0901 05:44:09.735803 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 05:44:09.739507 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-hxsxm-daemon-set-7778cb8b48" @ 09/01/25 05:44:09.742
  I0901 05:44:09.753288 21 controller_revision.go:220] e2e-hxsxm-daemon-set-7778cb8b48 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/01/25 05:44:09.753
  W0901 05:44:09.760498      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/01/25 05:44:09.76
  I0901 05:44:09.760996 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 05:44:09.787304 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-hxsxm-daemon-set-7778cb8b48=updated" @ 09/01/25 05:44:09.787
  STEP: Confirm that there is only one ControllerRevision @ 09/01/25 05:44:09.801
  I0901 05:44:09.801221 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0901 05:44:09.808151 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0901 05:44:09.811604 21 controller_revision.go:246] ControllerRevision "e2e-hxsxm-daemon-set-54c8c77cdf" has revision 3
  STEP: Deleting DaemonSet "e2e-hxsxm-daemon-set" @ 09/01/25 05:44:09.814
  STEP: deleting DaemonSet.extensions e2e-hxsxm-daemon-set in namespace controllerrevisions-4479, will wait for the garbage collector to delete the pods @ 09/01/25 05:44:09.814
  I0901 05:44:09.879030 21 resources.go:139] Deleting DaemonSet.extensions e2e-hxsxm-daemon-set took: 10.202995ms
  I0901 05:44:09.979988 21 resources.go:163] Terminating DaemonSet.extensions e2e-hxsxm-daemon-set pods took: 100.955376ms
  I0901 05:44:11.187689 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-hxsxm-daemon-set: 0
  I0901 05:44:11.187851 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-hxsxm-daemon-set
  I0901 05:44:11.194234 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32540"},"items":null}

  I0901 05:44:11.200258 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32540"},"items":null}

  I0901 05:44:11.227410 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4479" for this suite. @ 09/01/25 05:44:11.232
• [3.688 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/01/25 05:44:11.241
  I0901 05:44:11.241259 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:44:11.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:11.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:11.259
  STEP: Creating configMap with name configmap-projected-all-test-volume-bcec738e-2d40-4225-857b-af2e4f2cf239 @ 09/01/25 05:44:11.263
  STEP: Creating secret with name secret-projected-all-test-volume-9eaf4bd8-9d0c-4c61-a402-5e152147af12 @ 09/01/25 05:44:11.269
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/01/25 05:44:11.275
  W0901 05:44:11.287918      21 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 09/01/25 05:44:15.311
  I0901 05:44:15.316172 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod projected-volume-5f4dd7fd-5e13-475b-b5a2-2c5521478973 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:44:15.325
  I0901 05:44:15.340112 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-886" for this suite. @ 09/01/25 05:44:15.344
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/01/25 05:44:15.351
  I0901 05:44:15.351958 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename pv @ 09/01/25 05:44:15.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:15.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:15.366
  STEP: Creating initial PV and PVC @ 09/01/25 05:44:15.369
  I0901 05:44:15.369426 21 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-493" @ 09/01/25 05:44:15.381
  STEP: Listing PVCs in namespace "pv-493" @ 09/01/25 05:44:15.384
  STEP: Reading "pvc-hcz8j" Status @ 09/01/25 05:44:15.391
  STEP: Reading "pv-493-k4b29" Status @ 09/01/25 05:44:15.396
  STEP: Patching "pvc-hcz8j" Status @ 09/01/25 05:44:15.402
  STEP: Patching "pv-493-k4b29" Status @ 09/01/25 05:44:15.407
  STEP: Updating "pvc-hcz8j" Status @ 09/01/25 05:44:15.418
  STEP: Updating "pv-493-k4b29" Status @ 09/01/25 05:44:15.427
  I0901 05:44:15.436468 21 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0901 05:44:15.436559 21 pv.go:205] Deleting PersistentVolumeClaim "pvc-hcz8j"
  I0901 05:44:15.444987 21 pv.go:193] Deleting PersistentVolume "pv-493-k4b29"
  I0901 05:44:15.452109 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-493" for this suite. @ 09/01/25 05:44:15.459
• [0.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/01/25 05:44:15.466
  I0901 05:44:15.466211 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:44:15.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:15.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:15.486
  STEP: Creating configMap with name projected-configmap-test-volume-map-12e8666a-686a-45fa-bb6a-ff25be90738c @ 09/01/25 05:44:15.489
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:44:15.493
  STEP: Saw pod success @ 09/01/25 05:44:19.521
  I0901 05:44:19.526784 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-f24414af-00f4-4eda-942e-5e32e264dae8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:44:19.536
  I0901 05:44:19.554332 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-242" for this suite. @ 09/01/25 05:44:19.558
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/01/25 05:44:19.567
  I0901 05:44:19.567202 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/01/25 05:44:19.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:19.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:19.587
  STEP: creating a target pod @ 09/01/25 05:44:19.59
  STEP: adding an ephemeral container @ 09/01/25 05:44:21.623
  STEP: checking pod container endpoints @ 09/01/25 05:44:23.646
  I0901 05:44:23.646619 21 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5962 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:44:23.646639 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:44:23.646692 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-5962/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0901 05:44:23.768414 21 exec_util.go:108] Exec stderr: ""
  I0901 05:44:23.778000 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5962" for this suite. @ 09/01/25 05:44:23.783
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/01/25 05:44:23.79
  I0901 05:44:23.790438 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename containers @ 09/01/25 05:44:23.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:23.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:23.807
  I0901 05:44:25.838617 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7602" for this suite. @ 09/01/25 05:44:25.842
• [2.058 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/01/25 05:44:25.853
  I0901 05:44:25.853041 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 05:44:25.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:25.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:25.871
  STEP: creating a ReplicationController @ 09/01/25 05:44:25.879
  STEP: waiting for RC to be added @ 09/01/25 05:44:25.885
  STEP: waiting for available Replicas @ 09/01/25 05:44:25.885
  STEP: patching ReplicationController @ 09/01/25 05:44:26.782
  STEP: waiting for RC to be modified @ 09/01/25 05:44:26.793
  STEP: patching ReplicationController status @ 09/01/25 05:44:26.794
  STEP: waiting for RC to be modified @ 09/01/25 05:44:26.8
  STEP: waiting for available Replicas @ 09/01/25 05:44:26.8
  STEP: fetching ReplicationController status @ 09/01/25 05:44:26.806
  STEP: patching ReplicationController scale @ 09/01/25 05:44:26.81
  STEP: waiting for RC to be modified @ 09/01/25 05:44:26.815
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/01/25 05:44:26.816
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/01/25 05:44:27.784
  STEP: updating ReplicationController status @ 09/01/25 05:44:27.788
  STEP: waiting for RC to be modified @ 09/01/25 05:44:27.792
  STEP: listing all ReplicationControllers @ 09/01/25 05:44:27.793
  STEP: checking that ReplicationController has expected values @ 09/01/25 05:44:27.797
  STEP: deleting ReplicationControllers by collection @ 09/01/25 05:44:27.797
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/01/25 05:44:27.804
  I0901 05:44:27.912946 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 05:44:27.913322      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8868" for this suite. @ 09/01/25 05:44:27.919
• [2.074 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 09/01/25 05:44:27.927
  I0901 05:44:27.927566 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 05:44:27.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:27.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:27.945
  STEP: Creating ServiceAccount "e2e-sa-tfvr5"  @ 09/01/25 05:44:27.949
  I0901 05:44:27.955147 21 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-tfvr5"  @ 09/01/25 05:44:27.955
  I0901 05:44:27.965789 21 service_accounts.go:868] AutomountServiceAccountToken: true
  I0901 05:44:27.966061 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6386" for this suite. @ 09/01/25 05:44:28.02
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/01/25 05:44:28.031
  I0901 05:44:28.031232 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/01/25 05:44:28.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:28.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:28.05
  I0901 05:44:28.054224 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:44:28.914064      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:29.914829      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:30.914995      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:31.916047      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:32.916121      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:33.916512      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:44:34.261200 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3484" for this suite. @ 09/01/25 05:44:34.266
• [6.242 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/01/25 05:44:34.273
  I0901 05:44:34.273707 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/01/25 05:44:34.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:34.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:34.304
  STEP: Creating 50 configmaps @ 09/01/25 05:44:34.309
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 05:44:34.537
  I0901 05:44:34.700563 21 resource.go:87] Pod name wrapped-volume-race-4add0d35-734b-4a8b-b515-f1232b1fdbd9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 05:44:34.7
  E0901 05:44:34.917332      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:35.918399      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 05:44:36.804
  I0901 05:44:36.836731 21 resource.go:87] Pod name wrapped-volume-race-a4355b73-c82a-445e-b0ef-c203e32997bf: Found 0 pods out of 5
  E0901 05:44:36.919003      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:37.919495      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:38.919553      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:39.919994      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:40.920156      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:44:41.847939 21 resource.go:87] Pod name wrapped-volume-race-a4355b73-c82a-445e-b0ef-c203e32997bf: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 05:44:41.847
  STEP: Creating RC which spawns configmap-volume pods @ 09/01/25 05:44:41.879
  I0901 05:44:41.889275 21 resource.go:87] Pod name wrapped-volume-race-88d768e8-57ea-4606-b0ea-25f1359f8d41: Found 0 pods out of 5
  E0901 05:44:41.920750      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:42.921002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:43.921126      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:44.921358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:45.921978      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:44:46.899940 21 resource.go:87] Pod name wrapped-volume-race-88d768e8-57ea-4606-b0ea-25f1359f8d41: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/01/25 05:44:46.9
  E0901 05:44:46.922337      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-88d768e8-57ea-4606-b0ea-25f1359f8d41 in namespace emptydir-wrapper-1865, will wait for the garbage collector to delete the pods @ 09/01/25 05:44:46.931
  I0901 05:44:47.000958 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-88d768e8-57ea-4606-b0ea-25f1359f8d41 took: 12.095186ms
  I0901 05:44:47.101578 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-88d768e8-57ea-4606-b0ea-25f1359f8d41 pods took: 100.621175ms
  E0901 05:44:47.922638      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a4355b73-c82a-445e-b0ef-c203e32997bf in namespace emptydir-wrapper-1865, will wait for the garbage collector to delete the pods @ 09/01/25 05:44:48.502
  I0901 05:44:48.574745 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-a4355b73-c82a-445e-b0ef-c203e32997bf took: 14.177225ms
  I0901 05:44:48.675393 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-a4355b73-c82a-445e-b0ef-c203e32997bf pods took: 100.642506ms
  E0901 05:44:48.923328      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:49.923571      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-4add0d35-734b-4a8b-b515-f1232b1fdbd9 in namespace emptydir-wrapper-1865, will wait for the garbage collector to delete the pods @ 09/01/25 05:44:50.076
  I0901 05:44:50.148060 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-4add0d35-734b-4a8b-b515-f1232b1fdbd9 took: 13.210756ms
  I0901 05:44:50.248644 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-4add0d35-734b-4a8b-b515-f1232b1fdbd9 pods took: 100.582471ms
  E0901 05:44:50.923860      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 09/01/25 05:44:51.249
  I0901 05:44:51.538776 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1865" for this suite. @ 09/01/25 05:44:51.544
• [17.280 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/01/25 05:44:51.554
  I0901 05:44:51.554955 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename cronjob @ 09/01/25 05:44:51.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:51.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:51.573
  STEP: Creating a cronjob @ 09/01/25 05:44:51.576
  STEP: creating @ 09/01/25 05:44:51.576
  STEP: getting @ 09/01/25 05:44:51.582
  STEP: listing @ 09/01/25 05:44:51.586
  STEP: watching @ 09/01/25 05:44:51.591
  I0901 05:44:51.591283 21 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/01/25 05:44:51.592
  STEP: cluster-wide watching @ 09/01/25 05:44:51.598
  I0901 05:44:51.598224 21 cronjob.go:407] starting watch
  STEP: patching @ 09/01/25 05:44:51.6
  STEP: updating @ 09/01/25 05:44:51.609
  I0901 05:44:51.619719 21 cronjob.go:431] waiting for watch events with expected annotations
  I0901 05:44:51.619778 21 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/01/25 05:44:51.619
  STEP: updating /status @ 09/01/25 05:44:51.628
  STEP: get /status @ 09/01/25 05:44:51.638
  STEP: deleting @ 09/01/25 05:44:51.643
  STEP: deleting a collection @ 09/01/25 05:44:51.667
  I0901 05:44:51.682844 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8581" for this suite. @ 09/01/25 05:44:51.687
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/01/25 05:44:51.697
  I0901 05:44:51.697389 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 05:44:51.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:44:51.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:44:51.716
  STEP: create the rc @ 09/01/25 05:44:51.787
  W0901 05:44:51.794932      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0901 05:44:51.924237      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:52.927720      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:53.928027      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:54.928130      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:55.928208      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:56.928398      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 05:44:57.802
  STEP: wait for the rc to be deleted @ 09/01/25 05:44:57.812
  E0901 05:44:57.929071      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:58.929247      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:44:59.929409      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:00.929697      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:01.929989      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/01/25 05:45:02.818
  E0901 05:45:02.931050      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:03.931452      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:04.931699      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:05.931797      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:06.932017      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:07.932534      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:08.932672      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:09.932879      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:10.933166      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:11.933471      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:12.933815      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:13.934203      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:14.934352      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:15.934563      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:16.934874      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:17.935151      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:18.935922      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:19.936114      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:20.936285      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:21.936417      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:22.937401      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:23.937553      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:24.937775      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:25.937905      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:26.938359      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:27.938958      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:28.939097      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:29.939284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:30.939507      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:31.940412      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 05:45:32.832
  W0901 05:45:32.838843      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0901 05:45:32.838884 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 05:45:32.838970 21 delete.go:95] Deleting pod "simpletest.rc-2ktkd" in namespace "gc-1942"
  I0901 05:45:32.855874 21 delete.go:95] Deleting pod "simpletest.rc-2vd6j" in namespace "gc-1942"
  I0901 05:45:32.868211 21 delete.go:95] Deleting pod "simpletest.rc-46nwx" in namespace "gc-1942"
  I0901 05:45:32.883072 21 delete.go:95] Deleting pod "simpletest.rc-4t7k9" in namespace "gc-1942"
  I0901 05:45:32.893178 21 delete.go:95] Deleting pod "simpletest.rc-4tx94" in namespace "gc-1942"
  I0901 05:45:32.903421 21 delete.go:95] Deleting pod "simpletest.rc-4z5lj" in namespace "gc-1942"
  I0901 05:45:32.913848 21 delete.go:95] Deleting pod "simpletest.rc-5drbg" in namespace "gc-1942"
  I0901 05:45:32.927334 21 delete.go:95] Deleting pod "simpletest.rc-5gsxj" in namespace "gc-1942"
  I0901 05:45:32.936896 21 delete.go:95] Deleting pod "simpletest.rc-5lbhq" in namespace "gc-1942"
  E0901 05:45:32.941262      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:45:32.950675 21 delete.go:95] Deleting pod "simpletest.rc-5qdng" in namespace "gc-1942"
  I0901 05:45:32.968936 21 delete.go:95] Deleting pod "simpletest.rc-5w9qs" in namespace "gc-1942"
  I0901 05:45:32.988162 21 delete.go:95] Deleting pod "simpletest.rc-62gds" in namespace "gc-1942"
  I0901 05:45:33.005286 21 delete.go:95] Deleting pod "simpletest.rc-6qfkk" in namespace "gc-1942"
  I0901 05:45:33.023065 21 delete.go:95] Deleting pod "simpletest.rc-6zwqr" in namespace "gc-1942"
  I0901 05:45:33.044377 21 delete.go:95] Deleting pod "simpletest.rc-7bmvr" in namespace "gc-1942"
  I0901 05:45:33.061412 21 delete.go:95] Deleting pod "simpletest.rc-7zhtf" in namespace "gc-1942"
  I0901 05:45:33.074690 21 delete.go:95] Deleting pod "simpletest.rc-7zwm5" in namespace "gc-1942"
  I0901 05:45:33.097248 21 delete.go:95] Deleting pod "simpletest.rc-88cs7" in namespace "gc-1942"
  I0901 05:45:33.126030 21 delete.go:95] Deleting pod "simpletest.rc-89997" in namespace "gc-1942"
  I0901 05:45:33.136542 21 delete.go:95] Deleting pod "simpletest.rc-89hss" in namespace "gc-1942"
  I0901 05:45:33.148118 21 delete.go:95] Deleting pod "simpletest.rc-8lgfn" in namespace "gc-1942"
  I0901 05:45:33.160843 21 delete.go:95] Deleting pod "simpletest.rc-8ssw6" in namespace "gc-1942"
  I0901 05:45:33.173123 21 delete.go:95] Deleting pod "simpletest.rc-8wt4b" in namespace "gc-1942"
  I0901 05:45:33.184068 21 delete.go:95] Deleting pod "simpletest.rc-96h97" in namespace "gc-1942"
  I0901 05:45:33.201143 21 delete.go:95] Deleting pod "simpletest.rc-9f4xt" in namespace "gc-1942"
  I0901 05:45:33.214195 21 delete.go:95] Deleting pod "simpletest.rc-9kgcl" in namespace "gc-1942"
  I0901 05:45:33.225102 21 delete.go:95] Deleting pod "simpletest.rc-9vhfm" in namespace "gc-1942"
  I0901 05:45:33.242900 21 delete.go:95] Deleting pod "simpletest.rc-b7hc7" in namespace "gc-1942"
  I0901 05:45:33.261318 21 delete.go:95] Deleting pod "simpletest.rc-b9d98" in namespace "gc-1942"
  I0901 05:45:33.278793 21 delete.go:95] Deleting pod "simpletest.rc-bqs4m" in namespace "gc-1942"
  I0901 05:45:33.291481 21 delete.go:95] Deleting pod "simpletest.rc-c89t2" in namespace "gc-1942"
  I0901 05:45:33.312005 21 delete.go:95] Deleting pod "simpletest.rc-c8j8b" in namespace "gc-1942"
  I0901 05:45:33.330144 21 delete.go:95] Deleting pod "simpletest.rc-ck65q" in namespace "gc-1942"
  I0901 05:45:33.347363 21 delete.go:95] Deleting pod "simpletest.rc-czfc6" in namespace "gc-1942"
  I0901 05:45:33.370657 21 delete.go:95] Deleting pod "simpletest.rc-d5b6l" in namespace "gc-1942"
  I0901 05:45:33.390238 21 delete.go:95] Deleting pod "simpletest.rc-dbcs4" in namespace "gc-1942"
  I0901 05:45:33.403617 21 delete.go:95] Deleting pod "simpletest.rc-dlznp" in namespace "gc-1942"
  I0901 05:45:33.415483 21 delete.go:95] Deleting pod "simpletest.rc-fg48z" in namespace "gc-1942"
  I0901 05:45:33.432478 21 delete.go:95] Deleting pod "simpletest.rc-fh9pr" in namespace "gc-1942"
  I0901 05:45:33.452058 21 delete.go:95] Deleting pod "simpletest.rc-fzndt" in namespace "gc-1942"
  I0901 05:45:33.466993 21 delete.go:95] Deleting pod "simpletest.rc-g9wt6" in namespace "gc-1942"
  I0901 05:45:33.479323 21 delete.go:95] Deleting pod "simpletest.rc-gcs8b" in namespace "gc-1942"
  I0901 05:45:33.492075 21 delete.go:95] Deleting pod "simpletest.rc-gjv42" in namespace "gc-1942"
  I0901 05:45:33.502610 21 delete.go:95] Deleting pod "simpletest.rc-h5szm" in namespace "gc-1942"
  I0901 05:45:33.512439 21 delete.go:95] Deleting pod "simpletest.rc-h7d2l" in namespace "gc-1942"
  I0901 05:45:33.526341 21 delete.go:95] Deleting pod "simpletest.rc-hcjcq" in namespace "gc-1942"
  I0901 05:45:33.537736 21 delete.go:95] Deleting pod "simpletest.rc-hgrzj" in namespace "gc-1942"
  I0901 05:45:33.548633 21 delete.go:95] Deleting pod "simpletest.rc-hl9jp" in namespace "gc-1942"
  I0901 05:45:33.563557 21 delete.go:95] Deleting pod "simpletest.rc-hnhvm" in namespace "gc-1942"
  I0901 05:45:33.592124 21 delete.go:95] Deleting pod "simpletest.rc-hr72w" in namespace "gc-1942"
  I0901 05:45:33.605591 21 delete.go:95] Deleting pod "simpletest.rc-hxghz" in namespace "gc-1942"
  I0901 05:45:33.616883 21 delete.go:95] Deleting pod "simpletest.rc-jdrg8" in namespace "gc-1942"
  I0901 05:45:33.632462 21 delete.go:95] Deleting pod "simpletest.rc-jgsj6" in namespace "gc-1942"
  I0901 05:45:33.643719 21 delete.go:95] Deleting pod "simpletest.rc-k7wgb" in namespace "gc-1942"
  I0901 05:45:33.652183 21 delete.go:95] Deleting pod "simpletest.rc-k8p85" in namespace "gc-1942"
  I0901 05:45:33.670083 21 delete.go:95] Deleting pod "simpletest.rc-kcxgx" in namespace "gc-1942"
  I0901 05:45:33.684692 21 delete.go:95] Deleting pod "simpletest.rc-kg68g" in namespace "gc-1942"
  I0901 05:45:33.695233 21 delete.go:95] Deleting pod "simpletest.rc-kjvzl" in namespace "gc-1942"
  I0901 05:45:33.707533 21 delete.go:95] Deleting pod "simpletest.rc-klstb" in namespace "gc-1942"
  I0901 05:45:33.724864 21 delete.go:95] Deleting pod "simpletest.rc-ktsb2" in namespace "gc-1942"
  I0901 05:45:33.736826 21 delete.go:95] Deleting pod "simpletest.rc-m2d5x" in namespace "gc-1942"
  I0901 05:45:33.751602 21 delete.go:95] Deleting pod "simpletest.rc-mh2g2" in namespace "gc-1942"
  I0901 05:45:33.766367 21 delete.go:95] Deleting pod "simpletest.rc-mr94f" in namespace "gc-1942"
  I0901 05:45:33.782232 21 delete.go:95] Deleting pod "simpletest.rc-mvtzc" in namespace "gc-1942"
  I0901 05:45:33.803904 21 delete.go:95] Deleting pod "simpletest.rc-nfs8j" in namespace "gc-1942"
  I0901 05:45:33.818309 21 delete.go:95] Deleting pod "simpletest.rc-npsw6" in namespace "gc-1942"
  I0901 05:45:33.831549 21 delete.go:95] Deleting pod "simpletest.rc-ns4sw" in namespace "gc-1942"
  I0901 05:45:33.850471 21 delete.go:95] Deleting pod "simpletest.rc-nsfzt" in namespace "gc-1942"
  I0901 05:45:33.872151 21 delete.go:95] Deleting pod "simpletest.rc-ntbvw" in namespace "gc-1942"
  I0901 05:45:33.885707 21 delete.go:95] Deleting pod "simpletest.rc-nvgnx" in namespace "gc-1942"
  I0901 05:45:33.938496 21 delete.go:95] Deleting pod "simpletest.rc-nw8kk" in namespace "gc-1942"
  E0901 05:45:33.941766      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:45:33.981420 21 delete.go:95] Deleting pod "simpletest.rc-nxpp7" in namespace "gc-1942"
  I0901 05:45:34.040788 21 delete.go:95] Deleting pod "simpletest.rc-pcth6" in namespace "gc-1942"
  I0901 05:45:34.082554 21 delete.go:95] Deleting pod "simpletest.rc-q5xzh" in namespace "gc-1942"
  I0901 05:45:34.134365 21 delete.go:95] Deleting pod "simpletest.rc-qbq62" in namespace "gc-1942"
  I0901 05:45:34.184092 21 delete.go:95] Deleting pod "simpletest.rc-qdj7d" in namespace "gc-1942"
  I0901 05:45:34.237458 21 delete.go:95] Deleting pod "simpletest.rc-qrf6x" in namespace "gc-1942"
  I0901 05:45:34.289008 21 delete.go:95] Deleting pod "simpletest.rc-qscq9" in namespace "gc-1942"
  I0901 05:45:34.331460 21 delete.go:95] Deleting pod "simpletest.rc-qv4gv" in namespace "gc-1942"
  I0901 05:45:34.381673 21 delete.go:95] Deleting pod "simpletest.rc-rgdq4" in namespace "gc-1942"
  I0901 05:45:34.457521 21 delete.go:95] Deleting pod "simpletest.rc-rgwmk" in namespace "gc-1942"
  I0901 05:45:34.479736 21 delete.go:95] Deleting pod "simpletest.rc-rnw25" in namespace "gc-1942"
  I0901 05:45:34.531696 21 delete.go:95] Deleting pod "simpletest.rc-rpbbf" in namespace "gc-1942"
  I0901 05:45:34.586428 21 delete.go:95] Deleting pod "simpletest.rc-rv5jp" in namespace "gc-1942"
  I0901 05:45:34.633689 21 delete.go:95] Deleting pod "simpletest.rc-s2ltv" in namespace "gc-1942"
  I0901 05:45:34.683176 21 delete.go:95] Deleting pod "simpletest.rc-s4xdw" in namespace "gc-1942"
  I0901 05:45:34.739196 21 delete.go:95] Deleting pod "simpletest.rc-s6dbr" in namespace "gc-1942"
  I0901 05:45:34.783664 21 delete.go:95] Deleting pod "simpletest.rc-s9qz7" in namespace "gc-1942"
  I0901 05:45:34.833377 21 delete.go:95] Deleting pod "simpletest.rc-t4w98" in namespace "gc-1942"
  I0901 05:45:34.891372 21 delete.go:95] Deleting pod "simpletest.rc-tg9dd" in namespace "gc-1942"
  I0901 05:45:34.939018 21 delete.go:95] Deleting pod "simpletest.rc-trmhc" in namespace "gc-1942"
  E0901 05:45:34.942796      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:45:34.985102 21 delete.go:95] Deleting pod "simpletest.rc-tx475" in namespace "gc-1942"
  I0901 05:45:35.036176 21 delete.go:95] Deleting pod "simpletest.rc-v4v49" in namespace "gc-1942"
  I0901 05:45:35.085838 21 delete.go:95] Deleting pod "simpletest.rc-vtcn7" in namespace "gc-1942"
  I0901 05:45:35.139068 21 delete.go:95] Deleting pod "simpletest.rc-wrwz7" in namespace "gc-1942"
  I0901 05:45:35.183430 21 delete.go:95] Deleting pod "simpletest.rc-z46jb" in namespace "gc-1942"
  I0901 05:45:35.234462 21 delete.go:95] Deleting pod "simpletest.rc-zdpkn" in namespace "gc-1942"
  I0901 05:45:35.282006 21 delete.go:95] Deleting pod "simpletest.rc-zgcmj" in namespace "gc-1942"
  I0901 05:45:35.339065 21 delete.go:95] Deleting pod "simpletest.rc-zltrk" in namespace "gc-1942"
  I0901 05:45:35.391763 21 delete.go:95] Deleting pod "simpletest.rc-zr7cr" in namespace "gc-1942"
  I0901 05:45:35.432272 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1942" for this suite. @ 09/01/25 05:45:35.474
• [43.829 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/01/25 05:45:35.526
  I0901 05:45:35.526589 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:45:35.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:45:35.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:45:35.547
  STEP: Creating configMap with name configmap-test-upd-47b95758-3139-4e5c-bd18-60f803ced455 @ 09/01/25 05:45:35.575
  STEP: Creating the pod @ 09/01/25 05:45:35.58
  E0901 05:45:35.942835      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:36.942971      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-47b95758-3139-4e5c-bd18-60f803ced455 @ 09/01/25 05:45:37.619
  STEP: waiting to observe update in volume @ 09/01/25 05:45:37.625
  E0901 05:45:37.943117      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:38.943374      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:39.943442      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:40.943587      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:41.943853      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:42.944266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:43.945078      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:44.945270      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:45.946071      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:46.946477      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:47.947334      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:48.947518      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:49.947902      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:50.947970      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:51.948569      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:52.948880      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:53.949954      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:54.950715      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:55.950834      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:56.951048      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:57.951599      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:58.952344      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:45:59.953347      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:00.953914      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:01.954961      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:02.955380      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:03.955899      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:04.956322      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:05.956685      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:06.956960      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:07.957942      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:08.958517      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:09.959417      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:10.959937      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:11.960449      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:12.960988      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:13.961305      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:14.961416      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:15.961579      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:16.962042      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:17.963045      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:18.963334      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:19.964194      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:20.965271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:21.965594      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:22.965744      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:23.966039      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:24.966309      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:25.966484      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:26.966980      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:27.967242      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:28.967410      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:29.968035      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:30.968500      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:31.969413      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:32.969578      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:33.969900      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:34.970077      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:35.970526      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:36.970914      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:37.971756      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:38.972006      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:39.972284      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:40.972237      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:41.972611      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:42.973064      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:43.973394      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:44.974661      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:45.974855      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:46.201128 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7182" for this suite. @ 09/01/25 05:46:46.211
• [70.695 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/01/25 05:46:46.223
  I0901 05:46:46.223461 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 05:46:46.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:46:46.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:46:46.265
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/01/25 05:46:46.333
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 05:46:46.341
  I0901 05:46:46.418679 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:46:46.418852 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:46:46.975004      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:47.354008 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 05:46:47.354086 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:46:47.975096      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:48.358701 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:46:48.358747 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/01/25 05:46:48.365
  I0901 05:46:48.456492 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:46:48.456659 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl is running 0 daemon pod, expected 1
  E0901 05:46:48.975334      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:49.401539 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:46:49.401609 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl is running 0 daemon pod, expected 1
  E0901 05:46:49.975573      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:50.399452 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:46:50.399589 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/01/25 05:46:50.399
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 05:46:50.41
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3255, will wait for the garbage collector to delete the pods @ 09/01/25 05:46:50.41
  I0901 05:46:50.475908 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.131792ms
  I0901 05:46:50.576555 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.647104ms
  E0901 05:46:50.975853      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:51.883680 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:46:51.883926 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 05:46:51.888434 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35363"},"items":null}

  I0901 05:46:51.892886 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35363"},"items":null}

  I0901 05:46:51.918736 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3255" for this suite. @ 09/01/25 05:46:51.925
• [5.712 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 09/01/25 05:46:51.936
  I0901 05:46:51.936405 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:46:51.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:46:51.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:46:51.959
  STEP: Looking for a node to schedule job pod @ 09/01/25 05:46:51.963
  E0901 05:46:51.975815      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a job @ 09/01/25 05:46:51.999
  STEP: Ensuring job fails @ 09/01/25 05:46:52.008
  E0901 05:46:52.976007      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:53.976251      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:54.976560      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:55.976830      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:56.030563 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2792" for this suite. @ 09/01/25 05:46:56.037
• [4.110 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/01/25 05:46:56.046
  I0901 05:46:56.046472 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 05:46:56.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:46:56.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:46:56.063
  I0901 05:46:56.065975 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:46:56.977206      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:57.977980      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:46:58.978176      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:46:59.134709 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8953" for this suite. @ 09/01/25 05:46:59.142
• [3.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/01/25 05:46:59.154
  I0901 05:46:59.154495 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:46:59.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:46:59.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:46:59.178
  STEP: Creating configMap with name configmap-test-volume-map-2cb2d3f4-ef94-4d24-9e42-1e0182e32d6b @ 09/01/25 05:46:59.182
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:46:59.187
  E0901 05:46:59.978513      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:00.978824      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:01.979590      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:02.980112      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:47:03.222
  I0901 05:47:03.229113 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-f5676f83-0314-4159-8f2f-f3321bcee581 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:47:03.245
  I0901 05:47:03.268596 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2472" for this suite. @ 09/01/25 05:47:03.274
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/01/25 05:47:03.281
  I0901 05:47:03.281830 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/01/25 05:47:03.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:03.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:03.298
  STEP: mirroring a new custom Endpoint @ 09/01/25 05:47:03.31
  I0901 05:47:03.320443 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0901 05:47:03.980288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:04.980325      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/01/25 05:47:05.328
  STEP: mirroring deletion of a custom Endpoint @ 09/01/25 05:47:05.342
  I0901 05:47:05.364987 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-859" for this suite. @ 09/01/25 05:47:05.37
• [2.099 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/01/25 05:47:05.381
  I0901 05:47:05.381322 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 05:47:05.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:05.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:05.402
  I0901 05:47:05.419146 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0901 05:47:05.980469      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:06.980927      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:07.981353      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:08.981811      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:09.982102      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:10.425422 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 05:47:10.425
  I0901 05:47:10.425750 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0901 05:47:10.982197      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:11.982246      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:12.434078 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0901 05:47:12.447381 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0901 05:47:12.983265      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:13.983664      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:14.459820 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0901 05:47:14.471669 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0901 05:47:14.482805 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0901 05:47:14.493845 21 deployment.go:314] Updating deployment test-rollover-deployment
  I0901 05:47:14.493898 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0901 05:47:14.984096      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:15.984565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:16.504052 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0901 05:47:16.512206 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0901 05:47:16.519549 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 05:47:16.519633 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 05:47:16.984815      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:17.985203      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:18.529925 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 05:47:18.530027 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 05:47:18.985254      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:19.985480      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:20.532542 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 05:47:20.532640 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 05:47:20.985724      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:21.986002      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:22.532935 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 05:47:22.533017 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 05:47:22.986127      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:23.986376      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:24.533619 21 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0901 05:47:24.533788 21 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 47, 16, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 47, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0901 05:47:24.986480      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:25.986874      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:26.534846 21 deployment.go:95] 
  I0901 05:47:26.534914 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0901 05:47:26.553554 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f11f5b4e-2677-48f4-b5f5-5866a9bb3f44",
      ResourceVersion: (string) (len=5) "35617",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302432,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 05:47:26.563716 21 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ca5a425-17ce-47fc-b0ad-8c703cb57c17",
      ResourceVersion: (string) (len=5) "35607",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f11f5b4e-2677-48f4-b5f5-5866a9bb3f44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 31 31 66 35 62  34 65 2d 32 36 37 37 2d  |\"f11f5b4e-2677-|
              00000120  34 38 66 34 2d 62 35 66  35 2d 35 38 36 36 61 39  |48f4-b5f5-5866a9|
              00000130  62 62 33 66 34 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bb3f44\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:47:26.568586 21 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0901 05:47:26.569355 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ecd0bfd-038f-4a38-b0df-5f088070ffae",
      ResourceVersion: (string) (len=5) "35616",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302425,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f11f5b4e-2677-48f4-b5f5-5866a9bb3f44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302425,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 31 31 66 35 62 34 65  2d 32 36 37 37 2d 34 38  |f11f5b4e-2677-48|
              000000c0  66 34 2d 62 35 66 35 2d  35 38 36 36 61 39 62 62  |f4-b5f5-5866a9bb|
              000000d0  33 66 34 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3f44\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:47:26.571391 21 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3de7563-0a9a-49bd-8c16-dc0abe52932c",
      ResourceVersion: (string) (len=5) "35583",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302432,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f11f5b4e-2677-48f4-b5f5-5866a9bb3f44",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 31 31 66 35 62  34 65 2d 32 36 37 37 2d  |\"f11f5b4e-2677-|
              00000120  34 38 66 34 2d 62 35 66  35 2d 35 38 36 36 61 39  |48f4-b5f5-5866a9|
              00000130  62 62 33 66 34 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bb3f44\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:47:26.577770 21 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-rhrqp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-rhrqp",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-4465",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d6896f3-e8fd-4de6-aee8-70ae8926c35d",
      ResourceVersion: (string) (len=5) "35594",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "3ca5a425-17ce-47fc-b0ad-8c703cb57c17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 63  61 35 61 34 32 35 2d 31  |d\":\"3ca5a425-1|
              00000090  37 63 65 2d 34 37 66 63  2d 62 30 61 64 2d 38 63  |7ce-47fc-b0ad-8c|
              000000a0  37 30 33 63 62 35 37 63  31 37 5c 22 7d 22 3a 7b  |703cb57c17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  31 5c 22 7d 22 3a 7b 22  |.42.1.161\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lz88s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lz88s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302434,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=11) "10.42.1.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302434,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892302435,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://c733275e91e607aab4140a0d4c238f31b349902d35776c82d0f62bb883154ef4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lz88s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:47:26.582893 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4465" for this suite. @ 09/01/25 05:47:26.588
• [21.215 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/01/25 05:47:26.596
  I0901 05:47:26.596703 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename sched-pred @ 09/01/25 05:47:26.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:26.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:26.612
  I0901 05:47:26.614581 21 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0901 05:47:26.693745 21 util.go:396] Waiting for terminating namespaces to be deleted...
  I0901 05:47:26.698154 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv before test
  I0901 05:47:26.702778 21 predicates.go:957] civo-csi-node-dzqk5 from kube-system started at 2025-09-01 04:05:10 +0000 UTC (2 container statuses recorded)
  I0901 05:47:26.702812 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:47:26.702824 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:47:26.702835 21 predicates.go:957] coredns-697968c856-xgph7 from kube-system started at 2025-09-01 04:06:57 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.702845 21 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0901 05:47:26.702855 21 predicates.go:957] traefik-4d7c2 from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.702864 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:47:26.702874 21 predicates.go:957] sonobuoy-e2e-job-a8fc065df4954836 from sonobuoy started at 2025-09-01 04:10:29 +0000 UTC (2 container statuses recorded)
  I0901 05:47:26.702885 21 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0901 05:47:26.702894 21 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0901 05:47:26.702903 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-jfwbl before test
  I0901 05:47:26.707218 21 predicates.go:957] civo-ccm-bd7449dd8-smpl5 from kube-system started at 2025-09-01 04:05:01 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.707248 21 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0901 05:47:26.707284 21 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (4 container statuses recorded)
  I0901 05:47:26.707293 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:47:26.707302 21 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0901 05:47:26.707310 21 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0901 05:47:26.707319 21 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0901 05:47:26.707328 21 predicates.go:957] civo-csi-node-9l9jz from kube-system started at 2025-09-01 04:05:09 +0000 UTC (2 container statuses recorded)
  I0901 05:47:26.707355 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:47:26.707364 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:47:26.707374 21 predicates.go:957] metrics-server-7bf7d58749-7jzm4 from kube-system started at 2025-09-01 04:05:09 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.707383 21 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0901 05:47:26.707393 21 predicates.go:957] traefik-s6p6r from kube-system started at 2025-09-01 04:06:31 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.707402 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:47:26.707411 21 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae before test
  I0901 05:47:26.711598 21 predicates.go:957] test-rollover-deployment-7fb4c746bc-rhrqp from deployment-4465 started at 2025-09-01 05:47:14 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.711626 21 predicates.go:959] 	Container agnhost ready: true, restart count 0
  I0901 05:47:26.711638 21 predicates.go:957] civo-csi-node-gk8m6 from kube-system started at 2025-09-01 05:15:57 +0000 UTC (2 container statuses recorded)
  I0901 05:47:26.711664 21 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0901 05:47:26.711673 21 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0901 05:47:26.711684 21 predicates.go:957] traefik-f8m2x from kube-system started at 2025-09-01 05:15:57 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.711693 21 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0901 05:47:26.711704 21 predicates.go:957] sonobuoy from sonobuoy started at 2025-09-01 04:10:25 +0000 UTC (1 container statuses recorded)
  I0901 05:47:26.711759 21 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/01/25 05:47:26.711
  E0901 05:47:26.987611      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:27.987976      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/01/25 05:47:28.737
  STEP: Trying to apply a random label on the found node. @ 09/01/25 05:47:28.753
  STEP: verifying the node has the label kubernetes.io/e2e-d56616a7-b5dd-4081-a610-7a962c42b9d2 42 @ 09/01/25 05:47:28.765
  STEP: Trying to relaunch the pod, now with labels. @ 09/01/25 05:47:28.77
  E0901 05:47:28.988446      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:29.988748      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-d56616a7-b5dd-4081-a610-7a962c42b9d2 off the node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae @ 09/01/25 05:47:30.795
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d56616a7-b5dd-4081-a610-7a962c42b9d2 @ 09/01/25 05:47:30.812
  I0901 05:47:30.819682 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6485" for this suite. @ 09/01/25 05:47:30.826
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 09/01/25 05:47:30.835
  I0901 05:47:30.835638 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:47:30.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:30.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:30.852
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8752 @ 09/01/25 05:47:30.855
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/01/25 05:47:30.87
  STEP: creating service externalsvc in namespace services-8752 @ 09/01/25 05:47:30.871
  STEP: creating replication controller externalsvc in namespace services-8752 @ 09/01/25 05:47:30.884
  I0901 05:47:30.895419      21 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8752, replica count: 2
  E0901 05:47:30.989804      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:31.990254      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:32.990323      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:33.946528      21 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/01/25 05:47:33.955
  I0901 05:47:33.982356 21 resource.go:361] Creating new exec pod
  E0901 05:47:33.990807      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:34.991013      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:35.991106      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:35.997261 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-8752 exec execpodfrltb -- /bin/sh -x -c nslookup nodeport-service.services-8752.svc.cluster.local'
  I0901 05:47:36.246094 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-8752.svc.cluster.local\n"
  I0901 05:47:36.246148 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-8752.svc.cluster.local\tcanonical name = externalsvc.services-8752.svc.cluster.local.\nName:\texternalsvc.services-8752.svc.cluster.local\nAddress: 10.43.190.109\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8752, will wait for the garbage collector to delete the pods @ 09/01/25 05:47:36.246
  I0901 05:47:36.309681 21 resources.go:139] Deleting ReplicationController externalsvc took: 7.698814ms
  I0901 05:47:36.410737 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.052111ms
  E0901 05:47:36.991812      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:37.992106      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:38.992358      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:39.341282 21 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0901 05:47:39.361847 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8752" for this suite. @ 09/01/25 05:47:39.373
• [8.547 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/01/25 05:47:39.383
  I0901 05:47:39.383462 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 05:47:39.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:39.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:39.403
  STEP: create the rc @ 09/01/25 05:47:39.406
  W0901 05:47:39.412846      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0901 05:47:39.992403      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:40.992877      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:41.993291      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:42.993636      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:43.994053      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/01/25 05:47:44.42
  STEP: wait for all pods to be garbage collected @ 09/01/25 05:47:44.429
  E0901 05:47:44.994128      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:45.994562      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:46.994832      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:47.995246      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:48.995332      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/01/25 05:47:49.445
  W0901 05:47:49.454740      21 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0901 05:47:49.455258 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0901 05:47:49.456002 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3972" for this suite. @ 09/01/25 05:47:49.465
• [10.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/01/25 05:47:49.478
  I0901 05:47:49.478644 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replication-controller @ 09/01/25 05:47:49.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:49.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:49.502
  STEP: Given a ReplicationController is created @ 09/01/25 05:47:49.506
  STEP: When the matched label of one of its pods change @ 09/01/25 05:47:49.514
  I0901 05:47:49.518610 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0901 05:47:49.995394      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:50.995939      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:51.996291      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:52.996731      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:53.996987      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:54.523976 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 05:47:54.538
  E0901 05:47:54.997251      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:47:55.554159 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6723" for this suite. @ 09/01/25 05:47:55.562
• [6.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 09/01/25 05:47:55.574
  I0901 05:47:55.574914 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:47:55.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:47:55.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:47:55.596
  STEP: Counting existing ResourceQuota @ 09/01/25 05:47:55.6
  E0901 05:47:55.998030      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:56.998924      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:57.999761      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:47:59.000415      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:00.000717      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/01/25 05:48:00.607
  STEP: Ensuring resource quota status is calculated @ 09/01/25 05:48:00.615
  E0901 05:48:01.000818      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:02.001038      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/01/25 05:48:02.624
  STEP: Ensuring resource quota status captures replication controller creation @ 09/01/25 05:48:02.641
  E0901 05:48:03.001524      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:04.001862      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/01/25 05:48:04.651
  STEP: Ensuring resource quota status released usage @ 09/01/25 05:48:04.665
  E0901 05:48:05.002114      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:06.002396      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:06.673614 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9355" for this suite. @ 09/01/25 05:48:06.681
• [11.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/01/25 05:48:06.691
  I0901 05:48:06.692018 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-runtime @ 09/01/25 05:48:06.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:48:06.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:48:06.713
  STEP: create the container @ 09/01/25 05:48:06.721
  W0901 05:48:06.731924      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/01/25 05:48:06.732
  E0901 05:48:07.003029      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:08.003214      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/01/25 05:48:08.752
  STEP: the container should be terminated @ 09/01/25 05:48:08.759
  STEP: the termination message should be set @ 09/01/25 05:48:08.76
  I0901 05:48:08.760116 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/01/25 05:48:08.76
  I0901 05:48:08.787271 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7075" for this suite. @ 09/01/25 05:48:08.795
• [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/01/25 05:48:08.807
  I0901 05:48:08.807545 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename container-probe @ 09/01/25 05:48:08.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:48:08.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:48:08.83
  STEP: Creating pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157 @ 09/01/25 05:48:08.834
  E0901 05:48:09.003320      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:10.003758      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/01/25 05:48:10.86
  I0901 05:48:10.867210 21 container_probe.go:1749] Initial restart count of pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 is 0
  I0901 05:48:10.874597 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:11.003885      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:12.003892      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:12.882141 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:13.004557      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:14.004833      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:14.890405 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:15.005710      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:16.005786      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:16.898968 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:17.006089      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:18.006416      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:18.907241 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:19.006424      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:20.006698      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:20.912446 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:21.007720      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:22.008573      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:22.920265 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:23.009514      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:24.009813      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:24.925371 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:25.010659      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:26.010886      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:26.930998 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:27.011213      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:28.011565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:28.939472 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:29.011668      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:30.011849      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:30.947328 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:31.012491      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:32.012649      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:32.955348 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:33.013482      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:34.013695      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:34.963567 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:35.014808      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:36.014979      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:36.970212 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:37.015423      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:38.015687      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:38.978577 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:39.016456      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:40.016615      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:40.987679 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:41.016799      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:42.017315      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:42.996141 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:43.018374      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:44.018758      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:45.004662 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:45.019898      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:46.020402      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:47.012157 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:47.021391      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:48.021735      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:49.020444 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:49.022589      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:50.022879      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:51.023364      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:51.028877 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:52.023885      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:53.024187      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:53.041730 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:54.024275      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:55.024569      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:55.051240 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:56.024950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:57.024965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:57.059708 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:48:58.025266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:48:59.025549      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:48:59.067239 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  E0901 05:49:00.025872      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:01.026182      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:01.075536 21 container_probe.go:1759] Get pod busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 in namespace container-probe-3157
  I0901 05:49:01.075610 21 container_probe.go:1763] Restart count of pod container-probe-3157/busybox-4b8bd3f8-f6a8-4bbc-a609-614bb6093fc0 is now 1 (50.208334987s elapsed)
  STEP: deleting the pod @ 09/01/25 05:49:01.076
  I0901 05:49:01.101709 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3157" for this suite. @ 09/01/25 05:49:01.109
• [52.309 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/01/25 05:49:01.116
  I0901 05:49:01.116229 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:49:01.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:01.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:01.13
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/01/25 05:49:01.133
  E0901 05:49:02.026950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:03.027188      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:04.027497      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:05.027726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:49:05.164
  I0901 05:49:05.171691 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-ba32db3e-de89-4881-bb96-2421b657aeea container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:49:05.198
  I0901 05:49:05.216001 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-855" for this suite. @ 09/01/25 05:49:05.223
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 09/01/25 05:49:05.232
  I0901 05:49:05.232326 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:49:05.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:05.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:05.249
  STEP: creating the pod @ 09/01/25 05:49:05.251
  I0901 05:49:05.251836 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 create -f -'
  I0901 05:49:05.436799 21 builder.go:146] stderr: ""
  I0901 05:49:05.436853 21 builder.go:147] stdout: "pod/pause created\n"
  E0901 05:49:06.027807      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:07.028086      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/01/25 05:49:07.45
  I0901 05:49:07.451043 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 label pods pause testing-label=testing-label-value'
  I0901 05:49:07.555599 21 builder.go:146] stderr: ""
  I0901 05:49:07.555654 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/01/25 05:49:07.555
  I0901 05:49:07.555746 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 get pod pause -L testing-label'
  I0901 05:49:07.650592 21 builder.go:146] stderr: ""
  I0901 05:49:07.650645 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/01/25 05:49:07.65
  I0901 05:49:07.650714 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 label pods pause testing-label-'
  I0901 05:49:07.748504 21 builder.go:146] stderr: ""
  I0901 05:49:07.748577 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/01/25 05:49:07.748
  I0901 05:49:07.748697 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 get pod pause -L testing-label'
  I0901 05:49:07.838787 21 builder.go:146] stderr: ""
  I0901 05:49:07.838850 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/01/25 05:49:07.838
  I0901 05:49:07.839036 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 delete --grace-period=0 --force -f -'
  I0901 05:49:07.928633 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:49:07.928700 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0901 05:49:07.928777 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 get rc,svc -l name=pause --no-headers'
  I0901 05:49:08.017469 21 builder.go:146] stderr: "No resources found in kubectl-6888 namespace.\n"
  I0901 05:49:08.017515 21 builder.go:147] stdout: ""
  I0901 05:49:08.017561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-6888 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0901 05:49:08.028101      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:08.099434 21 builder.go:146] stderr: ""
  I0901 05:49:08.099504 21 builder.go:147] stdout: ""
  I0901 05:49:08.099981 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6888" for this suite. @ 09/01/25 05:49:08.104
• [2.880 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 05:49:08.112
  I0901 05:49:08.112951 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 05:49:08.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:08.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:08.132
  STEP: Create a Replicaset @ 09/01/25 05:49:08.138
  STEP: Verify that the required pods have come up. @ 09/01/25 05:49:08.143
  I0901 05:49:08.146657 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0901 05:49:09.028455      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:10.028726      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:11.029191      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:12.029609      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:13.029866      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:13.153306 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 05:49:13.153
  STEP: Getting /status @ 09/01/25 05:49:13.153
  I0901 05:49:13.158369 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/01/25 05:49:13.159
  I0901 05:49:13.168241 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/01/25 05:49:13.168
  I0901 05:49:13.170409 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0901 05:49:13.170896 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.171189 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.171364 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.171409 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-4000 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0901 05:49:13.171465 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/01/25 05:49:13.171
  I0901 05:49:13.171703 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 05:49:13.176726 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/01/25 05:49:13.177
  I0901 05:49:13.179784 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0901 05:49:13.180196 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.180723 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.181158 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.181213 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-4000 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 05:49:13.181599 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0901 05:49:13.181655 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-4000 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0901 05:49:13.181678 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0901 05:49:13.182096 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4000" for this suite. @ 09/01/25 05:49:13.187
• [5.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 09/01/25 05:49:13.195
  I0901 05:49:13.195986 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:49:13.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:13.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:13.212
  I0901 05:49:13.215726 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 create -f -'
  I0901 05:49:13.364172 21 builder.go:146] stderr: ""
  I0901 05:49:13.364216 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0901 05:49:13.364271 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 create -f -'
  I0901 05:49:13.544585 21 builder.go:146] stderr: ""
  I0901 05:49:13.544651 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/01/25 05:49:13.544
  E0901 05:49:14.029999      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:14.550431 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:49:14.550490 21 framework.go:733] Found 0 / 1
  E0901 05:49:15.031081      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:15.550052 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:49:15.550106 21 framework.go:733] Found 1 / 1
  I0901 05:49:15.550126 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0901 05:49:15.554434 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0901 05:49:15.554473 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0901 05:49:15.554519 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 describe pod agnhost-primary-s67cc'
  I0901 05:49:15.642864 21 builder.go:146] stderr: ""
  I0901 05:49:15.642945 21 builder.go:147] stdout: "Name:             agnhost-primary-s67cc\nNamespace:        kubectl-4736\nPriority:         0\nService Account:  default\nNode:             k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae/192.168.1.9\nStart Time:       Mon, 01 Sep 2025 05:49:13 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.1.174\nIPs:\n  IP:           10.42.1.174\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://95f629410b777cc94f475b9dfde1b5dcdd1eb779a51af52361e577b27c8589ad\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 01 Sep 2025 05:49:13 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qzf9f (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-qzf9f:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4736/agnhost-primary-s67cc to k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    2s    kubelet            Created container: agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0901 05:49:15.643192 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 describe rc agnhost-primary'
  I0901 05:49:15.735128 21 builder.go:146] stderr: ""
  I0901 05:49:15.735196 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4736\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-s67cc\n"
  I0901 05:49:15.735534 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 describe service agnhost-primary'
  I0901 05:49:15.843632 21 builder.go:146] stderr: ""
  I0901 05:49:15.843724 21 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-4736\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.225.235\nIPs:                      10.43.225.235\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.174:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0901 05:49:15.848917 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 describe node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv'
  I0901 05:49:15.991074 21 builder.go:146] stderr: ""
  I0901 05:49:15.991208 21 builder.go:147] stdout: "Name:               k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=g4s.kube.medium\n                    beta.kubernetes.io/os=linux\n                    k3s.io/external-ip=31.28.88.119\n                    kubernetes.civo.com/civo-node-pool=8ca71864-6839-4be4-ac07-035badad5554\n                    kubernetes.civo.com/civo-node-size=g4s.kube.medium\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=g4s.kube.medium\n                    region=staging\n                    topology.kubernetes.io/region=staging\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 192.168.1.10\n                    civo.com/user-last-applied-pool-config: {\"taints\":null,\"labels\":{\"topology.kubernetes.io/region\":\"staging\"}}\n                    csi.volume.kubernetes.io/nodeid: {\"csi.civo.com\":\"78c9eea5-42d7-43e1-951f-50a5d882d992\"}\n                    flannel.alpha.coreos.com/backend-data: null\n                    flannel.alpha.coreos.com/backend-type: host-gw\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.1.10\n                    k3s.io/node-args:\n                      [\"agent\",\"--kubelet-arg\",\"cloud-provider=external\",\"--kubelet-arg\",\"max-pods=110\",\"--server\",\"https://31.28.88.119:6443\",\"--token\",\"******...\n                    k3s.io/node-config-hash: 72IAUVJAWBDCPCFBSZ3NYPNCRIZ33QNU7Z37B3CZ5BMPFJCKBVBA====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 01 Sep 2025 04:05:10 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 01 Sep 2025 05:49:10 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 01 Sep 2025 05:46:27 +0000   Mon, 01 Sep 2025 04:05:09 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 01 Sep 2025 05:46:27 +0000   Mon, 01 Sep 2025 04:05:09 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 01 Sep 2025 05:46:27 +0000   Mon, 01 Sep 2025 04:05:09 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 01 Sep 2025 05:46:27 +0000   Mon, 01 Sep 2025 04:05:10 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.1.10\n  ExternalIP:  31.28.88.119\n  Hostname:    k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv\nCapacity:\n  cpu:                2\n  ephemeral-storage:  48429256Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3834828Ki\n  pods:               110\nAllocatable:\n  cpu:                1820m\n  ephemeral-storage:  42484918608\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3220428Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 e2450a03ffefe09ec80788766821b401\n  System UUID:                08e806e1-fd92-503f-ad9b-2f5938fcfdf1\n  Boot ID:                    a7592a25-da0c-4b7e-a3a6-91f2b856e4db\n  Kernel Version:             6.1.138-0-virt\n  OS Image:                   Alpine Linux v3.18\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.5-k3s1.32\n  Kubelet Version:            v1.32.5+k3s1\n  Kube-Proxy Version:         v1.32.5+k3s1\nPodCIDR:                      10.42.2.0/24\nPodCIDRs:                     10.42.2.0/24\nProviderID:                   civo://78c9eea5-42d7-43e1-951f-50a5d882d992\nNon-terminated Pods:          (4 in total)\n  Namespace                   Name                                 CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                 ------------  ----------  ---------------  -------------  ---\n  kube-system                 civo-csi-node-dzqk5                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\n  kube-system                 coredns-697968c856-xgph7             100m (5%)     0 (0%)      70Mi (2%)        170Mi (5%)     102m\n  kube-system                 traefik-4d7c2                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         102m\n  sonobuoy                    sonobuoy-e2e-job-a8fc065df4954836    0 (0%)        0 (0%)      0 (0%)           0 (0%)         98m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests   Limits\n  --------           --------   ------\n  cpu                100m (5%)  0 (0%)\n  memory             70Mi (2%)  170Mi (5%)\n  ephemeral-storage  0 (0%)     0 (0%)\n  hugepages-1Gi      0 (0%)     0 (0%)\n  hugepages-2Mi      0 (0%)     0 (0%)\nEvents:              <none>\n"
  I0901 05:49:15.991277 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4736 describe namespace kubectl-4736'
  E0901 05:49:16.031363      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:16.089069 21 builder.go:146] stderr: ""
  I0901 05:49:16.089127 21 builder.go:147] stdout: "Name:         kubectl-4736\nLabels:       e2e-framework=kubectl\n              e2e-run=4ca1e4fb-5de9-48de-ac46-3bc5043c3520\n              kubernetes.io/metadata.name=kubectl-4736\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0901 05:49:16.089246 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4736" for this suite. @ 09/01/25 05:49:16.094
• [2.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 09/01/25 05:49:16.105
  I0901 05:49:16.105693 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename svcaccounts @ 09/01/25 05:49:16.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:16.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:16.125
  I0901 05:49:16.131385 21 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-5285"
  I0901 05:49:16.136725 21 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-5285"
  STEP: waiting for a new root ca configmap created @ 09/01/25 05:49:16.637
  I0901 05:49:16.642654 21 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-5285"
  I0901 05:49:16.647816 21 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-5285"
  E0901 05:49:17.032489      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 09/01/25 05:49:17.148
  I0901 05:49:17.156232 21 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-5285"
  I0901 05:49:17.156425 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5285" for this suite. @ 09/01/25 05:49:17.163
• [1.067 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 09/01/25 05:49:17.173
  I0901 05:49:17.173356 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:49:17.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:17.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:17.215
  I0901 05:49:17.231804 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:49:18.032601      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/01/25 05:49:18.755
  I0901 05:49:18.755387 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-1807 --namespace=crd-publish-openapi-1807 create -f -'
  E0901 05:49:19.033123      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:20.033324      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:20.866897 21 builder.go:146] stderr: ""
  I0901 05:49:20.866996 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1037-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 05:49:20.867636 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-1807 --namespace=crd-publish-openapi-1807 delete e2e-test-crd-publish-openapi-1037-crds test-cr'
  I0901 05:49:20.956410 21 builder.go:146] stderr: ""
  I0901 05:49:20.956606 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1037-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0901 05:49:20.956680 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-1807 --namespace=crd-publish-openapi-1807 apply -f -'
  E0901 05:49:21.034183      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:21.053136 21 builder.go:146] stderr: ""
  I0901 05:49:21.053186 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1037-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0901 05:49:21.053235 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-1807 --namespace=crd-publish-openapi-1807 delete e2e-test-crd-publish-openapi-1037-crds test-cr'
  I0901 05:49:21.150025 21 builder.go:146] stderr: ""
  I0901 05:49:21.150076 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1037-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/01/25 05:49:21.15
  I0901 05:49:21.150156 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=crd-publish-openapi-1807 explain e2e-test-crd-publish-openapi-1037-crds'
  I0901 05:49:21.239674 21 builder.go:146] stderr: ""
  I0901 05:49:21.239744 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1037-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0901 05:49:22.034298      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:22.604967 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1807" for this suite. @ 09/01/25 05:49:22.614
• [5.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/01/25 05:49:22.622
  I0901 05:49:22.623038 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename daemonsets @ 09/01/25 05:49:22.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:22.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:22.64
  STEP: Creating simple DaemonSet "daemon-set" @ 09/01/25 05:49:22.729
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/01/25 05:49:22.736
  I0901 05:49:22.819307 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:49:22.819498 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:49:23.035114      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:23.752820 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0901 05:49:23.752890 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:49:24.035759      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:24.749987 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:49:24.750034 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/01/25 05:49:24.754
  I0901 05:49:24.775009 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:49:24.775056 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:49:25.036370      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:25.780370 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:49:25.780417 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:49:26.037054      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:26.779908 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0901 05:49:26.779986 21 fixtures.go:131] Node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv is running 0 daemon pod, expected 1
  E0901 05:49:27.037181      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:27.775173 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0901 05:49:27.775218 21 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/01/25 05:49:27.779
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9379, will wait for the garbage collector to delete the pods @ 09/01/25 05:49:27.779
  I0901 05:49:27.843943 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.011459ms
  I0901 05:49:27.944913 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.968569ms
  E0901 05:49:28.037387      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:29.037682      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:29.352749 21 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0901 05:49:29.352896 21 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0901 05:49:29.357604 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36315"},"items":null}

  I0901 05:49:29.361681 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36315"},"items":null}

  I0901 05:49:29.378526 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9379" for this suite. @ 09/01/25 05:49:29.384
• [6.769 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 09/01/25 05:49:29.392
  I0901 05:49:29.392766 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:49:29.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:29.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:29.409
  STEP: Setting up server cert @ 09/01/25 05:49:29.43
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:49:29.849
  STEP: Deploying the webhook pod @ 09/01/25 05:49:29.856
  STEP: Wait for the deployment to be ready @ 09/01/25 05:49:29.87
  I0901 05:49:29.883566 21 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0901 05:49:30.037933      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:31.038025      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 05:49:31.904
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:49:31.916
  E0901 05:49:32.038167      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:32.917242 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/01/25 05:49:32.927
  STEP: create a pod that should be updated by the webhook @ 09/01/25 05:49:32.95
  E0901 05:49:33.038056      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:33.047145 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9986" for this suite. @ 09/01/25 05:49:33.054
  STEP: Destroying namespace "webhook-markers-4496" for this suite. @ 09/01/25 05:49:33.061
• [3.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/01/25 05:49:33.071
  I0901 05:49:33.071226 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename gc @ 09/01/25 05:49:33.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:33.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:33.091
  I0901 05:49:33.133620 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"0eb911bd-8d29-462d-b693-7eff7b9769f1", Controller:(*bool)(0xc00226706e), BlockOwnerDeletion:(*bool)(0xc00226706f)}}
  I0901 05:49:33.142010 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a4cbbdd5-267d-4244-84c2-3f80e1c67bbc", Controller:(*bool)(0xc00200067e), BlockOwnerDeletion:(*bool)(0xc00200067f)}}
  I0901 05:49:33.148582 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"f747b799-0e77-4cd7-92e9-af90ff8cc8e9", Controller:(*bool)(0xc002000886), BlockOwnerDeletion:(*bool)(0xc002000887)}}
  E0901 05:49:34.042715      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:35.042812      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:36.042997      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:37.043140      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:38.043401      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:49:38.204344 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2412" for this suite. @ 09/01/25 05:49:38.216
• [5.155 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/01/25 05:49:38.227
  I0901 05:49:38.227243 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 05:49:38.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:38.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:38.259
  I0901 05:49:38.270309 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-587" for this suite. @ 09/01/25 05:49:38.316
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 09/01/25 05:49:38.327
  I0901 05:49:38.327256 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename var-expansion @ 09/01/25 05:49:38.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:49:38.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:49:38.354
  STEP: creating the pod with failed condition @ 09/01/25 05:49:38.358
  E0901 05:49:39.044441      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:40.044680      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:41.044849      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:42.045133      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:43.045223      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:44.045541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:45.045703      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:46.045998      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:47.046306      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:48.046632      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:49.046968      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:50.047664      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:51.048437      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:52.048945      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:53.049173      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:54.049419      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:55.049544      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:56.049651      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:57.049797      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:58.050063      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:49:59.050162      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:00.050387      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:01.050955      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:02.050957      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:03.051203      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:04.051459      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:05.052069      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:06.052469      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:07.052517      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:08.052900      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:09.053426      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:10.053626      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:11.053929      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:12.054141      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:13.054488      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:14.054706      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:15.055001      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:16.055292      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:17.056113      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:18.056480      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:19.057404      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:20.057778      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:21.058001      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:22.058236      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:23.058619      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:24.058930      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:25.059113      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:26.059542      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:27.059680      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:28.060004      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:29.060707      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:30.060889      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:31.061768      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:32.061850      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:33.062070      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:34.062367      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:35.063127      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:36.064179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:37.064305      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:38.064424      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:39.065262      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:40.065377      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:41.066038      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:42.066440      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:43.067128      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:44.067251      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:45.067444      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:46.067804      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:47.068034      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:48.068527      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:49.069821      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:50.070261      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:51.070555      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:52.071158      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:53.071796      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:54.072149      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:55.072301      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:56.072621      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:57.073443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:58.073547      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:50:59.073948      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:00.074702      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:01.074906      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:02.075087      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:03.075240      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:04.075509      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:05.075692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:06.075999      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:07.077067      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:08.077395      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:09.077643      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:10.077987      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:11.078988      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:12.079850      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:13.080117      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:14.081102      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:15.082019      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:16.082414      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:17.083281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:18.083603      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:19.084480      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:20.084647      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:21.085738      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:22.086223      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:23.086428      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:24.086522      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:25.087340      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:26.087748      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:27.088785      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:28.089000      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:29.089266      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:30.089743      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:31.089830      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:32.090128      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:33.090692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:34.090864      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:35.091523      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:36.091717      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:37.092389      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:38.092807      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/01/25 05:51:38.367
  I0901 05:51:38.880746 21 pod_client.go:173] Successfully updated pod "var-expansion-5ec25c9e-0267-47c0-8cd4-9389f698ac48"
  STEP: waiting for pod running @ 09/01/25 05:51:38.88
  E0901 05:51:39.093746      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:40.093876      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/01/25 05:51:40.893
  I0901 05:51:40.893414 21 delete.go:62] Deleting pod "var-expansion-5ec25c9e-0267-47c0-8cd4-9389f698ac48" in namespace "var-expansion-6143"
  I0901 05:51:40.902910 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-5ec25c9e-0267-47c0-8cd4-9389f698ac48" to be fully deleted
  E0901 05:51:41.095135      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:42.095486      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:43.096672      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:44.097056      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:45.098305      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:46.098597      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:47.099368      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:48.099620      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:49.099751      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:50.099835      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:51.100522      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:52.101292      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:53.102078      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:54.102341      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:55.103025      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:56.103211      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:57.103946      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:58.104318      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:51:59.105129      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:00.105527      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:01.106384      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:02.106566      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:03.107491      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:04.107828      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:05.108055      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:06.108362      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:07.109401      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:08.109880      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:09.110961      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:10.111235      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:11.111885      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:12.112031      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:13.022756 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6143" for this suite. @ 09/01/25 05:52:13.029
• [154.710 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 09/01/25 05:52:13.039
  I0901 05:52:13.039751 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename resourcequota @ 09/01/25 05:52:13.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:13.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:13.056
  STEP: Creating a ResourceQuota @ 09/01/25 05:52:13.061
  STEP: Getting a ResourceQuota @ 09/01/25 05:52:13.068
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/01/25 05:52:13.072
  STEP: Patching the ResourceQuota @ 09/01/25 05:52:13.077
  STEP: Deleting a Collection of ResourceQuotas @ 09/01/25 05:52:13.082
  STEP: Verifying the deleted ResourceQuota @ 09/01/25 05:52:13.09
  I0901 05:52:13.093544 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2372" for this suite. @ 09/01/25 05:52:13.097
• [0.064 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 09/01/25 05:52:13.103
  I0901 05:52:13.103571 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:52:13.104
  E0901 05:52:13.112692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:13.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:13.119
  STEP: creating all guestbook components @ 09/01/25 05:52:13.123
  I0901 05:52:13.123556 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0901 05:52:13.123707 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 create -f -'
  I0901 05:52:13.279999 21 builder.go:146] stderr: ""
  I0901 05:52:13.280033 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0901 05:52:13.280074 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0901 05:52:13.280152 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 create -f -'
  I0901 05:52:13.453517 21 builder.go:146] stderr: ""
  I0901 05:52:13.453585 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0901 05:52:13.453649 21 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0901 05:52:13.454145 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 create -f -'
  I0901 05:52:13.637739 21 builder.go:146] stderr: ""
  I0901 05:52:13.637784 21 builder.go:147] stdout: "service/frontend created\n"
  I0901 05:52:13.637845 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0901 05:52:13.637957 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 create -f -'
  I0901 05:52:13.749125 21 builder.go:146] stderr: ""
  I0901 05:52:13.749173 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0901 05:52:13.749241 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 05:52:13.749687 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 create -f -'
  I0901 05:52:13.867011 21 builder.go:146] stderr: ""
  I0901 05:52:13.867057 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0901 05:52:13.867105 21 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0901 05:52:13.867240 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 create -f -'
  I0901 05:52:13.976796 21 builder.go:146] stderr: ""
  I0901 05:52:13.976842 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/01/25 05:52:13.976
  I0901 05:52:13.976883 21 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0901 05:52:14.113359      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:15.113950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:16.114234      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:17.114410      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:18.114664      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:19.028556 21 kubectl.go:2283] Waiting for frontend to serve content.
  I0901 05:52:19.043056 21 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0901 05:52:19.059719 21 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/01/25 05:52:19.076
  I0901 05:52:19.076357 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 delete --grace-period=0 --force -f -'
  E0901 05:52:19.114960      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:19.188522 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:52:19.188580 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 05:52:19.188
  I0901 05:52:19.188915 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 delete --grace-period=0 --force -f -'
  I0901 05:52:19.299027 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:52:19.299074 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 05:52:19.299
  I0901 05:52:19.299190 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 delete --grace-period=0 --force -f -'
  I0901 05:52:19.395479 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:52:19.395536 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 05:52:19.395
  I0901 05:52:19.395827 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 delete --grace-period=0 --force -f -'
  I0901 05:52:19.480768 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:52:19.480842 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 05:52:19.48
  I0901 05:52:19.481090 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 delete --grace-period=0 --force -f -'
  I0901 05:52:19.597933 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:52:19.598010 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/01/25 05:52:19.598
  I0901 05:52:19.598351 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-4323 delete --grace-period=0 --force -f -'
  I0901 05:52:19.703685 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0901 05:52:19.703750 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0901 05:52:19.703910 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4323" for this suite. @ 09/01/25 05:52:19.708
• [6.613 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/01/25 05:52:19.717
  I0901 05:52:19.717204 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 05:52:19.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:19.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:19.735
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/01/25 05:52:19.738
  E0901 05:52:20.115860      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:21.116171      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/01/25 05:52:21.758
  STEP: Then the orphan pod is adopted @ 09/01/25 05:52:21.764
  E0901 05:52:22.116953      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/01/25 05:52:22.775
  I0901 05:52:22.778858 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/01/25 05:52:22.791
  E0901 05:52:23.117603      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:23.804107 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5336" for this suite. @ 09/01/25 05:52:23.81
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/01/25 05:52:23.83
  I0901 05:52:23.830224 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/01/25 05:52:23.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:23.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:23.848
  STEP: creating the policy @ 09/01/25 05:52:23.855
  STEP: waiting until the marker is denied @ 09/01/25 05:52:23.867
  E0901 05:52:24.118648      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 09/01/25 05:52:24.276
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/01/25 05:52:24.291
  I0901 05:52:24.349497 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6968" for this suite. @ 09/01/25 05:52:24.358
• [0.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 09/01/25 05:52:24.367
  I0901 05:52:24.367743 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename namespaces @ 09/01/25 05:52:24.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:24.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:24.381
  STEP: creating a Namespace @ 09/01/25 05:52:24.385
  STEP: patching the Namespace @ 09/01/25 05:52:24.396
  STEP: get the Namespace and ensuring it has the label @ 09/01/25 05:52:24.402
  I0901 05:52:24.406982 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7250" for this suite. @ 09/01/25 05:52:24.458
  STEP: Destroying namespace "nspatchtest-93b43b81-db3f-420d-b9be-4f6aba8748fd-7912" for this suite. @ 09/01/25 05:52:24.466
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/01/25 05:52:24.474
  I0901 05:52:24.474214 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/01/25 05:52:24.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:24.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:24.489
  I0901 05:52:24.492508 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:52:25.119455      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:26.119536      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:27.120179      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:27.538620 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7667" for this suite. @ 09/01/25 05:52:27.544
• [3.079 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 09/01/25 05:52:27.553
  I0901 05:52:27.553675 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:52:27.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:27.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:27.574
  STEP: creating a ConfigMap @ 09/01/25 05:52:27.577
  STEP: fetching the ConfigMap @ 09/01/25 05:52:27.58
  STEP: patching the ConfigMap @ 09/01/25 05:52:27.583
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/01/25 05:52:27.588
  STEP: deleting the ConfigMap by collection with a label selector @ 09/01/25 05:52:27.59
  STEP: listing all ConfigMaps in test namespace @ 09/01/25 05:52:27.597
  I0901 05:52:27.601309 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8951" for this suite. @ 09/01/25 05:52:27.646
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/01/25 05:52:27.656
  I0901 05:52:27.656121 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubelet-test @ 09/01/25 05:52:27.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:27.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:27.673
  E0901 05:52:28.120798      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:29.121050      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:29.716707 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2311" for this suite. @ 09/01/25 05:52:29.73
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 09/01/25 05:52:29.739
  I0901 05:52:29.739206 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:52:29.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:29.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:29.756
  STEP: Setting up server cert @ 09/01/25 05:52:29.774
  E0901 05:52:30.121419      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:52:30.56
  STEP: Deploying the webhook pod @ 09/01/25 05:52:30.566
  STEP: Wait for the deployment to be ready @ 09/01/25 05:52:30.578
  I0901 05:52:30.588362 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 05:52:31.121671      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:32.121937      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 05:52:32.601
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:52:32.61
  E0901 05:52:33.122481      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:33.610779 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/01/25 05:52:33.624
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/01/25 05:52:33.633
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/01/25 05:52:33.633
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 05:52:33.633
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/01/25 05:52:33.635
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 05:52:33.635
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/01/25 05:52:33.637
  I0901 05:52:33.675264 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2876" for this suite. @ 09/01/25 05:52:33.678
  STEP: Destroying namespace "webhook-markers-7382" for this suite. @ 09/01/25 05:52:33.683
• [3.949 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/01/25 05:52:33.69
  I0901 05:52:33.690617 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename deployment @ 09/01/25 05:52:33.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:33.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:33.706
  STEP: creating a Deployment @ 09/01/25 05:52:33.712
  I0901 05:52:33.712936 21 deployment.go:507] Creating simple deployment test-deployment-6g6sw
  I0901 05:52:33.722801 21 deployment.go:223] deployment "test-deployment-6g6sw" doesn't have the required revision set
  E0901 05:52:34.122583      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:35.122764      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 09/01/25 05:52:35.741
  I0901 05:52:35.746775 21 deployment.go:532] Deployment test-deployment-6g6sw has Conditions: [{Available True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6g6sw-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/01/25 05:52:35.746
  I0901 05:52:35.757490 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 52, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 52, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 1, 5, 52, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 1, 5, 52, 33, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-6g6sw-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/01/25 05:52:35.758
  I0901 05:52:35.761642 21 deployment.go:579] Observed &Deployment event: ADDED
  I0901 05:52:35.761760 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6g6sw-6fb4c74686"}
  I0901 05:52:35.762382 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 05:52:35.762919 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6g6sw-6fb4c74686"}
  I0901 05:52:35.763461 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 05:52:35.764288 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 05:52:35.764880 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 05:52:35.764954 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6g6sw-6fb4c74686" is progressing.}
  I0901 05:52:35.765660 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 05:52:35.766126 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 05:52:35.766196 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6g6sw-6fb4c74686" has successfully progressed.}
  I0901 05:52:35.766695 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0901 05:52:35.767199 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 05:52:35.767265 21 deployment.go:575] Observed Deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6g6sw-6fb4c74686" has successfully progressed.}
  I0901 05:52:35.767314 21 deployment.go:572] Found Deployment test-deployment-6g6sw in namespace deployment-1467 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 05:52:35.767461 21 deployment.go:583] Deployment test-deployment-6g6sw has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 05:52:35.767
  I0901 05:52:35.767688 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 05:52:35.775122 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/01/25 05:52:35.775
  I0901 05:52:35.777937 21 deployment.go:616] Observed &Deployment event: ADDED
  I0901 05:52:35.778058 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6g6sw-6fb4c74686"}
  I0901 05:52:35.778810 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 05:52:35.778917 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-6g6sw-6fb4c74686"}
  I0901 05:52:35.779344 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 05:52:35.779779 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 05:52:35.779864 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0901 05:52:35.780205 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:33 +0000 UTC 2025-09-01 05:52:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-6g6sw-6fb4c74686" is progressing.}
  I0901 05:52:35.780835 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 05:52:35.780939 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 05:52:35.781402 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6g6sw-6fb4c74686" has successfully progressed.}
  I0901 05:52:35.781859 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 05:52:35.781965 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0901 05:52:35.782140 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-01 05:52:35 +0000 UTC 2025-09-01 05:52:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-6g6sw-6fb4c74686" has successfully progressed.}
  I0901 05:52:35.782182 21 deployment.go:612] Observed deployment test-deployment-6g6sw in namespace deployment-1467 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 05:52:35.782521 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0901 05:52:35.782619 21 deployment.go:609] Found deployment test-deployment-6g6sw in namespace deployment-1467 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0901 05:52:35.782731 21 deployment.go:620] Deployment test-deployment-6g6sw has a patched status
  I0901 05:52:35.787523 21 deployment.go:633] Deployment "test-deployment-6g6sw":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-6g6sw",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd2e3c32-0e65-4dc3-800a-fd7b951f5728",
      ResourceVersion: (string) (len=5) "37226",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302753,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-6g6sw-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0901 05:52:35.835273 21 deployment.go:40] New ReplicaSet "test-deployment-6g6sw-6fb4c74686" of Deployment "test-deployment-6g6sw":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6g6sw-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33892cef-6f6e-46c2-bb8c-ccc3544c376a",
      ResourceVersion: (string) (len=5) "37221",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302753,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-6g6sw",
          UID: (types.UID) (len=36) "fd2e3c32-0e65-4dc3-800a-fd7b951f5728",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 64 32  |k:{\"uid\":\"fd2|
              00000120  65 33 63 33 32 2d 30 65  36 35 2d 34 64 63 33 2d  |e3c32-0e65-4dc3-|
              00000130  38 30 30 61 2d 66 64 37  62 39 35 31 66 35 37 32  |800a-fd7b951f572|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0901 05:52:35.849109 21 deployment.go:68] Pod "test-deployment-6g6sw-6fb4c74686-jr6bb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-6g6sw-6fb4c74686-jr6bb",
      GenerateName: (string) (len=33) "test-deployment-6g6sw-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-1467",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c40419f-3140-4f42-913c-cf7567597e11",
      ResourceVersion: (string) (len=5) "37220",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302753,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-6g6sw-6fb4c74686",
          UID: (types.UID) (len=36) "33892cef-6f6e-46c2-bb8c-ccc3544c376a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 33 33 38 39 32 63 65  66 2d 36 66 36 65 2d 34  |"33892cef-6f6e-4|
              000000a0  36 63 32 2d 62 62 38 63  2d 63 63 63 33 35 34 34  |6c2-bb8c-ccc3544|
              000000b0  63 33 37 36 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |c376a\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 38  35 5c 22 7d 22 3a 7b 22  |.42.1.185\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9q2b5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9q2b5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=46) "k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302755,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892302753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.9",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.9"
        }
      },
      PodIP: (string) (len=11) "10.42.1.185",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.185"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892302753,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892302754,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://978ea41fe4e8d495777c7e6278e72fb885f06391a83753346a81b3f1ce8c2796",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9q2b5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0901 05:52:35.861519 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1467" for this suite. @ 09/01/25 05:52:35.869
• [2.190 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 09/01/25 05:52:35.881
  I0901 05:52:35.881427 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:52:35.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:35.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:35.903
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 05:52:35.907
  I0901 05:52:35.907564 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9379 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0901 05:52:35.993050 21 builder.go:146] stderr: ""
  I0901 05:52:35.993217 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/01/25 05:52:35.993
  I0901 05:52:35.994580 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9379 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0901 05:52:36.088504 21 builder.go:146] stderr: ""
  I0901 05:52:36.088658 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/01/25 05:52:36.088
  I0901 05:52:36.092290 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-9379 delete pods e2e-test-httpd-pod'
  E0901 05:52:36.122901      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:37.123419      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:38.123514      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:38.130235 21 builder.go:146] stderr: ""
  I0901 05:52:38.130282 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0901 05:52:38.130390 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9379" for this suite. @ 09/01/25 05:52:38.135
• [2.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/01/25 05:52:38.141
  I0901 05:52:38.141890 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:52:38.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:38.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:38.154
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/01/25 05:52:38.157
  E0901 05:52:39.123830      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:40.124707      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:41.124860      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:42.125249      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:52:42.179
  I0901 05:52:42.185659 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod pod-fd22ae73-89f8-47a6-9c9b-7f11446eda85 container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:52:42.211
  I0901 05:52:42.226990 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9377" for this suite. @ 09/01/25 05:52:42.234
• [4.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 09/01/25 05:52:42.241
  I0901 05:52:42.241499 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/01/25 05:52:42.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:42.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:42.255
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/01/25 05:52:42.258
  I0901 05:52:42.258799 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:52:43.126299      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:43.612762 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:52:44.126596      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:45.127561      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:46.128560      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:47.129340      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:48.130301      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:49.052580 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5409" for this suite. @ 09/01/25 05:52:49.066
• [6.833 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 09/01/25 05:52:49.074
  I0901 05:52:49.074705 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:52:49.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:52:49.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:52:49.093
  STEP: creating service endpoint-test2 in namespace services-5021 @ 09/01/25 05:52:49.096
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5021 to expose endpoints map[] @ 09/01/25 05:52:49.118
  I0901 05:52:49.123656 21 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0901 05:52:49.130796      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:50.131219      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:50.139687 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5021 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5021 @ 09/01/25 05:52:50.139
  E0901 05:52:51.132276      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:52.132599      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5021 to expose endpoints map[pod1:[80]] @ 09/01/25 05:52:52.171
  I0901 05:52:52.190338 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5021 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/01/25 05:52:52.19
  I0901 05:52:52.190427 21 resource.go:361] Creating new exec pod
  E0901 05:52:53.133095      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:54.133584      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:55.133709      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:55.212240 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5021 exec execpod66n4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 05:52:55.408611 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.246.98) 80 port [tcp/http] succeeded!\n"
  I0901 05:52:55.408720 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:52:55.409264 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5021 exec execpod66n4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.98 80'
  I0901 05:52:55.648297 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.98 80\nConnection to 10.43.246.98 80 port [tcp/http] succeeded!\n"
  I0901 05:52:55.648364 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5021 @ 09/01/25 05:52:55.648
  E0901 05:52:56.133854      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:52:57.134084      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5021 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/01/25 05:52:57.674
  I0901 05:52:57.694977 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5021 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/01/25 05:52:57.695
  E0901 05:52:58.134894      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:52:58.696754 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5021 exec execpod66n4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 05:52:58.917921 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.43.246.98) 80 port [tcp/http] succeeded!\n"
  I0901 05:52:58.917994 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:52:58.918650 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5021 exec execpod66n4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.98 80'
  I0901 05:52:59.126022 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.98 80\nConnection to 10.43.246.98 80 port [tcp/http] succeeded!\n"
  I0901 05:52:59.126076 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5021 @ 09/01/25 05:52:59.126
  E0901 05:52:59.135240      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5021 to expose endpoints map[pod2:[80]] @ 09/01/25 05:52:59.142
  I0901 05:52:59.161133 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5021 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/01/25 05:52:59.161
  E0901 05:53:00.135488      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:00.161756 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5021 exec execpod66n4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0901 05:53:00.360587 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 (10.43.246.98) 80 port [tcp/http] succeeded!\n"
  I0901 05:53:00.360642 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:53:00.360767 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-5021 exec execpod66n4d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.98 80'
  I0901 05:53:00.544140 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.98 80\nConnection to 10.43.246.98 80 port [tcp/http] succeeded!\n"
  I0901 05:53:00.544230 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5021 @ 09/01/25 05:53:00.544
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5021 to expose endpoints map[] @ 09/01/25 05:53:00.576
  I0901 05:53:00.584521 21 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5021 exposes endpoints map[]
  I0901 05:53:00.597563 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5021" for this suite. @ 09/01/25 05:53:00.601
• [11.531 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/01/25 05:53:00.605
  I0901 05:53:00.605385 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename emptydir @ 09/01/25 05:53:00.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:00.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:00.615
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/01/25 05:53:00.618
  E0901 05:53:01.135543      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:02.135873      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:03.136058      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:04.136228      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:53:04.639
  I0901 05:53:04.643069 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod pod-6b33ef59-75c2-4aa4-860c-01539a0ab4be container test-container: <nil>
  STEP: delete the pod @ 09/01/25 05:53:04.651
  I0901 05:53:04.665174 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8719" for this suite. @ 09/01/25 05:53:04.669
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/01/25 05:53:04.677
  I0901 05:53:04.677212 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename replicaset @ 09/01/25 05:53:04.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:04.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:04.69
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/01/25 05:53:04.693
  I0901 05:53:04.699589 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0901 05:53:05.138388      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:06.138614      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:07.138950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:08.139171      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:09.139359      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:09.703496 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/01/25 05:53:09.703
  STEP: getting scale subresource @ 09/01/25 05:53:09.703
  STEP: updating a scale subresource @ 09/01/25 05:53:09.709
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/01/25 05:53:09.714
  STEP: Patch a scale subresource @ 09/01/25 05:53:09.719
  I0901 05:53:09.738967 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4869" for this suite. @ 09/01/25 05:53:09.751
• [5.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/01/25 05:53:09.767
  I0901 05:53:09.767375 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 05:53:09.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:09.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:09.785
  E0901 05:53:10.140068      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:11.140569      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/01/25 05:53:11.848
  STEP: referencing matching pods with named port @ 09/01/25 05:53:11.858
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/01/25 05:53:11.868
  STEP: recreating EndpointSlices after they've been deleted @ 09/01/25 05:53:11.876
  I0901 05:53:11.901225 21 endpointslice.go:938] EndpointSlice for Service endpointslice-5467/example-named-port not found
  E0901 05:53:12.140652      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:13.140762      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:13.910513 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5467" for this suite. @ 09/01/25 05:53:13.916
• [4.165 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/01/25 05:53:13.933
  I0901 05:53:13.933356 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:53:13.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:13.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:14.006
  STEP: Creating configMap with name configmap-test-volume-e14681d0-5de0-4c09-a651-5214f163e81a @ 09/01/25 05:53:14.01
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:53:14.014
  E0901 05:53:14.141458      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:15.142057      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:16.142565      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:17.142679      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:53:18.04
  I0901 05:53:18.043833 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-5astv pod pod-configmaps-97669012-71c1-4b1a-b851-1a4cdf9ae4ab container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:53:18.053
  I0901 05:53:18.071401 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7219" for this suite. @ 09/01/25 05:53:18.076
• [4.150 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/01/25 05:53:18.083
  I0901 05:53:18.083364 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename podtemplate @ 09/01/25 05:53:18.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:18.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:18.102
  I0901 05:53:18.141908 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0901 05:53:18.143344      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "podtemplate-6622" for this suite. @ 09/01/25 05:53:18.177
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 09/01/25 05:53:18.184
  I0901 05:53:18.184498 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename webhook @ 09/01/25 05:53:18.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:18.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:18.198
  STEP: Setting up server cert @ 09/01/25 05:53:18.218
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/01/25 05:53:18.779
  STEP: Deploying the webhook pod @ 09/01/25 05:53:18.785
  STEP: Wait for the deployment to be ready @ 09/01/25 05:53:18.797
  I0901 05:53:18.812287 21 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0901 05:53:19.143685      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:20.143829      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/01/25 05:53:20.833
  STEP: Verifying the service has paired with the endpoint @ 09/01/25 05:53:20.849
  E0901 05:53:21.145226      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:21.849558 21 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/01/25 05:53:21.858
  I0901 05:53:21.903706 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4369" for this suite. @ 09/01/25 05:53:21.908
  STEP: Destroying namespace "webhook-markers-7896" for this suite. @ 09/01/25 05:53:21.914
• [3.739 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/01/25 05:53:21.923
  I0901 05:53:21.923621 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename disruption @ 09/01/25 05:53:21.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:21.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:21.952
  STEP: creating the pdb @ 09/01/25 05:53:21.955
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:53:21.96
  E0901 05:53:22.145733      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:23.145859      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/01/25 05:53:23.965
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:53:23.973
  E0901 05:53:24.146852      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:25.146994      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/01/25 05:53:25.978
  STEP: Waiting for the pdb to be processed @ 09/01/25 05:53:25.988
  STEP: Waiting for the pdb to be deleted @ 09/01/25 05:53:26.005
  I0901 05:53:26.010344 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7655" for this suite. @ 09/01/25 05:53:26.016
• [4.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/01/25 05:53:26.024
  I0901 05:53:26.024382 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename downward-api @ 09/01/25 05:53:26.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:26.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:26.045
  STEP: Creating a pod to test downward API volume plugin @ 09/01/25 05:53:26.049
  E0901 05:53:26.148079      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:27.148378      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:28.149281      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:29.149443      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:53:30.076
  I0901 05:53:30.081940 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod downwardapi-volume-c62b4199-0033-4ebd-acf1-9dc331bcf01c container client-container: <nil>
  STEP: delete the pod @ 09/01/25 05:53:30.091
  I0901 05:53:30.108154 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7749" for this suite. @ 09/01/25 05:53:30.113
• [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/01/25 05:53:30.12
  I0901 05:53:30.120440 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename field-validation @ 09/01/25 05:53:30.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:30.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:30.134
  I0901 05:53:30.136843 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  E0901 05:53:30.150065      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:31.151061      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:32.151490      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:33.151557      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:33.211900 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5626" for this suite. @ 09/01/25 05:53:33.215
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 09/01/25 05:53:33.222
  I0901 05:53:33.222109 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename kubectl @ 09/01/25 05:53:33.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:33.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:33.238
  STEP: Starting the proxy @ 09/01/25 05:53:33.241
  I0901 05:53:33.242229 21 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=kubectl-370 proxy --unix-socket=/tmp/kubectl-proxy-unix3658075826/test'
  STEP: retrieving proxy /api/ output @ 09/01/25 05:53:33.308
  I0901 05:53:33.309675 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-370" for this suite. @ 09/01/25 05:53:33.316
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/01/25 05:53:33.323
  I0901 05:53:33.323767 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 05:53:33.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:33.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:33.339
  E0901 05:53:34.151745      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:35.152009      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:35.389090 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-653" for this suite. @ 09/01/25 05:53:35.393
• [2.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 09/01/25 05:53:35.4
  I0901 05:53:35.400049 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 05:53:35.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:53:35.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:53:35.415
  STEP: Creating service test in namespace statefulset-4930 @ 09/01/25 05:53:35.418
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/01/25 05:53:35.424
  STEP: Creating stateful set ss in namespace statefulset-4930 @ 09/01/25 05:53:35.432
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4930 @ 09/01/25 05:53:35.437
  I0901 05:53:35.450124 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0901 05:53:36.152304      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:37.152497      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:38.152948      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:39.153092      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:40.153271      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:41.154020      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:42.154114      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:43.154397      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:44.154714      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:45.155046      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:45.446077 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/01/25 05:53:45.446
  I0901 05:53:45.452782 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 05:53:45.663265 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 05:53:45.663336 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 05:53:45.663366 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 05:53:45.670232 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0901 05:53:46.155288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:47.155585      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:48.155663      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:49.155929      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:50.156372      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:51.156503      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:52.156897      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:53.157399      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:54.157637      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:53:55.158099      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:55.670188 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 05:53:55.670266 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 05:53:55.692455 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999489s
  E0901 05:53:56.158970      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:56.700430 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.992837973s
  E0901 05:53:57.158983      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:57.706767 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.984756757s
  E0901 05:53:58.159062      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:58.712882 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.978745333s
  E0901 05:53:59.159287      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:53:59.721376 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.972383375s
  E0901 05:54:00.160139      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:00.727518 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.964305119s
  E0901 05:54:01.161169      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:01.735861 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.958658283s
  E0901 05:54:02.161345      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:02.743813 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.94943667s
  E0901 05:54:03.161359      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:03.750063 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.94249635s
  E0901 05:54:04.161613      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:04.757863 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 936.230288ms
  E0901 05:54:05.162309      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4930 @ 09/01/25 05:54:05.758
  I0901 05:54:05.767540 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 05:54:05.952742 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 05:54:05.952842 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 05:54:05.952882 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 05:54:05.958855 21 wait.go:40] Found 1 stateful pods, waiting for 3
  E0901 05:54:06.163302      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:07.163397      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:08.164091      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:09.164258      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:10.164541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:11.165167      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:12.165430      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:13.166371      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:14.166669      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:15.166780      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:15.960578 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:54:15.960633 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0901 05:54:15.960647 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/01/25 05:54:15.96
  STEP: Scale down will halt with unhealthy stateful pod @ 09/01/25 05:54:15.96
  I0901 05:54:15.971852 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0901 05:54:16.166984      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:16.194813 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 05:54:16.194927 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 05:54:16.194971 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 05:54:16.195583 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 05:54:16.401038 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 05:54:16.401105 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 05:54:16.401147 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 05:54:16.401207 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0901 05:54:16.623223 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0901 05:54:16.623300 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0901 05:54:16.623526 21 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0901 05:54:16.623663 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0901 05:54:16.628875 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0901 05:54:17.168230      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:18.168421      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:19.168704      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:20.169083      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:21.169296      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:22.169621      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:23.170312      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:24.170605      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:25.171338      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:26.171636      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:26.635026 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0901 05:54:26.635080 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0901 05:54:26.635092 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0901 05:54:26.735430 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999569s
  E0901 05:54:27.171753      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:27.742106 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.913229482s
  E0901 05:54:28.172686      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:28.748452 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.906071286s
  E0901 05:54:29.172823      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:29.755709 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.900484001s
  E0901 05:54:30.173028      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:30.764567 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.893198553s
  E0901 05:54:31.174071      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:31.770367 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.883651921s
  E0901 05:54:32.174337      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:32.777947 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.878152999s
  E0901 05:54:33.174348      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:33.783849 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.870123881s
  E0901 05:54:34.175315      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:34.789649 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.864141774s
  E0901 05:54:35.176086      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:35.799041 21 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 859.30187ms
  E0901 05:54:36.176256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4930 @ 09/01/25 05:54:36.799
  I0901 05:54:36.805895 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 05:54:36.979969 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 05:54:36.980064 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 05:54:36.980504 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 05:54:36.980611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0901 05:54:37.177348      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:37.189786 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 05:54:37.189832 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 05:54:37.189850 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 05:54:37.189896 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=statefulset-4930 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0901 05:54:37.390712 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0901 05:54:37.390770 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0901 05:54:37.390786 21 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0901 05:54:37.390801 21 rest.go:152] Scaling statefulset ss to 0
  E0901 05:54:38.177549      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:39.177883      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:40.178391      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:41.179135      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:42.179541      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:43.179724      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:44.180177      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:45.180695      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:46.180686      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:47.180998      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/01/25 05:54:47.408
  I0901 05:54:47.408987 21 statefulset.go:138] Deleting all statefulset in ns statefulset-4930
  I0901 05:54:47.415472 21 rest.go:152] Scaling statefulset ss to 0
  I0901 05:54:47.426843 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 05:54:47.431736 21 rest.go:90] Deleting statefulset ss
  I0901 05:54:47.447596 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4930" for this suite. @ 09/01/25 05:54:47.453
• [72.059 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/01/25 05:54:47.459
  I0901 05:54:47.459785 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename dns @ 09/01/25 05:54:47.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:54:47.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:54:47.474
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/01/25 05:54:47.476
  I0901 05:54:47.483683 21 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9584  36dca78a-d47c-4392-9cf5-bbc60be92405 38083 0 2025-09-01 05:54:47 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-01 05:54:47 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9c5vc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9c5vc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0901 05:54:48.181755      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:49.182183      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/01/25 05:54:49.495
  I0901 05:54:49.495082 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9584 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:54:49.495126 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:54:49.495180 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-9584/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/01/25 05:54:49.633
  I0901 05:54:49.633761 21 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9584 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0901 05:54:49.633908 21 exec_util.go:64] ExecWithOptions: Clientset creation
  I0901 05:54:49.633980 21 exec_util.go:80] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-9584/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0901 05:54:49.761328 21 dns.go:450] Deleting pod test-dns-nameservers...
  I0901 05:54:49.779575 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9584" for this suite. @ 09/01/25 05:54:49.794
• [2.342 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 09/01/25 05:54:49.802
  I0901 05:54:49.802118 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename statefulset @ 09/01/25 05:54:49.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:54:49.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:54:49.818
  STEP: Creating service test in namespace statefulset-9667 @ 09/01/25 05:54:49.821
  STEP: Creating statefulset ss in namespace statefulset-9667 @ 09/01/25 05:54:49.833
  I0901 05:54:49.840624 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0901 05:54:50.183256      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:51.184169      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:52.184415      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:53.184759      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:54.185001      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:55.185221      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:56.185460      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:57.185851      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:58.186161      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:54:59.186492      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:54:59.844322 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/01/25 05:54:59.851
  STEP: Getting /status @ 09/01/25 05:54:59.857
  I0901 05:54:59.861593 21 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/01/25 05:54:59.861
  I0901 05:54:59.870299 21 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/01/25 05:54:59.87
  I0901 05:54:59.872182 21 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0901 05:54:59.872236 21 statefulset.go:1114] Found Statefulset ss in namespace statefulset-9667 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 05:54:59.872252 21 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/01/25 05:54:59.872
  I0901 05:54:59.872319 21 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0901 05:54:59.877610 21 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/01/25 05:54:59.877
  I0901 05:54:59.879821 21 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0901 05:54:59.879877 21 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-9667 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0901 05:54:59.880038 21 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0901 05:54:59.880114 21 statefulset.go:138] Deleting all statefulset in ns statefulset-9667
  I0901 05:54:59.883309 21 rest.go:152] Scaling statefulset ss to 0
  E0901 05:55:00.187137      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:01.187431      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:02.187783      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:03.188398      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:04.188700      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:05.189168      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:06.189666      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:07.189865      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:08.190514      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:09.190883      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:55:09.899850 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0901 05:55:09.907353 21 rest.go:90] Deleting statefulset ss
  I0901 05:55:09.924547 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9667" for this suite. @ 09/01/25 05:55:09.928
• [20.134 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 09/01/25 05:55:09.936
  I0901 05:55:09.936949 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:55:09.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:55:09.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:55:09.952
  STEP: fetching services @ 09/01/25 05:55:09.955
  I0901 05:55:09.958374 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5428" for this suite. @ 09/01/25 05:55:10.031
• [0.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/01/25 05:55:10.042
  I0901 05:55:10.042657 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename secrets @ 09/01/25 05:55:10.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:55:10.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:55:10.065
  STEP: Creating secret with name secret-test-map-cf0ae13f-afd2-4600-a4c8-7e803ab307f9 @ 09/01/25 05:55:10.068
  STEP: Creating a pod to test consume secrets @ 09/01/25 05:55:10.073
  E0901 05:55:10.191217      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:11.191469      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:12.191544      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:13.191743      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:55:14.101
  I0901 05:55:14.107797 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-secrets-b4f9938b-b44d-4482-8510-32ce3cf1d759 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/01/25 05:55:14.13
  I0901 05:55:14.162548 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-409" for this suite. @ 09/01/25 05:55:14.167
• [4.133 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/01/25 05:55:14.176
  I0901 05:55:14.176163 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename server-version @ 09/01/25 05:55:14.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:55:14.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:55:14.189
  E0901 05:55:14.192013      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Request ServerVersion @ 09/01/25 05:55:14.192
  STEP: Confirm major version @ 09/01/25 05:55:14.193
  I0901 05:55:14.193878 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/01/25 05:55:14.193
  I0901 05:55:14.194020 21 server_version.go:58] cleanMinorVersion: 32
  I0901 05:55:14.194088 21 server_version.go:62] Minor version: 32
  I0901 05:55:14.194257 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9271" for this suite. @ 09/01/25 05:55:14.268
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 09/01/25 05:55:14.279
  I0901 05:55:14.279302 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename job @ 09/01/25 05:55:14.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:55:14.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:55:14.3
  STEP: Looking for a node to schedule job pods @ 09/01/25 05:55:14.304
  STEP: Creating a job @ 09/01/25 05:55:14.369
  STEP: Waiting for all the pods to be ready @ 09/01/25 05:55:14.378
  E0901 05:55:15.192315      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:16.192601      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:17.193743      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:18.194009      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/01/25 05:55:18.396
  STEP: Evict all the Pods @ 09/01/25 05:55:18.403
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-tr56f/job-3355 @ 09/01/25 05:55:18.403
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-hqjxs/job-3355 @ 09/01/25 05:55:18.403
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-7sxrx/job-3355 @ 09/01/25 05:55:18.404
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-7sxrx/job-3355 to be deleted @ 09/01/25 05:55:18.434
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-tr56f/job-3355 to be deleted @ 09/01/25 05:55:18.435
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-hqjxs/job-3355 to be deleted @ 09/01/25 05:55:18.528
  E0901 05:55:19.194049      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:20.194605      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:21.194843      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:22.195288      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/01/25 05:55:22.544
  E0901 05:55:23.195435      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:24.195605      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:25.196197      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:26.196373      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:27.196415      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:28.196692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:29.196836      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:30.197365      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:31.197480      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:32.197667      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:33.197836      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:34.198257      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:35.198654      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:36.198984      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:37.199227      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:38.199401      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:39.200176      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:40.200692      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:41.200896      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:42.201364      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:43.201485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:44.201891      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:45.202082      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:46.202574      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:47.203375      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:48.203950      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:49.204989      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:50.205463      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:51.205532      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:52.205935      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:53.206038      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:54.206828      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:55.207586      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:56.208003      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:57.208261      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:58.208525      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:55:59.208694      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:00.209146      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:01.209289      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:02.209892      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:03.210136      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:04.210380      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:56:04.699621 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3355" for this suite. @ 09/01/25 05:56:04.706
• [50.436 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/01/25 05:56:04.715
  I0901 05:56:04.715465 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename configmap @ 09/01/25 05:56:04.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:56:04.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:56:04.737
  STEP: Creating configMap with name configmap-test-volume-f7cef938-49f3-4db4-a551-01d953fcc488 @ 09/01/25 05:56:04.743
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:56:04.749
  E0901 05:56:05.210414      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:06.210779      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:07.210955      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:08.211365      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:56:08.78
  I0901 05:56:08.787067 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-configmaps-3ecb0fb2-c769-43f0-bc7a-356a20d77239 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:56:08.798
  I0901 05:56:08.815933 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-526" for this suite. @ 09/01/25 05:56:08.82
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 09/01/25 05:56:08.83
  I0901 05:56:08.831329 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename services @ 09/01/25 05:56:08.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:56:08.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:56:08.846
  STEP: creating service multi-endpoint-test in namespace services-2079 @ 09/01/25 05:56:08.85
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2079 to expose endpoints map[] @ 09/01/25 05:56:08.858
  I0901 05:56:08.863365 21 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0901 05:56:09.211965      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:56:09.876000 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2079 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2079 @ 09/01/25 05:56:09.876
  E0901 05:56:10.212100      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:11.212333      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2079 to expose endpoints map[pod1:[100]] @ 09/01/25 05:56:11.901
  I0901 05:56:11.913697 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2079 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2079 @ 09/01/25 05:56:11.913
  E0901 05:56:12.213008      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:13.213066      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2079 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/01/25 05:56:13.935
  I0901 05:56:13.950885 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2079 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/01/25 05:56:13.95
  I0901 05:56:13.951009 21 resource.go:361] Creating new exec pod
  E0901 05:56:14.213735      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:15.214267      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:16.215243      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:56:16.975100 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-2079 exec execpod78p24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0901 05:56:17.153744 21 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test (10.43.219.41) 80 port [tcp/http] succeeded!\n"
  I0901 05:56:17.153798 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:56:17.154045 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-2079 exec execpod78p24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.219.41 80'
  E0901 05:56:17.215486      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:56:17.337247 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.219.41 80\n+ echo hostName\nConnection to 10.43.219.41 80 port [tcp/http] succeeded!\n"
  I0901 05:56:17.337463 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:56:17.337718 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-2079 exec execpod78p24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0901 05:56:17.519536 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.43.219.41) 81 port [tcp/*] succeeded!\n"
  I0901 05:56:17.519596 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0901 05:56:17.519909 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-74829183 --namespace=services-2079 exec execpod78p24 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.219.41 81'
  I0901 05:56:17.700640 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.219.41 81\n+ echo hostName\nConnection to 10.43.219.41 81 port [tcp/*] succeeded!\n"
  I0901 05:56:17.700693 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2079 @ 09/01/25 05:56:17.7
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2079 to expose endpoints map[pod2:[101]] @ 09/01/25 05:56:17.721
  E0901 05:56:18.215792      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:56:18.754163 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2079 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2079 @ 09/01/25 05:56:18.754
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2079 to expose endpoints map[] @ 09/01/25 05:56:18.783
  E0901 05:56:19.216347      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0901 05:56:19.808344 21 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2079 exposes endpoints map[]
  I0901 05:56:19.825204 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2079" for this suite. @ 09/01/25 05:56:19.839
• [11.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/01/25 05:56:19.852
  I0901 05:56:19.852981 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename projected @ 09/01/25 05:56:19.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:56:19.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:56:19.886
  STEP: Creating configMap with name projected-configmap-test-volume-4250cbc0-18d3-47d3-b043-30fb7cea4638 @ 09/01/25 05:56:19.896
  STEP: Creating a pod to test consume configMaps @ 09/01/25 05:56:19.907
  E0901 05:56:20.217289      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:21.218050      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:22.218931      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0901 05:56:23.219485      21 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/01/25 05:56:23.946
  I0901 05:56:23.951113 21 output.go:207] Trying to get logs from node k3s-test-1-32-6737-d1953b-node-pool-9f8b-pxvae pod pod-projected-configmaps-c15c805a-0916-40fc-8911-136ac7d5fea3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/01/25 05:56:23.964
  I0901 05:56:23.984896 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9959" for this suite. @ 09/01/25 05:56:23.989
• [4.145 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/01/25 05:56:23.998
  I0901 05:56:23.998662 21 util.go:502] >>> kubeConfig: /tmp/kubeconfig-74829183
  STEP: Building a namespace api object, basename endpointslice @ 09/01/25 05:56:23.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/01/25 05:56:24.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/01/25 05:56:24.019
  I0901 05:56:24.032287 21 endpointslice.go:1045] Endpoints addresses: [31.28.88.119] , ports: [6443]
  I0901 05:56:24.032327 21 endpointslice.go:1075] EndpointSlices addresses: [31.28.88.119] , ports: [6443]
  I0901 05:56:24.032425 21 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6896" for this suite. @ 09/01/25 05:56:24.09
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0901 05:56:24.100746 21 suites.go:34] Running AfterSuite actions on node 1
  I0901 05:56:24.101036 21 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.073 seconds]
------------------------------

Ran 411 of 6625 Specs in 6348.554 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6214 Skipped
PASS

Ginkgo ran 1 suite in 1h45m49.960243597s
Test Suite Passed
