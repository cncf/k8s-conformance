  I0127 18:32:07.859978      23 e2e.go:109] Starting e2e run "73e89e7e-9885-4051-b352-e5204bed17d9" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1738002727 - will randomize all specs

Will run 411 of 6622 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0127 18:32:08.031237 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 18:32:08.032395 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0127 18:32:52.240499 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0127 18:32:52.242525 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'konnectivity-agent' (0 seconds elapsed)
  I0127 18:32:52.242557 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0127 18:32:52.242568 23 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
  I0127 18:32:52.242582 23 e2e.go:245] e2e test version: v1.32.1
  I0127 18:32:52.243310 23 e2e.go:254] kube-apiserver version: v1.32.1+k0s
  I0127 18:32:52.243395 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 18:32:52.245449 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [44.214 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/27/25 18:32:52.367
  I0127 18:32:52.367601 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replication-controller @ 01/27/25 18:32:52.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:32:52.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:32:52.382
  STEP: Creating ReplicationController "e2e-rc-vvnbt" @ 01/27/25 18:32:52.385
  I0127 18:32:52.388168 23 rc.go:792] Get Replication Controller "e2e-rc-vvnbt" to confirm replicas
  I0127 18:32:53.388643 23 rc.go:792] Get Replication Controller "e2e-rc-vvnbt" to confirm replicas
  I0127 18:32:53.391399 23 rc.go:801] Found 1 replicas for "e2e-rc-vvnbt" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-vvnbt" @ 01/27/25 18:32:53.391
  STEP: Updating a scale subresource @ 01/27/25 18:32:53.393
  STEP: Verifying replicas where modified for replication controller "e2e-rc-vvnbt" @ 01/27/25 18:32:53.396
  I0127 18:32:53.396935 23 rc.go:792] Get Replication Controller "e2e-rc-vvnbt" to confirm replicas
  I0127 18:32:54.400124 23 rc.go:792] Get Replication Controller "e2e-rc-vvnbt" to confirm replicas
  I0127 18:32:54.405194 23 rc.go:801] Found 2 replicas for "e2e-rc-vvnbt" replication controller
  I0127 18:32:54.405516 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2980" for this suite. @ 01/27/25 18:32:54.409
• [2.045 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/27/25 18:32:54.414
  I0127 18:32:54.414156 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 18:32:54.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:32:54.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:32:54.429
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 18:32:54.433
  STEP: Saw pod success @ 01/27/25 18:33:02.454
  I0127 18:33:02.456863 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-b500db7e-bad2-4f2f-8769-a807d9f64519 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 18:33:02.469
  I0127 18:33:02.479513 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-683" for this suite. @ 01/27/25 18:33:02.481
• [8.071 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/27/25 18:33:02.484
  I0127 18:33:02.484877 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 18:33:02.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:02.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:02.494
  STEP: creating a Deployment @ 01/27/25 18:33:02.499
  I0127 18:33:02.499296 23 deployment.go:507] Creating simple deployment test-deployment-gglgz
  I0127 18:33:02.505762 23 deployment.go:223] deployment "test-deployment-gglgz" doesn't have the required revision set
  STEP: Getting /status @ 01/27/25 18:33:04.514
  I0127 18:33:04.518166 23 deployment.go:532] Deployment test-deployment-gglgz has Conditions: [{Available True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:03 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gglgz-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/27/25 18:33:04.518
  I0127 18:33:04.524501 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 33, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 33, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 33, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 33, 2, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-gglgz-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/27/25 18:33:04.524
  I0127 18:33:04.525971 23 deployment.go:579] Observed &Deployment event: ADDED
  I0127 18:33:04.526007 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gglgz-6fb4c74686"}
  I0127 18:33:04.526156 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0127 18:33:04.526193 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gglgz-6fb4c74686"}
  I0127 18:33:04.526211 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0127 18:33:04.526329 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0127 18:33:04.526386 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0127 18:33:04.526410 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gglgz-6fb4c74686" is progressing.}
  I0127 18:33:04.526597 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0127 18:33:04.526633 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:03 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0127 18:33:04.526650 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gglgz-6fb4c74686" has successfully progressed.}
  I0127 18:33:04.526750 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0127 18:33:04.526773 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:03 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0127 18:33:04.526793 23 deployment.go:575] Observed Deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gglgz-6fb4c74686" has successfully progressed.}
  I0127 18:33:04.526811 23 deployment.go:572] Found Deployment test-deployment-gglgz in namespace deployment-7157 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 18:33:04.526826 23 deployment.go:583] Deployment test-deployment-gglgz has an updated status
  STEP: patching the Statefulset Status @ 01/27/25 18:33:04.526
  I0127 18:33:04.526867 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0127 18:33:04.530869 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/27/25 18:33:04.53
  I0127 18:33:04.532524 23 deployment.go:616] Observed &Deployment event: ADDED
  I0127 18:33:04.532559 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gglgz-6fb4c74686"}
  I0127 18:33:04.532677 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0127 18:33:04.532713 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gglgz-6fb4c74686"}
  I0127 18:33:04.532729 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0127 18:33:04.532847 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0127 18:33:04.532877 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0127 18:33:04.532896 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:02 +0000 UTC 2025-01-27 18:33:02 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gglgz-6fb4c74686" is progressing.}
  I0127 18:33:04.533024 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0127 18:33:04.533090 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:03 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0127 18:33:04.533113 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gglgz-6fb4c74686" has successfully progressed.}
  I0127 18:33:04.533220 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0127 18:33:04.533250 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:03 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0127 18:33:04.533296 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-27 18:33:03 +0000 UTC 2025-01-27 18:33:02 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gglgz-6fb4c74686" has successfully progressed.}
  I0127 18:33:04.533318 23 deployment.go:612] Observed deployment test-deployment-gglgz in namespace deployment-7157 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 18:33:04.533429 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0127 18:33:04.533461 23 deployment.go:609] Found deployment test-deployment-gglgz in namespace deployment-7157 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0127 18:33:04.533476 23 deployment.go:620] Deployment test-deployment-gglgz has a patched status
  I0127 18:33:04.536134 23 deployment.go:633] Deployment "test-deployment-gglgz":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-gglgz",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d32fa47d-ab5b-4c21-a1c4-e9f374ce5575",
      ResourceVersion: (string) (len=4) "1085",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873599582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599584,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-gglgz-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 18:33:04.612923 23 deployment.go:40] New ReplicaSet "test-deployment-gglgz-6fb4c74686" of Deployment "test-deployment-gglgz":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-gglgz-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49fe2ec0-e908-4646-8907-a18b0bee3cd1",
      ResourceVersion: (string) (len=4) "1076",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873599582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-gglgz",
          UID: (types.UID) (len=36) "d32fa47d-ab5b-4c21-a1c4-e9f374ce5575",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 33 32  |k:{\"uid\":\"d32|
              00000120  66 61 34 37 64 2d 61 62  35 62 2d 34 63 32 31 2d  |fa47d-ab5b-4c21-|
              00000130  61 31 63 34 2d 65 39 66  33 37 34 63 65 35 35 37  |a1c4-e9f374ce557|
              00000140  35 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |5\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 18:33:04.617131 23 deployment.go:68] Pod "test-deployment-gglgz-6fb4c74686-w9v5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-gglgz-6fb4c74686-w9v5d",
      GenerateName: (string) (len=33) "test-deployment-gglgz-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-7157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e0be9a3-aa73-4df0-945d-2a4086f06d24",
      ResourceVersion: (string) (len=4) "1075",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873599582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-gglgz-6fb4c74686",
          UID: (types.UID) (len=36) "49fe2ec0-e908-4646-8907-a18b0bee3cd1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 34 39 66 65 32 65 63  30 2d 65 39 30 38 2d 34  |"49fe2ec0-e908-4|
              000000a0  36 34 36 2d 38 39 30 37  2d 61 31 38 62 30 62 65  |646-8907-a18b0be|
              000000b0  65 33 63 64 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |e3cd1\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 39  5c 22 7d 22 3a 7b 22 2e  |.244.1.9\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjp8v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjp8v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599583,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873599582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=10) "10.244.1.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873599582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873599582,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2e7aa04f9030e2a1e46b512176d2b80021f48801fc976182fc68009f8701472f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jjp8v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 18:33:04.618908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7157" for this suite. @ 01/27/25 18:33:04.621
• [2.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/27/25 18:33:04.626
  I0127 18:33:04.626527 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 18:33:04.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:04.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:04.642
  STEP: create deployment with httpd image @ 01/27/25 18:33:04.645
  I0127 18:33:04.645304 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-414 create -f -'
  I0127 18:33:04.742647 23 builder.go:146] stderr: ""
  I0127 18:33:04.742684 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/27/25 18:33:04.742
  I0127 18:33:04.742932 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-414 diff -f -'
  I0127 18:33:04.848970 23 builder.go:135] rc: 1
  I0127 18:33:04.849127 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-414 delete -f -'
  I0127 18:33:04.902556 23 builder.go:146] stderr: ""
  I0127 18:33:04.902592 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0127 18:33:04.902723 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-414" for this suite. @ 01/27/25 18:33:04.906
• [0.284 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/27/25 18:33:04.91
  I0127 18:33:04.910793 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 18:33:04.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:04.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:04.921
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 18:33:04.924
  STEP: Saw pod success @ 01/27/25 18:33:08.941
  I0127 18:33:08.943275 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-cec82db4-639f-4263-955a-123ae8b481cc container client-container: <nil>
  STEP: delete the pod @ 01/27/25 18:33:08.947
  I0127 18:33:08.956334 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1345" for this suite. @ 01/27/25 18:33:08.958
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/27/25 18:33:08.961
  I0127 18:33:08.961957 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 18:33:08.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:08.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:08.972
  STEP: Setting up server cert @ 01/27/25 18:33:09.072
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 18:33:09.847
  STEP: Deploying the webhook pod @ 01/27/25 18:33:09.853
  STEP: Wait for the deployment to be ready @ 01/27/25 18:33:09.86
  I0127 18:33:09.865453 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 18:33:11.872
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 18:33:11.882
  I0127 18:33:12.883238 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0127 18:33:12.887568 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-585-crds.webhook.example.com via the AdmissionRegistration API @ 01/27/25 18:33:13.395
  STEP: Creating a custom resource while v1 is storage version @ 01/27/25 18:33:13.409
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/27/25 18:33:15.441
  STEP: Patching the custom resource while v2 is storage version @ 01/27/25 18:33:15.454
  I0127 18:33:16.040066 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3002" for this suite. @ 01/27/25 18:33:16.042
  STEP: Destroying namespace "webhook-markers-6660" for this suite. @ 01/27/25 18:33:16.046
• [7.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/27/25 18:33:16.05
  I0127 18:33:16.050620 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 18:33:16.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:16.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:16.065
  I0127 18:33:16.068150 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/27/25 18:33:17.385
  I0127 18:33:17.385876 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-1871 --namespace=crd-publish-openapi-1871 create -f -'
  I0127 18:33:19.462731 23 builder.go:146] stderr: ""
  I0127 18:33:19.462773 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9817-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0127 18:33:19.462937 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-1871 --namespace=crd-publish-openapi-1871 delete e2e-test-crd-publish-openapi-9817-crds test-cr'
  I0127 18:33:19.521976 23 builder.go:146] stderr: ""
  I0127 18:33:19.522018 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9817-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0127 18:33:19.522076 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-1871 --namespace=crd-publish-openapi-1871 apply -f -'
  I0127 18:33:19.582988 23 builder.go:146] stderr: ""
  I0127 18:33:19.583090 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9817-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0127 18:33:19.583145 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-1871 --namespace=crd-publish-openapi-1871 delete e2e-test-crd-publish-openapi-9817-crds test-cr'
  I0127 18:33:19.638468 23 builder.go:146] stderr: ""
  I0127 18:33:19.638509 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9817-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/27/25 18:33:19.638
  I0127 18:33:19.638620 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-1871 explain e2e-test-crd-publish-openapi-9817-crds'
  I0127 18:33:19.691165 23 builder.go:146] stderr: ""
  I0127 18:33:19.691230 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9817-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0127 18:33:20.906998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1871" for this suite. @ 01/27/25 18:33:20.912
• [4.866 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/27/25 18:33:20.916
  I0127 18:33:20.916725 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 18:33:20.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:20.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:20.93
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/27/25 18:33:20.932
  STEP: Saw pod success @ 01/27/25 18:33:24.945
  I0127 18:33:24.947641 23 output.go:207] Trying to get logs from node worker-0 pod pod-cfcb5b1f-3a38-4ce9-98cd-0441e2946d50 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 18:33:24.952
  I0127 18:33:24.963290 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8566" for this suite. @ 01/27/25 18:33:24.965
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/27/25 18:33:24.969
  I0127 18:33:24.969307 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 18:33:24.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:24.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:24.98
  STEP: Setting up server cert @ 01/27/25 18:33:25.078
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 18:33:25.292
  STEP: Deploying the webhook pod @ 01/27/25 18:33:25.296
  STEP: Wait for the deployment to be ready @ 01/27/25 18:33:25.306
  I0127 18:33:25.313361 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 18:33:27.32
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 18:33:27.332
  I0127 18:33:28.333692 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/27/25 18:33:28.338
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/27/25 18:33:28.339
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/27/25 18:33:28.339
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/27/25 18:33:28.339
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/27/25 18:33:28.34
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/27/25 18:33:28.34
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/27/25 18:33:28.341
  I0127 18:33:28.366774 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4356" for this suite. @ 01/27/25 18:33:28.368
  STEP: Destroying namespace "webhook-markers-4365" for this suite. @ 01/27/25 18:33:28.373
• [3.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720
  STEP: Creating a kubernetes client @ 01/27/25 18:33:28.38
  I0127 18:33:28.380443 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 18:33:28.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:28.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:28.392
  I0127 18:33:28.394726 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1576 version'
  I0127 18:33:28.446951 23 builder.go:146] stderr: ""
  I0127 18:33:28.446997 23 builder.go:147] stdout: "Client Version: v1.32.1\nKustomize Version: v5.5.0\nServer Version: v1.32.1+k0s\n"
  I0127 18:33:28.447297 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1576" for this suite. @ 01/27/25 18:33:28.47
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 01/27/25 18:33:28.476
  I0127 18:33:28.476876 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 18:33:28.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:28.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:28.493
  I0127 18:33:28.512071 23 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0127 18:33:28.512101 23 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0127 18:33:28.515547 23 service_accounts.go:282] created pod pod-service-account-mountsa
  I0127 18:33:28.515573 23 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0127 18:33:28.521106 23 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0127 18:33:28.521133 23 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0127 18:33:28.527005 23 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0127 18:33:28.527028 23 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0127 18:33:28.534584 23 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0127 18:33:28.534610 23 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0127 18:33:28.541501 23 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0127 18:33:28.541531 23 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0127 18:33:28.545655 23 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0127 18:33:28.545719 23 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0127 18:33:28.551487 23 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0127 18:33:28.551517 23 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0127 18:33:28.558978 23 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0127 18:33:28.559006 23 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0127 18:33:28.559205 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2755" for this suite. @ 01/27/25 18:33:28.571
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/27/25 18:33:28.577
  I0127 18:33:28.577015 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replicaset @ 01/27/25 18:33:28.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:28.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:28.598
  STEP: Create a Replicaset @ 01/27/25 18:33:28.605
  STEP: Verify that the required pods have come up. @ 01/27/25 18:33:28.61
  I0127 18:33:28.618395 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/27/25 18:33:28.618
  STEP: Getting /status @ 01/27/25 18:33:30.63
  I0127 18:33:30.632947 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/27/25 18:33:30.632
  I0127 18:33:30.639463 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/27/25 18:33:30.639
  I0127 18:33:30.640877 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0127 18:33:30.640978 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.641147 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.641312 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.641351 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8499 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0127 18:33:30.641367 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/27/25 18:33:30.641
  I0127 18:33:30.641404 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0127 18:33:30.645245 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/27/25 18:33:30.645
  I0127 18:33:30.646494 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0127 18:33:30.646617 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.646761 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.646875 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.646937 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8499 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 18:33:30.647097 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0127 18:33:30.647125 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8499 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0127 18:33:30.647140 23 replica_set.go:729] Replicaset test-rs has a patched status
  I0127 18:33:30.647252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8499" for this suite. @ 01/27/25 18:33:30.649
• [2.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/27/25 18:33:30.656
  I0127 18:33:30.656336 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sysctl @ 01/27/25 18:33:30.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:30.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:30.668
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/27/25 18:33:30.67
  I0127 18:33:30.674644 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1123" for this suite. @ 01/27/25 18:33:30.75
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/27/25 18:33:30.754
  I0127 18:33:30.754472 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 18:33:30.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:30.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:30.77
  STEP: set up a multi version CRD @ 01/27/25 18:33:30.772
  I0127 18:33:30.772705 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: mark a version not serverd @ 01/27/25 18:33:33.942
  STEP: check the unserved version gets removed @ 01/27/25 18:33:33.957
  STEP: check the other version is not changed @ 01/27/25 18:33:34.666
  I0127 18:33:37.155670 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9943" for this suite. @ 01/27/25 18:33:37.161
• [6.413 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/27/25 18:33:37.167
  I0127 18:33:37.167769 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 18:33:37.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:37.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:37.179
  STEP: Creating a ResourceQuota @ 01/27/25 18:33:37.181
  STEP: Getting a ResourceQuota @ 01/27/25 18:33:37.184
  STEP: Updating a ResourceQuota @ 01/27/25 18:33:37.186
  STEP: Verifying a ResourceQuota was modified @ 01/27/25 18:33:37.193
  STEP: Deleting a ResourceQuota @ 01/27/25 18:33:37.194
  STEP: Verifying the deleted ResourceQuota @ 01/27/25 18:33:37.199
  I0127 18:33:37.201529 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4373" for this suite. @ 01/27/25 18:33:37.262
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 01/27/25 18:33:37.268
  I0127 18:33:37.268456 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption @ 01/27/25 18:33:37.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:33:37.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:33:37.279
  I0127 18:33:37.295059 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0127 18:34:37.299152 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/27/25 18:34:37.301
  I0127 18:34:37.301371 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/27/25 18:34:37.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:34:37.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:34:37.315
  I0127 18:34:37.325383 23 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0127 18:34:37.327218 23 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 01/27/25 18:34:37.354
  STEP: Removing a custom resource @ 01/27/25 18:34:37.358
  I0127 18:34:37.363316 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3464" for this suite. @ 01/27/25 18:34:37.399
  I0127 18:34:37.403445 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2250" for this suite. @ 01/27/25 18:34:37.5
• [60.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/27/25 18:34:37.504
  I0127 18:34:37.504861 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 18:34:37.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:34:37.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:34:37.518
  STEP: Setting up server cert @ 01/27/25 18:34:37.616
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 18:34:38.122
  STEP: Deploying the webhook pod @ 01/27/25 18:34:38.13
  STEP: Wait for the deployment to be ready @ 01/27/25 18:34:38.139
  I0127 18:34:38.145530 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 18:34:40.151
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 18:34:40.164
  I0127 18:34:41.164447 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/27/25 18:34:41.168
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/27/25 18:34:41.168
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/27/25 18:34:41.185
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/27/25 18:34:42.193
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/27/25 18:34:42.193
  STEP: Having no error when timeout is longer than webhook latency @ 01/27/25 18:34:43.215
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/27/25 18:34:43.215
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/27/25 18:34:48.244
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/27/25 18:34:48.244
  I0127 18:34:53.313106 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4388" for this suite. @ 01/27/25 18:34:53.397
  STEP: Destroying namespace "webhook-markers-9882" for this suite. @ 01/27/25 18:34:53.402
• [15.901 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/27/25 18:34:53.406
  I0127 18:34:53.406342 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/27/25 18:34:53.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:34:53.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:34:53.42
  STEP: creating a target pod @ 01/27/25 18:34:53.422
  STEP: adding an ephemeral container @ 01/27/25 18:34:55.436
  STEP: checking pod container endpoints @ 01/27/25 18:34:57.45
  I0127 18:34:57.450238 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3473 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 18:34:57.450255 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 18:34:57.450303 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3473/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0127 18:34:57.498128 23 exec_util.go:108] Exec stderr: ""
  I0127 18:34:57.508815 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3473" for this suite. @ 01/27/25 18:34:57.511
• [4.109 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/27/25 18:34:57.515
  I0127 18:34:57.515564 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename subpath @ 01/27/25 18:34:57.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:34:57.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:34:57.526
  STEP: Setting up data @ 01/27/25 18:34:57.528
  STEP: Creating pod pod-subpath-test-secret-fdxk @ 01/27/25 18:34:57.534
  STEP: Creating a pod to test atomic-volume-subpath @ 01/27/25 18:34:57.534
  STEP: Saw pod success @ 01/27/25 18:35:21.583
  I0127 18:35:21.585437 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-secret-fdxk container test-container-subpath-secret-fdxk: <nil>
  STEP: delete the pod @ 01/27/25 18:35:21.598
  STEP: Deleting pod pod-subpath-test-secret-fdxk @ 01/27/25 18:35:21.609
  I0127 18:35:21.609709 23 delete.go:62] Deleting pod "pod-subpath-test-secret-fdxk" in namespace "subpath-7897"
  I0127 18:35:21.611460 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7897" for this suite. @ 01/27/25 18:35:21.613
• [24.103 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/27/25 18:35:21.619
  I0127 18:35:21.619312 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 18:35:21.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:21.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:21.63
  STEP: create the rc @ 01/27/25 18:35:21.714
  W0127 18:35:21.720535      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/27/25 18:35:27.724
  STEP: wait for the rc to be deleted @ 01/27/25 18:35:27.731
  I0127 18:35:28.739940 23 garbage_collector.go:670] 80 pods remaining
  I0127 18:35:28.739974 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0127 18:35:28.739985 23 garbage_collector.go:678] 
  I0127 18:35:29.742632 23 garbage_collector.go:670] 71 pods remaining
  I0127 18:35:29.742672 23 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0127 18:35:29.742684 23 garbage_collector.go:678] 
  I0127 18:35:30.739052 23 garbage_collector.go:670] 60 pods remaining
  I0127 18:35:30.739084 23 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0127 18:35:30.739095 23 garbage_collector.go:678] 
  I0127 18:35:31.745508 23 garbage_collector.go:670] 40 pods remaining
  I0127 18:35:31.745548 23 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0127 18:35:31.745561 23 garbage_collector.go:678] 
  I0127 18:35:32.744202 23 garbage_collector.go:670] 31 pods remaining
  I0127 18:35:32.745935 23 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0127 18:35:32.746758 23 garbage_collector.go:678] 
  I0127 18:35:33.741869 23 garbage_collector.go:670] 20 pods remaining
  I0127 18:35:33.741905 23 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0127 18:35:33.741917 23 garbage_collector.go:678] 
  STEP: Gathering metrics @ 01/27/25 18:35:34.736
  W0127 18:35:34.740866      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0127 18:35:34.741255 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0127 18:35:34.741845 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6767" for this suite. @ 01/27/25 18:35:34.744
• [13.129 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 01/27/25 18:35:34.748
  I0127 18:35:34.748514 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 18:35:34.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:34.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:34.767
  STEP: Creating a pod to test downward api env vars @ 01/27/25 18:35:34.77
  STEP: Saw pod success @ 01/27/25 18:35:36.786
  I0127 18:35:36.788268 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-3d6b1423-efc8-4faf-9ca9-77c02fdee0d8 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 18:35:36.793
  I0127 18:35:36.804166 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5585" for this suite. @ 01/27/25 18:35:36.806
• [2.062 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 01/27/25 18:35:36.81
  I0127 18:35:36.810378 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename containers @ 01/27/25 18:35:36.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:36.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:36.821
  STEP: Creating a pod to test override arguments @ 01/27/25 18:35:36.823
  STEP: Saw pod success @ 01/27/25 18:35:38.834
  I0127 18:35:38.836174 23 output.go:207] Trying to get logs from node worker-0 pod client-containers-e7d7308a-78ac-4d55-b1da-08fe8f36996f container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 18:35:38.84
  I0127 18:35:38.851385 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2017" for this suite. @ 01/27/25 18:35:38.853
• [2.047 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/27/25 18:35:38.857
  I0127 18:35:38.857659 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 18:35:38.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:38.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:38.871
  STEP: creating service in namespace services-5005 @ 01/27/25 18:35:38.874
  STEP: creating service affinity-clusterip-transition in namespace services-5005 @ 01/27/25 18:35:38.874
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5005 @ 01/27/25 18:35:38.883
  I0127 18:35:38.890744      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5005, replica count: 3
  I0127 18:35:41.943103      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 18:35:41.946932 23 resource.go:361] Creating new exec pod
  I0127 18:35:44.955644 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5005 exec execpod-affinitybb2nw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0127 18:35:45.056305 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.101.38.151) 80 port [tcp/http] succeeded!\n"
  I0127 18:35:45.056344 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 18:35:45.056432 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5005 exec execpod-affinitybb2nw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.38.151 80'
  I0127 18:35:45.149800 23 builder.go:146] stderr: "+ + nc -vecho -t -w hostName 2\n 10.101.38.151 80\nConnection to 10.101.38.151 80 port [tcp/http] succeeded!\n"
  I0127 18:35:45.149856 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 18:35:45.157870 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5005 exec execpod-affinitybb2nw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.38.151:80/ ; done'
  I0127 18:35:45.321126 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n"
  I0127 18:35:45.321179 23 builder.go:147] stdout: "\naffinity-clusterip-transition-sbnjg\naffinity-clusterip-transition-sbnjg\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-fr7m5\naffinity-clusterip-transition-fr7m5\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-fr7m5\naffinity-clusterip-transition-fr7m5\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-sbnjg\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-fr7m5"
  I0127 18:35:45.321193 23 service.go:242] Received response from host: affinity-clusterip-transition-sbnjg
  I0127 18:35:45.321203 23 service.go:242] Received response from host: affinity-clusterip-transition-sbnjg
  I0127 18:35:45.321216 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321227 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321271 23 service.go:242] Received response from host: affinity-clusterip-transition-fr7m5
  I0127 18:35:45.321283 23 service.go:242] Received response from host: affinity-clusterip-transition-fr7m5
  I0127 18:35:45.321295 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321306 23 service.go:242] Received response from host: affinity-clusterip-transition-fr7m5
  I0127 18:35:45.321316 23 service.go:242] Received response from host: affinity-clusterip-transition-fr7m5
  I0127 18:35:45.321332 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321343 23 service.go:242] Received response from host: affinity-clusterip-transition-sbnjg
  I0127 18:35:45.321360 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321373 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321387 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321399 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.321414 23 service.go:242] Received response from host: affinity-clusterip-transition-fr7m5
  I0127 18:35:45.327463 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5005 exec execpod-affinitybb2nw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.101.38.151:80/ ; done'
  I0127 18:35:45.494064 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.101.38.151:80/\n"
  I0127 18:35:45.494234 23 builder.go:147] stdout: "\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m\naffinity-clusterip-transition-h9g6m"
  I0127 18:35:45.494257 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494271 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494283 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494295 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494311 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494333 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494347 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494360 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494372 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494385 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494398 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494413 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494426 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494445 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494459 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494471 23 service.go:242] Received response from host: affinity-clusterip-transition-h9g6m
  I0127 18:35:45.494547 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5005, will wait for the garbage collector to delete the pods @ 01/27/25 18:35:45.503
  I0127 18:35:45.560199 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 4.249567ms
  I0127 18:35:45.660574 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.37137ms
  I0127 18:35:48.774513 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5005" for this suite. @ 01/27/25 18:35:48.776
• [9.923 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/27/25 18:35:48.781
  I0127 18:35:48.781173 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 18:35:48.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:48.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:48.791
  STEP: Creating secret with name secret-test-5a2eee11-68c7-4155-9320-5deab5d78b46 @ 01/27/25 18:35:48.793
  STEP: Creating a pod to test consume secrets @ 01/27/25 18:35:48.796
  STEP: Saw pod success @ 01/27/25 18:35:50.81
  I0127 18:35:50.812458 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-0a3ed122-8ef6-455f-83d5-228e86f1f55b container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 18:35:50.817
  I0127 18:35:50.830948 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9223" for this suite. @ 01/27/25 18:35:50.833
• [2.056 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/27/25 18:35:50.837
  I0127 18:35:50.837292 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename ingress @ 01/27/25 18:35:50.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:50.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:50.848
  STEP: getting /apis @ 01/27/25 18:35:50.85
  STEP: getting /apis/networking.k8s.io @ 01/27/25 18:35:50.854
  STEP: getting /apis/networking.k8s.iov1 @ 01/27/25 18:35:50.855
  STEP: creating @ 01/27/25 18:35:50.856
  STEP: getting @ 01/27/25 18:35:50.865
  STEP: listing @ 01/27/25 18:35:50.866
  STEP: watching @ 01/27/25 18:35:50.868
  I0127 18:35:50.868408 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/27/25 18:35:50.869
  STEP: cluster-wide watching @ 01/27/25 18:35:50.87
  I0127 18:35:50.870628 23 ingress.go:198] starting watch
  STEP: patching @ 01/27/25 18:35:50.871
  STEP: updating @ 01/27/25 18:35:50.876
  I0127 18:35:50.881322 23 ingress.go:221] waiting for watch events with expected annotations
  I0127 18:35:50.881359 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/27/25 18:35:50.881
  STEP: updating /status @ 01/27/25 18:35:50.885
  STEP: get /status @ 01/27/25 18:35:50.889
  STEP: deleting @ 01/27/25 18:35:50.891
  STEP: deleting a collection @ 01/27/25 18:35:50.897
  I0127 18:35:50.907192 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4175" for this suite. @ 01/27/25 18:35:50.935
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/27/25 18:35:50.939
  I0127 18:35:50.939679 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-webhook @ 01/27/25 18:35:50.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:50.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:50.95
  STEP: Setting up server cert @ 01/27/25 18:35:50.952
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/27/25 18:35:51.388
  STEP: Deploying the custom resource conversion webhook pod @ 01/27/25 18:35:51.394
  STEP: Wait for the deployment to be ready @ 01/27/25 18:35:51.405
  I0127 18:35:51.409182 23 deployment.go:223] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/27/25 18:35:53.416
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 18:35:53.426
  I0127 18:35:54.426659 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0127 18:35:54.431428 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Creating a v1 custom resource @ 01/27/25 18:35:56.981
  STEP: Create a v2 custom resource @ 01/27/25 18:35:56.995
  STEP: List CRs in v1 @ 01/27/25 18:35:57.019
  STEP: List CRs in v2 @ 01/27/25 18:35:57.021
  I0127 18:35:57.567461 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1455" for this suite. @ 01/27/25 18:35:57.569
• [6.635 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/27/25 18:35:57.574
  I0127 18:35:57.575010 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename endpointslice @ 01/27/25 18:35:57.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:57.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:57.589
  I0127 18:35:57.596734 23 endpointslice.go:1045] Endpoints addresses: [10.0.51.177] , ports: [6443]
  I0127 18:35:57.596767 23 endpointslice.go:1075] EndpointSlices addresses: [10.0.51.177] , ports: [6443]
  I0127 18:35:57.596874 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7485" for this suite. @ 01/27/25 18:35:57.671
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/27/25 18:35:57.675
  I0127 18:35:57.675419 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 18:35:57.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:35:57.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:35:57.691
  STEP: Counting existing ResourceQuota @ 01/27/25 18:35:57.693
  STEP: Creating a ResourceQuota @ 01/27/25 18:36:02.785
  STEP: Ensuring resource quota status is calculated @ 01/27/25 18:36:02.791
  STEP: Creating a ReplicaSet @ 01/27/25 18:36:04.795
  STEP: Ensuring resource quota status captures replicaset creation @ 01/27/25 18:36:04.807
  STEP: Deleting a ReplicaSet @ 01/27/25 18:36:06.81
  STEP: Ensuring resource quota status released usage @ 01/27/25 18:36:06.814
  I0127 18:36:08.816956 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6967" for this suite. @ 01/27/25 18:36:08.819
• [11.148 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/27/25 18:36:08.823
  I0127 18:36:08.823410 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 18:36:08.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:36:08.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:36:08.837
  STEP: creating service multi-endpoint-test in namespace services-2066 @ 01/27/25 18:36:08.839
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2066 to expose endpoints map[] @ 01/27/25 18:36:08.849
  I0127 18:36:08.851183 23 service.go:4428] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0127 18:36:09.855993 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2066 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2066 @ 01/27/25 18:36:09.856
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2066 to expose endpoints map[pod1:[100]] @ 01/27/25 18:36:11.867
  I0127 18:36:11.872932 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2066 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2066 @ 01/27/25 18:36:11.872
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2066 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/27/25 18:36:13.885
  I0127 18:36:13.983710 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2066 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/27/25 18:36:13.983
  I0127 18:36:13.983777 23 resource.go:361] Creating new exec pod
  I0127 18:36:16.992931 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-2066 exec execpodzfth4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0127 18:36:17.091996 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.98.67.58) 80 port [tcp/http] succeeded!\n"
  I0127 18:36:17.092073 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 18:36:17.092154 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-2066 exec execpodzfth4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.67.58 80'
  I0127 18:36:17.184286 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.67.58 80\nConnection to 10.98.67.58 80 port [tcp/http] succeeded!\n"
  I0127 18:36:17.184339 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 18:36:17.184404 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-2066 exec execpodzfth4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0127 18:36:17.284714 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.98.67.58) 81 port [tcp/*] succeeded!\n"
  I0127 18:36:17.284786 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 18:36:17.284887 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-2066 exec execpodzfth4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.67.58 81'
  I0127 18:36:17.378442 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.67.58 81\nConnection to 10.98.67.58 81 port [tcp/*] succeeded!\n"
  I0127 18:36:17.378494 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2066 @ 01/27/25 18:36:17.378
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2066 to expose endpoints map[pod2:[101]] @ 01/27/25 18:36:17.388
  I0127 18:36:17.398342 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2066 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2066 @ 01/27/25 18:36:17.398
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2066 to expose endpoints map[] @ 01/27/25 18:36:17.41
  I0127 18:36:17.415304 23 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-2066 exposes endpoints map[]
  I0127 18:36:17.446941 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2066" for this suite. @ 01/27/25 18:36:17.449
• [8.636 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/27/25 18:36:17.459
  I0127 18:36:17.459172 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 18:36:17.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:36:17.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:36:17.474
  STEP: create the deployment @ 01/27/25 18:36:17.477
  W0127 18:36:17.482682      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/27/25 18:36:17.482
  STEP: delete the deployment @ 01/27/25 18:36:17.986
  STEP: wait for all rs to be garbage collected @ 01/27/25 18:36:17.991
  STEP: expected 0 pods, got 2 pods @ 01/27/25 18:36:17.999
  STEP: Gathering metrics @ 01/27/25 18:36:18.499
  W0127 18:36:18.503406      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0127 18:36:18.503449 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0127 18:36:18.503986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1095" for this suite. @ 01/27/25 18:36:18.507
• [1.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/27/25 18:36:18.514
  I0127 18:36:18.514443 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 18:36:18.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:36:18.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:36:18.525
  STEP: Creating pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582 @ 01/27/25 18:36:18.527
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 18:36:20.539
  I0127 18:36:20.541941 23 container_probe.go:1749] Initial restart count of pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 is 0
  I0127 18:36:20.544095 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:22.547393 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:24.551357 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:26.553797 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:28.556625 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:30.560005 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:32.562821 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:34.566291 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:36.569401 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:38.572520 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:40.575559 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:42.579250 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:44.582566 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:46.586413 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:48.588866 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:50.592395 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:52.596027 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:54.599278 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:56.602670 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:36:58.606017 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:00.609409 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:02.612335 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:04.616087 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:06.619489 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:08.621945 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:10.624491 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:12.628143 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:14.631594 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:16.635582 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:18.637922 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:20.641424 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:22.644191 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:24.647543 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:26.651168 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:28.654260 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:30.657867 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:32.661901 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:34.665328 23 container_probe.go:1759] Get pod test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 in namespace container-probe-2582
  I0127 18:37:34.665366 23 container_probe.go:1763] Restart count of pod container-probe-2582/test-grpc-d9048e34-96be-41e0-ad8d-7008cc5eae83 is now 1 (1m14.123387976s elapsed)
  STEP: deleting the pod @ 01/27/25 18:37:34.665
  I0127 18:37:34.674231 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2582" for this suite. @ 01/27/25 18:37:34.676
• [76.167 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 01/27/25 18:37:34.681
  I0127 18:37:34.681763 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 18:37:34.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:37:34.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:37:34.692
  STEP: Creating a test headless service @ 01/27/25 18:37:34.694
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local;sleep 1; done
   @ 01/27/25 18:37:34.699
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7103.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local;sleep 1; done
   @ 01/27/25 18:37:34.699
  STEP: creating a pod to probe DNS @ 01/27/25 18:37:34.699
  STEP: submitting the pod to kubernetes @ 01/27/25 18:37:34.699
  STEP: retrieving the pod @ 01/27/25 18:37:40.72
  STEP: looking for the results for each expected name from probers @ 01/27/25 18:37:40.722
  I0127 18:37:40.727349 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.730186 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.732999 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.735850 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.738553 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.741234 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.743836 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.746224 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:40.746250 23 dns_common.go:506] Lookups using dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local]

  I0127 18:37:40.756666 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 18:37:40.760412 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 18:37:40.764047 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 18:37:45.729344 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.732141 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.734839 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.737393 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.739884 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.742359 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.744780 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.747180 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:45.747210 23 dns_common.go:506] Lookups using dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local]

  I0127 18:37:45.751611 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 18:37:45.755367 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 18:37:45.758930 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 18:37:50.728720 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.731483 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.734485 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.737009 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.739458 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.741912 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.744393 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.746836 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:50.746862 23 dns_common.go:506] Lookups using dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local]

  I0127 18:37:50.750968 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 18:37:50.754586 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 18:37:50.758076 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 18:37:55.727756 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.730840 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.734025 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.736696 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.739241 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.741741 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.744209 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.746702 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:37:55.746725 23 dns_common.go:506] Lookups using dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local]

  I0127 18:37:55.750629 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 18:37:55.754329 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 18:37:55.758014 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 18:38:00.729233 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.732114 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.734767 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.737687 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.740235 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.742706 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.745288 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.747709 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local from pod dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21: the server could not find the requested resource (get pods dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21)
  I0127 18:38:00.747737 23 dns_common.go:506] Lookups using dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local agnhost_udp@dns-test-service-2.dns-7103.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7103.svc.cluster.local jessie_udp@dns-test-service-2.dns-7103.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7103.svc.cluster.local]

  I0127 18:38:00.751890 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 18:38:00.755565 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 18:38:00.759460 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 18:38:05.744800 23 dns_common.go:546] DNS probes using dns-7103/dns-test-b71a8b79-8732-43dc-a08a-937895ce9c21 succeeded

  STEP: deleting the pod @ 01/27/25 18:38:05.744
  STEP: deleting the test headless service @ 01/27/25 18:38:05.754
  I0127 18:38:05.765322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7103" for this suite. @ 01/27/25 18:38:05.767
• [31.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/27/25 18:38:05.772
  I0127 18:38:05.772820 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename namespaces @ 01/27/25 18:38:05.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:38:05.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:38:05.786
  STEP: Updating Namespace "namespaces-9971" @ 01/27/25 18:38:05.788
  I0127 18:38:05.793528 23 namespace.go:389] Namespace "namespaces-9971" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"73e89e7e-9885-4051-b352-e5204bed17d9", "kubernetes.io/metadata.name":"namespaces-9971", "namespaces-9971":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0127 18:38:05.793657 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9971" for this suite. @ 01/27/25 18:38:05.868
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 01/27/25 18:38:05.873
  I0127 18:38:05.873749 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 18:38:05.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:38:05.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:38:05.887
  STEP: Creating ServiceAccount "e2e-sa-g5jsq"  @ 01/27/25 18:38:05.889
  I0127 18:38:05.892605 23 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-g5jsq"  @ 01/27/25 18:38:05.892
  I0127 18:38:05.897408 23 service_accounts.go:868] AutomountServiceAccountToken: true
  I0127 18:38:05.897521 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7802" for this suite. @ 01/27/25 18:38:05.969
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/27/25 18:38:05.974
  I0127 18:38:05.974036 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename runtimeclass @ 01/27/25 18:38:05.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:38:05.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:38:05.988
  STEP: getting /apis @ 01/27/25 18:38:05.99
  STEP: getting /apis/node.k8s.io @ 01/27/25 18:38:05.993
  STEP: getting /apis/node.k8s.io/v1 @ 01/27/25 18:38:05.994
  STEP: creating @ 01/27/25 18:38:05.995
  STEP: watching @ 01/27/25 18:38:06.01
  I0127 18:38:06.010454 23 runtimeclass.go:275] starting watch
  STEP: getting @ 01/27/25 18:38:06.015
  STEP: listing @ 01/27/25 18:38:06.017
  STEP: patching @ 01/27/25 18:38:06.018
  STEP: updating @ 01/27/25 18:38:06.021
  I0127 18:38:06.028124 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/27/25 18:38:06.028
  STEP: deleting a collection @ 01/27/25 18:38:06.034
  I0127 18:38:06.042556 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7701" for this suite. @ 01/27/25 18:38:06.069
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/27/25 18:38:06.073
  I0127 18:38:06.073584 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename events @ 01/27/25 18:38:06.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:38:06.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:38:06.088
  STEP: creating a test event @ 01/27/25 18:38:06.09
  STEP: listing all events in all namespaces @ 01/27/25 18:38:06.093
  STEP: patching the test event @ 01/27/25 18:38:06.097
  STEP: fetching the test event @ 01/27/25 18:38:06.103
  STEP: updating the test event @ 01/27/25 18:38:06.105
  STEP: getting the test event @ 01/27/25 18:38:06.11
  STEP: deleting the test event @ 01/27/25 18:38:06.114
  STEP: listing all events in all namespaces @ 01/27/25 18:38:06.118
  I0127 18:38:06.122584 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8901" for this suite. @ 01/27/25 18:38:06.169
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/27/25 18:38:06.174
  I0127 18:38:06.174425 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 18:38:06.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:38:06.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:38:06.186
  STEP: Creating pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314 @ 01/27/25 18:38:06.189
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 18:38:08.199
  I0127 18:38:08.201185 23 container_probe.go:1749] Initial restart count of pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d is 0
  I0127 18:38:08.202793 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:10.206235 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:12.210086 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:14.213584 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:16.217169 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:18.219879 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:20.222627 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:22.226300 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:24.229597 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:26.233652 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:28.236279 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:30.239640 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:32.243186 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:34.246746 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:36.250363 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:38.253653 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:40.257059 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:42.260459 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:44.263790 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:46.267430 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:48.270779 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:50.273524 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:52.277318 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:54.281207 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:56.284840 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:58.287317 23 container_probe.go:1759] Get pod busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d in namespace container-probe-8314
  I0127 18:38:58.287355 23 container_probe.go:1763] Restart count of pod container-probe-8314/busybox-233d3724-0665-4a71-b3e7-637ec2d59d0d is now 1 (50.086139706s elapsed)
  STEP: deleting the pod @ 01/27/25 18:38:58.287
  I0127 18:38:58.297861 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8314" for this suite. @ 01/27/25 18:38:58.3
• [52.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/27/25 18:38:58.303
  I0127 18:38:58.303921 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename runtimeclass @ 01/27/25 18:38:58.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:38:58.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:38:58.321
  I0127 18:39:00.343125 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1013" for this suite. @ 01/27/25 18:39:00.345
• [2.047 seconds]
------------------------------
S
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 01/27/25 18:39:00.351
  I0127 18:39:00.351219 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename volumeattachment @ 01/27/25 18:39:00.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:39:00.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:39:00.363
  STEP: Create VolumeAttachment "va-e2e-q9wp5" on node "worker-0" @ 01/27/25 18:39:00.445
  STEP: Get VolumeAttachment "va-e2e-q9wp5" on node "worker-0" @ 01/27/25 18:39:00.449
  STEP: Patch VolumeAttachment "va-e2e-q9wp5" on node "worker-0" @ 01/27/25 18:39:00.452
  STEP: List VolumeAttachments with "va-e2e-q9wp5=patched" label @ 01/27/25 18:39:00.456
  STEP: Delete VolumeAttachment "va-e2e-q9wp5" on node "worker-0" @ 01/27/25 18:39:00.458
  STEP: Confirm deletion of VolumeAttachment "va-e2e-q9wp5" on node "worker-0" @ 01/27/25 18:39:00.461
  STEP: Create VolumeAttachment "va-e2e-9vsm8" on node "worker-1" @ 01/27/25 18:39:00.548
  STEP: Update the VolumeAttachment "va-e2e-9vsm8" on node "worker-1" with label "va-e2e=updated" @ 01/27/25 18:39:00.552
  STEP: Create VolumeAttachment "va-e2e-jn58k" on node "worker-0" @ 01/27/25 18:39:00.647
  STEP: Update the VolumeAttachment "va-e2e-jn58k" on node "worker-0" with label "va-e2e=updated" @ 01/27/25 18:39:00.651
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/27/25 18:39:00.657
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/27/25 18:39:00.664
  I0127 18:39:00.665840 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-555" for this suite. @ 01/27/25 18:39:00.747
• [0.400 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/27/25 18:39:00.751
  I0127 18:39:00.751512 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 18:39:00.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:39:00.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:39:00.762
  STEP: Creating configMap with name configmap-test-volume-92ba1ded-c8a1-411d-9740-c2e33a26154f @ 01/27/25 18:39:00.764
  STEP: Creating a pod to test consume configMaps @ 01/27/25 18:39:00.767
  STEP: Saw pod success @ 01/27/25 18:39:04.781
  I0127 18:39:04.783602 23 output.go:207] Trying to get logs from node worker-1 pod pod-configmaps-e5ce05f6-b28a-4fc1-b60d-3ff0e767eb1a container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 18:39:04.793
  I0127 18:39:04.802992 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4367" for this suite. @ 01/27/25 18:39:04.805
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/27/25 18:39:04.809
  I0127 18:39:04.809107 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 18:39:04.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:39:04.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:39:04.825
  I0127 18:39:04.911516 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0127 18:39:04.914948 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0127 18:39:05.008642 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 18:39:05.008681 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 18:39:05.937545 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 18:39:05.937581 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 18:39:06.920808 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 18:39:06.920843 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0127 18:39:06.920857 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0127 18:39:06.928587 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0127 18:39:07.935803 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0127 18:39:07.943222 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0127 18:39:07.943255 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0127 18:39:10.946843 23 daemon_set.go:1198] Pod daemon-set-z5lwq is not available
  STEP: Deleting DaemonSet "daemon-set" @ 01/27/25 18:39:10.953
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8086, will wait for the garbage collector to delete the pods @ 01/27/25 18:39:10.953
  I0127 18:39:11.009665 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.391462ms
  I0127 18:39:11.110234 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.548269ms
  I0127 18:39:12.212449 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 18:39:12.212488 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0127 18:39:12.214546 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4773"},"items":null}

  I0127 18:39:12.216437 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4773"},"items":null}

  I0127 18:39:12.222286 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8086" for this suite. @ 01/27/25 18:39:12.224
• [7.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/27/25 18:39:12.228
  I0127 18:39:12.228174 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 18:39:12.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:39:12.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:39:12.243
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 18:39:12.245
  STEP: Saw pod success @ 01/27/25 18:39:14.256
  I0127 18:39:14.258204 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-19c4b71e-849d-42ad-91c1-e2851926b8c2 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 18:39:14.264
  I0127 18:39:14.274886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2211" for this suite. @ 01/27/25 18:39:14.277
• [2.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/27/25 18:39:14.282
  I0127 18:39:14.282910 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-pred @ 01/27/25 18:39:14.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:39:14.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:39:14.293
  I0127 18:39:14.296075 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0127 18:39:14.379522 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0127 18:39:14.381567 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0127 18:39:14.384420 23 predicates.go:957] coredns-7d4f7fbd5c-x2hqf from kube-system started at 2025-01-27 18:32:20 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.384445 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 18:39:14.384454 23 predicates.go:957] konnectivity-agent-dtqvz from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.384464 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 18:39:14.384475 23 predicates.go:957] kube-proxy-llfpl from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.384484 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 18:39:14.384495 23 predicates.go:957] kube-router-bn8bm from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.384525 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 18:39:14.384536 23 predicates.go:957] metrics-server-7778865875-7v89t from kube-system started at 2025-01-27 18:31:37 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.384546 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0127 18:39:14.384555 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-27 18:31:43 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.384565 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0127 18:39:14.384576 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-6tlkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 18:39:14.384584 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 18:39:14.384590 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0127 18:39:14.384606 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0127 18:39:14.387048 23 predicates.go:957] coredns-7d4f7fbd5c-7v98h from kube-system started at 2025-01-27 18:31:40 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.387068 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 18:39:14.387077 23 predicates.go:957] konnectivity-agent-glhh6 from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.387086 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 18:39:14.387095 23 predicates.go:957] kube-proxy-g28cd from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.387105 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 18:39:14.387115 23 predicates.go:957] kube-router-b745k from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:39:14.387129 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 18:39:14.387140 23 predicates.go:957] sonobuoy-e2e-job-fe498577155e4cf6 from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 18:39:14.387150 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0127 18:39:14.387160 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 18:39:14.387171 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-nchkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 18:39:14.387184 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 18:39:14.387194 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/27/25 18:39:14.387
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.181ea0a91c84a7c4], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 01/27/25 18:39:14.403
  I0127 18:39:15.402946 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7658" for this suite. @ 01/27/25 18:39:15.405
• [1.127 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/27/25 18:39:15.409
  I0127 18:39:15.409520 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 18:39:15.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:39:15.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:39:15.423
  STEP: Creating pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132 @ 01/27/25 18:39:15.425
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 18:39:17.435
  I0127 18:39:17.437459 23 container_probe.go:1749] Initial restart count of pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 is 0
  I0127 18:39:17.439253 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:19.442312 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:21.444764 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:23.448677 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:25.452065 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:27.456207 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:29.459592 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:31.462982 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:33.466258 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:35.469677 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:37.472296 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:39.476730 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:41.480236 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:43.483600 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:45.487162 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:47.490861 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:49.494305 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:51.497816 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:53.501350 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:55.503764 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:57.507534 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:39:59.511031 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:01.514801 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:03.518316 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:05.521369 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:07.525063 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:09.528645 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:11.532128 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:13.535600 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:15.539172 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:17.542839 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:19.546173 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:21.549110 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:23.552590 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:25.556390 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:27.560023 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:29.563242 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:31.566544 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:33.569960 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:35.573372 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:37.577083 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:39.580416 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:41.583836 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:43.587202 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:45.590713 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:47.594290 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:49.597483 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:51.601211 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:53.603717 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:55.606434 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:57.610138 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:40:59.613920 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:01.617331 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:03.620776 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:05.624239 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:07.627939 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:09.631277 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:11.634251 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:13.637542 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:15.640158 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:17.643819 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:19.647111 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:21.650490 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:23.653852 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:25.657295 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:27.660959 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:29.665223 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:31.669041 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:33.671534 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:35.674009 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:37.677689 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:39.681196 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:41.684660 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:43.687310 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:45.689871 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:47.692598 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:49.696378 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:51.699075 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:53.702499 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:55.706374 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:57.709995 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:41:59.713406 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:01.717280 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:03.720688 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:05.724265 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:07.727776 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:09.731314 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:11.734803 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:13.738189 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:15.741164 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:17.744847 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:19.748158 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:21.750954 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:23.754316 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:25.756719 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:27.759591 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:29.763418 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:31.766365 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:33.769598 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:35.772184 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:37.775785 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:39.778188 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:41.781395 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:43.784249 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:45.786676 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:47.790343 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:49.793620 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:51.796622 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:53.799058 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:55.801558 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:57.804309 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:42:59.807667 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:01.811332 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:03.814421 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:05.817893 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:07.821528 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:09.824838 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:11.827331 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:13.829605 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  I0127 18:43:15.833057 23 container_probe.go:1759] Get pod busybox-c7c71a19-f3a6-4867-8166-f43ea5c000e8 in namespace container-probe-9132
  STEP: deleting the pod @ 01/27/25 18:43:17.834
  I0127 18:43:17.841697 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9132" for this suite. @ 01/27/25 18:43:17.845
• [242.441 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 01/27/25 18:43:17.85
  I0127 18:43:17.850273 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 18:43:17.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:43:17.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:43:17.861
  I0127 18:43:17.873563 23 service_accounts.go:647] created pod
  STEP: Saw pod success @ 01/27/25 18:43:19.879
  I0127 18:43:49.880995 23 service_accounts.go:653] polling logs
  I0127 18:43:49.893109 23 service_accounts.go:663] Pod logs: 
  I0127 18:43:18.344110       1 log.go:245] OK: Got token
  I0127 18:43:18.344158       1 log.go:245] validating with in-cluster discovery
  I0127 18:43:18.344343       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0127 18:43:18.344362       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4448:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013650), NotBefore:(*jwt.NumericDate)(0xc000013740), IssuedAt:(*jwt.NumericDate)(0xc000013660), ID:"1bdf0fc1-800f-4837-9e0f-20f9297868f4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4448", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ae32974a-6d0f-475f-8c21-e99083e382a5"}}}
  I0127 18:43:18.352251       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0127 18:43:18.353497       1 log.go:245] OK: Validated signature on JWT
  I0127 18:43:18.353563       1 log.go:245] OK: Got valid claims from token!
  I0127 18:43:18.353626       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4448:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013b7d0), NotBefore:(*jwt.NumericDate)(0xc00013b818), IssuedAt:(*jwt.NumericDate)(0xc00013b7d8), ID:"1bdf0fc1-800f-4837-9e0f-20f9297868f4"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4448", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"ae32974a-6d0f-475f-8c21-e99083e382a5"}}}

  I0127 18:43:49.893167 23 service_accounts.go:667] completed pod
  I0127 18:43:49.896977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4448" for this suite. @ 01/27/25 18:43:49.899
• [32.053 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/27/25 18:43:49.903
  I0127 18:43:49.903081 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 18:43:49.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:43:49.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:43:49.918
  I0127 18:43:49.928424 23 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0127 18:43:54.933273 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/27/25 18:43:54.933
  I0127 18:43:54.933346 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0127 18:43:56.936558 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0127 18:43:56.941874 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0127 18:43:58.946586 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0127 18:43:58.950455 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0127 18:43:58.953665 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0127 18:43:58.961370 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0127 18:43:58.961397 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0127 18:44:00.966319 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0127 18:44:00.970296 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0127 18:44:00.973715 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0127 18:44:00.973779 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 18:44:02.979083 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0127 18:44:02.979149 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 18:44:04.980019 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0127 18:44:04.980102 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 18:44:06.979678 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0127 18:44:06.979740 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 18:44:08.979264 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0127 18:44:08.979327 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 18, 43, 59, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 18, 43, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 18:44:10.978613 23 deployment.go:95] 
  I0127 18:44:10.978658 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I0127 18:44:10.983793 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cbcfddb-c23f-42a7-aa3c-fdad84f7d096",
      ResourceVersion: (string) (len=4) "5623",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873600236,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 18:44:10.987161 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8738a731-c888-4059-b5cc-d92d75794291",
      ResourceVersion: (string) (len=4) "5613",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873600238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5cbcfddb-c23f-42a7-aa3c-fdad84f7d096",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 62 63 66 64  64 62 2d 63 32 33 66 2d  |\"5cbcfddb-c23f-|
              00000120  34 32 61 37 2d 61 61 33  63 2d 66 64 61 64 38 34  |42a7-aa3c-fdad84|
              00000130  66 37 64 30 39 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f7d096\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 18:44:10.988248 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0127 18:44:10.988488 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7bee3bf-beb8-4c8c-a710-be0c9e9fa918",
      ResourceVersion: (string) (len=4) "5622",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873600229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5cbcfddb-c23f-42a7-aa3c-fdad84f7d096",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 63 62 63 66 64 64 62  2d 63 32 33 66 2d 34 32  |5cbcfddb-c23f-42|
              000000c0  61 37 2d 61 61 33 63 2d  66 64 61 64 38 34 66 37  |a7-aa3c-fdad84f7|
              000000d0  64 30 39 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |d096\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 18:44:10.989984 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "591f6ad9-ca9c-48ed-8941-06ae29e7fcb6",
      ResourceVersion: (string) (len=4) "5572",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873600236,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5cbcfddb-c23f-42a7-aa3c-fdad84f7d096",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 62 63 66 64  64 62 2d 63 32 33 66 2d  |\"5cbcfddb-c23f-|
              00000120  34 32 61 37 2d 61 61 33  63 2d 66 64 61 64 38 34  |42a7-aa3c-fdad84|
              00000130  66 37 64 30 39 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f7d096\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 18:44:10.993349 23 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-mjhhr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-mjhhr",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-2404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab18f466-3dbc-468c-b795-5b24511078e0",
      ResourceVersion: (string) (len=4) "5588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873600238,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "8738a731-c888-4059-b5cc-d92d75794291",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600238,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 37  33 38 61 37 33 31 2d 63  |d\":\"8738a731-c|
              00000090  38 38 38 2d 34 30 35 39  2d 62 35 63 63 2d 64 39  |888-4059-b5cc-d9|
              000000a0  32 64 37 35 37 39 34 32  39 31 5c 22 7d 22 3a 7b  |2d75794291\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 37  30 5c 22 7d 22 3a 7b 22  |.244.0.70\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4nqq7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4nqq7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873600239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=11) "10.244.0.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873600239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873600239,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://d7ac25a8592502f1f88db8d3fe1eb8f484ddba3697b49102a8c847a6018ff204",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4nqq7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 18:44:10.995542 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2404" for this suite. @ 01/27/25 18:44:10.997
• [21.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/27/25 18:44:11.004
  I0127 18:44:11.004085 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 18:44:11.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:44:11.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:44:11.015
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/27/25 18:44:11.018
  STEP: Saw pod success @ 01/27/25 18:44:13.03
  I0127 18:44:13.032552 23 output.go:207] Trying to get logs from node worker-0 pod pod-55d0852a-a7ec-4f4c-bdcc-07057a53b8ba container test-container: <nil>
  STEP: delete the pod @ 01/27/25 18:44:13.037
  I0127 18:44:13.048144 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5823" for this suite. @ 01/27/25 18:44:13.05
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/27/25 18:44:13.054
  I0127 18:44:13.054979 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 18:44:13.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:44:13.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:44:13.065
  STEP: create the rc @ 01/27/25 18:44:13.068
  W0127 18:44:13.071639      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/27/25 18:44:18.074
  STEP: wait for all pods to be garbage collected @ 01/27/25 18:44:18.078
  STEP: Gathering metrics @ 01/27/25 18:44:23.082
  W0127 18:44:23.085488      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0127 18:44:23.085525 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0127 18:44:23.085715 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1889" for this suite. @ 01/27/25 18:44:23.087
• [10.039 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/27/25 18:44:23.093
  I0127 18:44:23.093841 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-pred @ 01/27/25 18:44:23.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:44:23.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:44:23.106
  I0127 18:44:23.108908 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0127 18:44:23.191269 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0127 18:44:23.193386 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0127 18:44:23.196304 23 predicates.go:957] coredns-7d4f7fbd5c-x2hqf from kube-system started at 2025-01-27 18:32:20 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.196329 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 18:44:23.196344 23 predicates.go:957] konnectivity-agent-dtqvz from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.196354 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 18:44:23.196365 23 predicates.go:957] kube-proxy-llfpl from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.196374 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 18:44:23.196388 23 predicates.go:957] kube-router-bn8bm from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.196399 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 18:44:23.196412 23 predicates.go:957] metrics-server-7778865875-7v89t from kube-system started at 2025-01-27 18:31:37 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.196422 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0127 18:44:23.196437 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-27 18:31:43 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.196447 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0127 18:44:23.196458 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-6tlkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 18:44:23.196471 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 18:44:23.196482 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0127 18:44:23.196493 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0127 18:44:23.198865 23 predicates.go:957] coredns-7d4f7fbd5c-7v98h from kube-system started at 2025-01-27 18:31:40 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.198889 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 18:44:23.198899 23 predicates.go:957] konnectivity-agent-glhh6 from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.198907 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 18:44:23.198918 23 predicates.go:957] kube-proxy-g28cd from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.198928 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 18:44:23.198938 23 predicates.go:957] kube-router-b745k from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 18:44:23.198949 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 18:44:23.198960 23 predicates.go:957] sonobuoy-e2e-job-fe498577155e4cf6 from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 18:44:23.198988 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0127 18:44:23.198998 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 18:44:23.199011 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-nchkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 18:44:23.199027 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 18:44:23.199052 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/27/25 18:44:23.199
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/27/25 18:44:25.215
  STEP: Trying to apply a random label on the found node. @ 01/27/25 18:44:25.227
  STEP: verifying the node has the label kubernetes.io/e2e-608e6b33-1158-49dc-866b-876eaa7b7b19 95 @ 01/27/25 18:44:25.234
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/27/25 18:44:25.237
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.52.184 on the node which pod4 resides and expect not scheduled @ 01/27/25 18:44:27.25
  STEP: removing the label kubernetes.io/e2e-608e6b33-1158-49dc-866b-876eaa7b7b19 off the node worker-0 @ 01/27/25 18:49:27.256
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-608e6b33-1158-49dc-866b-876eaa7b7b19 @ 01/27/25 18:49:27.265
  I0127 18:49:27.267879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5301" for this suite. @ 01/27/25 18:49:27.27
• [304.180 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/27/25 18:49:27.273
  I0127 18:49:27.273770 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename security-context-test @ 01/27/25 18:49:27.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:49:27.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:49:27.284
  I0127 18:49:31.313123 23 security_context.go:538] Got logs for pod "busybox-privileged-false-25b7dd3e-eac6-4d5a-a2d0-a6b4c4f07488": "ip: RTNETLINK answers: Operation not permitted\n"
  I0127 18:49:31.313272 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5005" for this suite. @ 01/27/25 18:49:31.315
• [4.046 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 01/27/25 18:49:31.319
  I0127 18:49:31.319631 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 18:49:31.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:49:31.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:49:31.33
  STEP: Creating a pod to test downward api env vars @ 01/27/25 18:49:31.332
  STEP: Saw pod success @ 01/27/25 18:49:33.343
  I0127 18:49:33.345357 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-ec6cb80a-eadd-4cb5-ae2f-445b9875f7e6 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 18:49:33.358
  I0127 18:49:33.367542 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4692" for this suite. @ 01/27/25 18:49:33.397
• [2.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/27/25 18:49:33.401
  I0127 18:49:33.401766 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 18:49:33.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:49:33.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:49:33.413
  STEP: Creating secret with name secret-test-cfe3c729-e424-4209-affc-87cc0993d496 @ 01/27/25 18:49:33.415
  STEP: Creating a pod to test consume secrets @ 01/27/25 18:49:33.418
  STEP: Saw pod success @ 01/27/25 18:49:35.428
  I0127 18:49:35.430730 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-e17b14b9-cd39-4b43-95d0-a555e64c7934 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 18:49:35.435
  I0127 18:49:35.444661 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6693" for this suite. @ 01/27/25 18:49:35.447
• [2.049 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/27/25 18:49:35.45
  I0127 18:49:35.450840 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 18:49:35.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:49:35.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:49:35.463
  STEP: Creating pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259 @ 01/27/25 18:49:35.466
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 18:49:37.476
  I0127 18:49:37.479148 23 container_probe.go:1749] Initial restart count of pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b is 0
  I0127 18:49:37.480797 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:39.484208 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:41.488208 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:43.490668 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:45.494102 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:47.497517 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:49.501068 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:51.504607 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:53.507878 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:55.511452 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:57.514904 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:49:59.518267 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:01.521918 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:03.525285 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:05.529206 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:07.533259 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:09.536698 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:11.540345 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:13.543823 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:15.547366 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:17.550762 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:19.554514 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:21.557297 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:23.559760 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:25.562732 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:27.565334 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:29.568519 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:31.572268 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:33.574743 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:35.577612 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:37.580952 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:39.584254 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:41.587801 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:43.590694 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:45.593437 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:47.596868 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:49.600187 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:51.603825 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:53.606449 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:55.609468 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:57.612064 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:50:59.615208 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:01.617957 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:03.621327 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:05.624562 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:07.627003 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:09.630353 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:11.633066 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:13.636439 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:15.639872 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:17.643777 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:19.647290 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:21.650801 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:23.653218 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:25.656689 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:27.660148 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:29.664151 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:31.666807 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:33.670023 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:35.673280 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:37.675716 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:39.678981 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:41.683132 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:43.686601 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:45.690093 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:47.692644 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:49.696103 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:51.699823 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:53.702263 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:55.706533 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:57.708797 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:51:59.712191 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:01.715842 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:03.719145 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:05.721774 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:07.725157 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:09.728624 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:11.732236 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:13.734556 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:15.738002 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:17.741505 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:19.745093 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:21.749404 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:23.752222 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:25.755205 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:27.757736 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:29.760326 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:31.763911 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:33.766353 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:35.769572 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:37.773066 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:39.776893 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:41.780589 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:43.783924 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:45.787339 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:47.790737 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:49.793195 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:51.796858 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:53.800592 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:55.804171 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:57.807539 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:52:59.810005 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:01.813741 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:03.817170 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:05.820890 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:07.824398 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:09.828768 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:11.832468 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:13.835885 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:15.839384 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:17.842677 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:19.847023 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:21.850690 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:23.853652 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:25.856371 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:27.859748 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:29.864006 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:31.867741 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:33.871453 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  I0127 18:53:35.874408 23 container_probe.go:1759] Get pod test-grpc-88bb0441-08bc-4705-bb89-b16cf1e56a6b in namespace container-probe-2259
  STEP: deleting the pod @ 01/27/25 18:53:37.875
  I0127 18:53:37.885699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2259" for this suite. @ 01/27/25 18:53:37.888
• [242.441 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 01/27/25 18:53:37.892
  I0127 18:53:37.892798 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 18:53:37.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:53:37.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:53:37.905
  STEP: Creating a job @ 01/27/25 18:53:37.907
  STEP: Ensuring job reaches completions @ 01/27/25 18:53:37.911
  I0127 18:53:45.928447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3769" for this suite. @ 01/27/25 18:53:45.93
• [8.041 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/27/25 18:53:45.934
  I0127 18:53:45.934331 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 18:53:45.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:53:45.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:53:45.947
  STEP: Setting up server cert @ 01/27/25 18:53:46.046
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 18:53:46.339
  STEP: Deploying the webhook pod @ 01/27/25 18:53:46.345
  STEP: Wait for the deployment to be ready @ 01/27/25 18:53:46.356
  I0127 18:53:46.360681 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 18:53:48.367
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 18:53:48.378
  I0127 18:53:49.379168 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/27/25 18:53:49.436
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/27/25 18:53:49.471
  STEP: Deleting the collection of validation webhooks @ 01/27/25 18:53:49.503
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/27/25 18:53:49.531
  I0127 18:53:49.566209 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1376" for this suite. @ 01/27/25 18:53:49.568
  STEP: Destroying namespace "webhook-markers-2178" for this suite. @ 01/27/25 18:53:49.573
• [3.645 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 01/27/25 18:53:49.579
  I0127 18:53:49.579832 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 18:53:49.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:53:49.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:53:49.59
  STEP: Creating a pod to test downward api env vars @ 01/27/25 18:53:49.592
  STEP: Saw pod success @ 01/27/25 18:53:53.608
  I0127 18:53:53.610360 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-268f2b29-ead0-4cde-8536-9dcbac857a29 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 18:53:53.622
  I0127 18:53:53.633352 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-645" for this suite. @ 01/27/25 18:53:53.636
• [4.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/27/25 18:53:53.642
  I0127 18:53:53.642111 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 18:53:53.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:53:53.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:53:53.652
  STEP: Creating a pod to test env composition @ 01/27/25 18:53:53.655
  STEP: Saw pod success @ 01/27/25 18:53:57.671
  I0127 18:53:57.673247 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-cf1604aa-dd71-4d61-8c2a-b5d5739396ae container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 18:53:57.678
  I0127 18:53:57.692246 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-971" for this suite. @ 01/27/25 18:53:57.694
• [4.056 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527
  STEP: Creating a kubernetes client @ 01/27/25 18:53:57.698
  I0127 18:53:57.698313 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 18:53:57.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:53:57.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:53:57.71
  STEP: creating Agnhost RC @ 01/27/25 18:53:57.713
  I0127 18:53:57.713261 23 kubectl.go:1534] namespace kubectl-7605
  I0127 18:53:57.713303 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7605 create -f -'
  I0127 18:53:57.832711 23 builder.go:146] stderr: ""
  I0127 18:53:57.832748 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/27/25 18:53:57.832
  I0127 18:53:58.835457 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 18:53:58.835491 23 framework.go:733] Found 1 / 1
  I0127 18:53:58.835506 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0127 18:53:58.837348 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 18:53:58.837374 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0127 18:53:58.837382 23 kubectl.go:1541] wait on agnhost-primary startup in kubectl-7605 
  I0127 18:53:58.837428 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7605 logs agnhost-primary-tn7fp agnhost-primary'
  I0127 18:53:58.895100 23 builder.go:146] stderr: ""
  I0127 18:53:58.895139 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/27/25 18:53:58.895
  I0127 18:53:58.895253 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7605 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0127 18:53:58.959947 23 builder.go:146] stderr: ""
  I0127 18:53:58.960022 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0127 18:53:58.962652 23 utils.go:1203] Service rm2 in namespace kubectl-7605 found.
  STEP: exposing service @ 01/27/25 18:54:00.966
  I0127 18:54:00.966944 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7605 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0127 18:54:01.034995 23 builder.go:146] stderr: ""
  I0127 18:54:01.035040 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0127 18:54:01.038985 23 utils.go:1203] Service rm3 in namespace kubectl-7605 found.
  I0127 18:54:03.044102 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7605" for this suite. @ 01/27/25 18:54:03.046
• [5.352 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/27/25 18:54:03.05
  I0127 18:54:03.050523 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 18:54:03.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:54:03.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:54:03.064
  I0127 18:54:03.066946 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/27/25 18:54:04.29
  I0127 18:54:04.290168 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-6493 --namespace=crd-publish-openapi-6493 create -f -'
  I0127 18:54:06.367844 23 builder.go:146] stderr: ""
  I0127 18:54:06.367890 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6479-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0127 18:54:06.367944 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-6493 --namespace=crd-publish-openapi-6493 delete e2e-test-crd-publish-openapi-6479-crds test-cr'
  I0127 18:54:06.423598 23 builder.go:146] stderr: ""
  I0127 18:54:06.423650 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6479-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0127 18:54:06.423699 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-6493 --namespace=crd-publish-openapi-6493 apply -f -'
  I0127 18:54:06.485686 23 builder.go:146] stderr: ""
  I0127 18:54:06.485735 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6479-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0127 18:54:06.485779 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-6493 --namespace=crd-publish-openapi-6493 delete e2e-test-crd-publish-openapi-6479-crds test-cr'
  I0127 18:54:06.540212 23 builder.go:146] stderr: ""
  I0127 18:54:06.540295 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6479-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/27/25 18:54:06.54
  I0127 18:54:06.540421 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-6493 explain e2e-test-crd-publish-openapi-6479-crds'
  I0127 18:54:06.593631 23 builder.go:146] stderr: ""
  I0127 18:54:06.593717 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6479-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0127 18:54:07.840762 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6493" for this suite. @ 01/27/25 18:54:07.846
• [4.800 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/27/25 18:54:07.85
  I0127 18:54:07.850540 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename cronjob @ 01/27/25 18:54:07.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:54:07.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:54:07.861
  STEP: Creating a ReplaceConcurrent cronjob @ 01/27/25 18:54:07.863
  STEP: Ensuring a job is scheduled @ 01/27/25 18:54:07.867
  STEP: Ensuring exactly one is scheduled @ 01/27/25 18:55:01.871
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/27/25 18:55:01.873
  STEP: Ensuring the job is replaced with a new one @ 01/27/25 18:55:01.874
  STEP: Removing cronjob @ 01/27/25 18:56:01.878
  I0127 18:56:01.882783 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1534" for this suite. @ 01/27/25 18:56:01.885
• [114.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/27/25 18:56:01.893
  I0127 18:56:01.893599 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename cronjob @ 01/27/25 18:56:01.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 18:56:01.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 18:56:01.911
  STEP: Creating a suspended cronjob @ 01/27/25 18:56:01.913
  STEP: Ensuring no jobs are scheduled @ 01/27/25 18:56:01.917
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/27/25 19:01:01.918
  STEP: Removing cronjob @ 01/27/25 19:01:01.92
  I0127 19:01:01.924476 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3243" for this suite. @ 01/27/25 19:01:01.926
• [300.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 01/27/25 19:01:01.93
  I0127 19:01:01.930906 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 19:01:01.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:01.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:01.943
  STEP: creating a ServiceAccount @ 01/27/25 19:01:01.945
  STEP: watching for the ServiceAccount to be added @ 01/27/25 19:01:01.95
  STEP: patching the ServiceAccount @ 01/27/25 19:01:01.951
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/27/25 19:01:01.955
  STEP: deleting the ServiceAccount @ 01/27/25 19:01:01.957
  I0127 19:01:01.968628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8318" for this suite. @ 01/27/25 19:01:02.027
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753
  STEP: Creating a kubernetes client @ 01/27/25 19:01:02.032
  I0127 19:01:02.032118 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:01:02.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:02.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:02.046
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/27/25 19:01:02.048
  I0127 19:01:02.049053 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7212 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0127 19:01:02.111736 23 builder.go:146] stderr: ""
  I0127 19:01:02.111785 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/27/25 19:01:02.111
  I0127 19:01:02.114006 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7212 delete pods e2e-test-httpd-pod'
  I0127 19:01:03.460387 23 builder.go:146] stderr: ""
  I0127 19:01:03.460434 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0127 19:01:03.460613 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7212" for this suite. @ 01/27/25 19:01:03.463
• [1.435 seconds]
------------------------------
SSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/27/25 19:01:03.467
  I0127 19:01:03.467213 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pv @ 01/27/25 19:01:03.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:03.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:03.479
  STEP: Creating initial PV and PVC @ 01/27/25 19:01:03.481
  I0127 19:01:03.481700 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-72" @ 01/27/25 19:01:03.49
  STEP: Listing PVCs in namespace "pv-72" @ 01/27/25 19:01:03.492
  STEP: Patching the PV "pv-72-vfzlr" @ 01/27/25 19:01:03.497
  STEP: Patching the PVC "pvc-mrkqn" @ 01/27/25 19:01:03.506
  STEP: Getting PV "pv-72-vfzlr" @ 01/27/25 19:01:03.511
  STEP: Getting PVC "pvc-mrkqn" @ 01/27/25 19:01:03.513
  STEP: Deleting PVC "pvc-mrkqn" @ 01/27/25 19:01:03.517
  STEP: Confirm deletion of PVC "pvc-mrkqn" @ 01/27/25 19:01:03.52
  STEP: Deleting PV "pv-72-vfzlr" @ 01/27/25 19:01:05.53
  STEP: Confirm deletion of PV "pv-72-vfzlr" @ 01/27/25 19:01:05.534
  STEP: Recreating another PV & PVC @ 01/27/25 19:01:07.539
  I0127 19:01:07.539451 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-72-vx9pg" @ 01/27/25 19:01:07.546
  STEP: Updating the PVC "pvc-4hmqh" @ 01/27/25 19:01:07.552
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-4hmqh=updated" @ 01/27/25 19:01:07.557
  STEP: Deleting PVC "pvc-4hmqh" via DeleteCollection @ 01/27/25 19:01:07.559
  STEP: Confirm deletion of PVC "pvc-4hmqh" @ 01/27/25 19:01:07.566
  STEP: Deleting PV "pv-72-vx9pg" via DeleteCollection @ 01/27/25 19:01:07.572
  STEP: Confirm deletion of PV "pv-72-vx9pg" @ 01/27/25 19:01:07.642
  I0127 19:01:09.648024 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0127 19:01:09.648084 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-4hmqh"
  I0127 19:01:09.649922 23 pv.go:193] Deleting PersistentVolume "pv-72-vx9pg"
  I0127 19:01:09.651585 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-72" for this suite. @ 01/27/25 19:01:09.653
• [6.192 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/27/25 19:01:09.659
  I0127 19:01:09.659615 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:01:09.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:09.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:09.67
  STEP: Creating projection with secret that has name projected-secret-test-map-6d55a875-a063-4d21-8dec-1c58a2e66fe8 @ 01/27/25 19:01:09.672
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:01:09.677
  STEP: Saw pod success @ 01/27/25 19:01:11.686
  I0127 19:01:11.688808 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-0285d174-bdac-4378-b734-8b3822bb8717 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:01:11.701
  I0127 19:01:11.711179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4373" for this suite. @ 01/27/25 19:01:11.713
• [2.057 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 01/27/25 19:01:11.717
  I0127 19:01:11.717187 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 19:01:11.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:11.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:11.729
  STEP: Creating a job @ 01/27/25 19:01:11.731
  STEP: Ensuring active pods == parallelism @ 01/27/25 19:01:11.737
  STEP: delete a job @ 01/27/25 19:01:13.743
  STEP: deleting Job.batch foo in namespace job-2370, will wait for the garbage collector to delete the pods @ 01/27/25 19:01:13.743
  I0127 19:01:13.801533 23 resources.go:139] Deleting Job.batch foo took: 6.026389ms
  I0127 19:01:13.902563 23 resources.go:163] Terminating Job.batch foo pods took: 101.026131ms
  STEP: Ensuring job was deleted @ 01/27/25 19:01:16.502
  I0127 19:01:16.505206 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2370" for this suite. @ 01/27/25 19:01:16.507
• [4.794 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/27/25 19:01:16.511
  I0127 19:01:16.511543 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/27/25 19:01:16.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:16.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:16.525
  STEP: getting /apis @ 01/27/25 19:01:16.527
  STEP: getting /apis/storage.k8s.io @ 01/27/25 19:01:16.53
  STEP: getting /apis/storage.k8s.io/v1 @ 01/27/25 19:01:16.531
  STEP: creating @ 01/27/25 19:01:16.532
  STEP: watching @ 01/27/25 19:01:16.542
  I0127 19:01:16.542838 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/27/25 19:01:16.548
  STEP: listing in namespace @ 01/27/25 19:01:16.55
  STEP: listing across namespaces @ 01/27/25 19:01:16.551
  STEP: patching @ 01/27/25 19:01:16.553
  STEP: updating @ 01/27/25 19:01:16.56
  I0127 19:01:16.563242 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0127 19:01:16.563337 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/27/25 19:01:16.563
  STEP: deleting a collection @ 01/27/25 19:01:16.569
  I0127 19:01:16.576705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7076" for this suite. @ 01/27/25 19:01:16.608
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/27/25 19:01:16.612
  I0127 19:01:16.612736 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:01:16.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:01:16.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:01:16.625
  STEP: Creating configMap with name configmap-test-upd-35c6fa9f-7762-4b7b-835f-5fd8f9b2f87b @ 01/27/25 19:01:16.709
  STEP: Creating the pod @ 01/27/25 19:01:16.712
  STEP: Updating configmap configmap-test-upd-35c6fa9f-7762-4b7b-835f-5fd8f9b2f87b @ 01/27/25 19:01:18.733
  STEP: waiting to observe update in volume @ 01/27/25 19:01:18.738
  I0127 19:02:28.976868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1085" for this suite. @ 01/27/25 19:02:28.979
• [72.370 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/27/25 19:02:28.983
  I0127 19:02:28.983255 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replication-controller @ 01/27/25 19:02:28.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:02:28.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:02:28.995
  STEP: Creating replication controller my-hostname-basic-ee69cd20-6ea3-4c58-9f62-2230fc4bd39f @ 01/27/25 19:02:28.997
  I0127 19:02:29.003153 23 resource.go:87] Pod name my-hostname-basic-ee69cd20-6ea3-4c58-9f62-2230fc4bd39f: Found 0 pods out of 1
  I0127 19:02:34.007556 23 resource.go:87] Pod name my-hostname-basic-ee69cd20-6ea3-4c58-9f62-2230fc4bd39f: Found 1 pods out of 1
  I0127 19:02:34.007592 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-ee69cd20-6ea3-4c58-9f62-2230fc4bd39f" are running
  I0127 19:02:34.009390 23 rc.go:523] Pod "my-hostname-basic-ee69cd20-6ea3-4c58-9f62-2230fc4bd39f-hlkdc" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:02:29 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:02:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:02:29 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:02:29 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:02:29 +0000 UTC Reason: Message:}])
  I0127 19:02:34.009427 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/27/25 19:02:34.009
  I0127 19:02:34.017431 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1650" for this suite. @ 01/27/25 19:02:34.019
• [5.041 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/27/25 19:02:34.024
  I0127 19:02:34.024872 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename chunking @ 01/27/25 19:02:34.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:02:34.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:02:34.037
  STEP: creating a large number of resources @ 01/27/25 19:02:34.039
  STEP: retrieving the first page @ 01/27/25 19:02:51.73
  I0127 19:02:51.779694 23 chunking.go:163] Retrieved 40/40 results with rv 9357 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 01/27/25 19:02:51.779
  I0127 19:03:11.788057 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:03:31.786994 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:03:51.786620 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:04:11.784281 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:04:31.785907 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:04:51.787361 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:05:11.784246 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:05:31.786998 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:05:51.786788 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:06:11.786726 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:06:31.787394 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:06:51.786573 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:07:11.785392 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:07:31.787092 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:07:51.786554 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:08:11.783668 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:08:31.783432 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:08:51.786913 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:09:11.786528 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:09:31.787137 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:09:51.786637 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:10:11.787354 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:10:31.787111 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:10:51.783165 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM1Nywic3RhcnQiOiIvdGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0127 19:11:11.784860 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0127 19:11:11.784893 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/27/25 19:11:11.784
  STEP: retrieving all remaining pages @ 01/27/25 19:11:11.788
  I0127 19:11:11.790798 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0127 19:11:11.793429 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0127 19:11:11.796370 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0127 19:11:11.798911 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0127 19:11:11.801642 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0127 19:11:11.804384 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0127 19:11:11.806858 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTA0NTksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0127 19:11:11.809501 23 chunking.go:221] Retrieved 40/40 results with rv 10459 and continue 
  I0127 19:11:11.809660 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5306" for this suite. @ 01/27/25 19:11:11.812
• [517.791 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 01/27/25 19:11:11.815
  I0127 19:11:11.815708 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 19:11:11.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:11.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:11.826
  STEP: Creating a test headless service @ 01/27/25 19:11:11.829
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6081.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-6081.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 01/27/25 19:11:11.832
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6081.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6081.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/27/25 19:11:11.832
  STEP: creating a pod to probe DNS @ 01/27/25 19:11:11.832
  STEP: submitting the pod to kubernetes @ 01/27/25 19:11:11.832
  STEP: retrieving the pod @ 01/27/25 19:11:13.848
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:11:13.85
  I0127 19:11:13.864645 23 dns_common.go:546] DNS probes using dns-6081/dns-test-7eeac2c5-dc5a-4528-a19d-bcc6b723954c succeeded

  STEP: deleting the pod @ 01/27/25 19:11:13.864
  STEP: deleting the test headless service @ 01/27/25 19:11:13.878
  I0127 19:11:13.890123 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6081" for this suite. @ 01/27/25 19:11:13.892
• [2.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/27/25 19:11:13.896
  I0127 19:11:13.896404 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubelet-test @ 01/27/25 19:11:13.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:13.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:13.906
  I0127 19:11:15.934005 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7197" for this suite. @ 01/27/25 19:11:15.936
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/27/25 19:11:15.94
  I0127 19:11:15.940322 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:11:15.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:15.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:15.953
  STEP: Creating a pod to test downward api env vars @ 01/27/25 19:11:15.955
  STEP: Saw pod success @ 01/27/25 19:11:17.966
  I0127 19:11:17.968492 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-f705bcdd-5cd4-43f6-ba19-7f8c3f99d17b container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 19:11:17.974
  I0127 19:11:17.985543 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6918" for this suite. @ 01/27/25 19:11:17.987
• [2.051 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/27/25 19:11:17.991
  I0127 19:11:17.991692 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename endpointslice @ 01/27/25 19:11:17.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:18.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:18.005
  STEP: referencing a single matching pod @ 01/27/25 19:11:20.068
  STEP: referencing matching pods with named port @ 01/27/25 19:11:20.071
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/27/25 19:11:20.074
  STEP: recreating EndpointSlices after they've been deleted @ 01/27/25 19:11:20.077
  I0127 19:11:20.087379 23 endpointslice.go:938] EndpointSlice for Service endpointslice-1435/example-named-port not found
  I0127 19:11:22.091218 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1435" for this suite. @ 01/27/25 19:11:22.093
• [4.105 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/27/25 19:11:22.097
  I0127 19:11:22.097344 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename discovery @ 01/27/25 19:11:22.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:22.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:22.108
  STEP: Setting up server cert @ 01/27/25 19:11:22.111
  I0127 19:11:23.058626 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0127 19:11:23.059497 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0127 19:11:23.059527 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0127 19:11:23.059539 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0127 19:11:23.059550 23 discovery.go:139] Checking APIGroup: apps
  I0127 19:11:23.060367 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0127 19:11:23.060399 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0127 19:11:23.060407 23 discovery.go:154] apps/v1 matches apps/v1
  I0127 19:11:23.060419 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0127 19:11:23.061186 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0127 19:11:23.061206 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0127 19:11:23.061213 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0127 19:11:23.061221 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0127 19:11:23.062107 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0127 19:11:23.062145 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0127 19:11:23.062157 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0127 19:11:23.062168 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0127 19:11:23.063008 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0127 19:11:23.063025 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0127 19:11:23.063032 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0127 19:11:23.063059 23 discovery.go:139] Checking APIGroup: autoscaling
  I0127 19:11:23.063850 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0127 19:11:23.063869 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0127 19:11:23.063876 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0127 19:11:23.063915 23 discovery.go:139] Checking APIGroup: batch
  I0127 19:11:23.064786 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0127 19:11:23.064806 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0127 19:11:23.064815 23 discovery.go:154] batch/v1 matches batch/v1
  I0127 19:11:23.064822 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0127 19:11:23.065612 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0127 19:11:23.065634 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0127 19:11:23.065641 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0127 19:11:23.065648 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0127 19:11:23.066442 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0127 19:11:23.066463 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0127 19:11:23.066474 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0127 19:11:23.066484 23 discovery.go:139] Checking APIGroup: policy
  I0127 19:11:23.067245 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0127 19:11:23.067263 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0127 19:11:23.067271 23 discovery.go:154] policy/v1 matches policy/v1
  I0127 19:11:23.067278 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0127 19:11:23.068050 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0127 19:11:23.068067 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0127 19:11:23.068075 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0127 19:11:23.068082 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0127 19:11:23.068868 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0127 19:11:23.068889 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0127 19:11:23.068900 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0127 19:11:23.068921 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0127 19:11:23.069716 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0127 19:11:23.069736 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0127 19:11:23.069745 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0127 19:11:23.069752 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0127 19:11:23.070500 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0127 19:11:23.070519 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0127 19:11:23.070530 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0127 19:11:23.070540 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0127 19:11:23.071307 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0127 19:11:23.071326 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0127 19:11:23.071334 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0127 19:11:23.071345 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0127 19:11:23.072145 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0127 19:11:23.072164 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0127 19:11:23.072171 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0127 19:11:23.072180 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0127 19:11:23.072989 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0127 19:11:23.073009 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0127 19:11:23.073020 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0127 19:11:23.073031 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0127 19:11:23.074265 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0127 19:11:23.074284 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0127 19:11:23.074292 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0127 19:11:23.074307 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0127 19:11:23.075110 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0127 19:11:23.075130 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0127 19:11:23.075142 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0127 19:11:23.075152 23 discovery.go:139] Checking APIGroup: etcd.k0sproject.io
  I0127 19:11:23.075953 23 discovery.go:147] PreferredVersion.GroupVersion: etcd.k0sproject.io/v1beta1
  I0127 19:11:23.075971 23 discovery.go:148] Versions found [{etcd.k0sproject.io/v1beta1 v1beta1}]
  I0127 19:11:23.075989 23 discovery.go:154] etcd.k0sproject.io/v1beta1 matches etcd.k0sproject.io/v1beta1
  I0127 19:11:23.076000 23 discovery.go:139] Checking APIGroup: helm.k0sproject.io
  I0127 19:11:23.076815 23 discovery.go:147] PreferredVersion.GroupVersion: helm.k0sproject.io/v1beta1
  I0127 19:11:23.076843 23 discovery.go:148] Versions found [{helm.k0sproject.io/v1beta1 v1beta1}]
  I0127 19:11:23.076854 23 discovery.go:154] helm.k0sproject.io/v1beta1 matches helm.k0sproject.io/v1beta1
  I0127 19:11:23.076864 23 discovery.go:139] Checking APIGroup: autopilot.k0sproject.io
  I0127 19:11:23.077736 23 discovery.go:147] PreferredVersion.GroupVersion: autopilot.k0sproject.io/v1beta2
  I0127 19:11:23.077756 23 discovery.go:148] Versions found [{autopilot.k0sproject.io/v1beta2 v1beta2}]
  I0127 19:11:23.077763 23 discovery.go:154] autopilot.k0sproject.io/v1beta2 matches autopilot.k0sproject.io/v1beta2
  I0127 19:11:23.077770 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0127 19:11:23.078532 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0127 19:11:23.078550 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0127 19:11:23.078557 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0127 19:11:23.078649 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2976" for this suite. @ 01/27/25 19:11:23.081
• [0.990 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/27/25 19:11:23.087
  I0127 19:11:23.087054 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 19:11:23.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:23.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:23.108
  STEP: apply creating a deployment @ 01/27/25 19:11:23.111
  I0127 19:11:23.122146 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3855" for this suite. @ 01/27/25 19:11:23.181
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/27/25 19:11:23.187
  I0127 19:11:23.187404 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:11:23.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:23.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:23.201
  STEP: Setting up server cert @ 01/27/25 19:11:23.3
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:11:23.719
  STEP: Deploying the webhook pod @ 01/27/25 19:11:23.727
  STEP: Wait for the deployment to be ready @ 01/27/25 19:11:23.736
  I0127 19:11:23.743794 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:11:25.75
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:11:25.759
  I0127 19:11:26.760343 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/27/25 19:11:26.764
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/27/25 19:11:26.78
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/27/25 19:11:26.789
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/27/25 19:11:26.797
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/27/25 19:11:26.803
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/27/25 19:11:26.809
  I0127 19:11:26.842544 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1632" for this suite. @ 01/27/25 19:11:26.848
  STEP: Destroying namespace "webhook-markers-2992" for this suite. @ 01/27/25 19:11:26.853
• [3.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/27/25 19:11:26.857
  I0127 19:11:26.857635 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:11:26.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:26.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:26.872
  STEP: Setting up server cert @ 01/27/25 19:11:26.967
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:11:27.128
  STEP: Deploying the webhook pod @ 01/27/25 19:11:27.131
  STEP: Wait for the deployment to be ready @ 01/27/25 19:11:27.142
  I0127 19:11:27.147918 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:11:29.154
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:11:29.165
  I0127 19:11:30.165215 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/27/25 19:11:30.169
  I0127 19:11:30.206083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3334" for this suite. @ 01/27/25 19:11:30.208
  STEP: Destroying namespace "webhook-markers-1654" for this suite. @ 01/27/25 19:11:30.214
• [3.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/27/25 19:11:30.219
  I0127 19:11:30.219170 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:11:30.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:30.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:30.235
  STEP: Creating configMap with name projected-configmap-test-volume-map-da958f79-74ab-4e43-ae8b-5c078556b564 @ 01/27/25 19:11:30.237
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:11:30.24
  STEP: Saw pod success @ 01/27/25 19:11:34.256
  I0127 19:11:34.258813 23 output.go:207] Trying to get logs from node worker-1 pod pod-projected-configmaps-10bf7f75-a3e5-4adb-9787-e9f283dcbbe4 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:11:34.27
  I0127 19:11:34.281871 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7901" for this suite. @ 01/27/25 19:11:34.284
• [4.068 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/27/25 19:11:34.287
  I0127 19:11:34.287756 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:11:34.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:34.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:34.298
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:11:34.301
  STEP: Saw pod success @ 01/27/25 19:11:38.315
  I0127 19:11:38.316835 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-b8908c77-2d94-43db-a64e-d22fa8128a7a container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:11:38.321
  I0127 19:11:38.331158 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-30" for this suite. @ 01/27/25 19:11:38.333
• [4.049 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/27/25 19:11:38.336
  I0127 19:11:38.337003 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:11:38.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:38.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:38.351
  STEP: Setting up server cert @ 01/27/25 19:11:38.451
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:11:39.067
  STEP: Deploying the webhook pod @ 01/27/25 19:11:39.071
  STEP: Wait for the deployment to be ready @ 01/27/25 19:11:39.082
  I0127 19:11:39.087210 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:11:41.097
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:11:41.108
  I0127 19:11:42.108261 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/27/25 19:11:42.112
  STEP: create a configmap that should be updated by the webhook @ 01/27/25 19:11:42.129
  I0127 19:11:42.172909 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3786" for this suite. @ 01/27/25 19:11:42.176
  STEP: Destroying namespace "webhook-markers-7501" for this suite. @ 01/27/25 19:11:42.181
• [3.848 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/27/25 19:11:42.186
  I0127 19:11:42.186361 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename chunking @ 01/27/25 19:11:42.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:11:42.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:11:42.199
  STEP: creating a large number of resources @ 01/27/25 19:11:42.202
  STEP: retrieving those results in paged fashion several times @ 01/27/25 19:11:59.892
  I0127 19:11:59.939978 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0127 19:11:59.990933 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0127 19:12:00.040825 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0127 19:12:00.090762 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0127 19:12:00.140636 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0127 19:12:00.190496 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0127 19:12:00.240566 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0127 19:12:00.290386 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0127 19:12:00.340405 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0127 19:12:00.390375 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0127 19:12:00.440249 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0127 19:12:00.489949 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0127 19:12:00.541009 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0127 19:12:00.589895 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0127 19:12:00.640775 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0127 19:12:00.691122 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0127 19:12:00.739952 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0127 19:12:00.790746 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0127 19:12:00.840456 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0127 19:12:00.890421 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0127 19:12:00.940374 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0127 19:12:00.990342 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0127 19:12:01.040176 23 chunking.go:98] Retrieved 17/17 results with rv 11803 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDMsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0127 19:12:01.089620 23 chunking.go:98] Retrieved 9/17 results with rv 11803 and continue 
  I0127 19:12:01.140582 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0127 19:12:01.190710 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0127 19:12:01.240871 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0127 19:12:01.290780 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0127 19:12:01.340815 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0127 19:12:01.390721 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0127 19:12:01.440789 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0127 19:12:01.490788 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0127 19:12:01.540679 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0127 19:12:01.590878 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0127 19:12:01.641097 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0127 19:12:01.690216 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0127 19:12:01.740318 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0127 19:12:01.790284 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0127 19:12:01.840224 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0127 19:12:01.890214 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0127 19:12:01.940094 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0127 19:12:01.989975 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0127 19:12:02.040793 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0127 19:12:02.090732 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0127 19:12:02.140554 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0127 19:12:02.190999 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0127 19:12:02.239984 23 chunking.go:98] Retrieved 17/17 results with rv 11806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0127 19:12:02.289688 23 chunking.go:98] Retrieved 9/17 results with rv 11806 and continue 
  I0127 19:12:02.341581 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0127 19:12:02.390751 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0127 19:12:02.441354 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0127 19:12:02.490510 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0127 19:12:02.540461 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0127 19:12:02.590542 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0127 19:12:02.640497 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0127 19:12:02.690391 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0127 19:12:02.740185 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0127 19:12:02.790495 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0127 19:12:02.840480 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0127 19:12:02.890102 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0127 19:12:02.940566 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0127 19:12:02.990498 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0127 19:12:03.040450 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0127 19:12:03.090460 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0127 19:12:03.140347 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0127 19:12:03.190475 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0127 19:12:03.240172 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0127 19:12:03.290179 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0127 19:12:03.340011 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0127 19:12:03.390207 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0127 19:12:03.439964 23 chunking.go:98] Retrieved 17/17 results with rv 11810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0127 19:12:03.490684 23 chunking.go:98] Retrieved 9/17 results with rv 11810 and continue 
  STEP: retrieving those results all at once @ 01/27/25 19:12:03.49
  I0127 19:12:03.545505 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7884" for this suite. @ 01/27/25 19:12:03.59
• [21.456 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/27/25 19:12:03.642
  I0127 19:12:03.642511 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename namespaces @ 01/27/25 19:12:03.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:03.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:03.656
  STEP: creating a Namespace @ 01/27/25 19:12:03.658
  STEP: patching the Namespace @ 01/27/25 19:12:03.755
  STEP: get the Namespace and ensuring it has the label @ 01/27/25 19:12:03.759
  I0127 19:12:03.760734 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9361" for this suite. @ 01/27/25 19:12:03.762
  STEP: Destroying namespace "nspatchtest-bc9885d5-f2bf-4f9f-a635-d6dcc656679b-3885" for this suite. @ 01/27/25 19:12:03.768
• [0.129 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/27/25 19:12:03.771
  I0127 19:12:03.771647 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pod-network-test @ 01/27/25 19:12:03.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:03.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:03.854
  STEP: Performing setup for networking test in namespace pod-network-test-4637 @ 01/27/25 19:12:03.857
  STEP: creating a selector @ 01/27/25 19:12:03.857
  STEP: Creating the service pods in kubernetes @ 01/27/25 19:12:03.857
  I0127 19:12:03.857180 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/27/25 19:12:15.905
  I0127 19:12:17.925518 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0127 19:12:17.925557 23 utils.go:496] Going to poll 10.244.1.107 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0127 19:12:17.927065 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.107:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4637 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:12:17.927108 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:12:17.927157 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4637/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.107%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0127 19:12:17.975888 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0127 19:12:17.976024 23 utils.go:496] Going to poll 10.244.0.83 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0127 19:12:17.978232 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.83:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4637 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:12:17.978251 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:12:17.978297 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4637/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.83%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0127 19:12:18.024354 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0127 19:12:18.024508 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4637" for this suite. @ 01/27/25 19:12:18.027
• [14.259 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/27/25 19:12:18.031
  I0127 19:12:18.031580 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:12:18.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:18.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:18.046
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:12:18.048
  STEP: Saw pod success @ 01/27/25 19:12:20.06
  I0127 19:12:20.062280 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-1bbc437d-7d74-4d8e-91a8-afd8c856ec93 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:12:20.066
  I0127 19:12:20.077665 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7321" for this suite. @ 01/27/25 19:12:20.079
• [2.052 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 01/27/25 19:12:20.084
  I0127 19:12:20.084058 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename csinodes @ 01/27/25 19:12:20.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:20.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:20.094
  STEP: Creating initial csiNode "e2e-csinode-2pfvm" @ 01/27/25 19:12:20.097
  STEP: Getting initial csiNode "e2e-csinode-2pfvm" @ 01/27/25 19:12:20.099
  STEP: Patching initial csiNode: "e2e-csinode-2pfvm" @ 01/27/25 19:12:20.101
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-2pfvm=patched" @ 01/27/25 19:12:20.104
  STEP: Delete initial csiNode: "e2e-csinode-2pfvm" @ 01/27/25 19:12:20.106
  STEP: Confirm deletion of csiNode "e2e-csinode-2pfvm" @ 01/27/25 19:12:20.109
  STEP: Creating replacement csiNode "e2e-csinode-s2cpf" @ 01/27/25 19:12:20.11
  STEP: Getting replacement csiNode "e2e-csinode-s2cpf" @ 01/27/25 19:12:20.114
  STEP: Updating replacement csiNode "e2e-csinode-s2cpf" @ 01/27/25 19:12:20.115
  STEP: DeleteCollection of CSINodes with "e2e-csinode-s2cpf=updated" label @ 01/27/25 19:12:20.12
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-s2cpf=updated" @ 01/27/25 19:12:20.124
  I0127 19:12:20.125671 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-4184" for this suite. @ 01/27/25 19:12:20.18
• [0.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/27/25 19:12:20.184
  I0127 19:12:20.184516 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:12:20.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:20.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:20.198
  STEP: creating all guestbook components @ 01/27/25 19:12:20.2
  I0127 19:12:20.200932 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0127 19:12:20.201027 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 create -f -'
  I0127 19:12:20.318034 23 builder.go:146] stderr: ""
  I0127 19:12:20.318111 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0127 19:12:20.318160 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0127 19:12:20.318293 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 create -f -'
  I0127 19:12:20.436732 23 builder.go:146] stderr: ""
  I0127 19:12:20.436771 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0127 19:12:20.436933 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0127 19:12:20.437094 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 create -f -'
  I0127 19:12:20.552549 23 builder.go:146] stderr: ""
  I0127 19:12:20.552596 23 builder.go:147] stdout: "service/frontend created\n"
  I0127 19:12:20.552657 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0127 19:12:20.552774 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 create -f -'
  I0127 19:12:20.633405 23 builder.go:146] stderr: ""
  I0127 19:12:20.633513 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0127 19:12:20.633580 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0127 19:12:20.633742 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 create -f -'
  I0127 19:12:20.720113 23 builder.go:146] stderr: ""
  I0127 19:12:20.720284 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0127 19:12:20.720344 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0127 19:12:20.720598 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 create -f -'
  I0127 19:12:20.805879 23 builder.go:146] stderr: ""
  I0127 19:12:20.805919 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/27/25 19:12:20.805
  I0127 19:12:20.805953 23 kubectl.go:2269] Waiting for all frontend pods to be Running.
  I0127 19:12:25.856326 23 kubectl.go:2273] Waiting for frontend to serve content.
  I0127 19:12:25.865584 23 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0127 19:12:25.870583 23 kubectl.go:2283] Verifying that added entry can be retrieved.
  I0127 19:12:25.875720 23 kubectl.go:2296] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  STEP: using delete to clean up resources @ 01/27/25 19:12:30.886
  I0127 19:12:30.886319 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0127 19:12:30.952558 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:12:30.952603 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/27/25 19:12:30.952
  I0127 19:12:30.952691 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0127 19:12:31.017794 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:12:31.017955 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/27/25 19:12:31.018
  I0127 19:12:31.018094 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0127 19:12:31.085963 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:12:31.086169 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/27/25 19:12:31.086
  I0127 19:12:31.086296 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0127 19:12:31.140224 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:12:31.140420 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/27/25 19:12:31.14
  I0127 19:12:31.140604 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0127 19:12:31.203996 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:12:31.204063 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/27/25 19:12:31.204
  I0127 19:12:31.204231 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1057 delete --grace-period=0 --force -f -'
  I0127 19:12:31.295203 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:12:31.295456 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0127 19:12:31.295785 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1057" for this suite. @ 01/27/25 19:12:31.307
• [11.130 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/27/25 19:12:31.314
  I0127 19:12:31.314805 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename events @ 01/27/25 19:12:31.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:31.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:31.336
  STEP: Create set of events @ 01/27/25 19:12:31.339
  STEP: get a list of Events with a label in the current namespace @ 01/27/25 19:12:31.355
  STEP: delete a list of events @ 01/27/25 19:12:31.361
  I0127 19:12:31.361423 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/27/25 19:12:31.371
  I0127 19:12:31.373920 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9711" for this suite. @ 01/27/25 19:12:31.405
• [0.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/27/25 19:12:31.409
  I0127 19:12:31.409529 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:12:31.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:31.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:31.433
  STEP: Creating secret with name secret-test-349e0576-b279-4b06-bba9-0ba9a20e8f22 @ 01/27/25 19:12:31.538
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:12:31.541
  STEP: Saw pod success @ 01/27/25 19:12:35.554
  I0127 19:12:35.556470 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-361b901e-6b90-475d-b788-f5d872311a66 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:12:35.56
  I0127 19:12:35.570100 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7160" for this suite. @ 01/27/25 19:12:35.572
  STEP: Destroying namespace "secret-namespace-6150" for this suite. @ 01/27/25 19:12:35.575
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/27/25 19:12:35.581
  I0127 19:12:35.581669 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-watch @ 01/27/25 19:12:35.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:12:35.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:12:35.591
  I0127 19:12:35.594057 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Creating first CR  @ 01/27/25 19:12:38.123
  I0127 19:12:38.126979 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-27T19:12:38Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-27T19:12:38Z]] name:name1 resourceVersion:12672 uid:3d6ee9ab-38cc-4846-ae99-3d27c6b185b4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/27/25 19:12:48.127
  I0127 19:12:48.131977 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-27T19:12:48Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-27T19:12:48Z]] name:name2 resourceVersion:12709 uid:ada4796f-bdbf-4110-8c41-447a45de125f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/27/25 19:12:58.133
  I0127 19:12:58.137691 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-27T19:12:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-27T19:12:58Z]] name:name1 resourceVersion:12732 uid:3d6ee9ab-38cc-4846-ae99-3d27c6b185b4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/27/25 19:13:08.137
  I0127 19:13:08.142919 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-27T19:12:48Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-27T19:13:08Z]] name:name2 resourceVersion:12755 uid:ada4796f-bdbf-4110-8c41-447a45de125f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/27/25 19:13:18.144
  I0127 19:13:18.148693 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-27T19:12:38Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-27T19:12:58Z]] name:name1 resourceVersion:12778 uid:3d6ee9ab-38cc-4846-ae99-3d27c6b185b4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/27/25 19:13:28.149
  I0127 19:13:28.153828 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-27T19:12:48Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-27T19:13:08Z]] name:name2 resourceVersion:12801 uid:ada4796f-bdbf-4110-8c41-447a45de125f] num:map[num1:9223372036854775807 num2:1000000]]}
  I0127 19:13:38.664324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3200" for this suite. @ 01/27/25 19:13:38.666
• [63.089 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/27/25 19:13:38.671
  I0127 19:13:38.671100 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:13:38.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:13:38.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:13:38.685
  STEP: Counting existing ResourceQuota @ 01/27/25 19:13:38.687
  STEP: Creating a ResourceQuota @ 01/27/25 19:13:43.689
  STEP: Ensuring resource quota status is calculated @ 01/27/25 19:13:43.693
  I0127 19:13:45.696532 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4308" for this suite. @ 01/27/25 19:13:45.699
• [7.032 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 01/27/25 19:13:45.703
  I0127 19:13:45.703453 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 19:13:45.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:13:45.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:13:45.714
  STEP: Creating service test in namespace statefulset-9262 @ 01/27/25 19:13:45.716
  STEP: Creating statefulset ss in namespace statefulset-9262 @ 01/27/25 19:13:45.719
  I0127 19:13:45.728498 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0127 19:13:55.731361 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/27/25 19:13:55.735
  STEP: updating a scale subresource @ 01/27/25 19:13:55.736
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/27/25 19:13:55.74
  STEP: Patch a scale subresource @ 01/27/25 19:13:55.742
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/27/25 19:13:55.749
  I0127 19:13:55.754440 23 statefulset.go:138] Deleting all statefulset in ns statefulset-9262
  I0127 19:13:55.757229 23 rest.go:152] Scaling statefulset ss to 0
  I0127 19:14:05.771888 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 19:14:05.774183 23 rest.go:90] Deleting statefulset ss
  I0127 19:14:05.782325 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9262" for this suite. @ 01/27/25 19:14:05.786
• [20.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/27/25 19:14:05.791
  I0127 19:14:05.791224 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:14:05.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:05.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:05.804
  STEP: creating service in namespace services-6351 @ 01/27/25 19:14:05.806
  STEP: creating service affinity-nodeport in namespace services-6351 @ 01/27/25 19:14:05.806
  STEP: creating replication controller affinity-nodeport in namespace services-6351 @ 01/27/25 19:14:05.818
  I0127 19:14:05.825885      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6351, replica count: 3
  I0127 19:14:08.877187      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 19:14:08.882995 23 resource.go:361] Creating new exec pod
  I0127 19:14:11.896464 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-6351 exec execpod-affinitynfx5q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0127 19:14:11.991846 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.105.55.202) 80 port [tcp/http] succeeded!\n"
  I0127 19:14:11.991901 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:14:11.991978 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-6351 exec execpod-affinitynfx5q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.55.202 80'
  I0127 19:14:12.086114 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.55.202 80\nConnection to 10.105.55.202 80 port [tcp/http] succeeded!\n"
  I0127 19:14:12.086289 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:14:12.086373 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-6351 exec execpod-affinitynfx5q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.52.184 30206'
  I0127 19:14:12.182402 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.52.184 30206\nConnection to 10.0.52.184 30206 port [tcp/*] succeeded!\n"
  I0127 19:14:12.182447 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:14:12.182542 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-6351 exec execpod-affinitynfx5q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.33.3 30206'
  I0127 19:14:12.281477 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.33.3 30206\nConnection to 10.0.33.3 30206 port [tcp/*] succeeded!\n"
  I0127 19:14:12.281522 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:14:12.281592 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-6351 exec execpod-affinitynfx5q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.52.184:30206/ ; done'
  I0127 19:14:12.435789 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:30206/\n"
  I0127 19:14:12.435839 23 builder.go:147] stdout: "\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf\naffinity-nodeport-r57pf"
  I0127 19:14:12.435853 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435867 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435881 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435892 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435905 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435916 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435936 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435948 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.435964 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436205 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436216 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436228 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436244 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436257 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436269 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436281 23 service.go:242] Received response from host: affinity-nodeport-r57pf
  I0127 19:14:12.436371 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6351, will wait for the garbage collector to delete the pods @ 01/27/25 19:14:12.446
  I0127 19:14:12.502906 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 4.053257ms
  I0127 19:14:12.603941 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.033593ms
  I0127 19:14:15.021811 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6351" for this suite. @ 01/27/25 19:14:15.024
• [9.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/27/25 19:14:15.028
  I0127 19:14:15.028199 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:14:15.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:15.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:15.042
  STEP: creating the pod @ 01/27/25 19:14:15.044
  STEP: submitting the pod to kubernetes @ 01/27/25 19:14:15.044
  W0127 19:14:15.051875      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 01/27/25 19:14:17.058
  STEP: updating the pod @ 01/27/25 19:14:17.06
  I0127 19:14:17.570418 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-55b017e3-e124-474b-a2e6-3c9e9652b25b"
  I0127 19:14:21.579383 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1508" for this suite. @ 01/27/25 19:14:21.581
• [6.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 01/27/25 19:14:21.585
  I0127 19:14:21.585917 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename volumeattachment @ 01/27/25 19:14:21.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:21.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:21.599
  STEP: Create VolumeAttachment "va-e2e-2z6c9" on node "worker-1" @ 01/27/25 19:14:21.682
  STEP: Patch VolumeAttachment "va-e2e-2z6c9" on node "worker-1" @ 01/27/25 19:14:21.685
  STEP: Reading "va-e2e-2z6c9" Status @ 01/27/25 19:14:21.689
  STEP: Patching "va-e2e-2z6c9" Status @ 01/27/25 19:14:21.691
  I0127 19:14:21.697142 23 volume_attachment.go:224] "va-e2e-2z6c9" Status.Attached: true
  STEP: Updating "va-e2e-2z6c9" Status @ 01/27/25 19:14:21.697
  I0127 19:14:21.701944 23 volume_attachment.go:240] "va-e2e-2z6c9" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-2z6c9" on node "worker-1" @ 01/27/25 19:14:21.701
  STEP: Confirm deletion of VolumeAttachment "va-e2e-2z6c9" on node "worker-1" @ 01/27/25 19:14:21.705
  I0127 19:14:21.706875 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-3521" for this suite. @ 01/27/25 19:14:21.783
• [0.202 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/27/25 19:14:21.787
  I0127 19:14:21.787534 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/27/25 19:14:21.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:21.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:21.801
  I0127 19:14:21.803532 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:14:24.841828 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8050" for this suite. @ 01/27/25 19:14:24.844
• [3.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/27/25 19:14:24.851
  I0127 19:14:24.851614 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 19:14:24.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:24.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:24.863
  STEP: creating a Deployment @ 01/27/25 19:14:24.867
  STEP: waiting for Deployment to be created @ 01/27/25 19:14:24.872
  STEP: waiting for all Replicas to be Ready @ 01/27/25 19:14:24.874
  I0127 19:14:24.875267 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.875296 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.882921 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.882944 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.893530 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.893551 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.910238 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:24.910266 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0127 19:14:25.894244 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0127 19:14:25.894288 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0127 19:14:25.946504 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/27/25 19:14:25.946
  I0127 19:14:25.954735 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/27/25 19:14:25.954
  I0127 19:14:25.956262 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956309 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956324 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956358 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956379 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956417 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956435 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956447 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 0
  I0127 19:14:25.956559 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:25.956598 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:25.956614 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.956625 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.956642 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.956653 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.964217 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.964242 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.977413 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.977439 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:25.995352 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:25.995380 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:26.025329 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:26.025356 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:26.955422 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:26.955458 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:26.973749 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  STEP: listing Deployments @ 01/27/25 19:14:26.973
  I0127 19:14:26.975879 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/27/25 19:14:26.975
  I0127 19:14:26.985680 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/27/25 19:14:26.985
  I0127 19:14:26.989593 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:26.997328 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.016893 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.028382 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.035710 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.902843 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.965693 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.983448 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:27.998166 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0127 19:14:28.912376 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/27/25 19:14:28.927
  STEP: fetching the DeploymentStatus @ 01/27/25 19:14:28.935
  I0127 19:14:28.942366 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:28.942441 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:28.942476 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:28.942519 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:28.942536 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 1
  I0127 19:14:28.942927 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:28.942945 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 3
  I0127 19:14:28.942957 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:28.943058 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 2
  I0127 19:14:28.943227 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7743 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/27/25 19:14:28.943
  I0127 19:14:28.948805 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.948828 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.948843 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949168 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949192 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949315 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949387 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949414 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949523 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949688 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949719 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949737 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.949851 23 deployment.go:475] observed event type MODIFIED
  I0127 19:14:28.953883 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0127 19:14:28.958425 23 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1abbf555-fee5-4a25-916a-bc2087b29dd3",
      ResourceVersion: (string) (len=5) "13265",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602064,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2e9921c4-3b7b-40d0-bf76-fa217d305787",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 65 39 39  32 31 63 34 2d 33 62 37  |":\"2e9921c4-3b7|
              00000130  62 2d 34 30 64 30 2d 62  66 37 36 2d 66 61 32 31  |b-40d0-bf76-fa21|
              00000140  37 64 33 30 35 37 38 37  5c 22 7d 22 3a 7b 7d 7d  |7d305787\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0127 19:14:28.962127 23 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4bdf235-e7d5-4618-a49c-06f9c83dc3ec",
      ResourceVersion: (string) (len=5) "13335",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602066,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2e9921c4-3b7b-40d0-bf76-fa217d305787",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 65 39 39  32 31 63 34 2d 33 62 37  |":\"2e9921c4-3b7|
              00000130  62 2d 34 30 64 30 2d 62  66 37 36 2d 66 61 32 31  |b-40d0-bf76-fa21|
              00000140  37 64 33 30 35 37 38 37  5c 22 7d 22 3a 7b 7d 7d  |7d305787\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0127 19:14:28.965534 23 deployment.go:669] pod: "test-deployment-79899bcfcc-rbz8x":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-rbz8x",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-7743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "646b38f0-5985-41e3-9e07-da997c7e72f7",
      ResourceVersion: (string) (len=5) "13305",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "d4bdf235-e7d5-4618-a49c-06f9c83dc3ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 34 62 64 66 32 33 35  |uid\":\"d4bdf235|
              000000a0  2d 65 37 64 35 2d 34 36  31 38 2d 61 34 39 63 2d  |-e7d5-4618-a49c-|
              000000b0  30 36 66 39 63 38 33 64  63 33 65 63 5c 22 7d 22  |06f9c83dc3ec\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  31 39 5c 22 7d 22 3a 7b  |.244.1.119\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jcbfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jcbfm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=12) "10.244.1.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873602067,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://55b42bc2db89ee7c590b347cec11210ee1ae7e88fed85eb36712a54a8e1478f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jcbfm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0127 19:14:28.970218 23 deployment.go:669] pod: "test-deployment-79899bcfcc-zzf9m":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-zzf9m",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-7743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cf59de9-5af4-48b6-b2b3-96a76c1cef27",
      ResourceVersion: (string) (len=5) "13334",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "d4bdf235-e7d5-4618-a49c-06f9c83dc3ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 34 62 64 66 32 33 35  |uid\":\"d4bdf235|
              000000a0  2d 65 37 64 35 2d 34 36  31 38 2d 61 34 39 63 2d  |-e7d5-4618-a49c-|
              000000b0  30 36 66 39 63 38 33 64  63 33 65 63 5c 22 7d 22  |06f9c83dc3ec\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 39  32 5c 22 7d 22 3a 7b 22  |.244.0.92\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x9hrc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x9hrc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=11) "10.244.0.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873602068,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4b605c31c86fa6fab4ec3a8cbf838c104dee4fe4f41ea5f28275084c8f152286",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x9hrc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0127 19:14:28.972785 23 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c0dff76-0699-49e8-b024-4661a0de1264",
      ResourceVersion: (string) (len=5) "13343",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "2e9921c4-3b7b-40d0-bf76-fa217d305787",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 65 39 39  32 31 63 34 2d 33 62 37  |":\"2e9921c4-3b7|
              00000130  62 2d 34 30 64 30 2d 62  66 37 36 2d 66 61 32 31  |b-40d0-bf76-fa21|
              00000140  37 64 33 30 35 37 38 37  5c 22 7d 22 3a 7b 7d 7d  |7d305787\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0127 19:14:29.046598 23 deployment.go:669] pod: "test-deployment-f78d658f9-hdfg5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-hdfg5",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-7743",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c7c4b3b-b230-42ea-9806-f7be17589db9",
      ResourceVersion: (string) (len=5) "13356",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602066,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602070,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "0c0dff76-0699-49e8-b024-4661a0de1264",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 63 30 64 66 66 37 36  |uid\":\"0c0dff76|
              000000a0  2d 30 36 39 39 2d 34 39  65 38 2d 62 30 32 34 2d  |-0699-49e8-b024-|
              000000b0  34 36 36 31 61 30 64 65  31 32 36 34 5c 22 7d 22  |4661a0de1264\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=702) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 30 2e 32 34 34 2e 30  |"ip\":\"10.244.0|
              00000290  2e 39 31 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |.91\"}":{".":{},|
              000002a0  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              000002b0  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j98b9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j98b9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602069,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602066,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=11) "10.244.0.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873602067,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873602068,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://cebc3554097223fc10ea9de77233ff3c21979a024ce0ba97f416f1b8be612c24"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://cebc3554097223fc10ea9de77233ff3c21979a024ce0ba97f416f1b8be612c24",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j98b9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0127 19:14:29.049529 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7743" for this suite. @ 01/27/25 19:14:29.052
• [4.205 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/27/25 19:14:29.056
  I0127 19:14:29.056709 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:14:29.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:29.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:29.067
  STEP: Saw pod success @ 01/27/25 19:14:33.106
  I0127 19:14:33.108201 23 output.go:207] Trying to get logs from node worker-1 pod client-envvars-6772d774-eda3-4783-be8b-b32b651d1736 container env3cont: <nil>
  STEP: delete the pod @ 01/27/25 19:14:33.119
  I0127 19:14:33.131211 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4658" for this suite. @ 01/27/25 19:14:33.133
• [4.083 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/27/25 19:14:33.139
  I0127 19:14:33.139596 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:14:33.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:33.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:33.151
  STEP: creating a replication controller @ 01/27/25 19:14:33.153
  I0127 19:14:33.153803 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 create -f -'
  I0127 19:14:33.265340 23 builder.go:146] stderr: ""
  I0127 19:14:33.265378 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/27/25 19:14:33.265
  I0127 19:14:33.265463 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:14:33.326548 23 builder.go:146] stderr: ""
  I0127 19:14:33.326592 23 builder.go:147] stdout: "update-demo-nautilus-6mv4v update-demo-nautilus-l47xz "
  I0127 19:14:33.326781 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:14:33.385967 23 builder.go:146] stderr: ""
  I0127 19:14:33.386012 23 builder.go:147] stdout: ""
  I0127 19:14:33.386029 23 kubectl.go:2499] update-demo-nautilus-6mv4v is created but not running
  I0127 19:14:38.386824 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:14:38.473879 23 builder.go:146] stderr: ""
  I0127 19:14:38.473960 23 builder.go:147] stdout: "update-demo-nautilus-6mv4v update-demo-nautilus-l47xz "
  I0127 19:14:38.474012 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:14:38.525524 23 builder.go:146] stderr: ""
  I0127 19:14:38.525699 23 builder.go:147] stdout: "true"
  I0127 19:14:38.525745 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:14:38.577809 23 builder.go:146] stderr: ""
  I0127 19:14:38.577968 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:14:38.577989 23 kubectl.go:2390] validating pod update-demo-nautilus-6mv4v
  I0127 19:14:38.583983 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:14:38.584071 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:14:38.584091 23 kubectl.go:2517] update-demo-nautilus-6mv4v is verified up and running
  I0127 19:14:38.584138 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-l47xz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:14:38.637150 23 builder.go:146] stderr: ""
  I0127 19:14:38.637188 23 builder.go:147] stdout: "true"
  I0127 19:14:38.637233 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-l47xz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:14:38.690402 23 builder.go:146] stderr: ""
  I0127 19:14:38.690458 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:14:38.690471 23 kubectl.go:2390] validating pod update-demo-nautilus-l47xz
  I0127 19:14:38.696651 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:14:38.696696 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:14:38.696711 23 kubectl.go:2517] update-demo-nautilus-l47xz is verified up and running
  STEP: scaling down the replication controller @ 01/27/25 19:14:38.696
  I0127 19:14:38.697823 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0127 19:14:38.697889 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0127 19:14:39.761482 23 builder.go:146] stderr: ""
  I0127 19:14:39.761521 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/27/25 19:14:39.761
  I0127 19:14:39.761758 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:14:39.816253 23 builder.go:146] stderr: ""
  I0127 19:14:39.816295 23 builder.go:147] stdout: "update-demo-nautilus-6mv4v update-demo-nautilus-l47xz "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/27/25 19:14:39.816
  I0127 19:14:44.818136 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:14:44.870745 23 builder.go:146] stderr: ""
  I0127 19:14:44.870779 23 builder.go:147] stdout: "update-demo-nautilus-6mv4v "
  I0127 19:14:44.870866 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:14:44.922238 23 builder.go:146] stderr: ""
  I0127 19:14:44.922278 23 builder.go:147] stdout: "true"
  I0127 19:14:44.922473 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:14:44.975422 23 builder.go:146] stderr: ""
  I0127 19:14:44.975465 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:14:44.975605 23 kubectl.go:2390] validating pod update-demo-nautilus-6mv4v
  I0127 19:14:44.981867 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:14:44.981912 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:14:44.981927 23 kubectl.go:2517] update-demo-nautilus-6mv4v is verified up and running
  STEP: scaling up the replication controller @ 01/27/25 19:14:44.981
  I0127 19:14:44.983048 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0127 19:14:44.983094 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0127 19:14:46.042708 23 builder.go:146] stderr: ""
  I0127 19:14:46.042758 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/27/25 19:14:46.042
  I0127 19:14:46.042864 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:14:46.099259 23 builder.go:146] stderr: ""
  I0127 19:14:46.099298 23 builder.go:147] stdout: "update-demo-nautilus-6mv4v update-demo-nautilus-mk55x "
  I0127 19:14:46.099347 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:14:46.150786 23 builder.go:146] stderr: ""
  I0127 19:14:46.150839 23 builder.go:147] stdout: "true"
  I0127 19:14:46.150891 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-6mv4v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:14:46.203579 23 builder.go:146] stderr: ""
  I0127 19:14:46.203750 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:14:46.203780 23 kubectl.go:2390] validating pod update-demo-nautilus-6mv4v
  I0127 19:14:46.207063 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:14:46.207118 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:14:46.207135 23 kubectl.go:2517] update-demo-nautilus-6mv4v is verified up and running
  I0127 19:14:46.207175 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-mk55x -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:14:46.258895 23 builder.go:146] stderr: ""
  I0127 19:14:46.258932 23 builder.go:147] stdout: "true"
  I0127 19:14:46.258976 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods update-demo-nautilus-mk55x -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:14:46.311489 23 builder.go:146] stderr: ""
  I0127 19:14:46.311535 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:14:46.311547 23 kubectl.go:2390] validating pod update-demo-nautilus-mk55x
  I0127 19:14:46.316236 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:14:46.316289 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:14:46.316308 23 kubectl.go:2517] update-demo-nautilus-mk55x is verified up and running
  STEP: using delete to clean up resources @ 01/27/25 19:14:46.316
  I0127 19:14:46.316386 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 delete --grace-period=0 --force -f -'
  I0127 19:14:46.372139 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:14:46.372174 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0127 19:14:46.372217 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get rc,svc -l name=update-demo --no-headers'
  I0127 19:14:46.428399 23 builder.go:146] stderr: "No resources found in kubectl-8191 namespace.\n"
  I0127 19:14:46.428563 23 builder.go:147] stdout: ""
  I0127 19:14:46.428631 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8191 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0127 19:14:46.481509 23 builder.go:146] stderr: ""
  I0127 19:14:46.481690 23 builder.go:147] stdout: ""
  I0127 19:14:46.481841 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8191" for this suite. @ 01/27/25 19:14:46.484
• [13.351 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/27/25 19:14:46.491
  I0127 19:14:46.491210 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:14:46.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:46.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:46.504
  STEP: Creating secret with name secret-test-9e713e6d-76f4-47b2-b6aa-6abbcdaefc4a @ 01/27/25 19:14:46.506
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:14:46.509
  STEP: Saw pod success @ 01/27/25 19:14:50.525
  I0127 19:14:50.526804 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-2b38477b-ffef-49d2-b2f3-fc2694240074 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:14:50.537
  I0127 19:14:50.547864 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7188" for this suite. @ 01/27/25 19:14:50.55
• [4.063 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/27/25 19:14:50.554
  I0127 19:14:50.554369 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:14:50.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:50.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:50.565
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/27/25 19:14:50.567
  STEP: Saw pod success @ 01/27/25 19:14:54.581
  I0127 19:14:54.583918 23 output.go:207] Trying to get logs from node worker-0 pod pod-2b23be49-8a86-4095-9bdf-65a6eb48ac09 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:14:54.588
  I0127 19:14:54.599524 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3624" for this suite. @ 01/27/25 19:14:54.601
• [4.051 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/27/25 19:14:54.605
  I0127 19:14:54.605489 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replicaset @ 01/27/25 19:14:54.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:54.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:54.618
  STEP: Create a ReplicaSet @ 01/27/25 19:14:54.621
  STEP: Verify that the required pods have come up @ 01/27/25 19:14:54.624
  I0127 19:14:54.626591 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0127 19:14:59.630240 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/27/25 19:14:59.63
  I0127 19:14:59.632081 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/27/25 19:14:59.632
  STEP: DeleteCollection of the ReplicaSets @ 01/27/25 19:14:59.634
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/27/25 19:14:59.638
  I0127 19:14:59.639881 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5507" for this suite. @ 01/27/25 19:14:59.642
• [5.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/27/25 19:14:59.657
  I0127 19:14:59.657375 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 19:14:59.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:14:59.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:14:59.742
  I0127 19:15:01.755470 23 delete.go:62] Deleting pod "var-expansion-7e42b214-25af-486e-80b7-381f49f11f10" in namespace "var-expansion-5730"
  I0127 19:15:01.761672 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-7e42b214-25af-486e-80b7-381f49f11f10" to be fully deleted
  I0127 19:15:03.766794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5730" for this suite. @ 01/27/25 19:15:03.769
• [4.118 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362
  STEP: Creating a kubernetes client @ 01/27/25 19:15:03.775
  I0127 19:15:03.775338 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:15:03.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:03.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:03.787
  STEP: validating cluster-info @ 01/27/25 19:15:03.789
  I0127 19:15:03.789416 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-7433 cluster-info'
  I0127 19:15:03.844467 23 builder.go:146] stderr: ""
  I0127 19:15:03.844500 23 builder.go:147] stdout: "Kubernetes control plane is running at https://10.96.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0127 19:15:03.844631 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7433" for this suite. @ 01/27/25 19:15:03.87
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 01/27/25 19:15:03.874
  I0127 19:15:03.874751 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/27/25 19:15:03.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:03.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:03.886
  STEP: getting /apis @ 01/27/25 19:15:03.893
  STEP: getting /apis/admissionregistration.k8s.io @ 01/27/25 19:15:03.896
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/27/25 19:15:03.897
  STEP: creating @ 01/27/25 19:15:03.897
  STEP: getting @ 01/27/25 19:15:03.911
  STEP: listing @ 01/27/25 19:15:03.913
  STEP: watching @ 01/27/25 19:15:03.914
  I0127 19:15:03.915010 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 01/27/25 19:15:03.916
  STEP: updating @ 01/27/25 19:15:03.928
  I0127 19:15:03.936679 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 01/27/25 19:15:03.936
  STEP: patching /status @ 01/27/25 19:15:03.94
  STEP: updating /status @ 01/27/25 19:15:03.948
  STEP: deleting @ 01/27/25 19:15:03.974
  STEP: deleting a collection @ 01/27/25 19:15:03.98
  I0127 19:15:03.989676 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3123" for this suite. @ 01/27/25 19:15:03.991
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/27/25 19:15:03.995
  I0127 19:15:03.995748 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:15:03.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:04.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:04.009
  I0127 19:15:04.012196 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: creating the pod @ 01/27/25 19:15:04.012
  STEP: submitting the pod to kubernetes @ 01/27/25 19:15:04.012
  I0127 19:15:06.081919 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1867" for this suite. @ 01/27/25 19:15:06.084
• [2.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/27/25 19:15:06.088
  I0127 19:15:06.088638 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:15:06.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:06.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:06.1
  STEP: Creating configMap with name configmap-test-volume-map-f456e1d4-d7fb-4259-98e7-e6dda56d5ca4 @ 01/27/25 19:15:06.102
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:15:06.106
  STEP: Saw pod success @ 01/27/25 19:15:08.117
  I0127 19:15:08.119910 23 output.go:207] Trying to get logs from node worker-1 pod pod-configmaps-3f1cd4da-6ff3-4258-8e9b-9b936ab83581 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:15:08.124
  I0127 19:15:08.137764 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6459" for this suite. @ 01/27/25 19:15:08.14
• [2.055 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388
  STEP: Creating a kubernetes client @ 01/27/25 19:15:08.144
  I0127 19:15:08.144072 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:15:08.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:08.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:08.158
  I0127 19:15:08.160598 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 create -f -'
  I0127 19:15:08.276406 23 builder.go:146] stderr: ""
  I0127 19:15:08.276443 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0127 19:15:08.276526 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 create -f -'
  I0127 19:15:08.398066 23 builder.go:146] stderr: ""
  I0127 19:15:08.398124 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/27/25 19:15:08.398
  I0127 19:15:09.401649 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 19:15:09.401686 23 framework.go:733] Found 1 / 1
  I0127 19:15:09.401704 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0127 19:15:09.403573 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 19:15:09.403599 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0127 19:15:09.403639 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 describe pod agnhost-primary-czfx5'
  I0127 19:15:09.463204 23 builder.go:146] stderr: ""
  I0127 19:15:09.463265 23 builder.go:147] stdout: "Name:             agnhost-primary-czfx5\nNamespace:        kubectl-1591\nPriority:         0\nService Account:  default\nNode:             worker-1/10.0.33.3\nStart Time:       Mon, 27 Jan 2025 19:15:08 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.0.98\nIPs:\n  IP:           10.244.0.98\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://88d37696196bcf40ff1abe371e49a95d4e60e471e906481cc32aadd2efa8531d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 27 Jan 2025 19:15:08 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-v9275 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-v9275:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1591/agnhost-primary-czfx5 to worker-1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0127 19:15:09.463323 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 describe rc agnhost-primary'
  I0127 19:15:09.520809 23 builder.go:146] stderr: ""
  I0127 19:15:09.520858 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1591\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-czfx5\n"
  I0127 19:15:09.520906 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 describe service agnhost-primary'
  I0127 19:15:09.577367 23 builder.go:146] stderr: ""
  I0127 19:15:09.577419 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-1591\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.103.178.237\nIPs:                      10.103.178.237\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.244.0.98:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0127 19:15:09.579781 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 describe node worker-0'
  I0127 19:15:09.647779 23 builder.go:146] stderr: ""
  I0127 19:15:09.647867 23 builder.go:147] stdout: "Name:               worker-0\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker-0\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 27 Jan 2025 18:31:21 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker-0\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 27 Jan 2025 19:15:04 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 27 Jan 2025 19:14:53 +0000   Mon, 27 Jan 2025 18:31:21 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 27 Jan 2025 19:14:53 +0000   Mon, 27 Jan 2025 18:31:21 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 27 Jan 2025 19:14:53 +0000   Mon, 27 Jan 2025 18:31:21 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 27 Jan 2025 19:14:53 +0000   Mon, 27 Jan 2025 18:31:37 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.0.52.184\n  Hostname:    worker-0\nCapacity:\n  cpu:                4\n  ephemeral-storage:  50620216Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7612604Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  46651590989\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7510204Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 73d887018e4b4a80a6e4571b9fef4b31\n  System UUID:                ec273553-c935-092d-b573-eb6b12bb5972\n  Boot ID:                    4a0b2e42-6a53-4b00-af6d-4eeecc5f207f\n  Kernel Version:             6.8.0-1021-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.24\n  Kubelet Version:            v1.32.1+k0s\n  Kube-Proxy Version:         v1.32.1+k0s\nPodCIDR:                      10.244.1.0/24\nPodCIDRs:                     10.244.1.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7d4f7fbd5c-x2hqf                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     43m\n  kube-system                 konnectivity-agent-dtqvz                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         43m\n  kube-system                 kube-proxy-llfpl                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         43m\n  kube-system                 kube-router-bn8bm                                          250m (6%)     0 (0%)      16Mi (0%)        0 (0%)         43m\n  kube-system                 metrics-server-7778865875-7v89t                            10m (0%)      0 (0%)      30M (0%)         0 (0%)         43m\n  pods-1867                   pod-exec-websocket-c211b17d-cddc-46f2-9670-535667d21141    0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         43m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-6tlkx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         43m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests        Limits\n  --------           --------        ------\n  cpu                360m (9%)       0 (0%)\n  memory             120177536 (1%)  170Mi (2%)\n  ephemeral-storage  0 (0%)          0 (0%)\n  hugepages-1Gi      0 (0%)          0 (0%)\n  hugepages-2Mi      0 (0%)          0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 43m                kube-proxy       \n  Normal   Starting                 43m                kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      43m                kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  43m (x2 over 43m)  kubelet          Node worker-0 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    43m (x2 over 43m)  kubelet          Node worker-0 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     43m (x2 over 43m)  kubelet          Node worker-0 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  43m                kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           43m                node-controller  Node worker-0 event: Registered Node worker-0 in Controller\n  Normal   NodeReady                43m                kubelet          Node worker-0 status is now: NodeReady\n"
  I0127 19:15:09.647987 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-1591 describe namespace kubectl-1591'
  I0127 19:15:09.705011 23 builder.go:146] stderr: ""
  I0127 19:15:09.705208 23 builder.go:147] stdout: "Name:         kubectl-1591\nLabels:       e2e-framework=kubectl\n              e2e-run=73e89e7e-9885-4051-b352-e5204bed17d9\n              kubernetes.io/metadata.name=kubectl-1591\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0127 19:15:09.705357 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1591" for this suite. @ 01/27/25 19:15:09.707
• [1.569 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/27/25 19:15:09.713
  I0127 19:15:09.713415 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:15:09.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:09.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:09.81
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/27/25 19:15:09.813
  STEP: Saw pod success @ 01/27/25 19:15:13.828
  I0127 19:15:13.830573 23 output.go:207] Trying to get logs from node worker-0 pod pod-eb2221c9-faa4-4f0e-992e-63dc5482b029 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:15:13.835
  I0127 19:15:13.845284 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4069" for this suite. @ 01/27/25 19:15:13.849
• [4.139 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/27/25 19:15:13.853
  I0127 19:15:13.853056 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 19:15:13.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:13.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:13.866
  I0127 19:15:13.868635 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0127 19:15:13.873935 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0127 19:15:18.877472 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/27/25 19:15:18.877
  I0127 19:15:18.877546 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0127 19:15:18.885090 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0127 19:15:18.894224 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0127 19:15:20.899705 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0127 19:15:20.901320 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0127 19:15:20.906684 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28f8e5c6-74ac-44d9-8371-b789e7c61f38",
      ResourceVersion: (string) (len=5) "13994",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602118,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 19:15:20.909842 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41ee932d-7df9-4609-b668-b66e5dc4c447",
      ResourceVersion: (string) (len=5) "13984",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602118,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "28f8e5c6-74ac-44d9-8371-b789e7c61f38",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 66 38 65 35  63 36 2d 37 34 61 63 2d  |\"28f8e5c6-74ac-|
              00000120  34 34 64 39 2d 38 33 37  31 2d 62 37 38 39 65 37  |44d9-8371-b789e7|
              00000130  63 36 31 66 33 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c61f38\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 19:15:20.910917 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0127 19:15:20.911631 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10d23342-ba5d-4237-89a8-e3d920302476",
      ResourceVersion: (string) (len=5) "13993",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "28f8e5c6-74ac-44d9-8371-b789e7c61f38",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 38 66 38 65 35 63  |"uid\":\"28f8e5c|
              000000b0  36 2d 37 34 61 63 2d 34  34 64 39 2d 38 33 37 31  |6-74ac-44d9-8371|
              000000c0  2d 62 37 38 39 65 37 63  36 31 66 33 38 5c 22 7d  |-b789e7c61f38\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 19:15:20.914920 23 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-c28p4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-c28p4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "425e3633-d984-42f1-878c-3dee35e190b1",
      ResourceVersion: (string) (len=5) "13983",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602118,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "41ee932d-7df9-4609-b668-b66e5dc4c447",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  65 65 39 33 32 64 2d 37  |d\":\"41ee932d-7|
              00000090  64 66 39 2d 34 36 30 39  2d 62 36 36 38 2d 62 36  |df9-4609-b668-b6|
              000000a0  36 65 35 64 63 34 63 34  34 37 5c 22 7d 22 3a 7b  |6e5dc4c447\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 39  39 5c 22 7d 22 3a 7b 22  |.244.0.99\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nr75x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nr75x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602120,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602118,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=11) "10.244.0.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.0.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602118,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873602119,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://7d1720d75109723d8a2b35adde3d2c6bb361824a7fabb7a75088697322f6cad8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nr75x",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:15:20.917084 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8179" for this suite. @ 01/27/25 19:15:20.919
• [7.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/27/25 19:15:20.923
  I0127 19:15:20.923292 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:15:20.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:20.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:20.934
  STEP: Setting up server cert @ 01/27/25 19:15:21.034
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:15:21.595
  STEP: Deploying the webhook pod @ 01/27/25 19:15:21.601
  STEP: Wait for the deployment to be ready @ 01/27/25 19:15:21.61
  I0127 19:15:21.617094 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:15:23.625
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:15:23.636
  I0127 19:15:24.636495 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/27/25 19:15:24.64
  STEP: create a namespace for the webhook @ 01/27/25 19:15:24.656
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/27/25 19:15:24.664
  I0127 19:15:24.711743 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-117" for this suite. @ 01/27/25 19:15:24.715
  STEP: Destroying namespace "webhook-markers-3043" for this suite. @ 01/27/25 19:15:24.721
  STEP: Destroying namespace "fail-closed-namespace-6192" for this suite. @ 01/27/25 19:15:24.724
• [3.805 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/27/25 19:15:24.729
  I0127 19:15:24.729241 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:15:24.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:15:24.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:15:24.77
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-697e2ef0-97d4-4c4d-9384-58b8846313a8 @ 01/27/25 19:15:24.814
  STEP: Creating the pod @ 01/27/25 19:15:24.818
  STEP: Updating configmap projected-configmap-test-upd-697e2ef0-97d4-4c4d-9384-58b8846313a8 @ 01/27/25 19:15:26.837
  STEP: waiting to observe update in volume @ 01/27/25 19:15:26.842
  I0127 19:16:51.135203 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8788" for this suite. @ 01/27/25 19:16:51.137
• [86.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/27/25 19:16:51.141
  I0127 19:16:51.141885 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/27/25 19:16:51.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:16:51.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:16:51.155
  I0127 19:16:51.157758 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:16:51.686872 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5469" for this suite. @ 01/27/25 19:16:51.69
• [0.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/27/25 19:16:51.697
  I0127 19:16:51.697462 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename lease-test @ 01/27/25 19:16:51.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:16:51.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:16:51.708
  I0127 19:16:51.743327 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6791" for this suite. @ 01/27/25 19:16:51.791
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/27/25 19:16:51.795
  I0127 19:16:51.795403 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:16:51.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:16:51.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:16:51.811
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/27/25 19:16:51.813
  STEP: Saw pod success @ 01/27/25 19:16:55.83
  I0127 19:16:55.832161 23 output.go:207] Trying to get logs from node worker-1 pod pod-e95ebc11-ef29-4a13-91a5-2d1377e0ea91 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:16:55.844
  I0127 19:16:55.855240 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1040" for this suite. @ 01/27/25 19:16:55.857
• [4.066 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 01/27/25 19:16:55.861
  I0127 19:16:55.861528 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 19:16:55.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:16:55.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:16:55.872
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/27/25 19:16:55.874
  I0127 19:16:55.879545 23 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-23  5e480437-c039-4ccd-b952-155d8a07a29b 14358 0 2025-01-27 19:16:55 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-27 19:16:55 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tw68h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tw68h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/27/25 19:16:57.883
  I0127 19:16:57.883682 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-23 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:16:57.883702 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:16:57.883749 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-23/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/27/25 19:16:57.94
  I0127 19:16:57.940438 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-23 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:16:57.940459 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:16:57.940516 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-23/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0127 19:16:57.995003 23 dns.go:450] Deleting pod test-dns-nameservers...
  I0127 19:16:58.005258 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-23" for this suite. @ 01/27/25 19:16:58.007
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 01/27/25 19:16:58.011
  I0127 19:16:58.011591 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:16:58.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:16:58.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:16:58.025
  STEP: creating service multiprotocol-test in namespace services-9076 @ 01/27/25 19:16:58.028
  STEP: creating pod pod1 in namespace services-9076 @ 01/27/25 19:16:58.038
  STEP: Creating pod pod1 in namespace services-9076 @ 01/27/25 19:16:58.038
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-9076 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/27/25 19:17:00.054
  I0127 19:17:00.060158 23 service.go:4553] successfully validated that service multiprotocol-test in namespace services-9076 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/27/25 19:17:00.06
  I0127 19:17:00.060216 23 resource.go:361] Creating new exec pod
  I0127 19:17:02.068657 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80'
  I0127 19:17:02.165525 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.119.81 80\nConnection to 10.109.119.81 80 port [tcp/http] succeeded!\n"
  I0127 19:17:02.165568 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:17:02.165781 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.119.81 80'
  I0127 19:17:04.263656 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.119.81 80\n"
  I0127 19:17:04.263812 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/27/25 19:17:04.263
  I0127 19:17:04.269662 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80'
  I0127 19:17:04.368994 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.119.81 80\nConnection to 10.109.119.81 80 port [tcp/http] succeeded!\n"
  I0127 19:17:04.369162 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:17:04.369268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.119.81 80'
  I0127 19:17:06.464814 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.119.81 80\n"
  I0127 19:17:06.464872 23 builder.go:147] stdout: ""
  I0127 19:17:06.464973 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.119.81 80'
  I0127 19:17:08.560386 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.119.81 80\n"
  I0127 19:17:08.560562 23 builder.go:147] stdout: ""
  I0127 19:17:08.560638 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.119.81 80'
  I0127 19:17:10.660688 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.119.81 80\n"
  I0127 19:17:10.660753 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/27/25 19:17:10.66
  I0127 19:17:10.667130 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.109.119.81 80'
  I0127 19:17:12.769385 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.109.119.81 80\n"
  I0127 19:17:12.769430 23 builder.go:147] stdout: "pod1"
  I0127 19:17:12.769528 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80'
  I0127 19:17:14.877093 23 builder.go:135] rc: 1
  I0127 19:17:14.877192 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.109.119.81 80
  nc: connect to 10.109.119.81 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 19:17:14.877359 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80'
  I0127 19:17:16.971915 23 builder.go:135] rc: 1
  I0127 19:17:16.972140 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.109.119.81 80
  nc: connect to 10.109.119.81 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 19:17:16.972267 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80'
  I0127 19:17:19.071587 23 builder.go:135] rc: 1
  I0127 19:17:19.071788 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-9076 exec execpodf6t5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.119.81 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.109.119.81 80
  nc: connect to 10.109.119.81 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 19:17:19.072006 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9076" for this suite. @ 01/27/25 19:17:19.074
• [21.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/27/25 19:17:19.078
  I0127 19:17:19.078813 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/27/25 19:17:19.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:17:19.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:17:19.09
  STEP: creating the policy @ 01/27/25 19:17:19.096
  STEP: waiting until the marker is denied @ 01/27/25 19:17:19.108
  STEP: testing a replicated Deployment to be allowed @ 01/27/25 19:17:19.916
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/27/25 19:17:19.925
  I0127 19:17:19.964849 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5295" for this suite. @ 01/27/25 19:17:19.973
• [0.899 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/27/25 19:17:19.981
  I0127 19:17:19.981195 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replication-controller @ 01/27/25 19:17:19.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:17:19.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:17:19.992
  I0127 19:17:19.994278 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/27/25 19:17:21.003
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/27/25 19:17:21.009
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/27/25 19:17:22.014
  I0127 19:17:22.022375 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/27/25 19:17:22.022
  I0127 19:17:23.028446 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3338" for this suite. @ 01/27/25 19:17:23.03
• [3.053 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/27/25 19:17:23.034
  I0127 19:17:23.034511 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:17:23.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:17:23.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:17:23.046
  STEP: Creating configMap configmap-6308/configmap-test-f3c961dc-fc70-4514-8abc-5a8777e5e047 @ 01/27/25 19:17:23.049
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:17:23.052
  STEP: Saw pod success @ 01/27/25 19:17:27.066
  I0127 19:17:27.068089 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-ca90f2bf-413e-4e07-830e-8d64b042a726 container env-test: <nil>
  STEP: delete the pod @ 01/27/25 19:17:27.073
  I0127 19:17:27.084165 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6308" for this suite. @ 01/27/25 19:17:27.086
• [4.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/27/25 19:17:27.092
  I0127 19:17:27.092419 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:17:27.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:17:27.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:17:27.103
  STEP: Creating configMap with name projected-configmap-test-volume-b2e5a070-aa59-44ec-8d36-a3458562ad2f @ 01/27/25 19:17:27.105
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:17:27.11
  STEP: Saw pod success @ 01/27/25 19:17:31.124
  I0127 19:17:31.126165 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-3a5dbb75-ff8e-491a-bd76-17e4ad12fe82 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:17:31.13
  I0127 19:17:31.149302 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6868" for this suite. @ 01/27/25 19:17:31.152
• [4.067 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/27/25 19:17:31.159
  I0127 19:17:31.159163 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 19:17:31.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:17:31.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:17:31.178
  STEP: Creating pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717 @ 01/27/25 19:17:31.181
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 19:17:33.197
  I0127 19:17:33.199893 23 container_probe.go:1749] Initial restart count of pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e is 0
  I0127 19:17:33.201526 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:35.204298 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:37.207677 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:39.210998 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:41.214383 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:43.218107 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:45.221637 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:47.225028 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:49.227996 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:51.231493 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:53.235028 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:55.237549 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:57.240111 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:17:59.243165 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:01.245736 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:03.249494 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:05.252920 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:07.256483 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:09.259731 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:11.262774 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:13.266493 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:15.269020 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:17.272441 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:19.276362 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:21.279841 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:23.283382 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:25.286348 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:27.289763 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:29.292390 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:31.295849 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:33.299059 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:35.302495 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:37.305026 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:39.309318 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:41.312611 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:43.316434 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:45.319007 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:47.321468 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:49.325206 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:51.328634 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:53.332312 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:55.335727 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:57.339296 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:18:59.342627 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:01.346550 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:03.349249 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:05.352668 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:07.356241 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:09.359669 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:11.363074 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:13.367092 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:15.370073 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:17.373442 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:19.376788 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:21.380334 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:23.384106 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:25.388017 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:27.391533 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:29.394717 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:31.397952 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:33.400571 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:35.403993 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:37.407423 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:39.409813 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:41.412891 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:43.416592 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:45.420152 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:47.423477 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:49.426837 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:51.430314 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:53.433627 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:55.437669 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:57.441024 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:19:59.444936 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:01.447589 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:03.451179 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:05.454648 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:07.457719 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:09.461426 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:11.464597 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:13.468169 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:15.471556 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:17.473965 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:19.476987 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:21.480863 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:23.484384 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:25.487733 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:27.491272 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:29.494557 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:31.497884 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:33.501703 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:35.505118 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:37.508318 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:39.511620 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:41.514959 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:43.518571 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:45.522231 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:47.525546 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:49.528819 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:51.531429 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:53.534277 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:55.537650 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:57.540997 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:20:59.544740 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:01.547214 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:03.551323 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:05.554582 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:07.558086 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:09.561534 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:11.564292 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:13.567339 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:15.570836 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:17.573385 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:19.576695 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:21.579394 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:23.582669 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:25.585364 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:27.588749 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:29.592081 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  I0127 19:21:31.595566 23 container_probe.go:1759] Get pod liveness-e1f850a9-1632-4d22-af2f-d82c7630291e in namespace container-probe-2717
  STEP: deleting the pod @ 01/27/25 19:21:33.595
  I0127 19:21:33.607531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2717" for this suite. @ 01/27/25 19:21:33.61
• [242.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/27/25 19:21:33.614
  I0127 19:21:33.614922 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replicaset @ 01/27/25 19:21:33.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:21:33.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:21:33.633
  I0127 19:21:33.635622 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-4b3fa324-985c-43fc-89e8-105e891d7ce6
  I0127 19:21:33.641164 23 resource.go:87] Pod name my-hostname-basic-4b3fa324-985c-43fc-89e8-105e891d7ce6: Found 0 pods out of 1
  I0127 19:21:38.645080 23 resource.go:87] Pod name my-hostname-basic-4b3fa324-985c-43fc-89e8-105e891d7ce6: Found 1 pods out of 1
  I0127 19:21:38.645117 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-4b3fa324-985c-43fc-89e8-105e891d7ce6" is running
  I0127 19:21:38.646976 23 replica_set.go:220] Pod "my-hostname-basic-4b3fa324-985c-43fc-89e8-105e891d7ce6-rjbwf" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:21:34 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:21:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:21:34 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:21:34 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-27 19:21:33 +0000 UTC Reason: Message:}])
  I0127 19:21:38.647007 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/27/25 19:21:38.647
  I0127 19:21:38.655906 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6510" for this suite. @ 01/27/25 19:21:38.658
• [5.047 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/27/25 19:21:38.662
  I0127 19:21:38.662307 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:21:38.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:21:38.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:21:38.675
  STEP: Create a pod @ 01/27/25 19:21:38.677
  STEP: patching /status @ 01/27/25 19:21:40.69
  I0127 19:21:40.698600 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0127 19:21:40.698755 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-17" for this suite. @ 01/27/25 19:21:40.701
• [2.043 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/27/25 19:21:40.705
  I0127 19:21:40.705333 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:21:40.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:21:40.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:21:40.716
  STEP: creating secret secrets-3240/secret-test-c34399a4-6c49-45d4-915e-2a7f2eafd51c @ 01/27/25 19:21:40.718
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:21:40.721
  STEP: Saw pod success @ 01/27/25 19:21:44.735
  I0127 19:21:44.737671 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-ef2559ae-280e-426d-8570-93df4b06a2d6 container env-test: <nil>
  STEP: delete the pod @ 01/27/25 19:21:44.75
  I0127 19:21:44.761891 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3240" for this suite. @ 01/27/25 19:21:44.764
• [4.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/27/25 19:21:44.768
  I0127 19:21:44.768170 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/27/25 19:21:44.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:21:44.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:21:44.78
  STEP: Creating 50 configmaps @ 01/27/25 19:21:44.783
  STEP: Creating RC which spawns configmap-volume pods @ 01/27/25 19:21:45.021
  I0127 19:21:45.128295 23 resource.go:87] Pod name wrapped-volume-race-a6350e81-f3f2-447d-8a60-001bc81c2d88: Found 3 pods out of 5
  I0127 19:21:50.134724 23 resource.go:87] Pod name wrapped-volume-race-a6350e81-f3f2-447d-8a60-001bc81c2d88: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/27/25 19:21:50.134
  STEP: Creating RC which spawns configmap-volume pods @ 01/27/25 19:21:50.147
  I0127 19:21:50.163182 23 resource.go:87] Pod name wrapped-volume-race-9dec9a0c-585d-4029-81fe-9386ca8ffe4f: Found 1 pods out of 5
  I0127 19:21:55.170334 23 resource.go:87] Pod name wrapped-volume-race-9dec9a0c-585d-4029-81fe-9386ca8ffe4f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/27/25 19:21:55.17
  STEP: Creating RC which spawns configmap-volume pods @ 01/27/25 19:21:55.183
  I0127 19:21:55.200054 23 resource.go:87] Pod name wrapped-volume-race-f5d7186c-dece-4cf5-863c-2913205e63a5: Found 1 pods out of 5
  I0127 19:22:00.207087 23 resource.go:87] Pod name wrapped-volume-race-f5d7186c-dece-4cf5-863c-2913205e63a5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/27/25 19:22:00.207
  STEP: deleting ReplicationController wrapped-volume-race-f5d7186c-dece-4cf5-863c-2913205e63a5 in namespace emptydir-wrapper-6134, will wait for the garbage collector to delete the pods @ 01/27/25 19:22:00.218
  I0127 19:22:00.276274 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-f5d7186c-dece-4cf5-863c-2913205e63a5 took: 4.65209ms
  I0127 19:22:00.376766 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-f5d7186c-dece-4cf5-863c-2913205e63a5 pods took: 100.488479ms
  STEP: deleting ReplicationController wrapped-volume-race-9dec9a0c-585d-4029-81fe-9386ca8ffe4f in namespace emptydir-wrapper-6134, will wait for the garbage collector to delete the pods @ 01/27/25 19:22:00.877
  I0127 19:22:00.935901 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-9dec9a0c-585d-4029-81fe-9386ca8ffe4f took: 5.039676ms
  I0127 19:22:01.037599 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-9dec9a0c-585d-4029-81fe-9386ca8ffe4f pods took: 101.692214ms
  STEP: deleting ReplicationController wrapped-volume-race-a6350e81-f3f2-447d-8a60-001bc81c2d88 in namespace emptydir-wrapper-6134, will wait for the garbage collector to delete the pods @ 01/27/25 19:22:01.938
  I0127 19:22:01.997780 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-a6350e81-f3f2-447d-8a60-001bc81c2d88 took: 4.701639ms
  I0127 19:22:02.098820 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-a6350e81-f3f2-447d-8a60-001bc81c2d88 pods took: 101.037542ms
  STEP: Cleaning up the configMaps @ 01/27/25 19:22:02.999
  I0127 19:22:03.162661 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6134" for this suite. @ 01/27/25 19:22:03.164
• [18.401 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 01/27/25 19:22:03.168
  I0127 19:22:03.168854 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 19:22:03.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:03.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:03.179
  I0127 19:22:03.183010 23 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-753"
  I0127 19:22:03.186205 23 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-753"
  STEP: waiting for a new root ca configmap created @ 01/27/25 19:22:03.686
  I0127 19:22:03.689259 23 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-753"
  I0127 19:22:03.692594 23 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-753"
  STEP: waiting for the root ca configmap reconciled @ 01/27/25 19:22:04.193
  I0127 19:22:04.195454 23 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-753"
  I0127 19:22:04.195595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-753" for this suite. @ 01/27/25 19:22:04.198
• [1.033 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/27/25 19:22:04.201
  I0127 19:22:04.201882 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename podtemplate @ 01/27/25 19:22:04.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:04.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:04.212
  STEP: Create set of pod templates @ 01/27/25 19:22:04.214
  I0127 19:22:04.218621 23 podtemplates.go:143] created test-podtemplate-1
  I0127 19:22:04.221722 23 podtemplates.go:143] created test-podtemplate-2
  I0127 19:22:04.226726 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/27/25 19:22:04.226
  STEP: delete collection of pod templates @ 01/27/25 19:22:04.228
  I0127 19:22:04.228392 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/27/25 19:22:04.236
  I0127 19:22:04.236641 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0127 19:22:04.238709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8005" for this suite. @ 01/27/25 19:22:04.299
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/27/25 19:22:04.303
  I0127 19:22:04.303322 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 19:22:04.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:04.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:04.32
  I0127 19:22:04.323592 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/27/25 19:22:05.536
  I0127 19:22:05.536462 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-5646 --namespace=crd-publish-openapi-5646 create -f -'
  I0127 19:22:07.616916 23 builder.go:146] stderr: ""
  I0127 19:22:07.616964 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1426-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0127 19:22:07.617090 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-5646 --namespace=crd-publish-openapi-5646 delete e2e-test-crd-publish-openapi-1426-crds test-cr'
  I0127 19:22:07.672430 23 builder.go:146] stderr: ""
  I0127 19:22:07.672466 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1426-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0127 19:22:07.672523 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-5646 --namespace=crd-publish-openapi-5646 apply -f -'
  I0127 19:22:07.732760 23 builder.go:146] stderr: ""
  I0127 19:22:07.732797 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1426-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0127 19:22:07.732836 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-5646 --namespace=crd-publish-openapi-5646 delete e2e-test-crd-publish-openapi-1426-crds test-cr'
  I0127 19:22:07.788074 23 builder.go:146] stderr: ""
  I0127 19:22:07.788145 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1426-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/27/25 19:22:07.788
  I0127 19:22:07.788217 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-5646 explain e2e-test-crd-publish-openapi-1426-crds'
  I0127 19:22:07.841603 23 builder.go:146] stderr: ""
  I0127 19:22:07.841782 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1426-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0127 19:22:09.049847 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5646" for this suite. @ 01/27/25 19:22:09.055
• [4.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 01/27/25 19:22:09.061
  I0127 19:22:09.061894 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 19:22:09.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:09.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:09.072
  STEP: Creating a job @ 01/27/25 19:22:09.074
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/27/25 19:22:09.08
  STEP: patching /status @ 01/27/25 19:22:11.088
  STEP: updating /status @ 01/27/25 19:22:11.096
  STEP: get /status @ 01/27/25 19:22:11.101
  I0127 19:22:11.103667 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9088" for this suite. @ 01/27/25 19:22:11.105
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/27/25 19:22:11.11
  I0127 19:22:11.110408 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 19:22:11.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:11.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:11.121
  I0127 19:22:11.123561 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0127 19:22:11.127004 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0127 19:22:11.130779 23 deployment.go:223] new replicaset for deployment "test-recreate-deployment" is yet to be created
  I0127 19:22:13.135479 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0127 19:22:13.136996 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0127 19:22:13.142346 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0127 19:22:13.142377 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0127 19:22:13.205738 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2943",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f04331b-e58a-4920-af93-85b977608af2",
      ResourceVersion: (string) (len=5) "16124",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 19:22:13.236831 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2943",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1aa9d5ea-8418-4e0c-a6eb-adf13dae6507",
      ResourceVersion: (string) (len=5) "16121",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4f04331b-e58a-4920-af93-85b977608af2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 30 34 33 33  31 62 2d 65 35 38 61 2d  |\"4f04331b-e58a-|
              00000120  34 39 32 30 2d 61 66 39  33 2d 38 35 62 39 37 37  |4920-af93-85b977|
              00000130  36 30 38 61 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |608af2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 19:22:13.237822 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0127 19:22:13.238241 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2943",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8e88a1d-bbe5-4f0b-a5b5-b126d934bbc0",
      ResourceVersion: (string) (len=5) "16112",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4f04331b-e58a-4920-af93-85b977608af2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 30 34 33 33  31 62 2d 65 35 38 61 2d  |\"4f04331b-e58a-|
              00000120  34 39 32 30 2d 61 66 39  33 2d 38 35 62 39 37 37  |4920-af93-85b977|
              00000130  36 30 38 61 66 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |608af2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 19:22:13.241971 23 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-5p9fz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-5p9fz",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-2943",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38bfaf5b-bf55-4628-a9e1-b2da2a16651b",
      ResourceVersion: (string) (len=5) "16123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "1aa9d5ea-8418-4e0c-a6eb-adf13dae6507",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  61 39 64 35 65 61 2d 38  |d\":\"1aa9d5ea-8|
              00000090  34 31 38 2d 34 65 30 63  2d 61 36 65 62 2d 61 64  |418-4e0c-a6eb-ad|
              000000a0  66 31 33 64 61 65 36 35  30 37 5c 22 7d 22 3a 7b  |f13dae6507\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tvfp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tvfp6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873602533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873602533,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tvfp6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:22:13.244224 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2943" for this suite. @ 01/27/25 19:22:13.246
• [2.140 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/27/25 19:22:13.25
  I0127 19:22:13.250859 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:22:13.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:13.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:13.263
  STEP: Creating a ResourceQuota with best effort scope @ 01/27/25 19:22:13.266
  STEP: Ensuring ResourceQuota status is calculated @ 01/27/25 19:22:13.269
  STEP: Creating a ResourceQuota with not best effort scope @ 01/27/25 19:22:15.272
  STEP: Ensuring ResourceQuota status is calculated @ 01/27/25 19:22:15.275
  STEP: Creating a best-effort pod @ 01/27/25 19:22:17.278
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/27/25 19:22:17.289
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/27/25 19:22:19.291
  STEP: Deleting the pod @ 01/27/25 19:22:21.294
  STEP: Ensuring resource quota status released the pod usage @ 01/27/25 19:22:21.303
  STEP: Creating a not best-effort pod @ 01/27/25 19:22:23.307
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/27/25 19:22:23.316
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/27/25 19:22:25.319
  STEP: Deleting the pod @ 01/27/25 19:22:27.323
  STEP: Ensuring resource quota status released the pod usage @ 01/27/25 19:22:27.328
  I0127 19:22:29.332222 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4546" for this suite. @ 01/27/25 19:22:29.334
• [16.087 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/27/25 19:22:29.338
  I0127 19:22:29.338425 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 19:22:29.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:29.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:29.351
  STEP: apply creating a deployment @ 01/27/25 19:22:29.354
  I0127 19:22:29.361551 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5640" for this suite. @ 01/27/25 19:22:29.435
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/27/25 19:22:29.439
  I0127 19:22:29.439501 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:22:29.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:29.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:29.452
  STEP: creating pod @ 01/27/25 19:22:29.454
  I0127 19:22:31.467971 23 pods.go:83] Pod pod-hostip-9be7d9b9-e802-42cc-acfb-3523a78df4c2 has hostIP: 10.0.52.184
  I0127 19:22:31.468133 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4460" for this suite. @ 01/27/25 19:22:31.47
• [2.035 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/27/25 19:22:31.474
  I0127 19:22:31.474262 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:22:31.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:31.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:31.487
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/27/25 19:22:31.489
  STEP: Saw pod success @ 01/27/25 19:22:35.503
  I0127 19:22:35.505281 23 output.go:207] Trying to get logs from node worker-1 pod pod-5aad51dc-a03c-470d-95b3-cbacc6fcb918 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:22:35.517
  I0127 19:22:35.527417 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3695" for this suite. @ 01/27/25 19:22:35.529
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/27/25 19:22:35.533
  I0127 19:22:35.533472 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:22:35.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:35.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:35.547
  STEP: Creating projection with secret that has name secret-emptykey-test-54d68b50-fa02-483d-9ca0-e9266f4b2a55 @ 01/27/25 19:22:35.549
  I0127 19:22:35.550604 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6361" for this suite. @ 01/27/25 19:22:35.63
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/27/25 19:22:35.635
  I0127 19:22:35.635400 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename subpath @ 01/27/25 19:22:35.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:35.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:35.648
  STEP: Setting up data @ 01/27/25 19:22:35.65
  STEP: Creating pod pod-subpath-test-projected-g8sl @ 01/27/25 19:22:35.656
  STEP: Creating a pod to test atomic-volume-subpath @ 01/27/25 19:22:35.656
  STEP: Saw pod success @ 01/27/25 19:22:59.705
  I0127 19:22:59.707074 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-projected-g8sl container test-container-subpath-projected-g8sl: <nil>
  STEP: delete the pod @ 01/27/25 19:22:59.712
  STEP: Deleting pod pod-subpath-test-projected-g8sl @ 01/27/25 19:22:59.721
  I0127 19:22:59.721988 23 delete.go:62] Deleting pod "pod-subpath-test-projected-g8sl" in namespace "subpath-784"
  I0127 19:22:59.723673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-784" for this suite. @ 01/27/25 19:22:59.725
• [24.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/27/25 19:22:59.729
  I0127 19:22:59.729751 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubelet-test @ 01/27/25 19:22:59.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:22:59.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:22:59.742
  STEP: Waiting for pod completion @ 01/27/25 19:22:59.752
  I0127 19:23:03.765086 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5963" for this suite. @ 01/27/25 19:23:03.767
• [4.041 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/27/25 19:23:03.77
  I0127 19:23:03.770865 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:23:03.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:03.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:03.784
  STEP: Setting up server cert @ 01/27/25 19:23:03.883
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:23:04.77
  STEP: Deploying the webhook pod @ 01/27/25 19:23:04.775
  STEP: Wait for the deployment to be ready @ 01/27/25 19:23:04.787
  I0127 19:23:04.793824 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:23:06.8
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:23:06.811
  I0127 19:23:07.811957 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0127 19:23:07.816504 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/27/25 19:23:08.323
  STEP: Creating a custom resource that should be denied by the webhook @ 01/27/25 19:23:08.338
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/27/25 19:23:10.361
  STEP: Updating the custom resource with disallowed data should be denied @ 01/27/25 19:23:10.366
  STEP: Deleting the custom resource should be denied @ 01/27/25 19:23:10.373
  STEP: Remove the offending key and value from the custom resource data @ 01/27/25 19:23:10.377
  STEP: Deleting the updated custom resource should be successful @ 01/27/25 19:23:10.384
  I0127 19:23:10.933242 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5262" for this suite. @ 01/27/25 19:23:10.935
  STEP: Destroying namespace "webhook-markers-9582" for this suite. @ 01/27/25 19:23:10.939
• [7.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/27/25 19:23:10.943
  I0127 19:23:10.943380 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/27/25 19:23:10.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:10.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:10.955
  STEP: creating @ 01/27/25 19:23:10.958
  STEP: getting @ 01/27/25 19:23:10.971
  STEP: listing in namespace @ 01/27/25 19:23:10.973
  STEP: patching @ 01/27/25 19:23:10.976
  STEP: deleting @ 01/27/25 19:23:10.983
  I0127 19:23:10.998407 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7018" for this suite. @ 01/27/25 19:23:11.036
• [0.097 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/27/25 19:23:11.04
  I0127 19:23:11.040727 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:23:11.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:11.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:11.055
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/27/25 19:23:11.057
  STEP: Saw pod success @ 01/27/25 19:23:13.068
  I0127 19:23:13.070442 23 output.go:207] Trying to get logs from node worker-1 pod pod-11082c82-54b1-41a5-a7b8-039608bba6bc container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:23:13.074
  I0127 19:23:13.083850 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8721" for this suite. @ 01/27/25 19:23:13.086
• [2.049 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/27/25 19:23:13.089
  I0127 19:23:13.089988 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename apf @ 01/27/25 19:23:13.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:13.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:13.103
  STEP: getting /apis @ 01/27/25 19:23:13.105
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/27/25 19:23:13.108
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/27/25 19:23:13.109
  STEP: creating @ 01/27/25 19:23:13.11
  STEP: getting @ 01/27/25 19:23:13.12
  STEP: listing @ 01/27/25 19:23:13.122
  STEP: watching @ 01/27/25 19:23:13.124
  I0127 19:23:13.124102 23 flowcontrol.go:620] starting watch
  STEP: patching @ 01/27/25 19:23:13.124
  STEP: updating @ 01/27/25 19:23:13.128
  I0127 19:23:13.135346 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/27/25 19:23:13.135
  STEP: patching /status @ 01/27/25 19:23:13.137
  STEP: updating /status @ 01/27/25 19:23:13.14
  STEP: deleting @ 01/27/25 19:23:13.145
  STEP: deleting a collection @ 01/27/25 19:23:13.152
  I0127 19:23:13.161345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6707" for this suite. @ 01/27/25 19:23:13.187
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/27/25 19:23:13.193
  I0127 19:23:13.193395 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 19:23:13.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:13.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:13.204
  STEP: Creating pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820 @ 01/27/25 19:23:13.207
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 19:23:15.217
  I0127 19:23:15.219779 23 container_probe.go:1749] Initial restart count of pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 is 0
  I0127 19:23:15.221483 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:17.224639 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:19.228289 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:21.231850 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:23.234231 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:25.237546 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:27.241054 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:29.244615 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:31.248064 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:33.251295 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:35.254499 23 container_probe.go:1759] Get pod liveness-36a74af6-d07b-4cff-b069-0faed05399d6 in namespace container-probe-9820
  I0127 19:23:35.254536 23 container_probe.go:1763] Restart count of pod container-probe-9820/liveness-36a74af6-d07b-4cff-b069-0faed05399d6 is now 1 (20.03471845s elapsed)
  STEP: deleting the pod @ 01/27/25 19:23:35.254
  I0127 19:23:35.264237 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9820" for this suite. @ 01/27/25 19:23:35.266
• [22.080 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/27/25 19:23:35.273
  I0127 19:23:35.273928 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-runtime @ 01/27/25 19:23:35.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:35.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:35.284
  STEP: create the container @ 01/27/25 19:23:35.286
  W0127 19:23:35.293851      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/27/25 19:23:35.294
  STEP: get the container status @ 01/27/25 19:23:37.301
  STEP: the container should be terminated @ 01/27/25 19:23:37.303
  STEP: the termination message should be set @ 01/27/25 19:23:37.303
  I0127 19:23:37.303333 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/27/25 19:23:37.303
  I0127 19:23:37.310809 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6366" for this suite. @ 01/27/25 19:23:37.312
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/27/25 19:23:37.319
  I0127 19:23:37.319071 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename watch @ 01/27/25 19:23:37.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:37.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:37.329
  STEP: creating a watch on configmaps with label A @ 01/27/25 19:23:37.331
  STEP: creating a watch on configmaps with label B @ 01/27/25 19:23:37.332
  STEP: creating a watch on configmaps with label A or B @ 01/27/25 19:23:37.334
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/27/25 19:23:37.335
  I0127 19:23:37.340585 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16680 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:37.340689 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16680 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/27/25 19:23:37.34
  I0127 19:23:37.345227 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16681 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:37.345326 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16681 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/27/25 19:23:37.345
  I0127 19:23:37.349859 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16682 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:37.349941 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16682 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/27/25 19:23:37.35
  I0127 19:23:37.353439 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16683 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:37.353474 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4911  8594c267-d336-487e-a3b7-8dbe23224b22 16683 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/27/25 19:23:37.353
  I0127 19:23:37.356390 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4911  e47bc00d-ead2-4b2d-a265-8351db18845f 16684 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:37.356479 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4911  e47bc00d-ead2-4b2d-a265-8351db18845f 16684 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/27/25 19:23:47.36
  I0127 19:23:47.364862 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4911  e47bc00d-ead2-4b2d-a265-8351db18845f 16726 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:47.364915 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4911  e47bc00d-ead2-4b2d-a265-8351db18845f 16726 0 2025-01-27 19:23:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-27 19:23:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:23:57.368221 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4911" for this suite. @ 01/27/25 19:23:57.371
• [20.056 seconds]
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/27/25 19:23:57.374
  I0127 19:23:57.374831 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:23:57.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:23:57.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:23:57.385
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6369 @ 01/27/25 19:23:57.388
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/27/25 19:23:57.404
  STEP: creating service externalsvc in namespace services-6369 @ 01/27/25 19:23:57.404
  STEP: creating replication controller externalsvc in namespace services-6369 @ 01/27/25 19:23:57.416
  I0127 19:23:57.423186      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6369, replica count: 2
  I0127 19:24:00.475785      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/27/25 19:24:00.478
  I0127 19:24:00.493694 23 resource.go:361] Creating new exec pod
  I0127 19:24:02.502368 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-6369 exec execpod22pz5 -- /bin/sh -x -c nslookup nodeport-service.services-6369.svc.cluster.local'
  I0127 19:24:02.638088 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-6369.svc.cluster.local\n"
  I0127 19:24:02.638140 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6369.svc.cluster.local\tcanonical name = externalsvc.services-6369.svc.cluster.local.\nName:\texternalsvc.services-6369.svc.cluster.local\nAddress: 10.101.39.171\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6369, will wait for the garbage collector to delete the pods @ 01/27/25 19:24:02.638
  I0127 19:24:02.694820 23 resources.go:139] Deleting ReplicationController externalsvc took: 4.093915ms
  I0127 19:24:02.795753 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.930077ms
  I0127 19:24:05.214199 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0127 19:24:05.230677 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6369" for this suite. @ 01/27/25 19:24:05.233
• [7.862 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 01/27/25 19:24:05.236
  I0127 19:24:05.237004 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 19:24:05.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:24:05.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:24:05.248
  STEP: Creating service test in namespace statefulset-4067 @ 01/27/25 19:24:05.25
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/27/25 19:24:05.254
  STEP: Creating stateful set ss in namespace statefulset-4067 @ 01/27/25 19:24:05.256
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4067 @ 01/27/25 19:24:05.261
  I0127 19:24:05.272889 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0127 19:24:15.266879 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/27/25 19:24:15.266
  I0127 19:24:15.269344 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:24:15.373883 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:24:15.373940 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:24:15.373968 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:24:15.376697 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0127 19:24:25.378855 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:24:25.378895 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0127 19:24:25.480165 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999998574s
  I0127 19:24:26.483109 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.907900994s
  I0127 19:24:27.486483 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.904941625s
  I0127 19:24:28.490250 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.900609505s
  I0127 19:24:29.493022 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.897807159s
  I0127 19:24:30.495581 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.894996799s
  I0127 19:24:31.498809 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.892481347s
  I0127 19:24:32.502146 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.889260189s
  I0127 19:24:33.506526 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.884921552s
  I0127 19:24:34.509537 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 881.536343ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4067 @ 01/27/25 19:24:35.509
  I0127 19:24:35.512491 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:24:35.608394 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 19:24:35.608466 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:24:35.608486 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:24:35.610670 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I0127 19:24:45.614015 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 19:24:45.614069 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0127 19:24:45.614083 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/27/25 19:24:45.614
  STEP: Scale down will halt with unhealthy stateful pod @ 01/27/25 19:24:45.614
  I0127 19:24:45.618118 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:24:45.709584 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:24:45.709643 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:24:45.709661 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:24:45.709711 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:24:45.809417 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:24:45.809459 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:24:45.809474 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:24:45.809521 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:24:45.908415 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:24:45.908453 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:24:45.908485 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:24:45.908497 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0127 19:24:45.910585 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0127 19:24:55.916109 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:24:55.916142 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:24:55.916157 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:24:56.017086 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999998682s
  I0127 19:24:57.020270 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.904204762s
  I0127 19:24:58.024269 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.900308699s
  I0127 19:24:59.027030 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.897356054s
  I0127 19:25:00.030008 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.894590372s
  I0127 19:25:01.032687 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.891611822s
  I0127 19:25:02.035716 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.888934494s
  I0127 19:25:03.039597 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.885063546s
  I0127 19:25:04.043689 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.882046664s
  I0127 19:25:05.047211 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 877.897472ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4067 @ 01/27/25 19:25:06.047
  I0127 19:25:06.052846 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:25:06.146595 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 19:25:06.146663 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:25:06.146680 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:25:06.146732 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:25:06.243666 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 19:25:06.243732 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:25:06.243753 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:25:06.243808 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4067 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:25:06.344033 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 19:25:06.344087 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:25:06.344104 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:25:06.344265 23 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/27/25 19:25:16.351
  I0127 19:25:16.352055 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4067
  I0127 19:25:16.354142 23 rest.go:152] Scaling statefulset ss to 0
  I0127 19:25:16.357357 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 19:25:16.358916 23 rest.go:90] Deleting statefulset ss
  I0127 19:25:16.366433 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4067" for this suite. @ 01/27/25 19:25:16.368
• [71.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/27/25 19:25:16.372
  I0127 19:25:16.373010 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 19:25:16.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:25:16.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:25:16.383
  I0127 19:25:16.385905 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:25:19.442988 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8624" for this suite. @ 01/27/25 19:25:19.445
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 01/27/25 19:25:19.449
  I0127 19:25:19.449142 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 19:25:19.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:25:19.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:25:19.462
  STEP: Creating service test in namespace statefulset-6847 @ 01/27/25 19:25:19.464
  I0127 19:25:19.476659 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0127 19:25:29.479355 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/27/25 19:25:29.482
  I0127 19:25:29.500173 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 19:25:29.500205 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0127 19:25:39.496768 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 19:25:39.496807 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/27/25 19:25:39.5
  STEP: Delete all of the StatefulSets @ 01/27/25 19:25:39.502
  STEP: Verify that StatefulSets have been deleted @ 01/27/25 19:25:39.506
  I0127 19:25:39.508493 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6847
  I0127 19:25:39.516944 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6847" for this suite. @ 01/27/25 19:25:39.524
• [20.080 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/27/25 19:25:39.529
  I0127 19:25:39.529290 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename runtimeclass @ 01/27/25 19:25:39.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:25:39.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:25:39.542
  I0127 19:25:39.548904 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1940" for this suite. @ 01/27/25 19:25:39.626
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/27/25 19:25:39.63
  I0127 19:25:39.630814 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename taint-single-pod @ 01/27/25 19:25:39.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:25:39.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:25:39.646
  I0127 19:25:39.649998 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0127 19:26:39.651135 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0127 19:26:39.654212 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/27/25 19:26:39.654
  I0127 19:26:39.865519 23 taints.go:294] Pod is running on worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/27/25 19:26:39.865
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/27/25 19:26:39.874
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/27/25 19:26:39.876
  I0127 19:26:39.876988 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0127 19:26:39.877000 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/27/25 19:26:39.885
  STEP: Waiting some time to make sure that toleration time passed. @ 01/27/25 19:26:39.887
  I0127 19:27:54.889004 23 taints.go:329] Pod wasn't evicted. Test successful
  I0127 19:27:54.889208 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2204" for this suite. @ 01/27/25 19:27:54.892
• [135.266 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/27/25 19:27:54.897
  I0127 19:27:54.897088 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename ingressclass @ 01/27/25 19:27:54.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:27:54.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:27:54.91
  STEP: getting /apis @ 01/27/25 19:27:54.912
  STEP: getting /apis/networking.k8s.io @ 01/27/25 19:27:54.915
  STEP: getting /apis/networking.k8s.iov1 @ 01/27/25 19:27:54.916
  STEP: creating @ 01/27/25 19:27:54.916
  STEP: getting @ 01/27/25 19:27:54.927
  STEP: listing @ 01/27/25 19:27:54.929
  STEP: watching @ 01/27/25 19:27:54.931
  I0127 19:27:54.931268 23 ingressclass.go:348] starting watch
  STEP: patching @ 01/27/25 19:27:54.932
  STEP: updating @ 01/27/25 19:27:54.935
  I0127 19:27:54.938343 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0127 19:27:54.938376 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/27/25 19:27:54.938
  STEP: deleting a collection @ 01/27/25 19:27:54.944
  I0127 19:27:54.951763 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7016" for this suite. @ 01/27/25 19:27:54.993
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/27/25 19:27:54.997
  I0127 19:27:54.997675 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename subpath @ 01/27/25 19:27:54.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:27:55.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:27:55.01
  STEP: Setting up data @ 01/27/25 19:27:55.012
  STEP: Creating pod pod-subpath-test-configmap-nsmb @ 01/27/25 19:27:55.018
  STEP: Creating a pod to test atomic-volume-subpath @ 01/27/25 19:27:55.018
  STEP: Saw pod success @ 01/27/25 19:28:19.076
  I0127 19:28:19.078318 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-configmap-nsmb container test-container-subpath-configmap-nsmb: <nil>
  STEP: delete the pod @ 01/27/25 19:28:19.091
  STEP: Deleting pod pod-subpath-test-configmap-nsmb @ 01/27/25 19:28:19.102
  I0127 19:28:19.102161 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-nsmb" in namespace "subpath-9568"
  I0127 19:28:19.103848 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9568" for this suite. @ 01/27/25 19:28:19.106
• [24.112 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/27/25 19:28:19.109
  I0127 19:28:19.109760 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/27/25 19:28:19.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:19.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:19.122
  STEP: create the container to handle the HTTPGet hook request. @ 01/27/25 19:28:19.206
  STEP: create the pod with lifecycle hook @ 01/27/25 19:28:21.22
  STEP: delete the pod with lifecycle hook @ 01/27/25 19:28:23.231
  STEP: check prestop hook @ 01/27/25 19:28:25.24
  I0127 19:28:25.245153 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4062" for this suite. @ 01/27/25 19:28:25.247
• [6.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/27/25 19:28:25.253
  I0127 19:28:25.253374 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename conformance-tests @ 01/27/25 19:28:25.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:25.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:25.264
  STEP: Getting node addresses @ 01/27/25 19:28:25.266
  I0127 19:28:25.266364 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0127 19:28:25.347805 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6212" for this suite. @ 01/27/25 19:28:25.349
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/27/25 19:28:25.356
  I0127 19:28:25.356190 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename subjectreview @ 01/27/25 19:28:25.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:25.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:25.368
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-869" @ 01/27/25 19:28:25.37
  I0127 19:28:25.375844 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-869:e2e"
  I0127 19:28:25.375872 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-869"}
  I0127 19:28:25.375880 23 subjectreviews.go:71] saUID: "5760e75f-5c1f-41b6-807f-4c08f0c0428e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-869:e2e" @ 01/27/25 19:28:25.375
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-869:e2e" @ 01/27/25 19:28:25.376
  I0127 19:28:25.377550 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-869:e2e" api 'list' configmaps in "subjectreview-869" namespace @ 01/27/25 19:28:25.377
  I0127 19:28:25.378636 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-869:e2e" @ 01/27/25 19:28:25.378
  I0127 19:28:25.380197 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0127 19:28:25.380217 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0127 19:28:25.380326 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-869" for this suite. @ 01/27/25 19:28:25.448
• [0.097 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/27/25 19:28:25.453
  I0127 19:28:25.453322 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-webhook @ 01/27/25 19:28:25.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:25.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:25.467
  STEP: Setting up server cert @ 01/27/25 19:28:25.47
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/27/25 19:28:25.974
  STEP: Deploying the custom resource conversion webhook pod @ 01/27/25 19:28:25.979
  STEP: Wait for the deployment to be ready @ 01/27/25 19:28:25.99
  I0127 19:28:25.994867 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:28:28.002
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:28:28.012
  I0127 19:28:29.012327 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0127 19:28:29.016694 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Creating a v1 custom resource @ 01/27/25 19:28:31.567
  STEP: v2 custom resource should be converted @ 01/27/25 19:28:31.571
  I0127 19:28:32.112587 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5634" for this suite. @ 01/27/25 19:28:32.114
• [6.667 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/27/25 19:28:32.121
  I0127 19:28:32.121120 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:28:32.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:32.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:32.134
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/27/25 19:28:32.136
  STEP: Saw pod success @ 01/27/25 19:28:36.152
  I0127 19:28:36.154344 23 output.go:207] Trying to get logs from node worker-0 pod pod-790cf301-34b0-4280-8078-2fc4197bb470 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:28:36.166
  I0127 19:28:36.177595 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1831" for this suite. @ 01/27/25 19:28:36.179
• [4.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/27/25 19:28:36.183
  I0127 19:28:36.183935 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/27/25 19:28:36.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:36.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:36.194
  STEP: Creating two CSIDrivers @ 01/27/25 19:28:36.196
  STEP: Getting "inline-driver-e67bdcf0-893e-48a9-9d7d-b300cd09a461" & "inline-driver-6582363e-1cac-4e0a-a557-a19c663b6112" @ 01/27/25 19:28:36.206
  STEP: Patching the CSIDriver "inline-driver-6582363e-1cac-4e0a-a557-a19c663b6112" @ 01/27/25 19:28:36.209
  STEP: Updating the CSIDriver "inline-driver-6582363e-1cac-4e0a-a557-a19c663b6112" @ 01/27/25 19:28:36.216
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4444" @ 01/27/25 19:28:36.22
  STEP: Deleting CSIDriver "inline-driver-e67bdcf0-893e-48a9-9d7d-b300cd09a461" @ 01/27/25 19:28:36.222
  STEP: Confirm deletion of CSIDriver "inline-driver-e67bdcf0-893e-48a9-9d7d-b300cd09a461" @ 01/27/25 19:28:36.225
  STEP: Deleting CSIDriver "inline-driver-6582363e-1cac-4e0a-a557-a19c663b6112" via DeleteCollection @ 01/27/25 19:28:36.227
  STEP: Confirm deletion of CSIDriver "inline-driver-6582363e-1cac-4e0a-a557-a19c663b6112" @ 01/27/25 19:28:36.23
  I0127 19:28:36.232345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4444" for this suite. @ 01/27/25 19:28:36.28
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/27/25 19:28:36.285
  I0127 19:28:36.285398 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:28:36.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:36.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:36.298
  STEP: creating service in namespace services-5011 @ 01/27/25 19:28:36.3
  STEP: creating service affinity-clusterip in namespace services-5011 @ 01/27/25 19:28:36.3
  STEP: creating replication controller affinity-clusterip in namespace services-5011 @ 01/27/25 19:28:36.309
  I0127 19:28:36.316441      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5011, replica count: 3
  I0127 19:28:39.368083      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 19:28:39.371743 23 resource.go:361] Creating new exec pod
  I0127 19:28:42.380944 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5011 exec execpod-affinitylrbvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0127 19:28:42.479152 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.104.117.125) 80 port [tcp/http] succeeded!\n"
  I0127 19:28:42.479339 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:28:42.479416 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5011 exec execpod-affinitylrbvv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.117.125 80'
  I0127 19:28:42.579358 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.117.125 80\nConnection to 10.104.117.125 80 port [tcp/http] succeeded!\n"
  I0127 19:28:42.579396 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:28:42.579453 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5011 exec execpod-affinitylrbvv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.117.125:80/ ; done'
  I0127 19:28:42.746825 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.117.125:80/\n"
  I0127 19:28:42.746877 23 builder.go:147] stdout: "\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d\naffinity-clusterip-c8x5d"
  I0127 19:28:42.746909 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.746923 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.746933 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.746941 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.746949 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.746960 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747005 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747014 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747026 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747068 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747082 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747093 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747104 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747115 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747126 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747138 23 service.go:242] Received response from host: affinity-clusterip-c8x5d
  I0127 19:28:42.747217 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5011, will wait for the garbage collector to delete the pods @ 01/27/25 19:28:42.76
  I0127 19:28:42.817210 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 4.273421ms
  I0127 19:28:42.918048 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.822256ms
  I0127 19:28:45.731456 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5011" for this suite. @ 01/27/25 19:28:45.735
• [9.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/27/25 19:28:45.739
  I0127 19:28:45.739113 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:28:45.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:45.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:45.752
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:28:45.754
  STEP: Saw pod success @ 01/27/25 19:28:47.766
  I0127 19:28:47.768145 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-cdc8cbc5-b866-4b51-b70e-4346689da737 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:28:47.772
  I0127 19:28:47.783007 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-998" for this suite. @ 01/27/25 19:28:47.785
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/27/25 19:28:47.788
  I0127 19:28:47.789001 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename endpointslice @ 01/27/25 19:28:47.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:47.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:47.801
  STEP: getting /apis @ 01/27/25 19:28:47.803
  STEP: getting /apis/discovery.k8s.io @ 01/27/25 19:28:47.806
  STEP: getting /apis/discovery.k8s.iov1 @ 01/27/25 19:28:47.807
  STEP: creating @ 01/27/25 19:28:47.808
  STEP: getting @ 01/27/25 19:28:47.82
  STEP: listing @ 01/27/25 19:28:47.821
  STEP: watching @ 01/27/25 19:28:47.823
  I0127 19:28:47.823276 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/27/25 19:28:47.824
  STEP: cluster-wide watching @ 01/27/25 19:28:47.825
  I0127 19:28:47.825630 23 endpointslice.go:459] starting watch
  STEP: patching @ 01/27/25 19:28:47.826
  STEP: updating @ 01/27/25 19:28:47.829
  I0127 19:28:47.834679 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0127 19:28:47.834713 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/27/25 19:28:47.834
  STEP: deleting a collection @ 01/27/25 19:28:47.84
  I0127 19:28:47.848524 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8373" for this suite. @ 01/27/25 19:28:47.885
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/27/25 19:28:47.89
  I0127 19:28:47.890421 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename init-container @ 01/27/25 19:28:47.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:47.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:47.903
  STEP: creating the pod @ 01/27/25 19:28:47.905
  I0127 19:28:47.905781 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0127 19:28:50.717814 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1392" for this suite. @ 01/27/25 19:28:50.72
• [2.834 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/27/25 19:28:50.724
  I0127 19:28:50.724505 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/27/25 19:28:50.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:28:50.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:28:50.734
  I0127 19:28:50.737327 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0127 19:29:50.738994 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0127 19:29:50.741670 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/27/25 19:29:50.741
  I0127 19:29:50.955295 23 taints.go:463] Pod1 is running on worker-0. Tainting Node
  I0127 19:29:53.171007 23 taints.go:471] Pod2 is running on worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/27/25 19:29:53.171
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/27/25 19:29:53.179
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/27/25 19:29:53.182
  I0127 19:29:58.855704 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0127 19:30:18.890374 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/27/25 19:30:18.899
  I0127 19:30:18.901648 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3089" for this suite. @ 01/27/25 19:30:18.906
• [88.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830
  STEP: Creating a kubernetes client @ 01/27/25 19:30:18.91
  I0127 19:30:18.910785 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:30:18.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:18.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:18.925
  STEP: starting the proxy server @ 01/27/25 19:30:18.927
  I0127 19:30:18.927561 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-4914 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/27/25 19:30:18.97
  I0127 19:30:18.978851 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0127 19:30:18.980351 23 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:44429

  I0127 19:30:18.980353 23 kubectl.go:2226] kubectl proxy stderr: W0127 19:30:18.969656     686 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4914" for this suite. @ 01/27/25 19:30:19.006
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/27/25 19:30:19.015
  I0127 19:30:19.015407 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename proxy @ 01/27/25 19:30:19.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:19.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:19.026
  I0127 19:30:19.028756 23 proxy.go:293] Creating pod...
  I0127 19:30:21.041262 23 proxy.go:317] Creating service...
  I0127 19:30:21.050902 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/DELETE
  I0127 19:30:21.057091 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0127 19:30:21.057141 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/GET
  I0127 19:30:21.059815 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0127 19:30:21.059856 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/HEAD
  I0127 19:30:21.062032 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0127 19:30:21.062077 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/OPTIONS
  I0127 19:30:21.064346 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0127 19:30:21.064378 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/PATCH
  I0127 19:30:21.066643 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0127 19:30:21.066671 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/POST
  I0127 19:30:21.068815 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0127 19:30:21.068838 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/pods/agnhost/proxy/some/path/with/PUT
  I0127 19:30:21.074061 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0127 19:30:21.074090 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/DELETE
  I0127 19:30:21.080461 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0127 19:30:21.080486 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/GET
  I0127 19:30:21.084003 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0127 19:30:21.084031 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/HEAD
  I0127 19:30:21.092245 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0127 19:30:21.092280 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/OPTIONS
  I0127 19:30:21.096678 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0127 19:30:21.096705 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/PATCH
  I0127 19:30:21.103887 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0127 19:30:21.103909 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/POST
  I0127 19:30:21.106975 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0127 19:30:21.107001 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6560/services/test-service/proxy/some/path/with/PUT
  I0127 19:30:21.110091 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0127 19:30:21.110228 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6560" for this suite. @ 01/27/25 19:30:21.112
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/27/25 19:30:21.12
  I0127 19:30:21.120800 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename security-context-test @ 01/27/25 19:30:21.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:21.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:21.133
  I0127 19:30:23.146606 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4723" for this suite. @ 01/27/25 19:30:23.149
• [2.032 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/27/25 19:30:23.152
  I0127 19:30:23.152913 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename watch @ 01/27/25 19:30:23.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:23.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:23.167
  STEP: getting a starting resourceVersion @ 01/27/25 19:30:23.17
  STEP: starting a background goroutine to produce watch events @ 01/27/25 19:30:23.171
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/27/25 19:30:23.171
  I0127 19:30:25.958233 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3679" for this suite. @ 01/27/25 19:30:26.007
• [2.907 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/27/25 19:30:26.06
  I0127 19:30:26.060257 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:30:26.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:26.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:26.074
  STEP: Creating secret with name secret-test-map-96c17fd0-1bca-4e3e-b80d-2dc35a630f33 @ 01/27/25 19:30:26.076
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:30:26.079
  STEP: Saw pod success @ 01/27/25 19:30:28.092
  I0127 19:30:28.094557 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-e8679d4f-a756-4ea9-b871-1d6538452c70 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:30:28.105
  I0127 19:30:28.115755 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4816" for this suite. @ 01/27/25 19:30:28.117
• [2.061 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/27/25 19:30:28.121
  I0127 19:30:28.121928 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename proxy @ 01/27/25 19:30:28.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:28.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:28.135
  I0127 19:30:28.137353 23 proxy.go:387] Creating pod...
  I0127 19:30:30.147584 23 proxy.go:411] Creating service...
  I0127 19:30:30.157747 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=DELETE
  I0127 19:30:30.164860 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0127 19:30:30.164894 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=OPTIONS
  I0127 19:30:30.167485 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0127 19:30:30.167517 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=PATCH
  I0127 19:30:30.169959 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0127 19:30:30.169987 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=POST
  I0127 19:30:30.172386 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0127 19:30:30.172431 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=PUT
  I0127 19:30:30.175355 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0127 19:30:30.175384 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=DELETE
  I0127 19:30:30.178267 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0127 19:30:30.178291 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0127 19:30:30.181079 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0127 19:30:30.181116 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=PATCH
  I0127 19:30:30.183972 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0127 19:30:30.184002 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=POST
  I0127 19:30:30.186830 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0127 19:30:30.186855 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=PUT
  I0127 19:30:30.189935 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0127 19:30:30.189960 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=GET
  I0127 19:30:30.191208 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0127 19:30:30.191235 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=GET
  I0127 19:30:30.192949 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0127 19:30:30.192977 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/pods/agnhost/proxy?method=HEAD
  I0127 19:30:30.194179 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0127 19:30:30.194200 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6498/services/e2e-proxy-test-service/proxy?method=HEAD
  I0127 19:30:30.195795 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0127 19:30:30.195931 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6498" for this suite. @ 01/27/25 19:30:30.198
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/27/25 19:30:30.206
  I0127 19:30:30.206716 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 19:30:30.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:30.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:30.22
  I0127 19:30:30.222981 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  W0127 19:30:30.223968      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00154caa0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0127 19:30:32.756914      23 warnings.go:70] unknown field "alpha"
  W0127 19:30:32.756939      23 warnings.go:70] unknown field "beta"
  W0127 19:30:32.756945      23 warnings.go:70] unknown field "delta"
  W0127 19:30:32.756950      23 warnings.go:70] unknown field "epsilon"
  W0127 19:30:32.756955      23 warnings.go:70] unknown field "gamma"
  I0127 19:30:33.283322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2177" for this suite. @ 01/27/25 19:30:33.285
• [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/27/25 19:30:33.289
  I0127 19:30:33.289750 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename server-version @ 01/27/25 19:30:33.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:33.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:33.327
  STEP: Request ServerVersion @ 01/27/25 19:30:33.329
  STEP: Confirm major version @ 01/27/25 19:30:33.33
  I0127 19:30:33.330625 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/27/25 19:30:33.33
  I0127 19:30:33.330687 23 server_version.go:58] cleanMinorVersion: 32
  I0127 19:30:33.330704 23 server_version.go:62] Minor version: 32
  I0127 19:30:33.330821 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9897" for this suite. @ 01/27/25 19:30:33.386
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/27/25 19:30:33.39
  I0127 19:30:33.390880 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:30:33.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:33.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:33.427
  STEP: Counting existing ResourceQuota @ 01/27/25 19:30:33.429
  STEP: Creating a ResourceQuota @ 01/27/25 19:30:38.432
  STEP: Ensuring resource quota status is calculated @ 01/27/25 19:30:38.435
  STEP: Creating a ReplicationController @ 01/27/25 19:30:40.44
  STEP: Ensuring resource quota status captures replication controller creation @ 01/27/25 19:30:40.461
  STEP: Deleting a ReplicationController @ 01/27/25 19:30:42.465
  STEP: Ensuring resource quota status released usage @ 01/27/25 19:30:42.47
  I0127 19:30:44.474019 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8770" for this suite. @ 01/27/25 19:30:44.476
• [11.092 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/27/25 19:30:44.482
  I0127 19:30:44.482631 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/27/25 19:30:44.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:44.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:44.495
  STEP: Cleaning up the secret @ 01/27/25 19:30:46.518
  STEP: Cleaning up the configmap @ 01/27/25 19:30:46.521
  STEP: Cleaning up the pod @ 01/27/25 19:30:46.524
  I0127 19:30:46.537634 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7709" for this suite. @ 01/27/25 19:30:46.539
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/27/25 19:30:46.543
  I0127 19:30:46.543740 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename init-container @ 01/27/25 19:30:46.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:30:46.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:30:46.555
  STEP: creating the pod @ 01/27/25 19:30:46.557
  I0127 19:30:46.557973 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0127 19:31:34.056977 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-61a812db-f746-46b2-a6ac-e55a48e09430", GenerateName:"", Namespace:"init-container-2751", SelfLink:"", UID:"7bd244f3-31a5-4d48-8b62-730a8f4c1ab7", ResourceVersion:"19204", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"557962338"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033bbe30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 19, 31, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0033bbe60), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-bkj6z", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0008a0180), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bkj6z", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bkj6z", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bkj6z", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0032e3dc0), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00450f5f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0032e3e40)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0032e3e60)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0032e3e68), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0032e3e6c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003965540), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 27, 19, 30, 47, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.52.184", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.0.52.184"}}, PodIP:"10.244.1.174", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.174"}}, StartTime:time.Date(2025, time.January, 27, 19, 30, 46, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004c6c40)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004c6cb0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://5b42daf8f6dc71298f5f6c5d7b2c835c66b2236710b66281ba0200f084033c1b", Started:(*bool)(0xc0032e3f1a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-bkj6z", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003965560)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0008a01e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0032e3f2d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-bkj6z", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003965580)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0008a01c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0032e3eef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-bkj6z", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc003965550)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0127 19:31:34.057179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2751" for this suite. @ 01/27/25 19:31:34.059
• [47.521 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 01/27/25 19:31:34.065
  I0127 19:31:34.065506 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 19:31:34.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:31:34.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:31:34.077
  STEP: Looking for a node to schedule job pod @ 01/27/25 19:31:34.079
  STEP: Creating a job @ 01/27/25 19:31:34.16
  STEP: Ensuring job fails @ 01/27/25 19:31:34.167
  I0127 19:31:38.176197 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4842" for this suite. @ 01/27/25 19:31:38.178
• [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/27/25 19:31:38.182
  I0127 19:31:38.182557 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:31:38.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:31:38.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:31:38.193
  STEP: Creating a pod to test downward api env vars @ 01/27/25 19:31:38.195
  STEP: Saw pod success @ 01/27/25 19:31:40.205
  I0127 19:31:40.207719 23 output.go:207] Trying to get logs from node worker-1 pod downward-api-5d9c2657-a84f-4e84-a3f1-5b6e7f5e446d container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 19:31:40.218
  I0127 19:31:40.234253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3805" for this suite. @ 01/27/25 19:31:40.236
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/27/25 19:31:40.241
  I0127 19:31:40.241049 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replicaset @ 01/27/25 19:31:40.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:31:40.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:31:40.252
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/27/25 19:31:40.254
  STEP: When a replicaset with a matching selector is created @ 01/27/25 19:31:42.266
  STEP: Then the orphan pod is adopted @ 01/27/25 19:31:42.271
  STEP: When the matched label of one of its pods change @ 01/27/25 19:31:43.277
  I0127 19:31:43.323947 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/27/25 19:31:43.332
  I0127 19:31:44.340140 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7209" for this suite. @ 01/27/25 19:31:44.343
• [4.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/27/25 19:31:44.348
  I0127 19:31:44.348991 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename subpath @ 01/27/25 19:31:44.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:31:44.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:31:44.37
  STEP: Setting up data @ 01/27/25 19:31:44.373
  STEP: Creating pod pod-subpath-test-configmap-pk9m @ 01/27/25 19:31:44.383
  STEP: Creating a pod to test atomic-volume-subpath @ 01/27/25 19:31:44.383
  STEP: Saw pod success @ 01/27/25 19:32:08.435
  I0127 19:32:08.437453 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-configmap-pk9m container test-container-subpath-configmap-pk9m: <nil>
  STEP: delete the pod @ 01/27/25 19:32:08.442
  STEP: Deleting pod pod-subpath-test-configmap-pk9m @ 01/27/25 19:32:08.455
  I0127 19:32:08.455598 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-pk9m" in namespace "subpath-1397"
  I0127 19:32:08.457344 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1397" for this suite. @ 01/27/25 19:32:08.459
• [24.116 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 01/27/25 19:32:08.465
  I0127 19:32:08.465176 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 19:32:08.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:32:08.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:32:08.478
  STEP: Creating a Serviceaccount "e2e-sa-9h4gv" in namespace "svcaccounts-904" @ 01/27/25 19:32:08.48
  STEP: Creating a ServiceaccountToken "e2e-sa-9h4gv" in namespace "svcaccounts-904" @ 01/27/25 19:32:08.485
  STEP: Creating a TokenReview for "e2e-sa-9h4gv" in namespace "svcaccounts-904" @ 01/27/25 19:32:08.489
  I0127 19:32:08.491122 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-904" for this suite. @ 01/27/25 19:32:08.56
• [0.099 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/27/25 19:32:08.564
  I0127 19:32:08.564691 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename controllerrevisions @ 01/27/25 19:32:08.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:32:08.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:32:08.576
  STEP: Creating DaemonSet "e2e-48vvd-daemon-set" @ 01/27/25 19:32:08.665
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/27/25 19:32:08.669
  I0127 19:32:08.766368 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-48vvd-daemon-set: 0
  I0127 19:32:08.766403 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:32:09.674439 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-48vvd-daemon-set: 0
  I0127 19:32:09.674475 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:32:10.674485 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-48vvd-daemon-set: 2
  I0127 19:32:10.674518 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-48vvd-daemon-set
  STEP: Confirm DaemonSet "e2e-48vvd-daemon-set" successfully created with "daemonset-name=e2e-48vvd-daemon-set" label @ 01/27/25 19:32:10.676
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-48vvd-daemon-set" @ 01/27/25 19:32:10.679
  I0127 19:32:10.681510 23 controller_revision.go:162] Located ControllerRevision: "e2e-48vvd-daemon-set-bbd59f76"
  STEP: Patching ControllerRevision "e2e-48vvd-daemon-set-bbd59f76" @ 01/27/25 19:32:10.682
  I0127 19:32:10.690142 23 controller_revision.go:173] e2e-48vvd-daemon-set-bbd59f76 has been patched
  STEP: Create a new ControllerRevision @ 01/27/25 19:32:10.69
  I0127 19:32:10.693383 23 controller_revision.go:191] Created ControllerRevision: e2e-48vvd-daemon-set-7698dc96c8
  STEP: Confirm that there are two ControllerRevisions @ 01/27/25 19:32:10.693
  I0127 19:32:10.693440 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0127 19:32:10.695008 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-48vvd-daemon-set-bbd59f76" @ 01/27/25 19:32:10.695
  STEP: Confirm that there is only one ControllerRevision @ 01/27/25 19:32:10.698
  I0127 19:32:10.698400 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0127 19:32:10.699945 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-48vvd-daemon-set-7698dc96c8" @ 01/27/25 19:32:10.701
  I0127 19:32:10.708207 23 controller_revision.go:220] e2e-48vvd-daemon-set-7698dc96c8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/27/25 19:32:10.708
  W0127 19:32:10.716248      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/27/25 19:32:10.716
  I0127 19:32:10.716338 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0127 19:32:10.734739 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-48vvd-daemon-set-7698dc96c8=updated" @ 01/27/25 19:32:10.734
  STEP: Confirm that there is only one ControllerRevision @ 01/27/25 19:32:10.743
  I0127 19:32:10.743216 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0127 19:32:10.782140 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0127 19:32:10.783974 23 controller_revision.go:246] ControllerRevision "e2e-48vvd-daemon-set-dc859dd6c" has revision 3
  STEP: Deleting DaemonSet "e2e-48vvd-daemon-set" @ 01/27/25 19:32:10.785
  STEP: deleting DaemonSet.extensions e2e-48vvd-daemon-set in namespace controllerrevisions-6817, will wait for the garbage collector to delete the pods @ 01/27/25 19:32:10.786
  I0127 19:32:10.842203 23 resources.go:139] Deleting DaemonSet.extensions e2e-48vvd-daemon-set took: 4.216168ms
  I0127 19:32:10.943235 23 resources.go:163] Terminating DaemonSet.extensions e2e-48vvd-daemon-set pods took: 101.028605ms
  I0127 19:32:13.245565 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-48vvd-daemon-set: 0
  I0127 19:32:13.245592 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-48vvd-daemon-set
  I0127 19:32:13.247686 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19504"},"items":null}

  I0127 19:32:13.249219 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19504"},"items":null}

  I0127 19:32:13.254598 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6817" for this suite. @ 01/27/25 19:32:13.256
• [4.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/27/25 19:32:13.26
  I0127 19:32:13.260251 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 19:32:13.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:32:13.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:32:13.271
  STEP: creating the pod @ 01/27/25 19:32:13.273
  STEP: waiting for pod running @ 01/27/25 19:32:13.279
  STEP: creating a file in subpath @ 01/27/25 19:32:15.284
  I0127 19:32:15.286435 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-588 PodName:var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:32:15.286464 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:32:15.286503 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-588/pods/var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/27/25 19:32:15.334
  I0127 19:32:15.336320 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-588 PodName:var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:32:15.336346 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:32:15.336394 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-588/pods/var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/27/25 19:32:15.375
  I0127 19:32:15.885459 23 pod_client.go:173] Successfully updated pod "var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4"
  STEP: waiting for annotated pod running @ 01/27/25 19:32:15.885
  STEP: deleting the pod gracefully @ 01/27/25 19:32:15.887
  I0127 19:32:15.887700 23 delete.go:62] Deleting pod "var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4" in namespace "var-expansion-588"
  I0127 19:32:15.893184 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-dbc76ea3-4c6d-4bc0-a32f-0c7724535cf4" to be fully deleted
  I0127 19:32:47.948849 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-588" for this suite. @ 01/27/25 19:32:47.951
• [34.695 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/27/25 19:32:47.954
  I0127 19:32:47.954962 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 19:32:47.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:32:47.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:32:47.965
  STEP: create the rc @ 01/27/25 19:32:48.051
  W0127 19:32:48.055208      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/27/25 19:32:52.063
  STEP: wait for the rc to be deleted @ 01/27/25 19:32:52.068
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/27/25 19:32:57.074
  STEP: Gathering metrics @ 01/27/25 19:33:27.082
  W0127 19:33:27.089138      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0127 19:33:27.089169 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0127 19:33:27.089248 23 delete.go:95] Deleting pod "simpletest.rc-2bktx" in namespace "gc-7863"
  I0127 19:33:27.103076 23 delete.go:95] Deleting pod "simpletest.rc-2c5fr" in namespace "gc-7863"
  I0127 19:33:27.116947 23 delete.go:95] Deleting pod "simpletest.rc-2d97t" in namespace "gc-7863"
  I0127 19:33:27.127752 23 delete.go:95] Deleting pod "simpletest.rc-2ppzg" in namespace "gc-7863"
  I0127 19:33:27.138922 23 delete.go:95] Deleting pod "simpletest.rc-2rxqw" in namespace "gc-7863"
  I0127 19:33:27.153415 23 delete.go:95] Deleting pod "simpletest.rc-2zffk" in namespace "gc-7863"
  I0127 19:33:27.164632 23 delete.go:95] Deleting pod "simpletest.rc-47qd6" in namespace "gc-7863"
  I0127 19:33:27.176152 23 delete.go:95] Deleting pod "simpletest.rc-48kjx" in namespace "gc-7863"
  I0127 19:33:27.186948 23 delete.go:95] Deleting pod "simpletest.rc-49dtn" in namespace "gc-7863"
  I0127 19:33:27.196723 23 delete.go:95] Deleting pod "simpletest.rc-4bf45" in namespace "gc-7863"
  I0127 19:33:27.205785 23 delete.go:95] Deleting pod "simpletest.rc-4n6l8" in namespace "gc-7863"
  I0127 19:33:27.218181 23 delete.go:95] Deleting pod "simpletest.rc-4wbp9" in namespace "gc-7863"
  I0127 19:33:27.229253 23 delete.go:95] Deleting pod "simpletest.rc-5gjjr" in namespace "gc-7863"
  I0127 19:33:27.238549 23 delete.go:95] Deleting pod "simpletest.rc-5vczr" in namespace "gc-7863"
  I0127 19:33:27.250438 23 delete.go:95] Deleting pod "simpletest.rc-64kv8" in namespace "gc-7863"
  I0127 19:33:27.259282 23 delete.go:95] Deleting pod "simpletest.rc-6b7zs" in namespace "gc-7863"
  I0127 19:33:27.268159 23 delete.go:95] Deleting pod "simpletest.rc-6j9fn" in namespace "gc-7863"
  I0127 19:33:27.278288 23 delete.go:95] Deleting pod "simpletest.rc-6mcrd" in namespace "gc-7863"
  I0127 19:33:27.289276 23 delete.go:95] Deleting pod "simpletest.rc-6nrp8" in namespace "gc-7863"
  I0127 19:33:27.304351 23 delete.go:95] Deleting pod "simpletest.rc-6tjrs" in namespace "gc-7863"
  I0127 19:33:27.312192 23 delete.go:95] Deleting pod "simpletest.rc-74bvg" in namespace "gc-7863"
  I0127 19:33:27.323105 23 delete.go:95] Deleting pod "simpletest.rc-7lxl7" in namespace "gc-7863"
  I0127 19:33:27.332267 23 delete.go:95] Deleting pod "simpletest.rc-8cbrq" in namespace "gc-7863"
  I0127 19:33:27.340907 23 delete.go:95] Deleting pod "simpletest.rc-8l84t" in namespace "gc-7863"
  I0127 19:33:27.351840 23 delete.go:95] Deleting pod "simpletest.rc-8nn74" in namespace "gc-7863"
  I0127 19:33:27.362162 23 delete.go:95] Deleting pod "simpletest.rc-8v99x" in namespace "gc-7863"
  I0127 19:33:27.370291 23 delete.go:95] Deleting pod "simpletest.rc-925bd" in namespace "gc-7863"
  I0127 19:33:27.379172 23 delete.go:95] Deleting pod "simpletest.rc-94zs2" in namespace "gc-7863"
  I0127 19:33:27.390975 23 delete.go:95] Deleting pod "simpletest.rc-99gjr" in namespace "gc-7863"
  I0127 19:33:27.403225 23 delete.go:95] Deleting pod "simpletest.rc-9tsw9" in namespace "gc-7863"
  I0127 19:33:27.413790 23 delete.go:95] Deleting pod "simpletest.rc-bjqvc" in namespace "gc-7863"
  I0127 19:33:27.426740 23 delete.go:95] Deleting pod "simpletest.rc-bsb27" in namespace "gc-7863"
  I0127 19:33:27.437260 23 delete.go:95] Deleting pod "simpletest.rc-bzfjh" in namespace "gc-7863"
  I0127 19:33:27.445880 23 delete.go:95] Deleting pod "simpletest.rc-c2gdg" in namespace "gc-7863"
  I0127 19:33:27.458712 23 delete.go:95] Deleting pod "simpletest.rc-c7jgm" in namespace "gc-7863"
  I0127 19:33:27.469532 23 delete.go:95] Deleting pod "simpletest.rc-cdvxz" in namespace "gc-7863"
  I0127 19:33:27.481447 23 delete.go:95] Deleting pod "simpletest.rc-d6wmv" in namespace "gc-7863"
  I0127 19:33:27.492179 23 delete.go:95] Deleting pod "simpletest.rc-d8fjs" in namespace "gc-7863"
  I0127 19:33:27.506233 23 delete.go:95] Deleting pod "simpletest.rc-d8vnr" in namespace "gc-7863"
  I0127 19:33:27.517623 23 delete.go:95] Deleting pod "simpletest.rc-dbf5v" in namespace "gc-7863"
  I0127 19:33:27.533016 23 delete.go:95] Deleting pod "simpletest.rc-dlwb7" in namespace "gc-7863"
  I0127 19:33:27.544324 23 delete.go:95] Deleting pod "simpletest.rc-dqlxw" in namespace "gc-7863"
  I0127 19:33:27.557216 23 delete.go:95] Deleting pod "simpletest.rc-fkj7h" in namespace "gc-7863"
  I0127 19:33:27.565085 23 delete.go:95] Deleting pod "simpletest.rc-flwzk" in namespace "gc-7863"
  I0127 19:33:27.577419 23 delete.go:95] Deleting pod "simpletest.rc-g5t5g" in namespace "gc-7863"
  I0127 19:33:27.585714 23 delete.go:95] Deleting pod "simpletest.rc-g6wbg" in namespace "gc-7863"
  I0127 19:33:27.598416 23 delete.go:95] Deleting pod "simpletest.rc-g7bb9" in namespace "gc-7863"
  I0127 19:33:27.609349 23 delete.go:95] Deleting pod "simpletest.rc-gn72l" in namespace "gc-7863"
  I0127 19:33:27.618218 23 delete.go:95] Deleting pod "simpletest.rc-gxc7d" in namespace "gc-7863"
  I0127 19:33:27.628742 23 delete.go:95] Deleting pod "simpletest.rc-gxf7k" in namespace "gc-7863"
  I0127 19:33:27.636534 23 delete.go:95] Deleting pod "simpletest.rc-h8t69" in namespace "gc-7863"
  I0127 19:33:27.645910 23 delete.go:95] Deleting pod "simpletest.rc-hjmsp" in namespace "gc-7863"
  I0127 19:33:27.652341 23 delete.go:95] Deleting pod "simpletest.rc-hsmh9" in namespace "gc-7863"
  I0127 19:33:27.662818 23 delete.go:95] Deleting pod "simpletest.rc-jb6gj" in namespace "gc-7863"
  I0127 19:33:27.672930 23 delete.go:95] Deleting pod "simpletest.rc-jfw2c" in namespace "gc-7863"
  I0127 19:33:27.688157 23 delete.go:95] Deleting pod "simpletest.rc-jr6s9" in namespace "gc-7863"
  I0127 19:33:27.699563 23 delete.go:95] Deleting pod "simpletest.rc-jtk6v" in namespace "gc-7863"
  I0127 19:33:27.711810 23 delete.go:95] Deleting pod "simpletest.rc-kdrm7" in namespace "gc-7863"
  I0127 19:33:27.724369 23 delete.go:95] Deleting pod "simpletest.rc-kks4r" in namespace "gc-7863"
  I0127 19:33:27.732396 23 delete.go:95] Deleting pod "simpletest.rc-kzqbg" in namespace "gc-7863"
  I0127 19:33:27.743521 23 delete.go:95] Deleting pod "simpletest.rc-lcq2g" in namespace "gc-7863"
  I0127 19:33:27.763049 23 delete.go:95] Deleting pod "simpletest.rc-lcx5v" in namespace "gc-7863"
  I0127 19:33:27.786798 23 delete.go:95] Deleting pod "simpletest.rc-lgxv9" in namespace "gc-7863"
  I0127 19:33:27.839657 23 delete.go:95] Deleting pod "simpletest.rc-lh6pf" in namespace "gc-7863"
  I0127 19:33:27.889574 23 delete.go:95] Deleting pod "simpletest.rc-lt2dm" in namespace "gc-7863"
  I0127 19:33:27.937300 23 delete.go:95] Deleting pod "simpletest.rc-ltvls" in namespace "gc-7863"
  I0127 19:33:27.987495 23 delete.go:95] Deleting pod "simpletest.rc-lvf2v" in namespace "gc-7863"
  I0127 19:33:28.034425 23 delete.go:95] Deleting pod "simpletest.rc-m549b" in namespace "gc-7863"
  I0127 19:33:28.082849 23 delete.go:95] Deleting pod "simpletest.rc-m67tf" in namespace "gc-7863"
  I0127 19:33:28.135000 23 delete.go:95] Deleting pod "simpletest.rc-m7522" in namespace "gc-7863"
  I0127 19:33:28.185446 23 delete.go:95] Deleting pod "simpletest.rc-mpjw2" in namespace "gc-7863"
  I0127 19:33:28.234585 23 delete.go:95] Deleting pod "simpletest.rc-n9t5k" in namespace "gc-7863"
  I0127 19:33:28.292237 23 delete.go:95] Deleting pod "simpletest.rc-nxl2b" in namespace "gc-7863"
  I0127 19:33:28.339723 23 delete.go:95] Deleting pod "simpletest.rc-pd28l" in namespace "gc-7863"
  I0127 19:33:28.385667 23 delete.go:95] Deleting pod "simpletest.rc-pddf8" in namespace "gc-7863"
  I0127 19:33:28.442111 23 delete.go:95] Deleting pod "simpletest.rc-ppjm6" in namespace "gc-7863"
  I0127 19:33:28.488931 23 delete.go:95] Deleting pod "simpletest.rc-rhxd4" in namespace "gc-7863"
  I0127 19:33:28.538978 23 delete.go:95] Deleting pod "simpletest.rc-rtbct" in namespace "gc-7863"
  I0127 19:33:28.589806 23 delete.go:95] Deleting pod "simpletest.rc-rtrqq" in namespace "gc-7863"
  I0127 19:33:28.641069 23 delete.go:95] Deleting pod "simpletest.rc-spsj7" in namespace "gc-7863"
  I0127 19:33:28.686242 23 delete.go:95] Deleting pod "simpletest.rc-sscx5" in namespace "gc-7863"
  I0127 19:33:28.739192 23 delete.go:95] Deleting pod "simpletest.rc-sz6tg" in namespace "gc-7863"
  I0127 19:33:28.785144 23 delete.go:95] Deleting pod "simpletest.rc-t5hqb" in namespace "gc-7863"
  I0127 19:33:28.838259 23 delete.go:95] Deleting pod "simpletest.rc-ts4b5" in namespace "gc-7863"
  I0127 19:33:28.891080 23 delete.go:95] Deleting pod "simpletest.rc-tvd4g" in namespace "gc-7863"
  I0127 19:33:28.936033 23 delete.go:95] Deleting pod "simpletest.rc-v76h4" in namespace "gc-7863"
  I0127 19:33:28.986699 23 delete.go:95] Deleting pod "simpletest.rc-vmjn7" in namespace "gc-7863"
  I0127 19:33:29.036658 23 delete.go:95] Deleting pod "simpletest.rc-vx6fd" in namespace "gc-7863"
  I0127 19:33:29.087965 23 delete.go:95] Deleting pod "simpletest.rc-wg2jb" in namespace "gc-7863"
  I0127 19:33:29.136887 23 delete.go:95] Deleting pod "simpletest.rc-wlcrx" in namespace "gc-7863"
  I0127 19:33:29.188792 23 delete.go:95] Deleting pod "simpletest.rc-wrrt5" in namespace "gc-7863"
  I0127 19:33:29.238813 23 delete.go:95] Deleting pod "simpletest.rc-wwbsw" in namespace "gc-7863"
  I0127 19:33:29.284469 23 delete.go:95] Deleting pod "simpletest.rc-x7rt6" in namespace "gc-7863"
  I0127 19:33:29.338158 23 delete.go:95] Deleting pod "simpletest.rc-xbcdb" in namespace "gc-7863"
  I0127 19:33:29.388200 23 delete.go:95] Deleting pod "simpletest.rc-xgsm9" in namespace "gc-7863"
  I0127 19:33:29.434933 23 delete.go:95] Deleting pod "simpletest.rc-xj9vv" in namespace "gc-7863"
  I0127 19:33:29.487830 23 delete.go:95] Deleting pod "simpletest.rc-xlwm6" in namespace "gc-7863"
  I0127 19:33:29.537287 23 delete.go:95] Deleting pod "simpletest.rc-xwr6z" in namespace "gc-7863"
  I0127 19:33:29.585728 23 delete.go:95] Deleting pod "simpletest.rc-zk47v" in namespace "gc-7863"
  I0127 19:33:29.637337 23 delete.go:95] Deleting pod "simpletest.rc-zmchc" in namespace "gc-7863"
  I0127 19:33:29.691613 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7863" for this suite. @ 01/27/25 19:33:29.73
• [41.828 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 01/27/25 19:33:29.786
  I0127 19:33:29.786822 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 19:33:29.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:29.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:29.802
  STEP: Creating service test in namespace statefulset-6740 @ 01/27/25 19:33:29.807
  STEP: Creating statefulset ss in namespace statefulset-6740 @ 01/27/25 19:33:29.817
  I0127 19:33:29.825154 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0127 19:33:39.826819 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/27/25 19:33:39.83
  STEP: Getting /status @ 01/27/25 19:33:39.836
  I0127 19:33:39.838445 23 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/27/25 19:33:39.838
  I0127 19:33:39.845365 23 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/27/25 19:33:39.845
  I0127 19:33:39.846813 23 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0127 19:33:39.846853 23 statefulset.go:1114] Found Statefulset ss in namespace statefulset-6740 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 19:33:39.846868 23 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/27/25 19:33:39.846
  I0127 19:33:39.846906 23 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0127 19:33:39.853847 23 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/27/25 19:33:39.853
  I0127 19:33:39.855206 23 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0127 19:33:39.855244 23 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-6740 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 19:33:39.855352 23 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0127 19:33:39.855417 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6740
  I0127 19:33:39.857028 23 rest.go:152] Scaling statefulset ss to 0
  I0127 19:33:49.867253 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 19:33:49.868995 23 rest.go:90] Deleting statefulset ss
  I0127 19:33:49.876283 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6740" for this suite. @ 01/27/25 19:33:49.878
• [20.097 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/27/25 19:33:49.883
  I0127 19:33:49.883162 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:33:49.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:49.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:49.896
  STEP: Setting up server cert @ 01/27/25 19:33:49.995
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:33:50.417
  STEP: Deploying the webhook pod @ 01/27/25 19:33:50.426
  STEP: Wait for the deployment to be ready @ 01/27/25 19:33:50.435
  I0127 19:33:50.441899 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:33:52.449
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:33:52.458
  I0127 19:33:53.458715 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/27/25 19:33:53.463
  STEP: create the configmap with a random name @ 01/27/25 19:33:53.482
  STEP: verify the configmap is mutated @ 01/27/25 19:33:53.494
  STEP: create the configmap with 'skip-me' name @ 01/27/25 19:33:53.494
  I0127 19:33:53.529488 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8042" for this suite. @ 01/27/25 19:33:53.534
  STEP: Destroying namespace "webhook-markers-679" for this suite. @ 01/27/25 19:33:53.54
• [3.660 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 01/27/25 19:33:53.543
  I0127 19:33:53.543743 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:33:53.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:53.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:53.557
  STEP: fetching services @ 01/27/25 19:33:53.559
  I0127 19:33:53.563803 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-330" for this suite. @ 01/27/25 19:33:53.634
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/27/25 19:33:53.639
  I0127 19:33:53.639730 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:33:53.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:53.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:53.655
  STEP: Creating configMap that has name configmap-test-emptyKey-b0dcf2f7-4eb1-4ab9-88de-e9591cd837f0 @ 01/27/25 19:33:53.657
  I0127 19:33:53.659219 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-673" for this suite. @ 01/27/25 19:33:53.734
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/27/25 19:33:53.739
  I0127 19:33:53.739827 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replicaset @ 01/27/25 19:33:53.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:53.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:53.755
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/27/25 19:33:53.757
  I0127 19:33:53.763703 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0127 19:33:58.776307 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/27/25 19:33:58.776
  STEP: getting scale subresource @ 01/27/25 19:33:58.776
  STEP: updating a scale subresource @ 01/27/25 19:33:58.778
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/27/25 19:33:58.787
  STEP: Patch a scale subresource @ 01/27/25 19:33:58.789
  I0127 19:33:58.800489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4319" for this suite. @ 01/27/25 19:33:58.805
• [5.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/27/25 19:33:58.812
  I0127 19:33:58.812804 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename limitrange @ 01/27/25 19:33:58.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:58.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:58.874
  STEP: Creating LimitRange "e2e-limitrange-xwnd7" in namespace "limitrange-301" @ 01/27/25 19:33:58.876
  STEP: Creating another limitRange in another namespace @ 01/27/25 19:33:58.88
  I0127 19:33:58.972902 23 limit_range.go:299] Namespace "e2e-limitrange-xwnd7-7743" created
  I0127 19:33:58.972935 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-xwnd7" in namespace "e2e-limitrange-xwnd7-7743"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-xwnd7" @ 01/27/25 19:33:58.976
  I0127 19:33:58.977851 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-xwnd7" in "limitrange-301" namespace @ 01/27/25 19:33:58.977
  I0127 19:33:58.985596 23 limit_range.go:335] LimitRange "e2e-limitrange-xwnd7" has been patched
  STEP: Delete LimitRange "e2e-limitrange-xwnd7" by Collection with labelSelector: "e2e-limitrange-xwnd7=patched" @ 01/27/25 19:33:58.985
  STEP: Confirm that the limitRange "e2e-limitrange-xwnd7" has been deleted @ 01/27/25 19:33:58.99
  I0127 19:33:58.990352 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0127 19:33:58.991929 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-xwnd7=patched"
  I0127 19:33:58.991958 23 limit_range.go:344] LimitRange "e2e-limitrange-xwnd7" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-xwnd7" @ 01/27/25 19:33:58.991
  I0127 19:33:58.995669 23 limit_range.go:350] Found 1 limitRange
  I0127 19:33:58.995780 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-301" for this suite. @ 01/27/25 19:33:58.997
  STEP: Destroying namespace "e2e-limitrange-xwnd7-7743" for this suite. @ 01/27/25 19:33:59.001
• [0.194 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 01/27/25 19:33:59.006
  I0127 19:33:59.006897 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:33:59.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:59.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:59.074
  STEP: creating a collection of services @ 01/27/25 19:33:59.076
  I0127 19:33:59.076525 23 service.go:3635] Creating e2e-svc-a-xvkws
  I0127 19:33:59.091327 23 service.go:3635] Creating e2e-svc-b-8r5fg
  I0127 19:33:59.103948 23 service.go:3635] Creating e2e-svc-c-78hdl
  STEP: deleting service collection @ 01/27/25 19:33:59.115
  I0127 19:33:59.142200 23 service.go:3670] Collection of services has been deleted
  I0127 19:33:59.142334 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5981" for this suite. @ 01/27/25 19:33:59.144
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/27/25 19:33:59.148
  I0127 19:33:59.148216 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:33:59.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:33:59.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:33:59.175
  STEP: Setting up server cert @ 01/27/25 19:33:59.271
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:33:59.958
  STEP: Deploying the webhook pod @ 01/27/25 19:33:59.963
  STEP: Wait for the deployment to be ready @ 01/27/25 19:33:59.972
  I0127 19:33:59.978523 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:34:01.986
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:34:01.996
  I0127 19:34:02.996872 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/27/25 19:34:03.001
  STEP: verifying the mutating webhook match conditions @ 01/27/25 19:34:03.007
  STEP: updating the mutating webhook match conditions @ 01/27/25 19:34:03.009
  STEP: verifying the mutating webhook match conditions @ 01/27/25 19:34:03.015
  I0127 19:34:03.064899 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4076" for this suite. @ 01/27/25 19:34:03.071
  STEP: Destroying namespace "webhook-markers-1410" for this suite. @ 01/27/25 19:34:03.085
• [3.942 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/27/25 19:34:03.09
  I0127 19:34:03.090242 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:34:03.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:34:03.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:34:03.102
  STEP: Creating projection with secret that has name projected-secret-test-103cae58-d828-469c-b1d4-680ee522e4b4 @ 01/27/25 19:34:03.104
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:34:03.107
  STEP: Saw pod success @ 01/27/25 19:34:07.121
  I0127 19:34:07.123743 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-cef97614-59d6-40c9-878a-690cd1af1119 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:34:07.136
  I0127 19:34:07.146433 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4365" for this suite. @ 01/27/25 19:34:07.148
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/27/25 19:34:07.154
  I0127 19:34:07.154880 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:34:07.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:34:07.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:34:07.165
  STEP: Creating configMap with name configmap-test-volume-2f8622d2-9303-4b27-b3a5-e14b8367f074 @ 01/27/25 19:34:07.167
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:34:07.17
  STEP: Saw pod success @ 01/27/25 19:34:11.185
  I0127 19:34:11.187169 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-781a1973-8d17-40d2-84a1-f4c92649df2a container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:34:11.191
  I0127 19:34:11.201797 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-754" for this suite. @ 01/27/25 19:34:11.203
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/27/25 19:34:11.208
  I0127 19:34:11.208303 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:34:11.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:34:11.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:34:11.221
  STEP: Creating configMap with name projected-configmap-test-volume-296eef92-3b26-48ed-888a-6cfedb2817f6 @ 01/27/25 19:34:11.223
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:34:11.226
  STEP: Saw pod success @ 01/27/25 19:34:15.242
  I0127 19:34:15.244485 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-4ff9e112-b798-43e4-b115-469359ba7a10 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:34:15.248
  I0127 19:34:15.260459 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4037" for this suite. @ 01/27/25 19:34:15.262
• [4.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 01/27/25 19:34:15.266
  I0127 19:34:15.266473 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption @ 01/27/25 19:34:15.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:34:15.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:34:15.277
  I0127 19:34:15.289063 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0127 19:35:15.294364 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/27/25 19:35:15.296
  STEP: Adding a custom resource @ 01/27/25 19:35:15.296
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/27/25 19:35:15.303
  I0127 19:35:15.313288 23 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/27/25 19:35:15.313
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/27/25 19:35:17.318
  I0127 19:35:17.322390 23 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/27/25 19:35:17.322
  STEP: Verifying the pod has the pod disruption condition @ 01/27/25 19:35:19.327
  I0127 19:35:19.329633 23 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0127 19:35:19.840167 23 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 01/27/25 19:35:19.85
  STEP: Removing a custom resource @ 01/27/25 19:35:19.858
  I0127 19:35:19.863642 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4968" for this suite. @ 01/27/25 19:35:19.865
• [64.603 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/27/25 19:35:19.869
  I0127 19:35:19.869193 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 19:35:19.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:19.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:19.883
  STEP: Creating a pod to test substitution in container's args @ 01/27/25 19:35:19.885
  STEP: Saw pod success @ 01/27/25 19:35:21.894
  I0127 19:35:21.896321 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-995fdd2d-32e7-42c6-9d64-718c5221e544 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 19:35:21.9
  I0127 19:35:21.909517 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5407" for this suite. @ 01/27/25 19:35:21.911
• [2.046 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/27/25 19:35:21.915
  I0127 19:35:21.915265 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename watch @ 01/27/25 19:35:21.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:21.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:21.929
  STEP: creating a watch on configmaps with a certain label @ 01/27/25 19:35:21.931
  STEP: creating a new configmap @ 01/27/25 19:35:21.932
  STEP: modifying the configmap once @ 01/27/25 19:35:21.935
  STEP: changing the label value of the configmap @ 01/27/25 19:35:21.941
  STEP: Expecting to observe a delete notification for the watched object @ 01/27/25 19:35:21.948
  I0127 19:35:21.948504 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4949  4bc88bfb-d614-4c4c-9326-b84e34b02f1f 22166 0 2025-01-27 19:35:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-27 19:35:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:35:21.948673 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4949  4bc88bfb-d614-4c4c-9326-b84e34b02f1f 22167 0 2025-01-27 19:35:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-27 19:35:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:35:21.948785 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4949  4bc88bfb-d614-4c4c-9326-b84e34b02f1f 22168 0 2025-01-27 19:35:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-27 19:35:21 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/27/25 19:35:21.948
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/27/25 19:35:21.953
  STEP: changing the label value of the configmap back @ 01/27/25 19:35:31.956
  STEP: modifying the configmap a third time @ 01/27/25 19:35:31.962
  STEP: deleting the configmap @ 01/27/25 19:35:31.966
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/27/25 19:35:31.97
  I0127 19:35:31.970278 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4949  4bc88bfb-d614-4c4c-9326-b84e34b02f1f 22220 0 2025-01-27 19:35:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-27 19:35:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:35:31.970377 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4949  4bc88bfb-d614-4c4c-9326-b84e34b02f1f 22221 0 2025-01-27 19:35:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-27 19:35:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:35:31.970464 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4949  4bc88bfb-d614-4c4c-9326-b84e34b02f1f 22222 0 2025-01-27 19:35:21 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-27 19:35:31 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 19:35:31.970580 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4949" for this suite. @ 01/27/25 19:35:31.972
• [10.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/27/25 19:35:31.978
  I0127 19:35:31.978397 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename security-context-test @ 01/27/25 19:35:31.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:31.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:31.988
  I0127 19:35:36.011597 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6258" for this suite. @ 01/27/25 19:35:36.014
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/27/25 19:35:36.02
  I0127 19:35:36.020229 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:35:36.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:36.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:36.033
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:35:36.035
  STEP: Saw pod success @ 01/27/25 19:35:38.045
  I0127 19:35:38.047297 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-e1ffed40-1557-4a87-aa2a-efe017c741ac container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:35:38.052
  I0127 19:35:38.062998 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5382" for this suite. @ 01/27/25 19:35:38.065
• [2.049 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/27/25 19:35:38.069
  I0127 19:35:38.069066 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename disruption @ 01/27/25 19:35:38.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:38.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:38.079
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:35:38.084
  STEP: Waiting for all pods to be running @ 01/27/25 19:35:40.107
  I0127 19:35:40.113513 23 disruption.go:691] running pods: 0 < 3
  I0127 19:35:42.112480 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7046" for this suite. @ 01/27/25 19:35:42.114
• [4.049 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/27/25 19:35:42.118
  I0127 19:35:42.118399 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:35:42.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:42.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:42.135
  STEP: Creating configMap with name configmap-test-volume-map-9d465b00-61c0-48fc-97b3-f061e26a9e27 @ 01/27/25 19:35:42.138
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:35:42.142
  STEP: Saw pod success @ 01/27/25 19:35:44.161
  I0127 19:35:44.163348 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-3e7a3807-a123-44b2-8c68-eee065897549 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:35:44.168
  I0127 19:35:44.179056 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3964" for this suite. @ 01/27/25 19:35:44.181
• [2.066 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 01/27/25 19:35:44.185
  I0127 19:35:44.185052 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename containers @ 01/27/25 19:35:44.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:44.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:44.2
  I0127 19:35:46.217977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7373" for this suite. @ 01/27/25 19:35:46.22
• [2.039 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/27/25 19:35:46.224
  I0127 19:35:46.224348 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:35:46.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:46.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:46.235
  STEP: Creating configMap with name projected-configmap-test-volume-map-06d693c9-71dd-4f86-84b9-63b5aee30a91 @ 01/27/25 19:35:46.237
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:35:46.24
  STEP: Saw pod success @ 01/27/25 19:35:50.255
  I0127 19:35:50.257796 23 output.go:207] Trying to get logs from node worker-1 pod pod-projected-configmaps-fef29458-20a3-48be-a67a-88b8575d3d72 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:35:50.27
  I0127 19:35:50.280736 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7341" for this suite. @ 01/27/25 19:35:50.283
• [4.062 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/27/25 19:35:50.286
  I0127 19:35:50.286759 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:35:50.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:35:50.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:35:50.301
  STEP: Creating a ResourceQuota with terminating scope @ 01/27/25 19:35:50.303
  STEP: Ensuring ResourceQuota status is calculated @ 01/27/25 19:35:50.306
  STEP: Creating a ResourceQuota with not terminating scope @ 01/27/25 19:35:52.308
  STEP: Ensuring ResourceQuota status is calculated @ 01/27/25 19:35:52.312
  STEP: Creating a long running pod @ 01/27/25 19:35:54.315
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/27/25 19:35:54.326
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/27/25 19:35:56.329
  STEP: Deleting the pod @ 01/27/25 19:35:58.332
  STEP: Ensuring resource quota status released the pod usage @ 01/27/25 19:35:58.34
  STEP: Creating a terminating pod @ 01/27/25 19:36:00.342
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/27/25 19:36:00.349
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/27/25 19:36:02.353
  STEP: Deleting the pod @ 01/27/25 19:36:04.356
  STEP: Ensuring resource quota status released the pod usage @ 01/27/25 19:36:04.362
  I0127 19:36:06.366304 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6268" for this suite. @ 01/27/25 19:36:06.369
• [16.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 01/27/25 19:36:06.373
  I0127 19:36:06.373164 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 19:36:06.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:06.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:06.384
  STEP: Creating a test headless service @ 01/27/25 19:36:06.386
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3698 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3698;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3698 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3698;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3698.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-3698.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3698.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-3698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-3698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-3698.svc;check="$$(dig +notcp +noall +answer +search 159.197.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.197.159_udp@PTR;check="$$(dig +tcp +noall +answer +search 159.197.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.197.159_tcp@PTR;sleep 1; done
   @ 01/27/25 19:36:06.4
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3698 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3698;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3698 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3698;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3698.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3698.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3698.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3698.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3698.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3698.svc;check="$$(dig +notcp +noall +answer +search 159.197.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.197.159_udp@PTR;check="$$(dig +tcp +noall +answer +search 159.197.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.197.159_tcp@PTR;sleep 1; done
   @ 01/27/25 19:36:06.4
  STEP: creating a pod to probe DNS @ 01/27/25 19:36:06.4
  STEP: submitting the pod to kubernetes @ 01/27/25 19:36:06.4
  STEP: retrieving the pod @ 01/27/25 19:36:08.416
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:36:08.418
  I0127 19:36:08.423351 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.426417 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.429166 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.431942 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.434475 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.436899 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.439304 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.441631 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.453529 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.455858 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.458255 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.460507 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.462754 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.465030 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.467326 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.470393 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:08.480543 23 dns_common.go:506] Lookups using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3698 agnhost_tcp@dns-test-service.dns-3698 agnhost_udp@dns-test-service.dns-3698.svc agnhost_tcp@dns-test-service.dns-3698.svc agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3698 jessie_tcp@dns-test-service.dns-3698 jessie_udp@dns-test-service.dns-3698.svc jessie_tcp@dns-test-service.dns-3698.svc jessie_udp@_http._tcp.dns-test-service.dns-3698.svc jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc]

  I0127 19:36:08.486934 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:36:08.493074 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:36:08.497299 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:36:13.423002 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.425764 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.428405 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.430974 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.434088 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.436387 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.438709 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.441619 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.453067 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.455458 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.457909 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.460233 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.462561 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.464884 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.467167 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.469436 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:13.481118 23 dns_common.go:506] Lookups using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3698 agnhost_tcp@dns-test-service.dns-3698 agnhost_udp@dns-test-service.dns-3698.svc agnhost_tcp@dns-test-service.dns-3698.svc agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3698 jessie_tcp@dns-test-service.dns-3698 jessie_udp@dns-test-service.dns-3698.svc jessie_tcp@dns-test-service.dns-3698.svc jessie_udp@_http._tcp.dns-test-service.dns-3698.svc jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc]

  I0127 19:36:13.486336 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:36:13.492350 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:36:13.499289 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:36:18.423656 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.426502 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.429108 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.431523 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.433865 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.436259 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.438590 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.441016 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.452569 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.454850 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.457125 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.459425 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.461751 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.463912 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.466436 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.468730 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:18.477827 23 dns_common.go:506] Lookups using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3698 agnhost_tcp@dns-test-service.dns-3698 agnhost_udp@dns-test-service.dns-3698.svc agnhost_tcp@dns-test-service.dns-3698.svc agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3698 jessie_tcp@dns-test-service.dns-3698 jessie_udp@dns-test-service.dns-3698.svc jessie_tcp@dns-test-service.dns-3698.svc jessie_udp@_http._tcp.dns-test-service.dns-3698.svc jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc]

  I0127 19:36:18.481780 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:36:18.485259 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:36:18.488731 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:36:23.422209 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.425134 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.427903 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.430729 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.433172 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.435582 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.437997 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.440399 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.452512 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.454847 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.457183 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.459864 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.462251 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.464601 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.466932 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.469232 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:23.478832 23 dns_common.go:506] Lookups using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3698 agnhost_tcp@dns-test-service.dns-3698 agnhost_udp@dns-test-service.dns-3698.svc agnhost_tcp@dns-test-service.dns-3698.svc agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3698 jessie_tcp@dns-test-service.dns-3698 jessie_udp@dns-test-service.dns-3698.svc jessie_tcp@dns-test-service.dns-3698.svc jessie_udp@_http._tcp.dns-test-service.dns-3698.svc jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc]

  I0127 19:36:23.482744 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:36:23.486427 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:36:23.490573 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:36:28.422450 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.425502 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.428351 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.430838 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.433350 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.435773 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.438220 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.440619 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.452088 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.454502 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.456613 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.458912 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.461178 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.463522 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.465715 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.468027 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:28.477159 23 dns_common.go:506] Lookups using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3698 agnhost_tcp@dns-test-service.dns-3698 agnhost_udp@dns-test-service.dns-3698.svc agnhost_tcp@dns-test-service.dns-3698.svc agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3698 jessie_tcp@dns-test-service.dns-3698 jessie_udp@dns-test-service.dns-3698.svc jessie_tcp@dns-test-service.dns-3698.svc jessie_udp@_http._tcp.dns-test-service.dns-3698.svc jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc]

  I0127 19:36:28.481031 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:36:28.484569 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:36:28.488031 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:36:33.422717 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.425408 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.427843 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.430277 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.432720 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.435131 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.437438 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.439877 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.451913 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.454205 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.456630 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.459128 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698 from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.461474 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.463900 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.466288 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.468846 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc from pod dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b: the server could not find the requested resource (get pods dns-test-3b16283b-2936-4bd3-b84a-10f70163884b)
  I0127 19:36:33.478819 23 dns_common.go:506] Lookups using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-3698 agnhost_tcp@dns-test-service.dns-3698 agnhost_udp@dns-test-service.dns-3698.svc agnhost_tcp@dns-test-service.dns-3698.svc agnhost_udp@_http._tcp.dns-test-service.dns-3698.svc agnhost_tcp@_http._tcp.dns-test-service.dns-3698.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3698 jessie_tcp@dns-test-service.dns-3698 jessie_udp@dns-test-service.dns-3698.svc jessie_tcp@dns-test-service.dns-3698.svc jessie_udp@_http._tcp.dns-test-service.dns-3698.svc jessie_tcp@_http._tcp.dns-test-service.dns-3698.svc]

  I0127 19:36:33.483022 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:36:33.486927 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:36:33.490589 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:36:38.478304 23 dns_common.go:546] DNS probes using dns-3698/dns-test-3b16283b-2936-4bd3-b84a-10f70163884b succeeded

  STEP: deleting the pod @ 01/27/25 19:36:38.478
  STEP: deleting the test service @ 01/27/25 19:36:38.493
  STEP: deleting the test headless service @ 01/27/25 19:36:38.51
  I0127 19:36:38.518185 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3698" for this suite. @ 01/27/25 19:36:38.521
• [32.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/27/25 19:36:38.525
  I0127 19:36:38.525319 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename namespaces @ 01/27/25 19:36:38.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:38.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:38.539
  STEP: Creating namespace "e2e-ns-b96js" @ 01/27/25 19:36:38.541
  I0127 19:36:38.635321 23 namespace.go:411] Namespace "e2e-ns-b96js-1243" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-b96js-1243" @ 01/27/25 19:36:38.635
  I0127 19:36:38.641502 23 namespace.go:434] Namespace "e2e-ns-b96js-1243" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-b96js-1243" @ 01/27/25 19:36:38.641
  I0127 19:36:38.646544 23 namespace.go:463] Namespace "e2e-ns-b96js-1243" has []v1.FinalizerName{"kubernetes"}
  I0127 19:36:38.646685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7746" for this suite. @ 01/27/25 19:36:38.648
  STEP: Destroying namespace "e2e-ns-b96js-1243" for this suite. @ 01/27/25 19:36:38.654
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788
  STEP: Creating a kubernetes client @ 01/27/25 19:36:38.658
  I0127 19:36:38.658288 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:36:38.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:38.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:38.737
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/27/25 19:36:38.739
  I0127 19:36:38.739581 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-9637 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0127 19:36:38.801768 23 builder.go:146] stderr: ""
  I0127 19:36:38.801808 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/27/25 19:36:38.801
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/27/25 19:36:43.852
  I0127 19:36:43.852980 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-9637 get pod e2e-test-httpd-pod -o json'
  I0127 19:36:43.905810 23 builder.go:146] stderr: ""
  I0127 19:36:43.905916 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-01-27T19:36:38Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9637\",\n        \"resourceVersion\": \"22669\",\n        \"uid\": \"bd36e934-566c-4563-950d-dbe80dec2023\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ln69z\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker-0\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-ln69z\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-27T19:36:39Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-27T19:36:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-27T19:36:39Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-27T19:36:39Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-27T19:36:38Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://d9ff0cc36b10d1b832e9511a1d21e1f6c543d3c38cabbdf40762fdb63fb2bdc0\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-27T19:36:39Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-ln69z\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.0.52.184\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.0.52.184\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.248\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.248\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-27T19:36:38Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/27/25 19:36:43.905
  I0127 19:36:43.906057 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-9637 replace -f -'
  I0127 19:36:44.014824 23 builder.go:146] stderr: ""
  I0127 19:36:44.014866 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/27/25 19:36:44.014
  I0127 19:36:44.017129 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-9637 delete pods e2e-test-httpd-pod'
  I0127 19:36:45.949099 23 builder.go:146] stderr: ""
  I0127 19:36:45.949137 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0127 19:36:45.949302 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9637" for this suite. @ 01/27/25 19:36:45.951
• [7.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/27/25 19:36:45.957
  I0127 19:36:45.957593 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/27/25 19:36:45.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:45.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:45.971
  STEP: fetching the /apis discovery document @ 01/27/25 19:36:45.973
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/27/25 19:36:45.974
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/27/25 19:36:45.974
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/27/25 19:36:45.974
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/27/25 19:36:45.975
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/27/25 19:36:45.975
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/27/25 19:36:45.975
  I0127 19:36:45.976096 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6302" for this suite. @ 01/27/25 19:36:46.052
• [0.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/27/25 19:36:46.056
  I0127 19:36:46.056545 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename events @ 01/27/25 19:36:46.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:46.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:46.069
  STEP: creating a test event @ 01/27/25 19:36:46.071
  STEP: listing events in all namespaces @ 01/27/25 19:36:46.075
  STEP: listing events in test namespace @ 01/27/25 19:36:46.077
  STEP: listing events with field selection filtering on source @ 01/27/25 19:36:46.078
  STEP: listing events with field selection filtering on reportingController @ 01/27/25 19:36:46.08
  STEP: getting the test event @ 01/27/25 19:36:46.081
  STEP: patching the test event @ 01/27/25 19:36:46.083
  STEP: getting the test event @ 01/27/25 19:36:46.092
  STEP: updating the test event @ 01/27/25 19:36:46.093
  STEP: getting the test event @ 01/27/25 19:36:46.097
  STEP: deleting the test event @ 01/27/25 19:36:46.098
  STEP: listing events in all namespaces @ 01/27/25 19:36:46.102
  STEP: listing events in test namespace @ 01/27/25 19:36:46.104
  I0127 19:36:46.105963 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2315" for this suite. @ 01/27/25 19:36:46.153
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/27/25 19:36:46.157
  I0127 19:36:46.157478 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:36:46.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:46.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:46.172
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:36:46.174
  STEP: Saw pod success @ 01/27/25 19:36:48.185
  I0127 19:36:48.187840 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-42b2c61f-fb16-4fce-a7e0-f4ca6020aeff container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:36:48.192
  I0127 19:36:48.203211 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1378" for this suite. @ 01/27/25 19:36:48.205
• [2.051 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/27/25 19:36:48.208
  I0127 19:36:48.208988 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/27/25 19:36:48.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:48.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:48.221
  I0127 19:36:48.223696 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:36:54.348219 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5819" for this suite. @ 01/27/25 19:36:54.35
• [6.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/27/25 19:36:54.357
  I0127 19:36:54.357166 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:36:54.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:54.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:54.368
  STEP: Setting up server cert @ 01/27/25 19:36:54.467
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:36:54.761
  STEP: Deploying the webhook pod @ 01/27/25 19:36:54.767
  STEP: Wait for the deployment to be ready @ 01/27/25 19:36:54.778
  I0127 19:36:54.783219 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:36:56.79
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:36:56.799
  I0127 19:36:57.800045 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/27/25 19:36:57.804
  STEP: create a pod @ 01/27/25 19:36:57.82
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/27/25 19:36:59.829
  I0127 19:36:59.829949 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=webhook-6428 attach --namespace=webhook-6428 to-be-attached-pod -i -c=container1'
  I0127 19:36:59.901581 23 builder.go:135] rc: 1
  I0127 19:36:59.934665 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6428" for this suite. @ 01/27/25 19:36:59.939
  STEP: Destroying namespace "webhook-markers-649" for this suite. @ 01/27/25 19:36:59.943
• [5.592 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/27/25 19:36:59.949
  I0127 19:36:59.949502 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:36:59.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:36:59.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:36:59.96
  STEP: Creating configMap with name cm-test-opt-del-88688004-de07-44b1-8bc7-f950790fc3a5 @ 01/27/25 19:37:00.038
  STEP: Creating configMap with name cm-test-opt-upd-7672aa71-f1e6-4d1b-9c4b-b306a3445057 @ 01/27/25 19:37:00.043
  STEP: Creating the pod @ 01/27/25 19:37:00.047
  STEP: Deleting configmap cm-test-opt-del-88688004-de07-44b1-8bc7-f950790fc3a5 @ 01/27/25 19:37:02.074
  STEP: Updating configmap cm-test-opt-upd-7672aa71-f1e6-4d1b-9c4b-b306a3445057 @ 01/27/25 19:37:02.077
  STEP: Creating configMap with name cm-test-opt-create-4357245f-5ad6-4eb1-a2cf-9ff751d552ed @ 01/27/25 19:37:02.08
  STEP: waiting to observe update in volume @ 01/27/25 19:37:02.085
  I0127 19:38:22.369430 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4853" for this suite. @ 01/27/25 19:38:22.371
• [82.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/27/25 19:38:22.382
  I0127 19:38:22.382487 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-runtime @ 01/27/25 19:38:22.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:38:22.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:38:22.392
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/27/25 19:38:22.401
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/27/25 19:38:40.454
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/27/25 19:38:40.456
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/27/25 19:38:40.46
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/27/25 19:38:40.46
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/27/25 19:38:40.476
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/27/25 19:38:42.483
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/27/25 19:38:43.488
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/27/25 19:38:43.491
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/27/25 19:38:43.491
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/27/25 19:38:43.506
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/27/25 19:38:44.511
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/27/25 19:38:45.515
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/27/25 19:38:45.519
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/27/25 19:38:45.519
  I0127 19:38:45.534761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4505" for this suite. @ 01/27/25 19:38:45.536
• [23.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/27/25 19:38:45.541
  I0127 19:38:45.541440 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 19:38:45.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:38:45.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:38:45.555
  I0127 19:38:45.557468 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I0127 19:38:45.561089 23 deployment.go:1200] Waiting for observed generation 1
  I0127 19:38:47.565222 23 deployment.go:1205] Waiting for all required pods to come up
  I0127 19:38:47.568470 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/27/25 19:38:47.568
  I0127 19:38:47.568570 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0127 19:38:47.572031 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0127 19:38:47.579895 23 deployment.go:314] Updating deployment webserver-deployment
  I0127 19:38:47.579920 23 deployment.go:1224] Waiting for observed generation 2
  I0127 19:38:49.584537 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0127 19:38:49.586416 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0127 19:38:49.588150 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0127 19:38:49.593384 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0127 19:38:49.593411 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0127 19:38:49.594852 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0127 19:38:49.597765 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0127 19:38:49.597790 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0127 19:38:49.605137 23 deployment.go:314] Updating deployment webserver-deployment
  I0127 19:38:49.605166 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0127 19:38:49.608232 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0127 19:38:49.609714 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0127 19:38:51.616638 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06d58c89-3546-4ed3-95a1-2e1ead3394b7",
      ResourceVersion: (string) (len=5) "23703",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 19:38:51.620539 23 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
      ResourceVersion: (string) (len=5) "23552",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "06d58c89-3546-4ed3-95a1-2e1ead3394b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 36 64 35 38 63  38 39 2d 33 35 34 36 2d  |\"06d58c89-3546-|
              00000120  34 65 64 33 2d 39 35 61  31 2d 32 65 31 65 61 64  |4ed3-95a1-2e1ead|
              00000130  33 33 39 34 62 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3394b7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 19:38:51.621462 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0127 19:38:51.621822 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
      ResourceVersion: (string) (len=5) "23702",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "06d58c89-3546-4ed3-95a1-2e1ead3394b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 36 64 35 38 63  38 39 2d 33 35 34 36 2d  |\"06d58c89-3546-|
              00000120  34 65 64 33 2d 39 35 61  31 2d 32 65 31 65 61 64  |4ed3-95a1-2e1ead|
              00000130  33 33 39 34 62 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3394b7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 19:38:51.626909 23 deployment.go:68] Pod "webserver-deployment-685b768f58-2lv54" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2lv54",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3785726b-d3d7-456d-ad0f-c16c364d2663",
      ResourceVersion: (string) (len=5) "23372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  38 38 5c 22 7d 22 3a 7b  |.244.0.188\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jx98p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jx98p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a9244d77707db70f83ff8df6fc03fc785191695f4d9f4fbca478c6705433674d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jx98p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.629022 23 deployment.go:68] Pod "webserver-deployment-685b768f58-4nvmp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4nvmp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d12c0ca-6772-4429-8800-012ed4f9a252",
      ResourceVersion: (string) (len=5) "23694",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  34 5c 22 7d 22 3a 7b 22  |.244.1.14\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kq8gw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kq8gw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a8894d2d2dbb30ff45c1cc427e47faf2cf8f35c9b39d48e28ceb6dbc02d62a24",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kq8gw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.631814 23 deployment.go:68] Pod "webserver-deployment-685b768f58-5f4dt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5f4dt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "337eb707-3ca3-4d49-a5de-d504150970b0",
      ResourceVersion: (string) (len=5) "23366",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  38 36 5c 22 7d 22 3a 7b  |.244.0.186\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vh4ps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vh4ps",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://da2b3c44798904c9c18f9a0856ecdbcb98c11423e791e527aed93f3e646ea184",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vh4ps",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.633939 23 deployment.go:68] Pod "webserver-deployment-685b768f58-6rk6g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-6rk6g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93f4b229-a781-4e95-be5f-cedcf185d63e",
      ResourceVersion: (string) (len=5) "23389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 38  5c 22 7d 22 3a 7b 22 2e  |.244.1.8\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4x5jk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4x5jk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=10) "10.244.1.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6bdf48fdf28089b2daae370ebec6ff4e767d74f1e5339624266b3e5a0debae2e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4x5jk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.636305 23 deployment.go:68] Pod "webserver-deployment-685b768f58-7dgtc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7dgtc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d882a06-044d-455b-93cb-3c2484d087ac",
      ResourceVersion: (string) (len=5) "23676",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 35 5c 22 7d 22 3a 7b  |.244.0.195\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-752lh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-752lh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://075bb1ceb63bccf176c2166a9ce77ee54ad3225d643786e07f80836c73c7dcc8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-752lh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.639073 23 deployment.go:68] Pod "webserver-deployment-685b768f58-7dsgr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7dsgr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8115c1f8-b958-402d-8575-596220e6498d",
      ResourceVersion: (string) (len=5) "23379",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  5c 22 7d 22 3a 7b 22 2e  |.244.1.4\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vw5qv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vw5qv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=10) "10.244.1.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f13ba0f9eb13313b30692ca41f577197918c3e9f948de9fd4ae517dd45dc774c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vw5qv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.641356 23 deployment.go:68] Pod "webserver-deployment-685b768f58-8v7fs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8v7fs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a9c9292-8196-4419-bfa0-ac481b098659",
      ResourceVersion: (string) (len=5) "23700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  38 5c 22 7d 22 3a 7b 22  |.244.1.18\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n224b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n224b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://657e19966da996c4ae601552f19af58d8c8bfda4feff26b8a8449bf5c8c65656",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n224b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.643289 23 deployment.go:68] Pod "webserver-deployment-685b768f58-97hdm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-97hdm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "325579e9-3516-4425-a722-0e2d08264a0e",
      ResourceVersion: (string) (len=5) "23386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 36  5c 22 7d 22 3a 7b 22 2e  |.244.1.6\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7z297",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7z297",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=10) "10.244.1.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://39b29beb6e15f229ad050dfbe27e5deb61de130abfb9a6fc51c236b8a1738867",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7z297",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.645284 23 deployment.go:68] Pod "webserver-deployment-685b768f58-bfmc8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-bfmc8",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f8c97d2-0481-4e15-a68b-6b57f89a732a",
      ResourceVersion: (string) (len=5) "23673",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 37 5c 22 7d 22 3a 7b  |.244.0.197\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wfs7b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wfs7b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.197",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.197"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://902abb3e734e88145540587d426832f6ec9e2cbb4b0f5322ed5fb76a1f233a5e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wfs7b",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.647663 23 deployment.go:68] Pod "webserver-deployment-685b768f58-c4c7t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c4c7t",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "649f681f-d163-4e52-918b-7a637251acbb",
      ResourceVersion: (string) (len=5) "23688",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 5c 22 7d 22 3a 7b 22  |.244.1.13\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gnqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gnqr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://015e69451a28f5dc8e775e08e62d82359952072887849520b9e0bca1edaa5cd1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6gnqr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.650089 23 deployment.go:68] Pod "webserver-deployment-685b768f58-c6d2m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c6d2m",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11395fef-4560-4166-b493-7a7ef626f070",
      ResourceVersion: (string) (len=5) "23377",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 37  5c 22 7d 22 3a 7b 22 2e  |.244.1.7\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kb2kq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kb2kq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=10) "10.244.1.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a575512d89a42185b0886ce9cca2a1a4ca9f3ee9df32e4a22f337f23e1e77f67",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kb2kq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.652497 23 deployment.go:68] Pod "webserver-deployment-685b768f58-hkpt9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-hkpt9",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5be96b8-52c5-4958-9703-792b0a746262",
      ResourceVersion: (string) (len=5) "23682",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  39 5c 22 7d 22 3a 7b 22  |.244.1.19\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wsm7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wsm7v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://16f7398e0e07f0e7c453b3cd5a524e8df708aa3e77adf028b70104695af66bf9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wsm7v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.654690 23 deployment.go:68] Pod "webserver-deployment-685b768f58-knmvg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-knmvg",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fd3498d-bf17-4e67-9d30-d67617159823",
      ResourceVersion: (string) (len=5) "23663",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 33 5c 22 7d 22 3a 7b  |.244.0.193\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sl47l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sl47l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.193",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.193"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://60027cdcc1726ecc2d6c8d4435638e7dec999afcc8098a68cffb163c5654163e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sl47l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.657080 23 deployment.go:68] Pod "webserver-deployment-685b768f58-l5qqb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l5qqb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c9b4c5f-79ea-4fad-87a4-c2688196a913",
      ResourceVersion: (string) (len=5) "23370",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  38 35 5c 22 7d 22 3a 7b  |.244.0.185\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7kp2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7kp2d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.185",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.185"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://af2380fef520ad4b3a619b9575fe922ac6741b108fd62f2bf4f46d7a0c2448fa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7kp2d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.659423 23 deployment.go:68] Pod "webserver-deployment-685b768f58-nrtxp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nrtxp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2ad5d73-0c62-4f15-b415-3637e1cf34b8",
      ResourceVersion: (string) (len=5) "23697",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  36 5c 22 7d 22 3a 7b 22  |.244.1.16\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8522",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8522",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://03a18063271c74f0c16bb75205b9a6d64662ae1243c79e9aea98a6979f080fa4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s8522",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.662466 23 deployment.go:68] Pod "webserver-deployment-685b768f58-nzphs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-nzphs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1db3a3cf-1fc2-45c8-aff6-9b338a92b405",
      ResourceVersion: (string) (len=5) "23685",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  32 5c 22 7d 22 3a 7b 22  |.244.1.12\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvc2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvc2k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dc86deaf53cefe3867d13a5a0eb53ce9c46ec50202c607c92e074c0f87bef653",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nvc2k",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.664904 23 deployment.go:68] Pod "webserver-deployment-685b768f58-p4vfr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-p4vfr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c309dff-95d8-4385-8304-882f6d77cd0b",
      ResourceVersion: (string) (len=5) "23671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 38 5c 22 7d 22 3a 7b  |.244.0.198\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6dgcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6dgcx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.198",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.198"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d2433cd686e51d240e3266c6f8bdb916a78ab801341d8054fbc7585d8e48d05e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6dgcx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.668014 23 deployment.go:68] Pod "webserver-deployment-685b768f58-tjzhs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tjzhs",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bdee04a2-03e2-4953-ae62-ae1e3ce459cc",
      ResourceVersion: (string) (len=5) "23361",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  38 37 5c 22 7d 22 3a 7b  |.244.0.187\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjw6j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjw6j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603525,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603525,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6403acece838267f90f4b8ff766532768dd366a7cb94da91160d4c7cf9135c5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pjw6j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.670754 23 deployment.go:68] Pod "webserver-deployment-685b768f58-wwbj4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-wwbj4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4778e601-81f5-4530-b001-8c028c90a0ca",
      ResourceVersion: (string) (len=5) "23659",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 36 5c 22 7d 22 3a 7b  |.244.0.196\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cj6nz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cj6nz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a1fe058e1e29ac6d4865f9de1c4d77383aa7f49b7b9fa9a5ead6a61e1d0acbbd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cj6nz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.673026 23 deployment.go:68] Pod "webserver-deployment-685b768f58-xcm69" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xcm69",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4eade99d-84b5-4263-90d6-7c1ec09629d5",
      ResourceVersion: (string) (len=5) "23666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "c6255fd4-cd53-46ee-a474-712039848688",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 36  32 35 35 66 64 34 2d 63  |d\":\"c6255fd4-c|
              00000090  64 35 33 2d 34 36 65 65  2d 61 34 37 34 2d 37 31  |d53-46ee-a474-71|
              000000a0  32 30 33 39 38 34 38 36  38 38 5c 22 7d 22 3a 7b  |2039848688\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  39 31 5c 22 7d 22 3a 7b  |.244.0.191\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mt9kk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mt9kk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873603530,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3239afb277c442c52fc5163bed4f773ce4e91f0d11608313da6f965020445fe9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mt9kk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.675557 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-42t8z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-42t8z",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c346341-14f5-47e6-a585-31ac315bd54b",
      ResourceVersion: (string) (len=5) "23457",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 39 30 5c  22 7d 22 3a 7b 22 2e 22  |4.0.190\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r8mk8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r8mk8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r8mk8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.677718 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-8b8js" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-8b8js",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "16ace981-db6a-4caf-a585-e22dee15e9e7",
      ResourceVersion: (string) (len=5) "23574",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6d5ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6d5ts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6d5ts",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.680861 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bf8l4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bf8l4",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc12ac0b-813a-48f9-83a5-4c02ff39c282",
      ResourceVersion: (string) (len=5) "23564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f29t7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f29t7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f29t7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.683997 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-c8pn8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-c8pn8",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2cf5640-0048-43b8-8842-769ff844dc79",
      ResourceVersion: (string) (len=5) "23669",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 39 32 5c  22 7d 22 3a 7b 22 2e 22  |4.0.192\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rsg56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rsg56",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.192",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.192"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rsg56",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.686306 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f4pgp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f4pgp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9334be1-b753-4e56-8c15-a2c7f38f20a7",
      ResourceVersion: (string) (len=5) "23691",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.15\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r7gt9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r7gt9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r7gt9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.689125 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-f9n2k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-f9n2k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92e40acf-8ac8-40d7-bfc2-0d0f290be1f4",
      ResourceVersion: (string) (len=5) "23563",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6psrz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6psrz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6psrz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.691473 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-fp4mt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-fp4mt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbb967e0-6211-4f25-9268-1e3a1cc9c4cd",
      ResourceVersion: (string) (len=5) "23462",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 38 39 5c  22 7d 22 3a 7b 22 2e 22  |4.0.189\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hh676",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hh676",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) (len=12) "10.244.0.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hh676",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.694128 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hrpxg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hrpxg",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fe23ddb-18bd-4c2c-8b01-3cc17140ce31",
      ResourceVersion: (string) (len=5) "23467",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 39 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |4.1.9\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7kztd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7kztd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=10) "10.244.1.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7kztd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.696898 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jct65" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jct65",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9866e510-49e4-4ffd-a59f-56b5070db109",
      ResourceVersion: (string) (len=5) "23464",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.10\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zntfh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zntfh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zntfh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.700222 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pt7s9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pt7s9",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b2431c6-44f5-4861-af03-dd7ca06810e4",
      ResourceVersion: (string) (len=5) "23565",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sll6z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sll6z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sll6z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.702775 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sfrqf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sfrqf",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc51426e-0ba6-410c-b9ae-992587851128",
      ResourceVersion: (string) (len=5) "23572",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jk86p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jk86p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jk86p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.705075 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tpr98" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tpr98",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36534940-9180-4029-bfc0-13e3fd39ca97",
      ResourceVersion: (string) (len=5) "23566",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l64nx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l64nx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603529,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l64nx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.707490 23 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tttdl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tttdl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-7387",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15e1db2b-c632-4ae9-ae9f-d9e0a6c1c327",
      ResourceVersion: (string) (len=5) "23587",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "e05727c8-e0f0-41de-b189-2430326181cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 30  35 37 32 37 63 38 2d 65  |d\":\"e05727c8-e|
              00000090  30 66 30 2d 34 31 64 65  2d 62 31 38 39 2d 32 34  |0f0-41de-b189-24|
              000000a0  33 30 33 32 36 31 38 31  63 62 5c 22 7d 22 3a 7b  |30326181cb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |4.1.11\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kz9bb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kz9bb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873603527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=11) "10.244.1.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873603527,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kz9bb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 19:38:51.709714 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7387" for this suite. @ 01/27/25 19:38:51.713
• [6.176 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/27/25 19:38:51.719
  I0127 19:38:51.719077 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:38:51.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:38:51.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:38:51.732
  STEP: creating a ConfigMap @ 01/27/25 19:38:51.734
  STEP: fetching the ConfigMap @ 01/27/25 19:38:51.737
  STEP: patching the ConfigMap @ 01/27/25 19:38:51.739
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/27/25 19:38:51.742
  STEP: deleting the ConfigMap by collection with a label selector @ 01/27/25 19:38:51.743
  STEP: listing all ConfigMaps in test namespace @ 01/27/25 19:38:51.747
  I0127 19:38:51.749431 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1307" for this suite. @ 01/27/25 19:38:51.812
• [0.098 seconds]
------------------------------
SS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/27/25 19:38:51.816
  I0127 19:38:51.816792 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename podtemplate @ 01/27/25 19:38:51.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:38:51.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:38:51.832
  STEP: Create a pod template @ 01/27/25 19:38:51.835
  STEP: Replace a pod template @ 01/27/25 19:38:51.838
  I0127 19:38:51.845682 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0127 19:38:51.845802 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5182" for this suite. @ 01/27/25 19:38:51.913
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/27/25 19:38:51.917
  I0127 19:38:51.917443 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 19:38:51.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:38:51.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:38:51.931
  I0127 19:38:53.944571 23 delete.go:62] Deleting pod "var-expansion-f668f409-3f49-40b3-9b5b-ad2639d140e9" in namespace "var-expansion-7063"
  I0127 19:38:53.950757 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-f668f409-3f49-40b3-9b5b-ad2639d140e9" to be fully deleted
  I0127 19:38:55.955989 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7063" for this suite. @ 01/27/25 19:38:55.958
• [4.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/27/25 19:38:55.962
  I0127 19:38:55.962904 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:38:55.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:38:55.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:38:55.974
  STEP: creating service in namespace services-7408 @ 01/27/25 19:38:55.976
  STEP: creating service affinity-nodeport-transition in namespace services-7408 @ 01/27/25 19:38:55.976
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7408 @ 01/27/25 19:38:55.988
  I0127 19:38:55.995193      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7408, replica count: 3
  I0127 19:38:59.047142      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 19:38:59.053353 23 resource.go:361] Creating new exec pod
  I0127 19:39:02.064212 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7408 exec execpod-affinity9fktf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0127 19:39:02.169264 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.102.68.210) 80 port [tcp/http] succeeded!\n"
  I0127 19:39:02.169320 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:39:02.169436 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7408 exec execpod-affinity9fktf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.68.210 80'
  I0127 19:39:02.266635 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.68.210 80\nConnection to 10.102.68.210 80 port [tcp/http] succeeded!\n"
  I0127 19:39:02.266692 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:39:02.266813 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7408 exec execpod-affinity9fktf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.52.184 31766'
  I0127 19:39:02.366495 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.52.184 31766\nConnection to 10.0.52.184 31766 port [tcp/*] succeeded!\n"
  I0127 19:39:02.366567 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:39:02.366650 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7408 exec execpod-affinity9fktf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.33.3 31766'
  I0127 19:39:02.464333 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.33.3 31766\nConnection to 10.0.33.3 31766 port [tcp/*] succeeded!\n"
  I0127 19:39:02.464378 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 19:39:02.470321 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7408 exec execpod-affinity9fktf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.52.184:31766/ ; done'
  I0127 19:39:02.636693 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n"
  I0127 19:39:02.636748 23 builder.go:147] stdout: "\naffinity-nodeport-transition-b2kdt\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-b2kdt\naffinity-nodeport-transition-b2kdt\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-b2kdt\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-2qdhw\naffinity-nodeport-transition-6xkl6"
  I0127 19:39:02.636763 23 service.go:242] Received response from host: affinity-nodeport-transition-b2kdt
  I0127 19:39:02.636777 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.636790 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636803 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636811 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.636822 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636834 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636844 23 service.go:242] Received response from host: affinity-nodeport-transition-b2kdt
  I0127 19:39:02.636855 23 service.go:242] Received response from host: affinity-nodeport-transition-b2kdt
  I0127 19:39:02.636903 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636916 23 service.go:242] Received response from host: affinity-nodeport-transition-b2kdt
  I0127 19:39:02.636927 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636939 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636959 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.636971 23 service.go:242] Received response from host: affinity-nodeport-transition-2qdhw
  I0127 19:39:02.636983 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.644660 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7408 exec execpod-affinity9fktf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.52.184:31766/ ; done'
  I0127 19:39:02.813284 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.52.184:31766/\n"
  I0127 19:39:02.813354 23 builder.go:147] stdout: "\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6\naffinity-nodeport-transition-6xkl6"
  I0127 19:39:02.813374 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813389 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813424 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813437 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813460 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813480 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813492 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813503 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813514 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813525 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813538 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813558 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813569 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813581 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813597 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813607 23 service.go:242] Received response from host: affinity-nodeport-transition-6xkl6
  I0127 19:39:02.813691 23 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7408, will wait for the garbage collector to delete the pods @ 01/27/25 19:39:02.823
  I0127 19:39:02.880562 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 4.01248ms
  I0127 19:39:02.981632 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.065529ms
  I0127 19:39:05.500264 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7408" for this suite. @ 01/27/25 19:39:05.502
• [9.548 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/27/25 19:39:05.51
  I0127 19:39:05.510684 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/27/25 19:39:05.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:39:05.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:39:05.521
  I0127 19:39:05.523306 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:39:08.562365 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1552" for this suite. @ 01/27/25 19:39:08.565
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 01/27/25 19:39:08.569
  I0127 19:39:08.569536 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 19:39:08.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:39:08.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:39:08.58
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4830.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-4830.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 01/27/25 19:39:08.582
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4830.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4830.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/27/25 19:39:08.582
  STEP: creating a pod to probe /etc/hosts @ 01/27/25 19:39:08.582
  STEP: submitting the pod to kubernetes @ 01/27/25 19:39:08.582
  STEP: retrieving the pod @ 01/27/25 19:39:10.594
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:39:10.596
  I0127 19:39:10.609945 23 dns_common.go:546] DNS probes using dns-4830/dns-test-67e7213d-ba87-4677-9481-39a0e2e3b6dc succeeded

  STEP: deleting the pod @ 01/27/25 19:39:10.61
  I0127 19:39:10.620253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4830" for this suite. @ 01/27/25 19:39:10.622
• [2.059 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/27/25 19:39:10.628
  I0127 19:39:10.628607 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 19:39:10.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:39:10.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:39:10.639
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/27/25 19:39:10.727
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/27/25 19:39:10.731
  I0127 19:39:10.825372 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:39:10.825409 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:39:11.736510 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 19:39:11.736545 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/27/25 19:39:11.738
  I0127 19:39:11.837606 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:39:11.837642 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:39:12.752181 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 19:39:12.752215 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/27/25 19:39:12.752
  STEP: Deleting DaemonSet "daemon-set" @ 01/27/25 19:39:12.755
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9015, will wait for the garbage collector to delete the pods @ 01/27/25 19:39:12.755
  I0127 19:39:12.811704 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.234254ms
  I0127 19:39:12.912774 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.066941ms
  I0127 19:39:14.315296 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:39:14.315329 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0127 19:39:14.317384 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24270"},"items":null}

  I0127 19:39:14.318984 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24270"},"items":null}

  I0127 19:39:14.324507 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9015" for this suite. @ 01/27/25 19:39:14.327
• [3.703 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/27/25 19:39:14.331
  I0127 19:39:14.331730 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:39:14.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:39:14.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:39:14.344
  STEP: Creating secret with name s-test-opt-del-b692e0d6-1982-4b43-8d78-8e1cbea7f9aa @ 01/27/25 19:39:14.421
  STEP: Creating secret with name s-test-opt-upd-e8900968-73b4-420e-a994-d3183287cd56 @ 01/27/25 19:39:14.424
  STEP: Creating the pod @ 01/27/25 19:39:14.427
  STEP: Deleting secret s-test-opt-del-b692e0d6-1982-4b43-8d78-8e1cbea7f9aa @ 01/27/25 19:39:16.455
  STEP: Updating secret s-test-opt-upd-e8900968-73b4-420e-a994-d3183287cd56 @ 01/27/25 19:39:16.458
  STEP: Creating secret with name s-test-opt-create-83c6475d-3f20-464a-b088-91a04a86badc @ 01/27/25 19:39:16.461
  STEP: waiting to observe update in volume @ 01/27/25 19:39:16.466
  I0127 19:40:20.696016 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7379" for this suite. @ 01/27/25 19:40:20.698
• [66.373 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/27/25 19:40:20.704
  I0127 19:40:20.704617 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/27/25 19:40:20.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:40:20.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:40:20.716
  I0127 19:40:20.718314 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:40:21.733234 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6089" for this suite. @ 01/27/25 19:40:21.735
• [1.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621
  STEP: Creating a kubernetes client @ 01/27/25 19:40:21.74
  I0127 19:40:21.740212 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:40:21.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:40:21.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:40:21.751
  STEP: creating the pod @ 01/27/25 19:40:21.753
  I0127 19:40:21.753487 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 create -f -'
  I0127 19:40:21.865962 23 builder.go:146] stderr: ""
  I0127 19:40:21.865999 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/27/25 19:40:23.872
  I0127 19:40:23.872201 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 label pods pause testing-label=testing-label-value'
  I0127 19:40:23.933304 23 builder.go:146] stderr: ""
  I0127 19:40:23.933358 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/27/25 19:40:23.933
  I0127 19:40:23.933451 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 get pod pause -L testing-label'
  I0127 19:40:23.988327 23 builder.go:146] stderr: ""
  I0127 19:40:23.988468 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/27/25 19:40:23.988
  I0127 19:40:23.988550 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 label pods pause testing-label-'
  I0127 19:40:24.047333 23 builder.go:146] stderr: ""
  I0127 19:40:24.047393 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/27/25 19:40:24.047
  I0127 19:40:24.047498 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 get pod pause -L testing-label'
  I0127 19:40:24.105392 23 builder.go:146] stderr: ""
  I0127 19:40:24.105428 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 01/27/25 19:40:24.105
  I0127 19:40:24.105707 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 delete --grace-period=0 --force -f -'
  I0127 19:40:24.166807 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:40:24.166847 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0127 19:40:24.166895 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 get rc,svc -l name=pause --no-headers'
  I0127 19:40:24.228218 23 builder.go:146] stderr: "No resources found in kubectl-252 namespace.\n"
  I0127 19:40:24.228257 23 builder.go:147] stdout: ""
  I0127 19:40:24.228313 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-252 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0127 19:40:24.277977 23 builder.go:146] stderr: ""
  I0127 19:40:24.278151 23 builder.go:147] stdout: ""
  I0127 19:40:24.278295 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-252" for this suite. @ 01/27/25 19:40:24.281
• [2.545 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 01/27/25 19:40:24.285
  I0127 19:40:24.285448 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename containers @ 01/27/25 19:40:24.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:40:24.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:40:24.299
  STEP: Creating a pod to test override command @ 01/27/25 19:40:24.301
  STEP: Saw pod success @ 01/27/25 19:40:28.316
  I0127 19:40:28.318232 23 output.go:207] Trying to get logs from node worker-1 pod client-containers-acaaa8e1-8ba1-4691-ae8b-68f43fffcdcf container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:40:28.328
  I0127 19:40:28.338884 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1331" for this suite. @ 01/27/25 19:40:28.341
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/27/25 19:40:28.345
  I0127 19:40:28.345198 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:40:28.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:40:28.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:40:28.357
  STEP: Creating configMap with name cm-test-opt-del-58616ced-1bf1-49fb-ba0f-81947341b58b @ 01/27/25 19:40:28.441
  STEP: Creating configMap with name cm-test-opt-upd-15e9670e-6640-45ea-ad13-dae8318caac8 @ 01/27/25 19:40:28.445
  STEP: Creating the pod @ 01/27/25 19:40:28.449
  STEP: Deleting configmap cm-test-opt-del-58616ced-1bf1-49fb-ba0f-81947341b58b @ 01/27/25 19:40:30.475
  STEP: Updating configmap cm-test-opt-upd-15e9670e-6640-45ea-ad13-dae8318caac8 @ 01/27/25 19:40:30.479
  STEP: Creating configMap with name cm-test-opt-create-c0891361-e040-4df2-b3ee-495d40855b02 @ 01/27/25 19:40:30.482
  STEP: waiting to observe update in volume @ 01/27/25 19:40:30.485
  I0127 19:41:42.744220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5931" for this suite. @ 01/27/25 19:41:42.746
• [74.407 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 01/27/25 19:41:42.752
  I0127 19:41:42.752601 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename containers @ 01/27/25 19:41:42.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:41:42.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:41:42.763
  STEP: Creating a pod to test override all @ 01/27/25 19:41:42.765
  STEP: Saw pod success @ 01/27/25 19:41:44.78
  I0127 19:41:44.781877 23 output.go:207] Trying to get logs from node worker-1 pod client-containers-2f677f36-685e-4003-9e4a-1ba8b7e460a2 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:41:44.787
  I0127 19:41:44.798731 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8472" for this suite. @ 01/27/25 19:41:44.803
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/27/25 19:41:44.807
  I0127 19:41:44.807196 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:41:44.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:41:44.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:41:44.818
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:41:44.82
  STEP: Saw pod success @ 01/27/25 19:41:46.83
  I0127 19:41:46.832497 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-ae7b5075-f8a0-42d2-b093-e667f4a98a33 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:41:46.836
  I0127 19:41:46.847912 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7742" for this suite. @ 01/27/25 19:41:46.85
• [2.047 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 01/27/25 19:41:46.853
  I0127 19:41:46.853993 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-selectable-fields @ 01/27/25 19:41:46.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:41:46.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:41:46.864
  STEP: Setting up server cert @ 01/27/25 19:41:46.866
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/27/25 19:41:47.187
  STEP: Deploying the custom resource conversion webhook pod @ 01/27/25 19:41:47.193
  STEP: Wait for the deployment to be ready @ 01/27/25 19:41:47.204
  I0127 19:41:47.209521 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:41:49.216
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:41:49.226
  I0127 19:41:50.227172 23 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 01/27/25 19:41:50.231
  I0127 19:41:50.231593 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Creating a custom resource conversion webhook @ 01/27/25 19:41:50.741
  STEP: Watching with field selectors @ 01/27/25 19:41:52.764
  STEP: Registering informers with field selectors @ 01/27/25 19:41:52.768
  STEP: Creating custom resources @ 01/27/25 19:41:52.768
  STEP: Listing v2 custom resources with field selector host=host1 @ 01/27/25 19:41:52.789
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 01/27/25 19:41:52.791
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 01/27/25 19:41:52.792
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 01/27/25 19:41:52.794
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 01/27/25 19:41:52.796
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 01/27/25 19:41:52.801
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 01/27/25 19:41:52.801
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 01/27/25 19:41:52.801
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 01/27/25 19:41:52.801
  STEP: Deleting one custom resources to ensure that deletions are observed @ 01/27/25 19:41:52.801
  STEP: Updating one custom resources to ensure that deletions are observed @ 01/27/25 19:41:52.809
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 01/27/25 19:41:52.819
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 01/27/25 19:41:52.821
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 01/27/25 19:41:52.822
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 01/27/25 19:41:52.828
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 01/27/25 19:41:52.828
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 01/27/25 19:41:52.828
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 01/27/25 19:41:52.828
  I0127 19:41:53.367860 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-9756" for this suite. @ 01/27/25 19:41:53.397
• [6.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/27/25 19:41:53.402
  I0127 19:41:53.402434 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:41:53.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:41:53.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:41:53.415
  STEP: Creating configMap with name projected-configmap-test-volume-06f9dcdd-aeef-4139-9c56-fdb1cb919001 @ 01/27/25 19:41:53.418
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:41:53.421
  STEP: Saw pod success @ 01/27/25 19:41:57.443
  I0127 19:41:57.445060 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-4d5d1b88-1c56-489f-a823-f9ed9bfcfabc container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:41:57.449
  I0127 19:41:57.460850 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2809" for this suite. @ 01/27/25 19:41:57.463
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/27/25 19:41:57.467
  I0127 19:41:57.467627 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:41:57.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:41:57.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:41:57.48
  STEP: Creating configMap with name projected-configmap-test-volume-2472691c-4704-462b-bc8e-ef4e6a851002 @ 01/27/25 19:41:57.482
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:41:57.485
  STEP: Saw pod success @ 01/27/25 19:42:01.501
  I0127 19:42:01.503447 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-17354228-b885-4b2a-a795-954d82d4d97f container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:42:01.508
  I0127 19:42:01.517936 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8328" for this suite. @ 01/27/25 19:42:01.52
• [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 01/27/25 19:42:01.526
  I0127 19:42:01.526197 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 19:42:01.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:01.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:01.537
  STEP: Creating Indexed job @ 01/27/25 19:42:01.539
  STEP: Ensuring job reaches completions @ 01/27/25 19:42:01.548
  STEP: Ensuring pods with index for job exist @ 01/27/25 19:42:09.564
  I0127 19:42:09.566877 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9691" for this suite. @ 01/27/25 19:42:09.569
• [8.047 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/27/25 19:42:09.573
  I0127 19:42:09.573279 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename security-context @ 01/27/25 19:42:09.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:09.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:09.587
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/27/25 19:42:09.589
  STEP: Saw pod success @ 01/27/25 19:42:13.602
  I0127 19:42:13.604861 23 output.go:207] Trying to get logs from node worker-0 pod security-context-234c2ba0-7ead-4a79-b0a1-bf98f303b8cb container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:42:13.609
  I0127 19:42:13.619721 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8032" for this suite. @ 01/27/25 19:42:13.621
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/27/25 19:42:13.625
  I0127 19:42:13.625850 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:42:13.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:13.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:13.636
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:42:13.638
  STEP: Saw pod success @ 01/27/25 19:42:17.653
  I0127 19:42:17.655343 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-8d5168d0-c0ff-4252-873d-13f25a3084ac container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:42:17.659
  I0127 19:42:17.669365 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9132" for this suite. @ 01/27/25 19:42:17.671
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/27/25 19:42:17.675
  I0127 19:42:17.675591 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 19:42:17.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:17.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:17.686
  I0127 19:42:17.688857 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  W0127 19:42:20.222163      23 warnings.go:70] unknown field "alpha"
  W0127 19:42:20.222215      23 warnings.go:70] unknown field "beta"
  W0127 19:42:20.222223      23 warnings.go:70] unknown field "delta"
  W0127 19:42:20.222231      23 warnings.go:70] unknown field "epsilon"
  W0127 19:42:20.222242      23 warnings.go:70] unknown field "gamma"
  I0127 19:42:20.749403 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1858" for this suite. @ 01/27/25 19:42:20.751
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/27/25 19:42:20.755
  I0127 19:42:20.755288 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename init-container @ 01/27/25 19:42:20.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:20.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:20.768
  STEP: creating the pod @ 01/27/25 19:42:20.77
  I0127 19:42:20.770555 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0127 19:42:23.911968 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8164" for this suite. @ 01/27/25 19:42:23.914
• [3.163 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/27/25 19:42:23.918
  I0127 19:42:23.919001 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename namespaces @ 01/27/25 19:42:23.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:23.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:23.933
  STEP: Creating a test namespace @ 01/27/25 19:42:23.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:24.03
  STEP: Creating a service in the namespace @ 01/27/25 19:42:24.032
  STEP: Deleting the namespace @ 01/27/25 19:42:24.044
  STEP: Waiting for the namespace to be removed. @ 01/27/25 19:42:24.048
  STEP: Recreating the namespace @ 01/27/25 19:42:30.051
  STEP: Verifying there is no service in the namespace @ 01/27/25 19:42:30.06
  I0127 19:42:30.063387 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8995" for this suite. @ 01/27/25 19:42:30.065
  STEP: Destroying namespace "nsdeletetest-3687" for this suite. @ 01/27/25 19:42:30.069
  I0127 19:42:30.070667 23 framework.go:370] Namespace nsdeletetest-3687 was already deleted
  STEP: Destroying namespace "nsdeletetest-7264" for this suite. @ 01/27/25 19:42:30.07
• [6.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/27/25 19:42:30.074
  I0127 19:42:30.074293 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubelet-test @ 01/27/25 19:42:30.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:30.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:30.165
  I0127 19:42:32.185146 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-664" for this suite. @ 01/27/25 19:42:32.187
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 01/27/25 19:42:32.192
  I0127 19:42:32.192177 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 19:42:32.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:42:32.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:42:32.205
  STEP: Creating a test externalName service @ 01/27/25 19:42:32.207
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2664.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local; sleep 1; done
   @ 01/27/25 19:42:32.211
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2664.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local; sleep 1; done
   @ 01/27/25 19:42:32.211
  STEP: creating a pod to probe DNS @ 01/27/25 19:42:32.211
  STEP: submitting the pod to kubernetes @ 01/27/25 19:42:32.211
  STEP: retrieving the pod @ 01/27/25 19:42:34.224
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:42:34.226
  I0127 19:42:34.233959 23 dns_common.go:571] DNS probes using dns-test-d0682f51-5f37-43b8-8a0d-58f89c1e8032 succeeded

  STEP: changing the externalName to bar.example.com @ 01/27/25 19:42:34.233
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2664.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local; sleep 1; done
   @ 01/27/25 19:42:34.238
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2664.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local; sleep 1; done
   @ 01/27/25 19:42:34.238
  STEP: creating a second pod to probe DNS @ 01/27/25 19:42:34.238
  STEP: submitting the pod to kubernetes @ 01/27/25 19:42:34.238
  STEP: retrieving the pod @ 01/27/25 19:42:40.259
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:42:40.261
  I0127 19:42:40.265575 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:40.268088 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:40.268137 23 dns_common.go:506] Lookups using dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 failed for: [agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local]

  I0127 19:42:40.272083 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:42:40.275555 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:42:40.279140 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:42:45.266673 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:45.269334 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:45.269367 23 dns_common.go:506] Lookups using dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 failed for: [agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local]

  I0127 19:42:45.273314 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:42:45.276800 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:42:45.280347 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:42:50.267171 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:50.269864 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:50.269898 23 dns_common.go:506] Lookups using dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 failed for: [agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local]

  I0127 19:42:50.274258 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:42:50.277997 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:42:50.281444 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:42:55.266493 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:55.269201 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:42:55.269237 23 dns_common.go:506] Lookups using dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 failed for: [agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local]

  I0127 19:42:55.273168 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:42:55.277447 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:42:55.280810 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:43:00.266610 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:43:00.269562 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local from pod  dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0127 19:43:00.269600 23 dns_common.go:506] Lookups using dns-2664/dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 failed for: [agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local]

  I0127 19:43:00.273723 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 19:43:00.277504 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 19:43:00.281031 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 19:43:05.270153 23 dns_common.go:571] DNS probes using dns-test-e7476109-5f54-4a87-9dbd-5248c6782f84 succeeded

  STEP: changing the service to type=ClusterIP @ 01/27/25 19:43:05.27
  W0127 19:43:05.283288      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2664.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-2664.svc.cluster.local; sleep 1; done
   @ 01/27/25 19:43:05.283
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2664.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2664.svc.cluster.local; sleep 1; done
   @ 01/27/25 19:43:05.283
  STEP: creating a third pod to probe DNS @ 01/27/25 19:43:05.283
  STEP: submitting the pod to kubernetes @ 01/27/25 19:43:05.285
  STEP: retrieving the pod @ 01/27/25 19:43:07.297
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:43:07.299
  I0127 19:43:07.307331 23 dns_common.go:571] DNS probes using dns-test-9f799d1d-0200-495b-864d-2768ce91f5e8 succeeded

  STEP: deleting the pod @ 01/27/25 19:43:07.307
  STEP: deleting the pod @ 01/27/25 19:43:07.317
  STEP: deleting the pod @ 01/27/25 19:43:07.329
  STEP: deleting the test externalName service @ 01/27/25 19:43:07.339
  I0127 19:43:07.354207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2664" for this suite. @ 01/27/25 19:43:07.356
• [35.168 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/27/25 19:43:07.36
  I0127 19:43:07.360434 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:43:07.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:07.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:07.374
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7862 @ 01/27/25 19:43:07.376
  STEP: changing the ExternalName service to type=ClusterIP @ 01/27/25 19:43:07.38
  STEP: creating replication controller externalname-service in namespace services-7862 @ 01/27/25 19:43:07.392
  I0127 19:43:07.399121      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7862, replica count: 2
  I0127 19:43:10.449849      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 19:43:10.449889 23 resource.go:361] Creating new exec pod
  I0127 19:43:13.460460 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7862 exec execpod6b79f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0127 19:43:13.557693 23 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service (10.96.244.66) 80 port [tcp/http] succeeded!\n"
  I0127 19:43:13.557731 23 builder.go:147] stdout: ""
  I0127 19:43:14.460765 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7862 exec execpod6b79f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0127 19:43:14.553534 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.96.244.66) 80 port [tcp/http] succeeded!\n"
  I0127 19:43:14.553575 23 builder.go:147] stdout: ""
  I0127 19:43:15.460621 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7862 exec execpod6b79f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0127 19:43:15.558170 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.96.244.66) 80 port [tcp/http] succeeded!\n"
  I0127 19:43:15.558342 23 builder.go:147] stdout: "externalname-service-b8vdb"
  I0127 19:43:15.558434 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-7862 exec execpod6b79f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.244.66 80'
  I0127 19:43:15.653054 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.244.66 80\nConnection to 10.96.244.66 80 port [tcp/http] succeeded!\n"
  I0127 19:43:15.653095 23 builder.go:147] stdout: "externalname-service-ztln7"
  I0127 19:43:15.653180 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0127 19:43:15.667692 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7862" for this suite. @ 01/27/25 19:43:15.67
• [8.314 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 01/27/25 19:43:15.674
  I0127 19:43:15.674421 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 19:43:15.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:15.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:15.687
  STEP: Creating a pod to test service account token:  @ 01/27/25 19:43:15.689
  STEP: Saw pod success @ 01/27/25 19:43:19.704
  I0127 19:43:19.707939 23 output.go:207] Trying to get logs from node worker-1 pod test-pod-045df2c7-6be8-4810-bfc2-1035bc250a6d container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:43:19.712
  I0127 19:43:19.723423 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1994" for this suite. @ 01/27/25 19:43:19.725
• [4.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/27/25 19:43:19.729
  I0127 19:43:19.729236 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename prestop @ 01/27/25 19:43:19.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:19.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:19.739
  STEP: Creating server pod server in namespace prestop-9197 @ 01/27/25 19:43:19.741
  STEP: Waiting for pods to come up. @ 01/27/25 19:43:19.746
  STEP: Creating tester pod tester in namespace prestop-9197 @ 01/27/25 19:43:21.751
  STEP: Deleting pre-stop pod @ 01/27/25 19:43:23.76
  I0127 19:43:28.772437 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/27/25 19:43:28.772
  I0127 19:43:28.782435 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9197" for this suite. @ 01/27/25 19:43:28.784
• [9.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/27/25 19:43:28.789
  I0127 19:43:28.789075 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replication-controller @ 01/27/25 19:43:28.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:28.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:28.803
  STEP: Given a ReplicationController is created @ 01/27/25 19:43:28.805
  STEP: When the matched label of one of its pods change @ 01/27/25 19:43:28.809
  I0127 19:43:28.811271 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0127 19:43:33.814753 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/27/25 19:43:33.824
  I0127 19:43:34.829467 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2890" for this suite. @ 01/27/25 19:43:34.832
• [6.050 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/27/25 19:43:34.838
  I0127 19:43:34.838611 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:43:34.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:34.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:34.851
  STEP: Creating secret with name secret-test-67947f24-6e17-4b02-bce4-a4fa0df373d9 @ 01/27/25 19:43:34.853
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:43:34.856
  STEP: Saw pod success @ 01/27/25 19:43:38.871
  I0127 19:43:38.874123 23 output.go:207] Trying to get logs from node worker-1 pod pod-secrets-ab2d3d36-8f8b-4226-a5b8-729b1631228d container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:43:38.878
  I0127 19:43:38.889227 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4315" for this suite. @ 01/27/25 19:43:38.891
• [4.056 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/27/25 19:43:38.894
  I0127 19:43:38.894856 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:43:38.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:38.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:38.905
  STEP: Setting up server cert @ 01/27/25 19:43:39.005
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:43:39.338
  STEP: Deploying the webhook pod @ 01/27/25 19:43:39.343
  STEP: Wait for the deployment to be ready @ 01/27/25 19:43:39.354
  I0127 19:43:39.359106 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:43:41.365
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:43:41.377
  I0127 19:43:42.377464 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/27/25 19:43:42.381
  STEP: create a pod that should be updated by the webhook @ 01/27/25 19:43:42.394
  I0127 19:43:42.446146 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-301" for this suite. @ 01/27/25 19:43:42.449
  STEP: Destroying namespace "webhook-markers-8477" for this suite. @ 01/27/25 19:43:42.453
• [3.562 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 01/27/25 19:43:42.457
  I0127 19:43:42.457516 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption @ 01/27/25 19:43:42.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:43:42.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:43:42.468
  I0127 19:43:42.479012 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0127 19:44:42.482817 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/27/25 19:44:42.484
  STEP: Adding a custom resource @ 01/27/25 19:44:42.484
  I0127 19:44:42.501481 23 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0127 19:44:42.505299 23 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/27/25 19:44:42.505
  I0127 19:44:42.523934 23 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0127 19:44:42.531497 23 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/27/25 19:44:42.531
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/27/25 19:44:44.544
  STEP: Removing a custom resource @ 01/27/25 19:44:48.586
  STEP: Removing a custom resource @ 01/27/25 19:44:48.596
  I0127 19:44:48.605656 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-781" for this suite. @ 01/27/25 19:44:48.607
• [66.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/27/25 19:44:48.611
  I0127 19:44:48.611716 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:44:48.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:44:48.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:44:48.622
  I0127 19:44:48.645873 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-39" for this suite. @ 01/27/25 19:44:48.648
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/27/25 19:44:48.654
  I0127 19:44:48.654053 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 19:44:48.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:44:48.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:44:48.723
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/27/25 19:44:48.725
  I0127 19:44:48.725721 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:44:49.948648 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 19:44:54.972321 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7746" for this suite. @ 01/27/25 19:44:54.979
• [6.333 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/27/25 19:44:54.986
  I0127 19:44:54.987017 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/27/25 19:44:54.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:44:54.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:44:54.997
  STEP: create the container to handle the HTTPGet hook request. @ 01/27/25 19:44:55.079
  STEP: create the pod with lifecycle hook @ 01/27/25 19:44:57.092
  STEP: check poststart hook @ 01/27/25 19:44:59.105
  STEP: delete the pod with lifecycle hook @ 01/27/25 19:44:59.109
  I0127 19:45:01.120012 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5578" for this suite. @ 01/27/25 19:45:01.122
• [6.140 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/27/25 19:45:01.126
  I0127 19:45:01.126910 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:45:01.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:01.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:01.141
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:45:01.143
  STEP: Saw pod success @ 01/27/25 19:45:05.156
  I0127 19:45:05.158652 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-fe42e7db-3f59-45f8-b717-8ecbe461f486 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:45:05.171
  I0127 19:45:05.183109 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2369" for this suite. @ 01/27/25 19:45:05.185
• [4.064 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/27/25 19:45:05.191
  I0127 19:45:05.191513 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 19:45:05.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:05.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:05.203
  STEP: create the deployment @ 01/27/25 19:45:05.205
  W0127 19:45:05.211076      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/27/25 19:45:05.211
  STEP: delete the deployment @ 01/27/25 19:45:05.719
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/27/25 19:45:05.722
  STEP: Gathering metrics @ 01/27/25 19:45:06.327
  W0127 19:45:06.329821      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0127 19:45:06.329861 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0127 19:45:06.330087 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7491" for this suite. @ 01/27/25 19:45:06.332
• [1.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/27/25 19:45:06.336
  I0127 19:45:06.336643 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:45:06.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:06.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:06.369
  STEP: Setting up server cert @ 01/27/25 19:45:06.466
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:45:06.954
  STEP: Deploying the webhook pod @ 01/27/25 19:45:06.958
  STEP: Wait for the deployment to be ready @ 01/27/25 19:45:06.97
  I0127 19:45:06.977140 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:45:08.984
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:45:08.994
  I0127 19:45:09.994501 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/27/25 19:45:09.999
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/27/25 19:45:10.016
  STEP: Creating a dummy validating-webhook-configuration object @ 01/27/25 19:45:10.03
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/27/25 19:45:10.039
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/27/25 19:45:10.042
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/27/25 19:45:10.05
  I0127 19:45:10.091840 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4381" for this suite. @ 01/27/25 19:45:10.094
  STEP: Destroying namespace "webhook-markers-8409" for this suite. @ 01/27/25 19:45:10.097
• [3.766 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/27/25 19:45:10.103
  I0127 19:45:10.103201 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 19:45:10.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:10.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:10.114
  STEP: Creating simple DaemonSet "daemon-set" @ 01/27/25 19:45:10.199
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/27/25 19:45:10.205
  I0127 19:45:10.302047 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:10.302081 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:45:11.210308 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:45:11.210346 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:45:12.211331 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 19:45:12.211365 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/27/25 19:45:12.213
  STEP: DeleteCollection of the DaemonSets @ 01/27/25 19:45:12.215
  STEP: Verify that ReplicaSets have been deleted @ 01/27/25 19:45:12.219
  I0127 19:45:12.224382 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26424"},"items":null}

  I0127 19:45:12.230774 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26426"},"items":[{"metadata":{"name":"daemon-set-ds8ts","generateName":"daemon-set-","namespace":"daemonsets-7023","uid":"bdba4c04-39eb-4f56-b254-d3cbb444de80","resourceVersion":"26426","creationTimestamp":"2025-01-27T19:45:10Z","deletionTimestamp":"2025-01-27T19:45:42Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"05255641-62bd-4021-a6ac-724756dfb207","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-27T19:45:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"05255641-62bd-4021-a6ac-724756dfb207\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-27T19:45:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.220\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-586s7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-586s7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:10Z"}],"hostIP":"10.0.33.3","hostIPs":[{"ip":"10.0.33.3"}],"podIP":"10.244.0.220","podIPs":[{"ip":"10.244.0.220"}],"startTime":"2025-01-27T19:45:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-27T19:45:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d0abef7569c37610da1a4bddd81f2d0b7b2957330c61cfe6a487d683a1c4cf36","started":true,"volumeMounts":[{"name":"kube-api-access-586s7","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mwzjf","generateName":"daemon-set-","namespace":"daemonsets-7023","uid":"0c31cf2c-fe1e-4ed5-b149-5f27c4518bb7","resourceVersion":"26396","creationTimestamp":"2025-01-27T19:45:10Z","labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"05255641-62bd-4021-a6ac-724756dfb207","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-27T19:45:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"05255641-62bd-4021-a6ac-724756dfb207\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-27T19:45:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.53\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6z4xl","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6z4xl","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-27T19:45:10Z"}],"hostIP":"10.0.52.184","hostIPs":[{"ip":"10.0.52.184"}],"podIP":"10.244.1.53","podIPs":[{"ip":"10.244.1.53"}],"startTime":"2025-01-27T19:45:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-27T19:45:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a8b1cb6207cbae23f425908c98c1b16408d9cbd515103028a2e6848043c785ea","started":true,"volumeMounts":[{"name":"kube-api-access-6z4xl","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0127 19:45:12.314534 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7023" for this suite. @ 01/27/25 19:45:12.316
• [2.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/27/25 19:45:12.322
  I0127 19:45:12.322731 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:45:12.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:12.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:12.335
  STEP: Creating configMap with name configmap-test-volume-map-3d592763-a992-4f3f-b5bc-e624700fa822 @ 01/27/25 19:45:12.338
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:45:12.343
  STEP: Saw pod success @ 01/27/25 19:45:14.353
  I0127 19:45:14.355408 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-88cc8437-9b91-4e55-86ee-d97190ab1a60 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:45:14.359
  I0127 19:45:14.371080 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2896" for this suite. @ 01/27/25 19:45:14.373
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/27/25 19:45:14.377
  I0127 19:45:14.377350 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-runtime @ 01/27/25 19:45:14.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:14.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:14.388
  STEP: create the container @ 01/27/25 19:45:14.39
  W0127 19:45:14.395101      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/27/25 19:45:14.395
  STEP: get the container status @ 01/27/25 19:45:16.401
  STEP: the container should be terminated @ 01/27/25 19:45:16.404
  STEP: the termination message should be set @ 01/27/25 19:45:16.404
  I0127 19:45:16.404119 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/27/25 19:45:16.404
  I0127 19:45:16.415456 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-951" for this suite. @ 01/27/25 19:45:16.417
• [2.044 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/27/25 19:45:16.421
  I0127 19:45:16.421654 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:45:16.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:16.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:16.435
  STEP: creating a replication controller @ 01/27/25 19:45:16.437
  I0127 19:45:16.437686 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 create -f -'
  I0127 19:45:16.552229 23 builder.go:146] stderr: ""
  I0127 19:45:16.552267 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/27/25 19:45:16.552
  I0127 19:45:16.552356 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:45:16.613371 23 builder.go:146] stderr: ""
  I0127 19:45:16.613969 23 builder.go:147] stdout: "update-demo-nautilus-795td update-demo-nautilus-mqr6z "
  I0127 19:45:16.614023 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods update-demo-nautilus-795td -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:45:16.675496 23 builder.go:146] stderr: ""
  I0127 19:45:16.675543 23 builder.go:147] stdout: ""
  I0127 19:45:16.675557 23 kubectl.go:2499] update-demo-nautilus-795td is created but not running
  I0127 19:45:21.676532 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0127 19:45:21.732129 23 builder.go:146] stderr: ""
  I0127 19:45:21.732168 23 builder.go:147] stdout: "update-demo-nautilus-795td update-demo-nautilus-mqr6z "
  I0127 19:45:21.732232 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods update-demo-nautilus-795td -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:45:21.783386 23 builder.go:146] stderr: ""
  I0127 19:45:21.783567 23 builder.go:147] stdout: "true"
  I0127 19:45:21.783618 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods update-demo-nautilus-795td -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:45:21.834563 23 builder.go:146] stderr: ""
  I0127 19:45:21.834601 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:45:21.834613 23 kubectl.go:2390] validating pod update-demo-nautilus-795td
  I0127 19:45:21.839948 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:45:21.840002 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:45:21.840017 23 kubectl.go:2517] update-demo-nautilus-795td is verified up and running
  I0127 19:45:21.840077 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods update-demo-nautilus-mqr6z -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0127 19:45:21.891143 23 builder.go:146] stderr: ""
  I0127 19:45:21.891177 23 builder.go:147] stdout: "true"
  I0127 19:45:21.891213 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods update-demo-nautilus-mqr6z -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0127 19:45:21.942801 23 builder.go:146] stderr: ""
  I0127 19:45:21.942835 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0127 19:45:21.942850 23 kubectl.go:2390] validating pod update-demo-nautilus-mqr6z
  I0127 19:45:21.948392 23 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0127 19:45:21.948436 23 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0127 19:45:21.948448 23 kubectl.go:2517] update-demo-nautilus-mqr6z is verified up and running
  STEP: using delete to clean up resources @ 01/27/25 19:45:21.948
  I0127 19:45:21.948524 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 delete --grace-period=0 --force -f -'
  I0127 19:45:22.000750 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0127 19:45:22.000784 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0127 19:45:22.000822 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get rc,svc -l name=update-demo --no-headers'
  I0127 19:45:22.067260 23 builder.go:146] stderr: "No resources found in kubectl-6788 namespace.\n"
  I0127 19:45:22.067304 23 builder.go:147] stdout: ""
  I0127 19:45:22.067353 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6788 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0127 19:45:22.130375 23 builder.go:146] stderr: ""
  I0127 19:45:22.130416 23 builder.go:147] stdout: ""
  I0127 19:45:22.130918 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6788" for this suite. @ 01/27/25 19:45:22.133
• [5.720 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/27/25 19:45:22.142
  I0127 19:45:22.142116 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pod-network-test @ 01/27/25 19:45:22.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:22.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:22.156
  STEP: Performing setup for networking test in namespace pod-network-test-2084 @ 01/27/25 19:45:22.158
  STEP: creating a selector @ 01/27/25 19:45:22.158
  STEP: Creating the service pods in kubernetes @ 01/27/25 19:45:22.158
  I0127 19:45:22.158879 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/27/25 19:45:36.278
  I0127 19:45:38.287590 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0127 19:45:38.287629 23 networking.go:42] Breadth first check of 10.244.1.57 on host 10.0.52.184...
  I0127 19:45:38.289266 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.58:9080/dial?request=hostname&protocol=http&host=10.244.1.57&port=8083&tries=1'] Namespace:pod-network-test-2084 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:45:38.289292 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:45:38.289342 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2084/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.57%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0127 19:45:38.336982 23 utils.go:356] Waiting for responses: map[]
  I0127 19:45:38.337013 23 utils.go:360] reached 10.244.1.57 after 0/1 tries
  I0127 19:45:38.337027 23 networking.go:42] Breadth first check of 10.244.0.222 on host 10.0.33.3...
  I0127 19:45:38.339239 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.58:9080/dial?request=hostname&protocol=http&host=10.244.0.222&port=8083&tries=1'] Namespace:pod-network-test-2084 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:45:38.339265 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:45:38.339314 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2084/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.58%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.222%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0127 19:45:38.384494 23 utils.go:356] Waiting for responses: map[]
  I0127 19:45:38.384544 23 utils.go:360] reached 10.244.0.222 after 0/1 tries
  I0127 19:45:38.384559 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0127 19:45:38.384762 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2084" for this suite. @ 01/27/25 19:45:38.387
• [16.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/27/25 19:45:38.393
  I0127 19:45:38.393568 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 19:45:38.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:38.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:38.405
  I0127 19:45:38.491365 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/27/25 19:45:38.494
  I0127 19:45:38.497317 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:38.497343 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/27/25 19:45:38.497
  I0127 19:45:38.600236 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:38.600299 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:45:39.600807 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:39.600841 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:45:40.600391 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:45:40.600426 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/27/25 19:45:40.602
  I0127 19:45:40.618611 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:40.618646 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/27/25 19:45:40.618
  I0127 19:45:40.702964 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:40.702999 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:45:41.632602 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:41.632641 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:45:42.634153 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:42.634190 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:45:43.631925 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:45:43.631958 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/27/25 19:45:43.635
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4798, will wait for the garbage collector to delete the pods @ 01/27/25 19:45:43.635
  I0127 19:45:43.691360 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.11577ms
  I0127 19:45:43.791459 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.096874ms
  I0127 19:45:45.194936 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:45:45.194972 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0127 19:45:45.196956 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26745"},"items":null}

  I0127 19:45:45.198628 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26745"},"items":null}

  I0127 19:45:45.211133 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4798" for this suite. @ 01/27/25 19:45:45.213
• [6.824 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 01/27/25 19:45:45.218
  I0127 19:45:45.218668 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:45:45.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:45.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:45.231
  STEP: creating a Service @ 01/27/25 19:45:45.236
  STEP: watching for the Service to be added @ 01/27/25 19:45:45.249
  I0127 19:45:45.250403 23 service.go:3425] Found Service test-service-vjkq8 in namespace services-4764 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32245}]
  I0127 19:45:45.250425 23 service.go:3432] Service test-service-vjkq8 created
  STEP: Getting /status @ 01/27/25 19:45:45.25
  I0127 19:45:45.253561 23 service.go:3443] Service test-service-vjkq8 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/27/25 19:45:45.253
  STEP: watching for the Service to be patched @ 01/27/25 19:45:45.257
  I0127 19:45:45.258467 23 service.go:3466] observed Service test-service-vjkq8 in namespace services-4764 with annotations: map[] & LoadBalancer: {[]}
  I0127 19:45:45.258506 23 service.go:3469] Found Service test-service-vjkq8 in namespace services-4764 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0035960f0 []}]}
  I0127 19:45:45.258520 23 service.go:3476] Service test-service-vjkq8 has service status patched
  STEP: updating the ServiceStatus @ 01/27/25 19:45:45.258
  I0127 19:45:45.269588 23 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/27/25 19:45:45.269
  I0127 19:45:45.270613 23 service.go:3507] Observed Service test-service-vjkq8 in namespace services-4764 with annotations: map[] & Conditions: []
  I0127 19:45:45.270643 23 service.go:3518] Observed Service test-service-vjkq8 in namespace services-4764 with annotations: map[patchedstatus:true] & Conditions: []
  I0127 19:45:45.270663 23 service.go:3514] Found Service test-service-vjkq8 in namespace services-4764 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0127 19:45:45.270673 23 service.go:3525] Service test-service-vjkq8 has service status updated
  STEP: patching the service @ 01/27/25 19:45:45.27
  STEP: watching for the Service to be patched @ 01/27/25 19:45:45.281
  I0127 19:45:45.282796 23 service.go:3548] observed Service test-service-vjkq8 in namespace services-4764 with labels: map[test-service-static:true]
  I0127 19:45:45.282831 23 service.go:3548] observed Service test-service-vjkq8 in namespace services-4764 with labels: map[test-service-static:true]
  I0127 19:45:45.282848 23 service.go:3548] observed Service test-service-vjkq8 in namespace services-4764 with labels: map[test-service-static:true]
  I0127 19:45:45.282902 23 service.go:3551] Found Service test-service-vjkq8 in namespace services-4764 with labels: map[test-service:patched test-service-static:true]
  I0127 19:45:45.283094 23 service.go:3558] Service test-service-vjkq8 patched
  STEP: deleting the service @ 01/27/25 19:45:45.283
  STEP: watching for the Service to be deleted @ 01/27/25 19:45:45.296
  I0127 19:45:45.297260 23 service.go:3582] Observed event: ADDED
  I0127 19:45:45.297283 23 service.go:3582] Observed event: MODIFIED
  I0127 19:45:45.297488 23 service.go:3582] Observed event: MODIFIED
  I0127 19:45:45.297515 23 service.go:3582] Observed event: MODIFIED
  I0127 19:45:45.297680 23 service.go:3578] Found Service test-service-vjkq8 in namespace services-4764 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0127 19:45:45.297730 23 service.go:3587] Service test-service-vjkq8 deleted
  I0127 19:45:45.297880 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4764" for this suite. @ 01/27/25 19:45:45.301
• [0.086 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/27/25 19:45:45.304
  I0127 19:45:45.304936 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename aggregator @ 01/27/25 19:45:45.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:45:45.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:45:45.334
  I0127 19:45:45.336695 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Registering the sample API server. @ 01/27/25 19:45:45.337
  I0127 19:45:45.786372 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0127 19:45:45.808117 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0127 19:45:47.838596 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:45:49.841639 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:45:51.841014 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:45:53.842032 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:45:55.842207 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:45:57.841147 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:45:59.842546 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:46:01.842615 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:46:03.841783 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:46:05.843218 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:46:07.842849 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 45, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:46:09.958349 23 aggregator.go:755] Waited 110.736608ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/27/25 19:46:09.992
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/27/25 19:46:09.994
  STEP: List APIServices @ 01/27/25 19:46:09.999
  I0127 19:46:10.004176 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/27/25 19:46:10.004
  I0127 19:46:10.028099 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/27/25 19:46:10.028
  I0127 19:46:10.038796 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 27, 19, 46, 9, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/27/25 19:46:10.038
  I0127 19:46:10.045834 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-27 19:46:09 +0000 UTC Passed all checks passed}
  I0127 19:46:10.045868 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 19:46:10.045885 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/27/25 19:46:10.045
  I0127 19:46:10.057073 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-501257693" @ 01/27/25 19:46:10.057
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/27/25 19:46:10.072
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/27/25 19:46:10.08
  STEP: Patch APIService Status @ 01/27/25 19:46:10.081
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/27/25 19:46:10.088
  I0127 19:46:10.089937 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-27 19:46:09 +0000 UTC Passed all checks passed}
  I0127 19:46:10.089990 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0127 19:46:10.090012 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0127 19:46:10.090033 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/27/25 19:46:10.09
  STEP: Confirm that the generated APIService has been deleted @ 01/27/25 19:46:10.094
  I0127 19:46:10.094642 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0127 19:46:10.096197 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0127 19:46:10.096220 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0127 19:46:10.159268 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2017" for this suite. @ 01/27/25 19:46:10.161
• [24.860 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/27/25 19:46:10.165
  I0127 19:46:10.165028 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:46:10.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:10.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:10.175
  STEP: creating a Pod with a static label @ 01/27/25 19:46:10.179
  STEP: watching for Pod to be ready @ 01/27/25 19:46:10.184
  I0127 19:46:10.186189 23 pods.go:945] observed Pod pod-test in namespace pods-4014 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0127 19:46:10.190617 23 pods.go:945] observed Pod pod-test in namespace pods-4014 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC  }]
  I0127 19:46:10.201829 23 pods.go:945] observed Pod pod-test in namespace pods-4014 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC  }]
  I0127 19:46:12.384073 23 pods.go:948] Found Pod pod-test in namespace pods-4014 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:12 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:46:10 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/27/25 19:46:12.386
  STEP: getting the Pod and ensuring that it's patched @ 01/27/25 19:46:12.394
  STEP: replacing the Pod's status Ready condition to False @ 01/27/25 19:46:12.396
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/27/25 19:46:12.405
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/27/25 19:46:12.405
  STEP: watching for the Pod to be deleted @ 01/27/25 19:46:12.409
  I0127 19:46:12.410970 23 pods.go:1058] observed event type MODIFIED
  I0127 19:46:14.392159 23 pods.go:1058] observed event type MODIFIED
  I0127 19:46:14.502312 23 pods.go:1058] observed event type MODIFIED
  I0127 19:46:15.396401 23 pods.go:1058] observed event type MODIFIED
  I0127 19:46:15.401317 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4014" for this suite. @ 01/27/25 19:46:15.403
• [5.242 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/27/25 19:46:15.407
  I0127 19:46:15.407736 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename runtimeclass @ 01/27/25 19:46:15.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:15.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:15.42
  STEP: Deleting RuntimeClass runtimeclass-582-delete-me @ 01/27/25 19:46:15.425
  STEP: Waiting for the RuntimeClass to disappear @ 01/27/25 19:46:15.428
  I0127 19:46:15.434584 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-582" for this suite. @ 01/27/25 19:46:15.504
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/27/25 19:46:15.512
  I0127 19:46:15.512133 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename namespaces @ 01/27/25 19:46:15.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:15.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:15.523
  STEP: Creating a test namespace @ 01/27/25 19:46:15.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:15.627
  STEP: Creating a pod in the namespace @ 01/27/25 19:46:15.629
  STEP: Waiting for the pod to have running status @ 01/27/25 19:46:15.634
  STEP: Deleting the namespace @ 01/27/25 19:46:17.639
  STEP: Waiting for the namespace to be removed. @ 01/27/25 19:46:17.644
  STEP: Recreating the namespace @ 01/27/25 19:46:28.646
  STEP: Verifying there are no pods in the namespace @ 01/27/25 19:46:28.654
  I0127 19:46:28.658421 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8936" for this suite. @ 01/27/25 19:46:28.66
  STEP: Destroying namespace "nsdeletetest-3302" for this suite. @ 01/27/25 19:46:28.664
  I0127 19:46:28.665780 23 framework.go:370] Namespace nsdeletetest-3302 was already deleted
  STEP: Destroying namespace "nsdeletetest-1752" for this suite. @ 01/27/25 19:46:28.665
• [13.157 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/27/25 19:46:28.669
  I0127 19:46:28.669457 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:46:28.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:28.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:28.76
  I0127 19:46:28.762690 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: creating the pod @ 01/27/25 19:46:28.763
  STEP: submitting the pod to kubernetes @ 01/27/25 19:46:28.763
  I0127 19:46:30.783502 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7275" for this suite. @ 01/27/25 19:46:30.785
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/27/25 19:46:30.789
  I0127 19:46:30.789541 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:46:30.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:30.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:30.799
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3238 @ 01/27/25 19:46:30.802
  STEP: changing the ExternalName service to type=NodePort @ 01/27/25 19:46:30.805
  STEP: creating replication controller externalname-service in namespace services-3238 @ 01/27/25 19:46:30.821
  I0127 19:46:30.828476      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3238, replica count: 2
  I0127 19:46:33.880456      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 19:46:33.880512 23 resource.go:361] Creating new exec pod
  I0127 19:46:36.892097 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0127 19:46:36.986742 23 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80+ \necho hostName\nConnection to externalname-service (10.109.120.99) 80 port [tcp/http] succeeded!\n"
  I0127 19:46:36.986813 23 builder.go:147] stdout: ""
  I0127 19:46:37.892327 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0127 19:46:37.991929 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.109.120.99) 80 port [tcp/http] succeeded!\n"
  I0127 19:46:37.992113 23 builder.go:147] stdout: "externalname-service-85b96"
  I0127 19:46:37.992229 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.120.99 80'
  I0127 19:46:38.088188 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.120.99 80\nConnection to 10.109.120.99 80 port [tcp/http] succeeded!\n"
  I0127 19:46:38.088228 23 builder.go:147] stdout: ""
  I0127 19:46:38.992315 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.120.99 80'
  I0127 19:46:39.088552 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.120.99 80\nConnection to 10.109.120.99 80 port [tcp/http] succeeded!\n"
  I0127 19:46:39.088613 23 builder.go:147] stdout: "externalname-service-bfvf2"
  I0127 19:46:39.088698 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.52.184 30753'
  I0127 19:46:39.186031 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.52.184 30753\nConnection to 10.0.52.184 30753 port [tcp/*] succeeded!\n"
  I0127 19:46:39.186094 23 builder.go:147] stdout: "externalname-service-bfvf2"
  I0127 19:46:39.186213 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.33.3 30753'
  I0127 19:46:39.283810 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.33.3 30753\nConnection to 10.0.33.3 30753 port [tcp/*] succeeded!\n"
  I0127 19:46:39.283849 23 builder.go:147] stdout: ""
  I0127 19:46:40.186784 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-3238 exec execpodjk6k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.33.3 30753'
  I0127 19:46:40.281782 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.33.3 30753\nConnection to 10.0.33.3 30753 port [tcp/*] succeeded!\n"
  I0127 19:46:40.281824 23 builder.go:147] stdout: "externalname-service-85b96"
  I0127 19:46:40.282030 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0127 19:46:40.299794 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3238" for this suite. @ 01/27/25 19:46:40.302
• [9.517 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/27/25 19:46:40.311
  I0127 19:46:40.311612 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename hostport @ 01/27/25 19:46:40.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:40.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:40.325
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/27/25 19:46:40.402
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.52.184 on the node which pod1 resides and expect scheduled @ 01/27/25 19:46:42.413
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.52.184 but use UDP protocol on the node which pod2 resides @ 01/27/25 19:46:44.424
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/27/25 19:46:48.445
  I0127 19:46:48.445299 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.52.184 http://127.0.0.1:54323/hostname] Namespace:hostport-6984 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:46:48.445318 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:46:48.445361 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-6984/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.52.184+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.52.184, port: 54323 @ 01/27/25 19:46:48.504
  I0127 19:46:48.504511 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.52.184:54323/hostname] Namespace:hostport-6984 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:46:48.504535 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:46:48.504623 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-6984/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.52.184%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.52.184, port: 54323 UDP @ 01/27/25 19:46:48.551
  I0127 19:46:48.551604 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.52.184 54323] Namespace:hostport-6984 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:46:48.551623 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:46:48.551679 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-6984/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.52.184+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0127 19:46:53.598641 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6984" for this suite. @ 01/27/25 19:46:53.601
• [13.293 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/27/25 19:46:53.604
  I0127 19:46:53.604992 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:46:53.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:53.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:53.618
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:46:53.621
  STEP: Saw pod success @ 01/27/25 19:46:55.633
  I0127 19:46:55.635906 23 output.go:207] Trying to get logs from node worker-1 pod downwardapi-volume-94ed4731-d469-44eb-9b67-523dd5f4c413 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:46:55.647
  I0127 19:46:55.658956 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-30" for this suite. @ 01/27/25 19:46:55.661
• [2.060 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/27/25 19:46:55.664
  I0127 19:46:55.664993 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/27/25 19:46:55.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:46:55.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:46:55.675
  STEP: create the container to handle the HTTPGet hook request. @ 01/27/25 19:46:55.761
  STEP: create the pod with lifecycle hook @ 01/27/25 19:46:57.775
  STEP: delete the pod with lifecycle hook @ 01/27/25 19:46:59.785
  STEP: check prestop hook @ 01/27/25 19:47:03.8
  I0127 19:47:03.805058 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5689" for this suite. @ 01/27/25 19:47:03.807
• [8.147 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/27/25 19:47:03.812
  I0127 19:47:03.812519 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:47:03.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:47:03.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:47:03.826
  I0127 19:47:03.850139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6824" for this suite. @ 01/27/25 19:47:03.907
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/27/25 19:47:03.914
  I0127 19:47:03.914176 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:47:03.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:47:03.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:47:03.926
  STEP: Creating projection with secret that has name projected-secret-test-d27543b8-4e34-41c0-81a2-37a63ebd367a @ 01/27/25 19:47:03.928
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:47:03.934
  STEP: Saw pod success @ 01/27/25 19:47:05.943
  I0127 19:47:05.945106 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-d268ecd7-71fd-4570-9983-cad533be5602 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:47:05.949
  I0127 19:47:05.960417 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6238" for this suite. @ 01/27/25 19:47:05.962
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/27/25 19:47:05.966
  I0127 19:47:05.966614 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename security-context-test @ 01/27/25 19:47:05.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:47:05.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:47:05.977
  I0127 19:47:07.992207 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1" for this suite. @ 01/27/25 19:47:07.994
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/27/25 19:47:07.998
  I0127 19:47:07.998502 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:47:07.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:47:08.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:47:08.012
  STEP: Creating projection with secret that has name projected-secret-test-922bb6e0-f8a0-4c8d-937d-626cf91bc05c @ 01/27/25 19:47:08.014
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:47:08.017
  STEP: Saw pod success @ 01/27/25 19:47:12.033
  I0127 19:47:12.036370 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-430de69b-e59d-40b2-8dc2-62edb3325d6c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:47:12.041
  I0127 19:47:12.053063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9034" for this suite. @ 01/27/25 19:47:12.055
• [4.062 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/27/25 19:47:12.061
  I0127 19:47:12.061240 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 19:47:12.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:47:12.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:47:12.072
  STEP: Creating pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827 @ 01/27/25 19:47:12.074
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 19:47:14.086
  I0127 19:47:14.088532 23 container_probe.go:1749] Initial restart count of pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 is 0
  I0127 19:47:14.090283 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:16.093594 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:18.097226 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:20.100310 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:22.104331 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:24.107685 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:24.107724 23 container_probe.go:1763] Restart count of pod container-probe-2827/liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 is now 1 (10.019159059s elapsed)
  I0127 19:47:26.111324 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:28.114926 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:30.117367 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:32.119784 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:34.122320 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:36.125700 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:38.129272 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:40.132640 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:42.135767 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:44.138713 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:44.138750 23 container_probe.go:1763] Restart count of pod container-probe-2827/liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 is now 2 (30.05018602s elapsed)
  I0127 19:47:46.142164 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:48.145831 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:50.149246 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:52.152751 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:54.156094 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:56.159531 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:47:58.163188 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:00.166582 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:02.169807 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:04.172756 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:04.172793 23 container_probe.go:1763] Restart count of pod container-probe-2827/liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 is now 3 (50.084228663s elapsed)
  I0127 19:48:06.176421 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:08.179192 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:10.182591 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:12.186192 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:14.189498 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:16.192808 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:18.196800 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:20.200372 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:22.202874 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:24.206304 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:24.206339 23 container_probe.go:1763] Restart count of pod container-probe-2827/liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 is now 4 (1m10.117775012s elapsed)
  I0127 19:48:26.208765 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:28.211530 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:30.215013 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:32.217427 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:34.220730 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:36.224253 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:38.227784 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:40.230314 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:42.232774 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:44.235610 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:46.238998 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:48.242648 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:50.245310 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:52.248739 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:54.252507 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:56.255114 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:48:58.258431 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:00.261832 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:02.265324 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:04.268721 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:06.272137 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:08.275825 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:10.278345 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:12.281706 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:14.284277 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:16.286609 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:18.290220 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:20.293660 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:22.296673 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:24.299801 23 container_probe.go:1759] Get pod liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 in namespace container-probe-2827
  I0127 19:49:24.299837 23 container_probe.go:1763] Restart count of pod container-probe-2827/liveness-127776a5-7b02-4d0e-8c54-d68c23b34be5 is now 5 (2m10.211273438s elapsed)
  STEP: deleting the pod @ 01/27/25 19:49:24.299
  I0127 19:49:24.310278 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2827" for this suite. @ 01/27/25 19:49:24.313
• [132.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/27/25 19:49:24.319
  I0127 19:49:24.319527 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:49:24.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:49:24.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:49:24.333
  STEP: Counting existing ResourceQuota @ 01/27/25 19:49:24.335
  STEP: Creating a ResourceQuota @ 01/27/25 19:49:29.338
  STEP: Ensuring resource quota status is calculated @ 01/27/25 19:49:29.341
  STEP: Creating a Service @ 01/27/25 19:49:31.345
  STEP: Creating a NodePort Service @ 01/27/25 19:49:31.361
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/27/25 19:49:31.38
  STEP: Ensuring resource quota status captures service creation @ 01/27/25 19:49:31.398
  STEP: Deleting Services @ 01/27/25 19:49:33.401
  STEP: Ensuring resource quota status released usage @ 01/27/25 19:49:33.431
  I0127 19:49:35.434620 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3575" for this suite. @ 01/27/25 19:49:35.437
• [11.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/27/25 19:49:35.441
  I0127 19:49:35.441338 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 19:49:35.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:49:35.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:49:35.452
  STEP: create the rc1 @ 01/27/25 19:49:35.538
  STEP: create the rc2 @ 01/27/25 19:49:35.542
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/27/25 19:49:41.548
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/27/25 19:49:41.936
  STEP: wait for the rc to be deleted @ 01/27/25 19:49:41.94
  I0127 19:49:46.951441 23 garbage_collector.go:762] 72 pods remaining
  I0127 19:49:46.951475 23 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I0127 19:49:46.951482 23 garbage_collector.go:770] 
  STEP: Gathering metrics @ 01/27/25 19:49:51.95
  W0127 19:49:51.953508      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0127 19:49:51.953542 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0127 19:49:51.953606 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-24ngn" in namespace "gc-8883"
  I0127 19:49:51.962716 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2crkq" in namespace "gc-8883"
  I0127 19:49:51.970394 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2j6gw" in namespace "gc-8883"
  I0127 19:49:51.981663 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2p4vf" in namespace "gc-8883"
  I0127 19:49:51.999257 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2tm6p" in namespace "gc-8883"
  I0127 19:49:52.007289 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45mxb" in namespace "gc-8883"
  I0127 19:49:52.017489 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4frjc" in namespace "gc-8883"
  I0127 19:49:52.028442 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4rkf2" in namespace "gc-8883"
  I0127 19:49:52.042410 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59qgz" in namespace "gc-8883"
  I0127 19:49:52.050656 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5dqtx" in namespace "gc-8883"
  I0127 19:49:52.061345 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fbj9" in namespace "gc-8883"
  I0127 19:49:52.073261 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vw2q" in namespace "gc-8883"
  I0127 19:49:52.082274 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62wck" in namespace "gc-8883"
  I0127 19:49:52.096365 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64r6d" in namespace "gc-8883"
  I0127 19:49:52.105899 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6cnnf" in namespace "gc-8883"
  I0127 19:49:52.112367 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pzhx" in namespace "gc-8883"
  I0127 19:49:52.120487 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6sqwl" in namespace "gc-8883"
  I0127 19:49:52.129194 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76dtk" in namespace "gc-8883"
  I0127 19:49:52.139862 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7k2pr" in namespace "gc-8883"
  I0127 19:49:52.148969 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88f75" in namespace "gc-8883"
  I0127 19:49:52.159698 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-97mp2" in namespace "gc-8883"
  I0127 19:49:52.168781 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9f8fn" in namespace "gc-8883"
  I0127 19:49:52.175420 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9nlpc" in namespace "gc-8883"
  I0127 19:49:52.184856 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zvcj" in namespace "gc-8883"
  I0127 19:49:52.200456 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5fcg" in namespace "gc-8883"
  I0127 19:49:52.209241 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5n9k" in namespace "gc-8883"
  I0127 19:49:52.217576 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8l9f" in namespace "gc-8883"
  I0127 19:49:52.227008 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfswt" in namespace "gc-8883"
  I0127 19:49:52.235866 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bpxld" in namespace "gc-8883"
  I0127 19:49:52.243269 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d5f4k" in namespace "gc-8883"
  I0127 19:49:52.253314 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dbk8g" in namespace "gc-8883"
  I0127 19:49:52.263034 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dh7kt" in namespace "gc-8883"
  I0127 19:49:52.275470 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dj6n7" in namespace "gc-8883"
  I0127 19:49:52.286643 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fjls6" in namespace "gc-8883"
  I0127 19:49:52.295445 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fthzn" in namespace "gc-8883"
  I0127 19:49:52.309989 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fzqpn" in namespace "gc-8883"
  I0127 19:49:52.320607 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g2bhs" in namespace "gc-8883"
  I0127 19:49:52.329190 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9cp5" in namespace "gc-8883"
  I0127 19:49:52.338208 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gdxkk" in namespace "gc-8883"
  I0127 19:49:52.348962 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gq57x" in namespace "gc-8883"
  I0127 19:49:52.357607 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gz5dc" in namespace "gc-8883"
  I0127 19:49:52.365509 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hg5jg" in namespace "gc-8883"
  I0127 19:49:52.376820 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hktsq" in namespace "gc-8883"
  I0127 19:49:52.384822 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hp8sg" in namespace "gc-8883"
  I0127 19:49:52.394731 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j2454" in namespace "gc-8883"
  I0127 19:49:52.405110 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j64mp" in namespace "gc-8883"
  I0127 19:49:52.416792 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j6pl4" in namespace "gc-8883"
  I0127 19:49:52.426715 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jf7jz" in namespace "gc-8883"
  I0127 19:49:52.434865 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jjh4v" in namespace "gc-8883"
  I0127 19:49:52.444114 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jkd7n" in namespace "gc-8883"
  I0127 19:49:52.451729 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8883" for this suite. @ 01/27/25 19:49:52.474
• [17.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/27/25 19:49:52.486
  I0127 19:49:52.486567 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:49:52.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:49:52.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:49:52.511
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:49:52.519
  STEP: Saw pod success @ 01/27/25 19:49:54.535
  I0127 19:49:54.537561 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-cdf883d1-8fba-4610-beb1-d4e2b7167c36 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:49:54.548
  I0127 19:49:54.561736 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5737" for this suite. @ 01/27/25 19:49:54.567
• [2.085 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/27/25 19:49:54.573
  I0127 19:49:54.573902 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:49:54.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:49:54.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:49:54.589
  STEP: Counting existing ResourceQuota @ 01/27/25 19:49:54.592
  STEP: Creating a ResourceQuota @ 01/27/25 19:49:59.594
  STEP: Ensuring resource quota status is calculated @ 01/27/25 19:49:59.598
  STEP: Creating a Pod that fits quota @ 01/27/25 19:50:01.602
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/27/25 19:50:01.616
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/27/25 19:50:03.619
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/27/25 19:50:03.621
  STEP: Ensuring a pod cannot update its resource requirements @ 01/27/25 19:50:03.623
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/27/25 19:50:03.626
  STEP: Deleting the pod @ 01/27/25 19:50:05.629
  STEP: Ensuring resource quota status released the pod usage @ 01/27/25 19:50:05.637
  I0127 19:50:07.640357 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6094" for this suite. @ 01/27/25 19:50:07.642
• [13.075 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/27/25 19:50:07.647
  I0127 19:50:07.647026 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:50:07.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:07.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:07.66
  STEP: Create set of pods @ 01/27/25 19:50:07.662
  I0127 19:50:07.670292 23 pods.go:871] created test-pod-1
  I0127 19:50:07.673997 23 pods.go:871] created test-pod-2
  I0127 19:50:07.681879 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/27/25 19:50:07.681
  STEP: waiting for all pods to be deleted @ 01/27/25 19:50:09.711
  I0127 19:50:09.791452 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0127 19:50:10.713213 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2247" for this suite. @ 01/27/25 19:50:10.715
• [3.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/27/25 19:50:10.721
  I0127 19:50:10.721561 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubelet-test @ 01/27/25 19:50:10.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:10.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:10.735
  I0127 19:50:10.757644 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5873" for this suite. @ 01/27/25 19:50:10.817
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/27/25 19:50:10.823
  I0127 19:50:10.823660 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:50:10.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:10.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:10.84
  STEP: Creating configMap with name configmap-test-volume-6bb8caa2-5407-4c8f-aac6-87e85db14091 @ 01/27/25 19:50:10.842
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:50:10.847
  STEP: Saw pod success @ 01/27/25 19:50:12.858
  I0127 19:50:12.860469 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-ab919ade-56b0-47d5-b6c4-1ac865ef34cc container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:50:12.868
  I0127 19:50:12.883261 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2580" for this suite. @ 01/27/25 19:50:12.885
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/27/25 19:50:12.892
  I0127 19:50:12.892603 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/27/25 19:50:12.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:12.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:12.905
  STEP: creating a policy with variables @ 01/27/25 19:50:12.913
  STEP: waiting until the marker is denied @ 01/27/25 19:50:12.927
  STEP: testing a replicated Deployment to be allowed @ 01/27/25 19:50:13.032
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/27/25 19:50:13.04
  I0127 19:50:13.089296 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8712" for this suite. @ 01/27/25 19:50:13.095
• [0.209 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/27/25 19:50:13.101
  I0127 19:50:13.101851 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 19:50:13.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:13.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:13.112
  I0127 19:50:13.115307 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  W0127 19:50:15.646384      23 warnings.go:70] unknown field "alpha"
  W0127 19:50:15.646409      23 warnings.go:70] unknown field "beta"
  W0127 19:50:15.646415      23 warnings.go:70] unknown field "delta"
  W0127 19:50:15.646420      23 warnings.go:70] unknown field "epsilon"
  W0127 19:50:15.646425      23 warnings.go:70] unknown field "gamma"
  I0127 19:50:16.174189 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-179" for this suite. @ 01/27/25 19:50:16.176
• [3.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/27/25 19:50:16.18
  I0127 19:50:16.180122 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename disruption @ 01/27/25 19:50:16.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:16.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:16.19
  STEP: creating the pdb @ 01/27/25 19:50:16.193
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:50:16.196
  STEP: updating the pdb @ 01/27/25 19:50:18.199
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:50:18.204
  STEP: patching the pdb @ 01/27/25 19:50:20.208
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:50:20.214
  STEP: Waiting for the pdb to be deleted @ 01/27/25 19:50:22.221
  I0127 19:50:22.223421 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3382" for this suite. @ 01/27/25 19:50:22.225
• [6.051 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/27/25 19:50:22.231
  I0127 19:50:22.231501 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 19:50:22.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:22.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:22.242
  STEP: Creating simple DaemonSet "daemon-set" @ 01/27/25 19:50:22.33
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/27/25 19:50:22.334
  I0127 19:50:22.429548 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:50:22.429592 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:50:23.340419 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:50:23.340449 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:50:24.341301 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 19:50:24.341336 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/27/25 19:50:24.343
  I0127 19:50:24.441460 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:50:24.441493 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:50:25.355829 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:50:25.355863 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:50:26.356314 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 19:50:26.356348 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/27/25 19:50:26.358
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4651, will wait for the garbage collector to delete the pods @ 01/27/25 19:50:26.358
  I0127 19:50:26.416818 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.37446ms
  I0127 19:50:26.517922 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.101266ms
  I0127 19:50:27.820729 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:50:27.820762 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0127 19:50:27.822713 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30111"},"items":null}

  I0127 19:50:27.824337 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30111"},"items":null}

  I0127 19:50:27.830064 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4651" for this suite. @ 01/27/25 19:50:27.832
• [5.605 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/27/25 19:50:27.836
  I0127 19:50:27.836371 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:50:27.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:27.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:27.847
  STEP: validating api versions @ 01/27/25 19:50:27.849
  I0127 19:50:27.849891 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-573 api-versions'
  I0127 19:50:27.905377 23 builder.go:146] stderr: ""
  I0127 19:50:27.905432 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautopilot.k0sproject.io/v1beta2\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\netcd.k0sproject.io/v1beta1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nhelm.k0sproject.io/v1beta1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0127 19:50:27.905592 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-573" for this suite. @ 01/27/25 19:50:27.926
• [0.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/27/25 19:50:27.931
  I0127 19:50:27.931356 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 19:50:27.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:27.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:27.948
  STEP: Creating configMap with name configmap-test-upd-2ad60b67-2d54-4626-b49b-b80709e0d7ac @ 01/27/25 19:50:28.028
  STEP: Creating the pod @ 01/27/25 19:50:28.031
  STEP: Waiting for pod with text data @ 01/27/25 19:50:30.044
  STEP: Waiting for pod with binary data @ 01/27/25 19:50:30.049
  I0127 19:50:30.053107 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2213" for this suite. @ 01/27/25 19:50:30.055
• [2.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/27/25 19:50:30.06
  I0127 19:50:30.060179 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 19:50:30.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:30.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:30.072
  STEP: Creating a ResourceQuota @ 01/27/25 19:50:30.074
  STEP: Getting a ResourceQuota @ 01/27/25 19:50:30.077
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/27/25 19:50:30.079
  STEP: Patching the ResourceQuota @ 01/27/25 19:50:30.081
  STEP: Deleting a Collection of ResourceQuotas @ 01/27/25 19:50:30.088
  STEP: Verifying the deleted ResourceQuota @ 01/27/25 19:50:30.093
  I0127 19:50:30.095092 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2497" for this suite. @ 01/27/25 19:50:30.157
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/27/25 19:50:30.162
  I0127 19:50:30.162299 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename subpath @ 01/27/25 19:50:30.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:30.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:30.176
  STEP: Setting up data @ 01/27/25 19:50:30.178
  STEP: Creating pod pod-subpath-test-downwardapi-9clw @ 01/27/25 19:50:30.184
  STEP: Creating a pod to test atomic-volume-subpath @ 01/27/25 19:50:30.184
  STEP: Saw pod success @ 01/27/25 19:50:52.231
  I0127 19:50:52.233075 23 output.go:207] Trying to get logs from node worker-1 pod pod-subpath-test-downwardapi-9clw container test-container-subpath-downwardapi-9clw: <nil>
  STEP: delete the pod @ 01/27/25 19:50:52.244
  STEP: Deleting pod pod-subpath-test-downwardapi-9clw @ 01/27/25 19:50:52.256
  I0127 19:50:52.256665 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-9clw" in namespace "subpath-151"
  I0127 19:50:52.258439 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-151" for this suite. @ 01/27/25 19:50:52.26
• [22.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/27/25 19:50:52.264
  I0127 19:50:52.264728 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 19:50:52.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:52.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:52.276
  STEP: creating the pod @ 01/27/25 19:50:52.278
  STEP: submitting the pod to kubernetes @ 01/27/25 19:50:52.278
  STEP: verifying QOS class is set on the pod @ 01/27/25 19:50:52.285
  I0127 19:50:52.287120 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4607" for this suite. @ 01/27/25 19:50:52.361
• [0.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/27/25 19:50:52.367
  I0127 19:50:52.367631 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename disruption @ 01/27/25 19:50:52.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:52.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:52.378
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:50:52.385
  STEP: Updating PodDisruptionBudget status @ 01/27/25 19:50:54.388
  STEP: Waiting for all pods to be running @ 01/27/25 19:50:54.394
  I0127 19:50:54.396625 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 01/27/25 19:50:56.398
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:50:56.405
  STEP: Patching PodDisruptionBudget status @ 01/27/25 19:50:56.409
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:50:56.416
  I0127 19:50:56.418807 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8940" for this suite. @ 01/27/25 19:50:56.421
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/27/25 19:50:56.425
  I0127 19:50:56.425689 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:50:56.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:50:56.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:50:56.436
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:50:56.439
  STEP: Saw pod success @ 01/27/25 19:51:00.453
  I0127 19:51:00.455165 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-d1c39edf-da5e-4f38-84e6-499d7454c021 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:51:00.46
  I0127 19:51:00.471437 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-931" for this suite. @ 01/27/25 19:51:00.473
• [4.052 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/27/25 19:51:00.477
  I0127 19:51:00.477418 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:51:00.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:51:00.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:51:00.49
  STEP: Creating secret with name projected-secret-test-e3f27684-ee53-483a-94f6-e3a0d970bcea @ 01/27/25 19:51:00.492
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:51:00.495
  STEP: Saw pod success @ 01/27/25 19:51:04.511
  I0127 19:51:04.513483 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-a74111f8-8c39-4121-ac9c-2bf748d9c1f6 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:51:04.518
  I0127 19:51:04.527467 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7767" for this suite. @ 01/27/25 19:51:04.529
• [4.056 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 01/27/25 19:51:04.533
  I0127 19:51:04.533971 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 19:51:04.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:51:04.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:51:04.546
  STEP: Creating service test in namespace statefulset-4344 @ 01/27/25 19:51:04.548
  STEP: Creating stateful set ss in namespace statefulset-4344 @ 01/27/25 19:51:04.551
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4344 @ 01/27/25 19:51:04.558
  I0127 19:51:04.560807 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0127 19:51:14.562112 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0127 19:51:24.562797 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/27/25 19:51:24.562
  I0127 19:51:24.564742 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:51:24.664030 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:51:24.664234 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:51:24.664252 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:51:24.666655 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0127 19:51:34.669981 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:51:34.670020 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0127 19:51:34.687200 23 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0127 19:51:34.687255 23 resource.go:175] ss-0  worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:25 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:04 +0000 UTC  }]
  I0127 19:51:34.687269 23 resource.go:175] ss-2            Pending         []
  I0127 19:51:34.687279 23 resource.go:178] 
  I0127 19:51:34.687290 23 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  I0127 19:51:35.691276 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.991282656s
  I0127 19:51:36.695508 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.987262443s
  I0127 19:51:37.699370 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.982911073s
  I0127 19:51:38.703234 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.979221087s
  I0127 19:51:39.706190 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.976080227s
  I0127 19:51:40.709195 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.973140269s
  I0127 19:51:41.712646 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.970138093s
  I0127 19:51:42.715621 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.966677713s
  I0127 19:51:43.719456 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 962.779336ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4344 @ 01/27/25 19:51:44.719
  I0127 19:51:44.722377 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:51:44.822417 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 19:51:44.822458 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:51:44.822474 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:51:44.822535 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:51:44.917693 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0127 19:51:44.917759 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:51:44.917776 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:51:44.917847 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 19:51:45.013373 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0127 19:51:45.013517 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 19:51:45.013537 23 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 19:51:45.016178 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0127 19:51:55.018026 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 19:51:55.018079 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0127 19:51:55.018094 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/27/25 19:51:55.018
  I0127 19:51:55.020133 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:51:55.117634 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:51:55.117672 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:51:55.117692 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:51:55.117737 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:51:55.215740 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:51:55.215780 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:51:55.215792 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:51:55.215839 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-4344 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 19:51:55.311850 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 19:51:55.312030 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 19:51:55.312073 23 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 19:51:55.312088 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0127 19:51:55.314061 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0127 19:52:05.319419 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:52:05.319450 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:52:05.319460 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0127 19:52:05.335589 23 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0127 19:52:05.335655 23 resource.go:175] ss-0  worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:04 +0000 UTC  }]
  I0127 19:52:05.335682 23 resource.go:175] ss-1  worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:34 +0000 UTC  }]
  I0127 19:52:05.335710 23 resource.go:175] ss-2  worker-1  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:35 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:34 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-27 19:51:34 +0000 UTC  }]
  I0127 19:52:05.335721 23 resource.go:178] 
  I0127 19:52:05.335732 23 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0127 19:52:06.338556 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 8.989285156s
  I0127 19:52:07.341306 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.986501117s
  I0127 19:52:08.344760 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.982868863s
  I0127 19:52:09.347228 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.980295401s
  I0127 19:52:10.349626 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.97779035s
  I0127 19:52:11.352283 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.975417682s
  I0127 19:52:12.354994 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.972764028s
  I0127 19:52:13.358544 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.96909594s
  I0127 19:52:14.360914 23 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 966.501497ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4344 @ 01/27/25 19:52:15.361
  I0127 19:52:15.364349 23 rest.go:152] Scaling statefulset ss to 0
  I0127 19:52:15.367624 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 19:52:15.369216 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4344
  I0127 19:52:15.370991 23 rest.go:152] Scaling statefulset ss to 0
  I0127 19:52:15.373932 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 19:52:15.375426 23 rest.go:90] Deleting statefulset ss
  I0127 19:52:15.382716 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4344" for this suite. @ 01/27/25 19:52:15.384
• [70.858 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 01/27/25 19:52:15.391
  I0127 19:52:15.391699 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption @ 01/27/25 19:52:15.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:52:15.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:52:15.405
  I0127 19:52:15.417193 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0127 19:53:15.420168 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/27/25 19:53:15.422
  I0127 19:53:15.422310 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/27/25 19:53:15.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:53:15.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:53:15.436
  STEP: Finding an available node @ 01/27/25 19:53:15.438
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/27/25 19:53:15.438
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/27/25 19:53:17.45
  I0127 19:53:17.460182 23 preemption.go:709] found a healthy node: worker-0
  STEP: Adding a custom resource @ 01/27/25 19:53:17.462
  I0127 19:53:23.503961 23 preemption.go:828] pods created so far: [1 1 1]
  I0127 19:53:23.503987 23 preemption.go:829] length of pods created so far: 3
  I0127 19:53:27.512783 23 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 01/27/25 19:53:34.515
  STEP: Removing a custom resource @ 01/27/25 19:53:34.547
  STEP: Removing a custom resource @ 01/27/25 19:53:34.552
  I0127 19:53:34.557219 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6117" for this suite. @ 01/27/25 19:53:34.559
  I0127 19:53:34.564836 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5215" for this suite. @ 01/27/25 19:53:34.66
• [79.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/27/25 19:53:34.665
  I0127 19:53:34.665096 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:53:34.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:53:34.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:53:34.676
  STEP: Setting up server cert @ 01/27/25 19:53:34.775
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:53:35.262
  STEP: Deploying the webhook pod @ 01/27/25 19:53:35.268
  STEP: Wait for the deployment to be ready @ 01/27/25 19:53:35.277
  I0127 19:53:35.286495 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:53:37.293
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:53:37.303
  I0127 19:53:38.304021 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/27/25 19:53:38.361
  STEP: Creating a configMap that should be mutated @ 01/27/25 19:53:38.372
  STEP: Deleting the collection of validation webhooks @ 01/27/25 19:53:38.403
  STEP: Creating a configMap that should not be mutated @ 01/27/25 19:53:38.431
  I0127 19:53:38.467719 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1970" for this suite. @ 01/27/25 19:53:38.469
  STEP: Destroying namespace "webhook-markers-8696" for this suite. @ 01/27/25 19:53:38.475
• [3.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/27/25 19:53:38.48
  I0127 19:53:38.480263 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:53:38.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:53:38.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:53:38.493
  STEP: Setting up server cert @ 01/27/25 19:53:38.593
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:53:38.926
  STEP: Deploying the webhook pod @ 01/27/25 19:53:38.931
  STEP: Wait for the deployment to be ready @ 01/27/25 19:53:38.94
  I0127 19:53:38.946312 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 19:53:40.953
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:53:40.965
  I0127 19:53:41.965835 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/27/25 19:53:41.97
  I0127 19:53:46.989015 23 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/27/25 19:53:47.101
  STEP: Creating a configMap that should not be mutated @ 01/27/25 19:53:47.109
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/27/25 19:53:47.115
  STEP: Creating a configMap that should be mutated @ 01/27/25 19:53:47.121
  I0127 19:53:47.169260 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1885" for this suite. @ 01/27/25 19:53:47.171
  STEP: Destroying namespace "webhook-markers-1972" for this suite. @ 01/27/25 19:53:47.179
• [8.703 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/27/25 19:53:47.184
  I0127 19:53:47.184346 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 19:53:47.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:53:47.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:53:47.198
  STEP: creating the pod with failed condition @ 01/27/25 19:53:47.201
  STEP: updating the pod @ 01/27/25 19:55:47.209
  I0127 19:55:47.719776 23 pod_client.go:173] Successfully updated pod "var-expansion-a207d778-9971-4c90-a62a-c243f7f02914"
  STEP: waiting for pod running @ 01/27/25 19:55:47.719
  STEP: deleting the pod gracefully @ 01/27/25 19:55:49.725
  I0127 19:55:49.725526 23 delete.go:62] Deleting pod "var-expansion-a207d778-9971-4c90-a62a-c243f7f02914" in namespace "var-expansion-1687"
  I0127 19:55:49.731253 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-a207d778-9971-4c90-a62a-c243f7f02914" to be fully deleted
  I0127 19:56:21.786080 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1687" for this suite. @ 01/27/25 19:56:21.789
• [154.609 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/27/25 19:56:21.793
  I0127 19:56:21.793238 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl-logs @ 01/27/25 19:56:21.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:56:21.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:56:21.806
  STEP: creating a pod @ 01/27/25 19:56:21.808
  I0127 19:56:21.808649 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0127 19:56:21.868824 23 builder.go:146] stderr: ""
  I0127 19:56:21.868860 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/27/25 19:56:21.868
  I0127 19:56:21.868979 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0127 19:56:23.874236 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/27/25 19:56:23.874
  I0127 19:56:23.874329 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 logs logs-generator logs-generator'
  I0127 19:56:23.941896 23 builder.go:146] stderr: ""
  I0127 19:56:23.942070 23 builder.go:147] stdout: "I0127 19:56:22.352263       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/zh4v 418\nI0127 19:56:22.553153       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/mxl 429\nI0127 19:56:22.752390       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/c9f 563\nI0127 19:56:22.952717       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/f8k5 365\nI0127 19:56:23.153092       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/cbl 592\nI0127 19:56:23.352477       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/k22j 316\nI0127 19:56:23.552789       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/qp9 314\nI0127 19:56:23.753109       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/bn2k 283\n"
  STEP: limiting log lines @ 01/27/25 19:56:23.942
  I0127 19:56:23.942155 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 logs logs-generator logs-generator --tail=1'
  I0127 19:56:23.999223 23 builder.go:146] stderr: ""
  I0127 19:56:23.999260 23 builder.go:147] stdout: "I0127 19:56:23.952384       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/bx6 538\n"
  I0127 19:56:23.999271 23 logs.go:180] got output "I0127 19:56:23.952384       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/bx6 538\n"
  STEP: limiting log bytes @ 01/27/25 19:56:23.999
  I0127 19:56:23.999347 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 logs logs-generator logs-generator --limit-bytes=1'
  I0127 19:56:24.056087 23 builder.go:146] stderr: ""
  I0127 19:56:24.056163 23 builder.go:147] stdout: "I"
  I0127 19:56:24.056177 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/27/25 19:56:24.056
  I0127 19:56:24.056274 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 logs logs-generator logs-generator --tail=1 --timestamps'
  I0127 19:56:24.112804 23 builder.go:146] stderr: ""
  I0127 19:56:24.112878 23 builder.go:147] stdout: "2025-01-27T19:56:23.952480605Z I0127 19:56:23.952384       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/bx6 538\n"
  I0127 19:56:24.112898 23 logs.go:192] got output "2025-01-27T19:56:23.952480605Z I0127 19:56:23.952384       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/bx6 538\n"
  STEP: restricting to a time range @ 01/27/25 19:56:24.112
  I0127 19:56:26.615602 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 logs logs-generator logs-generator --since=1s'
  I0127 19:56:26.675182 23 builder.go:146] stderr: ""
  I0127 19:56:26.675233 23 builder.go:147] stdout: "I0127 19:56:25.752804       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/gq4s 480\nI0127 19:56:25.953126       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/qjl8 259\nI0127 19:56:26.152366       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/cvt 255\nI0127 19:56:26.352686       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/nm5c 502\nI0127 19:56:26.553015       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/gvm 251\n"
  I0127 19:56:26.675281 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 logs logs-generator logs-generator --since=24h'
  I0127 19:56:26.737928 23 builder.go:146] stderr: ""
  I0127 19:56:26.737985 23 builder.go:147] stdout: "I0127 19:56:22.352263       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/zh4v 418\nI0127 19:56:22.553153       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/mxl 429\nI0127 19:56:22.752390       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/c9f 563\nI0127 19:56:22.952717       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/f8k5 365\nI0127 19:56:23.153092       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/cbl 592\nI0127 19:56:23.352477       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/k22j 316\nI0127 19:56:23.552789       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/qp9 314\nI0127 19:56:23.753109       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/bn2k 283\nI0127 19:56:23.952384       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/bx6 538\nI0127 19:56:24.152700       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/mwv 329\nI0127 19:56:24.353361       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/dsqb 457\nI0127 19:56:24.552687       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/7765 563\nI0127 19:56:24.752910       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/9d2c 567\nI0127 19:56:24.953255       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/7qh4 415\nI0127 19:56:25.152580       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/zxcj 436\nI0127 19:56:25.352913       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/x5vj 216\nI0127 19:56:25.553522       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/dpb9 348\nI0127 19:56:25.752804       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/gq4s 480\nI0127 19:56:25.953126       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/qjl8 259\nI0127 19:56:26.152366       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/cvt 255\nI0127 19:56:26.352686       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/nm5c 502\nI0127 19:56:26.553015       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/gvm 251\n"
  I0127 19:56:26.738107 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-logs-2920 delete pod logs-generator'
  I0127 19:56:27.181921 23 builder.go:146] stderr: ""
  I0127 19:56:27.181966 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0127 19:56:27.182157 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2920" for this suite. @ 01/27/25 19:56:27.184
• [5.397 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/27/25 19:56:27.19
  I0127 19:56:27.190519 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:56:27.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:56:27.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:56:27.201
  STEP: Creating the pod @ 01/27/25 19:56:27.203
  I0127 19:56:29.733158 23 pod_client.go:173] Successfully updated pod "labelsupdate21c35d84-9a09-4727-9f6c-109bf6dfaa6c"
  I0127 19:56:31.744322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2379" for this suite. @ 01/27/25 19:56:31.746
• [4.561 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/27/25 19:56:31.751
  I0127 19:56:31.751265 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-runtime @ 01/27/25 19:56:31.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:56:31.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:56:31.765
  STEP: create the container @ 01/27/25 19:56:31.767
  W0127 19:56:31.773102      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/27/25 19:56:31.773
  STEP: get the container status @ 01/27/25 19:56:34.783
  STEP: the container should be terminated @ 01/27/25 19:56:34.784
  STEP: the termination message should be set @ 01/27/25 19:56:34.784
  I0127 19:56:34.784859 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/27/25 19:56:34.784
  I0127 19:56:34.795905 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8498" for this suite. @ 01/27/25 19:56:34.798
• [3.050 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/27/25 19:56:34.801
  I0127 19:56:34.801728 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename cronjob @ 01/27/25 19:56:34.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:56:34.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:56:34.815
  STEP: Creating a ForbidConcurrent cronjob @ 01/27/25 19:56:34.817
  STEP: Ensuring a job is scheduled @ 01/27/25 19:56:34.821
  STEP: Ensuring exactly one is scheduled @ 01/27/25 19:57:00.824
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/27/25 19:57:00.826
  STEP: Ensuring no more jobs are scheduled @ 01/27/25 19:57:00.828
  STEP: Removing cronjob @ 01/27/25 19:57:00.83
  I0127 19:57:00.834074 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1180" for this suite. @ 01/27/25 19:57:00.836
• [26.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/27/25 19:57:00.841
  I0127 19:57:00.841339 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 19:57:00.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:00.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:00.857
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/27/25 19:57:00.859
  I0127 19:57:00.859919 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8889 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0127 19:57:00.925639 23 builder.go:146] stderr: ""
  I0127 19:57:00.925690 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/27/25 19:57:00.925
  I0127 19:57:00.925776 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8889 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0127 19:57:00.986174 23 builder.go:146] stderr: ""
  I0127 19:57:00.986215 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/27/25 19:57:00.986
  I0127 19:57:00.988262 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-8889 delete pods e2e-test-httpd-pod'
  I0127 19:57:02.254670 23 builder.go:146] stderr: ""
  I0127 19:57:02.254735 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0127 19:57:02.254948 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8889" for this suite. @ 01/27/25 19:57:02.257
• [1.420 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 01/27/25 19:57:02.261
  I0127 19:57:02.261294 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 19:57:02.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:02.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:02.274
  STEP: Creating a suspended job @ 01/27/25 19:57:02.278
  STEP: Patching the Job @ 01/27/25 19:57:02.283
  STEP: Watching for Job to be patched @ 01/27/25 19:57:02.3
  I0127 19:57:02.301909 23 job.go:1309] Event ADDED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm] and annotations: map[]
  I0127 19:57:02.302004 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm] and annotations: map[]
  I0127 19:57:02.302028 23 job.go:1312] Event MODIFIED found for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[]
  STEP: Updating the job @ 01/27/25 19:57:02.302
  STEP: Watching for Job to be updated @ 01/27/25 19:57:02.307
  I0127 19:57:02.308876 23 job.go:1312] Event MODIFIED found for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:02.308917 23 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/27/25 19:57:02.308
  I0127 19:57:02.310666 23 job.go:1187] Job: e2e-tqzdm as labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched]
  STEP: Waiting for job to complete @ 01/27/25 19:57:02.31
  STEP: Delete a job collection with a labelselector @ 01/27/25 19:57:10.331
  STEP: Watching for Job to be deleted @ 01/27/25 19:57:10.335
  I0127 19:57:10.337622 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.337770 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.337879 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.337908 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.338057 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.338175 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.338252 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.338473 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.338506 23 job.go:1309] Event MODIFIED observed for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  I0127 19:57:10.338532 23 job.go:1312] Event DELETED found for Job e2e-tqzdm in namespace job-689 with labels: map[e2e-job-label:e2e-tqzdm e2e-tqzdm:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/27/25 19:57:10.338
  I0127 19:57:10.340578 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-689" for this suite. @ 01/27/25 19:57:10.348
• [8.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/27/25 19:57:10.356
  I0127 19:57:10.356867 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 19:57:10.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:10.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:10.37
  STEP: Creating simple DaemonSet "daemon-set" @ 01/27/25 19:57:10.453
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/27/25 19:57:10.459
  I0127 19:57:10.551045 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:57:10.551085 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 19:57:11.465517 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 19:57:11.465553 23 fixtures.go:131] Node worker-1 is running 0 daemon pod, expected 1
  I0127 19:57:12.465496 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 19:57:12.465530 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/27/25 19:57:12.467
  I0127 19:57:12.469217 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/27/25 19:57:12.469
  I0127 19:57:12.474645 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/27/25 19:57:12.474
  I0127 19:57:12.476287 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0127 19:57:12.476416 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.476559 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.476659 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.476808 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.476846 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3232 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0127 19:57:12.476866 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/27/25 19:57:12.476
  STEP: watching for the daemon set status to be patched @ 01/27/25 19:57:12.483
  I0127 19:57:12.484571 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0127 19:57:12.484723 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.484823 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.484938 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.485074 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.485178 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3232 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0127 19:57:12.485304 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0127 19:57:12.485336 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3232 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0127 19:57:12.485360 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/27/25 19:57:12.487
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3232, will wait for the garbage collector to delete the pods @ 01/27/25 19:57:12.487
  I0127 19:57:12.545719 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.308918ms
  I0127 19:57:12.646786 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.063278ms
  I0127 19:57:13.550392 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 19:57:13.550424 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0127 19:57:13.554296 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32019"},"items":null}

  I0127 19:57:13.556073 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32019"},"items":null}

  I0127 19:57:13.562229 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3232" for this suite. @ 01/27/25 19:57:13.564
• [3.211 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/27/25 19:57:13.568
  I0127 19:57:13.568058 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename events @ 01/27/25 19:57:13.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:13.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:13.581
  STEP: Create set of events @ 01/27/25 19:57:13.583
  I0127 19:57:13.586393 23 core_events.go:198] created test-event-1
  I0127 19:57:13.589330 23 core_events.go:198] created test-event-2
  I0127 19:57:13.594253 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/27/25 19:57:13.594
  STEP: delete collection of events @ 01/27/25 19:57:13.595
  I0127 19:57:13.596014 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/27/25 19:57:13.607
  I0127 19:57:13.607312 23 core_events.go:230] requesting list of events to confirm quantity
  I0127 19:57:13.609084 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5324" for this suite. @ 01/27/25 19:57:13.659
• [0.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/27/25 19:57:13.664
  I0127 19:57:13.664314 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename discovery @ 01/27/25 19:57:13.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:13.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:13.681
  STEP: Setting up server cert @ 01/27/25 19:57:13.685
  STEP: Requesting APIResourceList from "/api/v1" @ 01/27/25 19:57:14.262
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/27/25 19:57:14.263
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/27/25 19:57:14.264
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/27/25 19:57:14.265
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/27/25 19:57:14.266
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/27/25 19:57:14.267
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/27/25 19:57:14.268
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/27/25 19:57:14.269
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/27/25 19:57:14.269
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/27/25 19:57:14.27
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/27/25 19:57:14.271
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/27/25 19:57:14.272
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/27/25 19:57:14.273
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/27/25 19:57:14.273
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/27/25 19:57:14.274
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/27/25 19:57:14.275
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/27/25 19:57:14.276
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/27/25 19:57:14.276
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/27/25 19:57:14.277
  I0127 19:57:14.278452 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3146" for this suite. @ 01/27/25 19:57:14.28
• [0.620 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/27/25 19:57:14.284
  I0127 19:57:14.284737 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:57:14.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:14.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:14.298
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 19:57:14.3
  STEP: Saw pod success @ 01/27/25 19:57:18.316
  I0127 19:57:18.317957 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-593c7820-9a25-4a9c-b38f-090eaecb104d container client-container: <nil>
  STEP: delete the pod @ 01/27/25 19:57:18.322
  I0127 19:57:18.333354 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9577" for this suite. @ 01/27/25 19:57:18.335
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 01/27/25 19:57:18.339
  I0127 19:57:18.339704 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 19:57:18.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:18.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:18.353
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/27/25 19:57:18.355
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/27/25 19:57:18.355
  STEP: creating a pod to probe DNS @ 01/27/25 19:57:18.355
  STEP: submitting the pod to kubernetes @ 01/27/25 19:57:18.355
  STEP: retrieving the pod @ 01/27/25 19:57:20.368
  STEP: looking for the results for each expected name from probers @ 01/27/25 19:57:20.37
  I0127 19:57:20.383137 23 dns_common.go:546] DNS probes using dns-7486/dns-test-7c80a765-e392-4393-8fa1-7dfc0cfd165a succeeded

  STEP: deleting the pod @ 01/27/25 19:57:20.383
  I0127 19:57:20.392580 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7486" for this suite. @ 01/27/25 19:57:20.395
• [2.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/27/25 19:57:20.402
  I0127 19:57:20.402371 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:57:20.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:20.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:20.413
  STEP: Creating the pod @ 01/27/25 19:57:20.415
  I0127 19:57:22.944284 23 pod_client.go:173] Successfully updated pod "annotationupdate0d2283c3-fdab-4f54-9410-d74404085681"
  I0127 19:57:24.955511 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7843" for this suite. @ 01/27/25 19:57:24.958
• [4.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/27/25 19:57:24.962
  I0127 19:57:24.962251 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename endpointslice @ 01/27/25 19:57:24.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:24.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:24.975
  I0127 19:57:27.014199 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4010" for this suite. @ 01/27/25 19:57:27.016
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/27/25 19:57:27.023
  I0127 19:57:27.023226 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename disruption @ 01/27/25 19:57:27.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:27.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:27.036
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/27/25 19:57:27.038
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:57:27.044
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/27/25 19:57:29.051
  STEP: Waiting for all pods to be running @ 01/27/25 19:57:29.051
  I0127 19:57:29.053333 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 01/27/25 19:57:31.055
  STEP: Updating the pdb to allow a pod to be evicted @ 01/27/25 19:57:31.06
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:57:31.065
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/27/25 19:57:33.068
  STEP: Waiting for all pods to be running @ 01/27/25 19:57:33.068
  STEP: Waiting for the pdb to observed all healthy pods @ 01/27/25 19:57:33.071
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/27/25 19:57:33.088
  STEP: Waiting for the pdb to be processed @ 01/27/25 19:57:33.106
  STEP: Waiting for all pods to be running @ 01/27/25 19:57:35.109
  STEP: locating a running pod @ 01/27/25 19:57:35.111
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/27/25 19:57:35.116
  STEP: Waiting for the pdb to be deleted @ 01/27/25 19:57:35.119
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/27/25 19:57:35.121
  STEP: Waiting for all pods to be running @ 01/27/25 19:57:35.121
  I0127 19:57:35.134629 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5945" for this suite. @ 01/27/25 19:57:35.136
• [8.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/27/25 19:57:35.143
  I0127 19:57:35.143714 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replicaset @ 01/27/25 19:57:35.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:35.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:35.159
  I0127 19:57:35.221739 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/27/25 19:57:35.221
  STEP: Scaling up "test-rs" replicaset @ 01/27/25 19:57:37.227
  I0127 19:57:37.235832 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/27/25 19:57:37.235
  I0127 19:57:37.243309 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4842 with ReadyReplicas 1, AvailableReplicas 1
  I0127 19:57:37.252292 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4842 with ReadyReplicas 1, AvailableReplicas 1
  I0127 19:57:37.266210 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4842 with ReadyReplicas 1, AvailableReplicas 1
  I0127 19:57:37.270588 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4842 with ReadyReplicas 1, AvailableReplicas 1
  I0127 19:57:38.356754 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-4842 with ReadyReplicas 2, AvailableReplicas 2
  I0127 19:57:38.546517 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-4842 with ReadyReplicas 3 found true
  I0127 19:57:38.546695 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4842" for this suite. @ 01/27/25 19:57:38.549
• [3.409 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/27/25 19:57:38.553
  I0127 19:57:38.553098 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename gc @ 01/27/25 19:57:38.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:38.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:38.565
  I0127 19:57:38.590705 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"cd39561d-ec6e-4721-af2f-4c43b1082ff3", Controller:(*bool)(0xc0046eb526), BlockOwnerDeletion:(*bool)(0xc0046eb527)}}
  I0127 19:57:38.600479 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"0de5f7b7-b312-4362-b207-5032ffb8ff63", Controller:(*bool)(0xc0046eb74e), BlockOwnerDeletion:(*bool)(0xc0046eb74f)}}
  I0127 19:57:38.606668 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"62c4bf3b-f0c3-4529-87c7-2348935d85c1", Controller:(*bool)(0xc0046eb95a), BlockOwnerDeletion:(*bool)(0xc0046eb95b)}}
  I0127 19:57:43.618315 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-162" for this suite. @ 01/27/25 19:57:43.62
• [5.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/27/25 19:57:43.624
  I0127 19:57:43.624588 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replication-controller @ 01/27/25 19:57:43.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:43.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:43.638
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/27/25 19:57:43.64
  STEP: When a replication controller with a matching selector is created @ 01/27/25 19:57:45.683
  STEP: Then the orphan pod is adopted @ 01/27/25 19:57:45.686
  I0127 19:57:46.691464 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1681" for this suite. @ 01/27/25 19:57:46.693
• [3.073 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 01/27/25 19:57:46.697
  I0127 19:57:46.697547 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 19:57:46.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:46.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:46.711
  STEP: Creating a pod to test downward api env vars @ 01/27/25 19:57:46.713
  STEP: Saw pod success @ 01/27/25 19:57:50.731
  I0127 19:57:50.733618 23 output.go:207] Trying to get logs from node worker-0 pod downward-api-4622c056-390d-4da5-b90c-7115d9ed2cd0 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 19:57:50.738
  I0127 19:57:50.748588 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6936" for this suite. @ 01/27/25 19:57:50.75
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/27/25 19:57:50.754
  I0127 19:57:50.754663 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename limitrange @ 01/27/25 19:57:50.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:50.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:50.765
  STEP: Creating a LimitRange @ 01/27/25 19:57:50.767
  STEP: Setting up watch @ 01/27/25 19:57:50.767
  STEP: Submitting a LimitRange @ 01/27/25 19:57:50.871
  STEP: Verifying LimitRange creation was observed @ 01/27/25 19:57:50.875
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/27/25 19:57:50.875
  I0127 19:57:50.877567 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0127 19:57:50.877596 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/27/25 19:57:50.877
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/27/25 19:57:50.883
  I0127 19:57:50.885199 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0127 19:57:50.885234 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/27/25 19:57:50.885
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/27/25 19:57:50.891
  I0127 19:57:50.893196 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0127 19:57:50.893225 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/27/25 19:57:50.893
  STEP: Failing to create a Pod with more than max resources @ 01/27/25 19:57:50.894
  STEP: Updating a LimitRange @ 01/27/25 19:57:50.896
  STEP: Verifying LimitRange updating is effective @ 01/27/25 19:57:50.899
  STEP: Creating a Pod with less than former min resources @ 01/27/25 19:57:52.902
  STEP: Failing to create a Pod with more than max resources @ 01/27/25 19:57:52.906
  STEP: Deleting a LimitRange @ 01/27/25 19:57:52.908
  STEP: Verifying the LimitRange was deleted @ 01/27/25 19:57:52.914
  I0127 19:57:57.918513 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/27/25 19:57:57.918
  I0127 19:57:57.924100 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7909" for this suite. @ 01/27/25 19:57:57.926
• [7.178 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/27/25 19:57:57.932
  I0127 19:57:57.932702 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 19:57:57.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:57:57.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:57:57.943
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/27/25 19:57:57.946
  STEP: Saw pod success @ 01/27/25 19:58:02.031
  I0127 19:58:02.033364 23 output.go:207] Trying to get logs from node worker-0 pod pod-f138d287-aa72-4979-89e6-6956d4821c81 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 19:58:02.038
  I0127 19:58:02.047480 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8509" for this suite. @ 01/27/25 19:58:02.049
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/27/25 19:58:02.053
  I0127 19:58:02.053567 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename csi-storageclass @ 01/27/25 19:58:02.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:58:02.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:58:02.065
  STEP: Creating a StorageClass @ 01/27/25 19:58:02.067
  STEP: Get StorageClass "e2e-rpddq" @ 01/27/25 19:58:02.07
  STEP: Patching the StorageClass "e2e-rpddq" @ 01/27/25 19:58:02.072
  STEP: Delete StorageClass "e2e-rpddq" @ 01/27/25 19:58:02.078
  STEP: Confirm deletion of StorageClass "e2e-rpddq" @ 01/27/25 19:58:02.082
  STEP: Create a replacement StorageClass @ 01/27/25 19:58:02.084
  STEP: Updating StorageClass "e2e-v2-cjdqw" @ 01/27/25 19:58:02.087
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-cjdqw=updated" @ 01/27/25 19:58:02.091
  STEP: Deleting StorageClass "e2e-v2-cjdqw" via DeleteCollection @ 01/27/25 19:58:02.092
  STEP: Confirm deletion of StorageClass "e2e-v2-cjdqw" @ 01/27/25 19:58:02.096
  I0127 19:58:02.098386 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1179" for this suite. @ 01/27/25 19:58:02.15
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 01/27/25 19:58:02.154
  I0127 19:58:02.154457 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename cronjob @ 01/27/25 19:58:02.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:58:02.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:58:02.167
  STEP: Creating a cronjob @ 01/27/25 19:58:02.169
  STEP: creating @ 01/27/25 19:58:02.169
  STEP: getting @ 01/27/25 19:58:02.173
  STEP: listing @ 01/27/25 19:58:02.175
  STEP: watching @ 01/27/25 19:58:02.176
  I0127 19:58:02.176907 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 01/27/25 19:58:02.177
  STEP: cluster-wide watching @ 01/27/25 19:58:02.179
  I0127 19:58:02.179279 23 cronjob.go:407] starting watch
  STEP: patching @ 01/27/25 19:58:02.18
  STEP: updating @ 01/27/25 19:58:02.185
  I0127 19:58:02.190803 23 cronjob.go:431] waiting for watch events with expected annotations
  I0127 19:58:02.190850 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 01/27/25 19:58:02.19
  STEP: updating /status @ 01/27/25 19:58:02.196
  STEP: get /status @ 01/27/25 19:58:02.2
  STEP: deleting @ 01/27/25 19:58:02.202
  STEP: deleting a collection @ 01/27/25 19:58:02.209
  I0127 19:58:02.215262 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8074" for this suite. @ 01/27/25 19:58:02.251
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/27/25 19:58:02.255
  I0127 19:58:02.255700 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 19:58:02.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:58:02.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:58:02.269
  STEP: Setting up server cert @ 01/27/25 19:58:02.368
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 19:58:02.508
  STEP: Deploying the webhook pod @ 01/27/25 19:58:02.515
  STEP: Wait for the deployment to be ready @ 01/27/25 19:58:02.528
  I0127 19:58:02.534769 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0127 19:58:04.542099 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:58:06.545617 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:58:08.544931 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 19:58:10.546548 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 19, 58, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/27/25 19:58:12.546
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 19:58:12.556
  I0127 19:58:13.557078 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0127 19:58:13.561491 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9147-crds.webhook.example.com via the AdmissionRegistration API @ 01/27/25 19:58:14.072
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/27/25 19:58:14.088
  I0127 19:58:16.667919 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5936" for this suite. @ 01/27/25 19:58:16.67
  STEP: Destroying namespace "webhook-markers-478" for this suite. @ 01/27/25 19:58:16.674
• [14.423 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 01/27/25 19:58:16.678
  I0127 19:58:16.678699 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 19:58:16.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:58:16.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:58:16.691
  STEP: Looking for a node to schedule job pods @ 01/27/25 19:58:16.693
  STEP: Creating a job @ 01/27/25 19:58:16.771
  STEP: Waiting for all the pods to be ready @ 01/27/25 19:58:16.777
  STEP: Fetch all running pods @ 01/27/25 19:58:18.782
  STEP: Evict all the Pods @ 01/27/25 19:58:18.785
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-n72fz/job-5167 @ 01/27/25 19:58:18.785
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-xpdn7/job-5167 @ 01/27/25 19:58:18.785
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-tklvj/job-5167 @ 01/27/25 19:58:18.785
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-xpdn7/job-5167 to be deleted @ 01/27/25 19:58:18.802
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-n72fz/job-5167 to be deleted @ 01/27/25 19:58:18.805
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-tklvj/job-5167 to be deleted @ 01/27/25 19:58:18.81
  STEP: Ensuring job reaches completions @ 01/27/25 19:58:24.819
  I0127 19:59:06.887582 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5167" for this suite. @ 01/27/25 19:59:06.89
• [50.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/27/25 19:59:06.894
  I0127 19:59:06.894513 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 19:59:06.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:06.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:06.905
  STEP: Creating secret with name secret-test-9766597b-ddee-4d67-a747-dbadc2bdb595 @ 01/27/25 19:59:06.907
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:59:06.91
  STEP: Saw pod success @ 01/27/25 19:59:08.92
  I0127 19:59:08.922365 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-0b05a838-829d-4939-920a-a1d314038990 container secret-env-test: <nil>
  STEP: delete the pod @ 01/27/25 19:59:08.927
  I0127 19:59:08.938337 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8987" for this suite. @ 01/27/25 19:59:08.94
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/27/25 19:59:08.944
  I0127 19:59:08.944726 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:59:08.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:08.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:08.957
  STEP: Creating configMap with name projected-configmap-test-volume-map-07818ed3-8762-4bfa-9055-1c574c1f4a17 @ 01/27/25 19:59:08.959
  STEP: Creating a pod to test consume configMaps @ 01/27/25 19:59:08.962
  STEP: Saw pod success @ 01/27/25 19:59:10.974
  I0127 19:59:10.976257 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-configmaps-c5e0c871-d3ed-4843-a789-71cb4df62254 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 19:59:10.98
  I0127 19:59:10.992448 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6902" for this suite. @ 01/27/25 19:59:10.994
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/27/25 19:59:10.998
  I0127 19:59:10.998521 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 19:59:10.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:11.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:11.012
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5148 @ 01/27/25 19:59:11.014
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/27/25 19:59:11.023
  STEP: creating service externalsvc in namespace services-5148 @ 01/27/25 19:59:11.023
  STEP: creating replication controller externalsvc in namespace services-5148 @ 01/27/25 19:59:11.035
  I0127 19:59:11.040548      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5148, replica count: 2
  I0127 19:59:14.091093      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/27/25 19:59:14.093
  I0127 19:59:14.104579 23 resource.go:361] Creating new exec pod
  I0127 19:59:16.117067 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5148 exec execpod5n99z -- /bin/sh -x -c nslookup clusterip-service.services-5148.svc.cluster.local'
  I0127 19:59:16.258669 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-5148.svc.cluster.local\n"
  I0127 19:59:16.258711 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-5148.svc.cluster.local\tcanonical name = externalsvc.services-5148.svc.cluster.local.\nName:\texternalsvc.services-5148.svc.cluster.local\nAddress: 10.102.16.221\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-5148, will wait for the garbage collector to delete the pods @ 01/27/25 19:59:16.258
  I0127 19:59:16.315494 23 resources.go:139] Deleting ReplicationController externalsvc took: 3.977317ms
  I0127 19:59:16.415900 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.386393ms
  I0127 19:59:18.832806 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0127 19:59:18.839197 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5148" for this suite. @ 01/27/25 19:59:18.841
• [7.847 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/27/25 19:59:18.846
  I0127 19:59:18.846202 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-pred @ 01/27/25 19:59:18.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:18.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:18.857
  I0127 19:59:18.859734 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0127 19:59:18.944653 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0127 19:59:18.946833 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0127 19:59:18.950162 23 predicates.go:957] coredns-7d4f7fbd5c-xx7x8 from kube-system started at 2025-01-27 19:30:18 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.950191 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 19:59:18.950204 23 predicates.go:957] konnectivity-agent-dtqvz from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.950214 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 19:59:18.950225 23 predicates.go:957] kube-proxy-llfpl from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.950234 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 19:59:18.950246 23 predicates.go:957] kube-router-bn8bm from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.950256 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 19:59:18.950267 23 predicates.go:957] execpod5n99z from services-5148 started at 2025-01-27 19:59:14 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.950276 23 predicates.go:959] 	Container agnhost-container ready: true, restart count 0
  I0127 19:59:18.950288 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-27 18:31:43 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.950298 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0127 19:59:18.950309 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-6tlkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 19:59:18.950319 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 19:59:18.950331 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0127 19:59:18.950353 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0127 19:59:18.952748 23 predicates.go:957] coredns-7d4f7fbd5c-7v98h from kube-system started at 2025-01-27 18:31:40 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.952777 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 19:59:18.952790 23 predicates.go:957] konnectivity-agent-glhh6 from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.952800 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 19:59:18.952821 23 predicates.go:957] kube-proxy-g28cd from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.952837 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 19:59:18.952848 23 predicates.go:957] kube-router-b745k from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.952861 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 19:59:18.952873 23 predicates.go:957] metrics-server-7778865875-f27vw from kube-system started at 2025-01-27 19:29:53 +0000 UTC (1 container statuses recorded)
  I0127 19:59:18.952884 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0127 19:59:18.952895 23 predicates.go:957] sonobuoy-e2e-job-fe498577155e4cf6 from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 19:59:18.952911 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0127 19:59:18.952922 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 19:59:18.952932 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-nchkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 19:59:18.952949 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 19:59:18.952959 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/27/25 19:59:18.953
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/27/25 19:59:20.964
  STEP: Trying to apply a random label on the found node. @ 01/27/25 19:59:20.973
  STEP: verifying the node has the label kubernetes.io/e2e-5d0a527d-d15c-4d05-8630-8634a9f55844 42 @ 01/27/25 19:59:20.982
  STEP: Trying to relaunch the pod, now with labels. @ 01/27/25 19:59:20.984
  STEP: removing the label kubernetes.io/e2e-5d0a527d-d15c-4d05-8630-8634a9f55844 off the node worker-0 @ 01/27/25 19:59:22.996
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5d0a527d-d15c-4d05-8630-8634a9f55844 @ 01/27/25 19:59:23.006
  I0127 19:59:23.008076 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8170" for this suite. @ 01/27/25 19:59:23.009
• [4.170 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/27/25 19:59:23.015
  I0127 19:59:23.015987 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svc-latency @ 01/27/25 19:59:23.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:23.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:23.026
  I0127 19:59:23.028738 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9702 @ 01/27/25 19:59:23.029
  I0127 19:59:23.034759      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9702, replica count: 1
  I0127 19:59:24.086361      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 19:59:24.198618 23 service_latency.go:356] Created: latency-svc-rmwsd
  I0127 19:59:24.205756 23 service_latency.go:363] Got endpoints: latency-svc-rmwsd [18.58061ms]
  I0127 19:59:24.219375 23 service_latency.go:356] Created: latency-svc-jjj2d
  I0127 19:59:24.226881 23 service_latency.go:363] Got endpoints: latency-svc-jjj2d [20.8176ms]
  I0127 19:59:24.228700 23 service_latency.go:356] Created: latency-svc-98trc
  I0127 19:59:24.238093 23 service_latency.go:363] Got endpoints: latency-svc-98trc [31.881567ms]
  I0127 19:59:24.239854 23 service_latency.go:356] Created: latency-svc-lm8f2
  I0127 19:59:24.246229 23 service_latency.go:363] Got endpoints: latency-svc-lm8f2 [39.890426ms]
  I0127 19:59:24.250968 23 service_latency.go:356] Created: latency-svc-d49jg
  I0127 19:59:24.257719 23 service_latency.go:363] Got endpoints: latency-svc-d49jg [51.434011ms]
  I0127 19:59:24.259627 23 service_latency.go:356] Created: latency-svc-gmkx9
  I0127 19:59:24.267138 23 service_latency.go:363] Got endpoints: latency-svc-gmkx9 [60.809879ms]
  I0127 19:59:24.271099 23 service_latency.go:356] Created: latency-svc-95nqr
  I0127 19:59:24.278853 23 service_latency.go:363] Got endpoints: latency-svc-95nqr [72.860158ms]
  I0127 19:59:24.279820 23 service_latency.go:356] Created: latency-svc-hl7xf
  I0127 19:59:24.288154 23 service_latency.go:363] Got endpoints: latency-svc-hl7xf [81.991649ms]
  I0127 19:59:24.289638 23 service_latency.go:356] Created: latency-svc-7v6gd
  I0127 19:59:24.301412 23 service_latency.go:363] Got endpoints: latency-svc-7v6gd [95.196256ms]
  I0127 19:59:24.303255 23 service_latency.go:356] Created: latency-svc-mnvdq
  I0127 19:59:24.311565 23 service_latency.go:363] Got endpoints: latency-svc-mnvdq [105.160437ms]
  I0127 19:59:24.313703 23 service_latency.go:356] Created: latency-svc-v5bsd
  I0127 19:59:24.319951 23 service_latency.go:363] Got endpoints: latency-svc-v5bsd [113.486939ms]
  I0127 19:59:24.323804 23 service_latency.go:356] Created: latency-svc-w97jc
  I0127 19:59:24.327355 23 service_latency.go:363] Got endpoints: latency-svc-w97jc [120.900565ms]
  I0127 19:59:24.329727 23 service_latency.go:356] Created: latency-svc-cqzvp
  I0127 19:59:24.337461 23 service_latency.go:363] Got endpoints: latency-svc-cqzvp [131.039876ms]
  I0127 19:59:24.340674 23 service_latency.go:356] Created: latency-svc-x8n9r
  I0127 19:59:24.353151 23 service_latency.go:363] Got endpoints: latency-svc-x8n9r [146.667227ms]
  I0127 19:59:24.356622 23 service_latency.go:356] Created: latency-svc-r7x8b
  I0127 19:59:24.361192 23 service_latency.go:363] Got endpoints: latency-svc-r7x8b [155.169036ms]
  I0127 19:59:24.388784 23 service_latency.go:356] Created: latency-svc-cdl74
  I0127 19:59:24.398066 23 service_latency.go:363] Got endpoints: latency-svc-cdl74 [191.550133ms]
  I0127 19:59:24.399728 23 service_latency.go:356] Created: latency-svc-54nbh
  I0127 19:59:24.408317 23 service_latency.go:363] Got endpoints: latency-svc-54nbh [181.399128ms]
  I0127 19:59:24.412436 23 service_latency.go:356] Created: latency-svc-whq74
  I0127 19:59:24.419039 23 service_latency.go:363] Got endpoints: latency-svc-whq74 [180.919778ms]
  I0127 19:59:24.421950 23 service_latency.go:356] Created: latency-svc-xwjz7
  I0127 19:59:24.424684 23 service_latency.go:363] Got endpoints: latency-svc-xwjz7 [178.420529ms]
  I0127 19:59:24.431010 23 service_latency.go:356] Created: latency-svc-ccrmk
  I0127 19:59:24.438053 23 service_latency.go:363] Got endpoints: latency-svc-ccrmk [180.300133ms]
  I0127 19:59:24.440450 23 service_latency.go:356] Created: latency-svc-sfxfm
  I0127 19:59:24.449879 23 service_latency.go:363] Got endpoints: latency-svc-sfxfm [182.705597ms]
  I0127 19:59:24.451403 23 service_latency.go:356] Created: latency-svc-5x4d2
  I0127 19:59:24.458174 23 service_latency.go:363] Got endpoints: latency-svc-5x4d2 [179.291058ms]
  I0127 19:59:24.461799 23 service_latency.go:356] Created: latency-svc-l5c8q
  I0127 19:59:24.466284 23 service_latency.go:363] Got endpoints: latency-svc-l5c8q [178.100937ms]
  I0127 19:59:24.470000 23 service_latency.go:356] Created: latency-svc-48hfq
  I0127 19:59:24.475198 23 service_latency.go:363] Got endpoints: latency-svc-48hfq [173.749569ms]
  I0127 19:59:24.479111 23 service_latency.go:356] Created: latency-svc-z2pws
  I0127 19:59:24.483646 23 service_latency.go:363] Got endpoints: latency-svc-z2pws [172.0387ms]
  I0127 19:59:24.484899 23 service_latency.go:356] Created: latency-svc-hk787
  I0127 19:59:24.488526 23 service_latency.go:363] Got endpoints: latency-svc-hk787 [168.540947ms]
  I0127 19:59:24.495400 23 service_latency.go:356] Created: latency-svc-lv5gx
  I0127 19:59:24.503163 23 service_latency.go:363] Got endpoints: latency-svc-lv5gx [175.776799ms]
  I0127 19:59:24.507630 23 service_latency.go:356] Created: latency-svc-4jqcx
  I0127 19:59:24.515380 23 service_latency.go:363] Got endpoints: latency-svc-4jqcx [177.881397ms]
  I0127 19:59:24.517355 23 service_latency.go:356] Created: latency-svc-pq946
  I0127 19:59:24.527704 23 service_latency.go:363] Got endpoints: latency-svc-pq946 [174.520453ms]
  I0127 19:59:24.529891 23 service_latency.go:356] Created: latency-svc-vdmhl
  I0127 19:59:24.536002 23 service_latency.go:363] Got endpoints: latency-svc-vdmhl [174.771185ms]
  I0127 19:59:24.538527 23 service_latency.go:356] Created: latency-svc-rgpqm
  I0127 19:59:24.545218 23 service_latency.go:363] Got endpoints: latency-svc-rgpqm [147.1189ms]
  I0127 19:59:24.547859 23 service_latency.go:356] Created: latency-svc-v8fjr
  I0127 19:59:24.554146 23 service_latency.go:363] Got endpoints: latency-svc-v8fjr [145.791019ms]
  I0127 19:59:24.555244 23 service_latency.go:356] Created: latency-svc-pmp7d
  I0127 19:59:24.564080 23 service_latency.go:363] Got endpoints: latency-svc-pmp7d [144.994939ms]
  I0127 19:59:24.566137 23 service_latency.go:356] Created: latency-svc-9gmhx
  I0127 19:59:24.572499 23 service_latency.go:363] Got endpoints: latency-svc-9gmhx [147.785966ms]
  I0127 19:59:24.574502 23 service_latency.go:356] Created: latency-svc-65tmr
  I0127 19:59:24.583049 23 service_latency.go:363] Got endpoints: latency-svc-65tmr [144.809257ms]
  I0127 19:59:24.585021 23 service_latency.go:356] Created: latency-svc-jrfzr
  I0127 19:59:24.591831 23 service_latency.go:363] Got endpoints: latency-svc-jrfzr [141.925073ms]
  I0127 19:59:24.594392 23 service_latency.go:356] Created: latency-svc-9h2fb
  I0127 19:59:24.603570 23 service_latency.go:363] Got endpoints: latency-svc-9h2fb [145.361759ms]
  I0127 19:59:24.605526 23 service_latency.go:356] Created: latency-svc-qfwrf
  I0127 19:59:24.612696 23 service_latency.go:363] Got endpoints: latency-svc-qfwrf [146.363651ms]
  I0127 19:59:24.614407 23 service_latency.go:356] Created: latency-svc-ztmpj
  I0127 19:59:24.623500 23 service_latency.go:356] Created: latency-svc-l9bpn
  I0127 19:59:24.640236 23 service_latency.go:356] Created: latency-svc-xdbjm
  I0127 19:59:24.647724 23 service_latency.go:356] Created: latency-svc-bbcf6
  I0127 19:59:24.655418 23 service_latency.go:363] Got endpoints: latency-svc-ztmpj [180.183253ms]
  I0127 19:59:24.657334 23 service_latency.go:356] Created: latency-svc-fmqc5
  I0127 19:59:24.666372 23 service_latency.go:356] Created: latency-svc-qm2wv
  I0127 19:59:24.675263 23 service_latency.go:356] Created: latency-svc-7f92m
  I0127 19:59:24.682815 23 service_latency.go:356] Created: latency-svc-n9cs6
  I0127 19:59:24.691071 23 service_latency.go:356] Created: latency-svc-2fp54
  I0127 19:59:24.702680 23 service_latency.go:356] Created: latency-svc-djcbp
  I0127 19:59:24.710304 23 service_latency.go:363] Got endpoints: latency-svc-l9bpn [226.625277ms]
  I0127 19:59:24.712703 23 service_latency.go:356] Created: latency-svc-fcwld
  I0127 19:59:24.720944 23 service_latency.go:356] Created: latency-svc-2hj6j
  I0127 19:59:24.727993 23 service_latency.go:356] Created: latency-svc-qsffz
  I0127 19:59:24.745907 23 service_latency.go:356] Created: latency-svc-c7l4q
  I0127 19:59:24.748301 23 service_latency.go:356] Created: latency-svc-vsrqm
  I0127 19:59:24.755947 23 service_latency.go:363] Got endpoints: latency-svc-xdbjm [267.391426ms]
  I0127 19:59:24.756773 23 service_latency.go:356] Created: latency-svc-czzvj
  I0127 19:59:24.764745 23 service_latency.go:356] Created: latency-svc-qk5fh
  I0127 19:59:24.774304 23 service_latency.go:356] Created: latency-svc-hrc4z
  I0127 19:59:24.802951 23 service_latency.go:363] Got endpoints: latency-svc-bbcf6 [299.753974ms]
  I0127 19:59:24.813827 23 service_latency.go:356] Created: latency-svc-464xl
  I0127 19:59:24.854931 23 service_latency.go:363] Got endpoints: latency-svc-fmqc5 [339.512973ms]
  I0127 19:59:24.868229 23 service_latency.go:356] Created: latency-svc-2xvz6
  I0127 19:59:24.903181 23 service_latency.go:363] Got endpoints: latency-svc-qm2wv [375.4366ms]
  I0127 19:59:24.913963 23 service_latency.go:356] Created: latency-svc-f6mrs
  I0127 19:59:24.953365 23 service_latency.go:363] Got endpoints: latency-svc-7f92m [417.255584ms]
  I0127 19:59:24.972337 23 service_latency.go:356] Created: latency-svc-x9sfh
  I0127 19:59:25.003714 23 service_latency.go:363] Got endpoints: latency-svc-n9cs6 [458.457446ms]
  I0127 19:59:25.015326 23 service_latency.go:356] Created: latency-svc-4fswv
  I0127 19:59:25.055746 23 service_latency.go:363] Got endpoints: latency-svc-2fp54 [501.532085ms]
  I0127 19:59:25.070275 23 service_latency.go:356] Created: latency-svc-89sl7
  I0127 19:59:25.104518 23 service_latency.go:363] Got endpoints: latency-svc-djcbp [540.400907ms]
  I0127 19:59:25.115795 23 service_latency.go:356] Created: latency-svc-p6rjq
  I0127 19:59:25.153430 23 service_latency.go:363] Got endpoints: latency-svc-fcwld [580.904333ms]
  I0127 19:59:25.165577 23 service_latency.go:356] Created: latency-svc-k6xtv
  I0127 19:59:25.203636 23 service_latency.go:363] Got endpoints: latency-svc-2hj6j [620.553138ms]
  I0127 19:59:25.214320 23 service_latency.go:356] Created: latency-svc-7q8sj
  I0127 19:59:25.255894 23 service_latency.go:363] Got endpoints: latency-svc-qsffz [664.027555ms]
  I0127 19:59:25.266552 23 service_latency.go:356] Created: latency-svc-s6vc6
  I0127 19:59:25.304660 23 service_latency.go:363] Got endpoints: latency-svc-c7l4q [701.059332ms]
  I0127 19:59:25.315675 23 service_latency.go:356] Created: latency-svc-zhwsh
  I0127 19:59:25.355118 23 service_latency.go:363] Got endpoints: latency-svc-vsrqm [742.392523ms]
  I0127 19:59:25.365949 23 service_latency.go:356] Created: latency-svc-jfm95
  I0127 19:59:25.404162 23 service_latency.go:363] Got endpoints: latency-svc-czzvj [748.705794ms]
  I0127 19:59:25.415212 23 service_latency.go:356] Created: latency-svc-98wb4
  I0127 19:59:25.455682 23 service_latency.go:363] Got endpoints: latency-svc-qk5fh [745.34128ms]
  I0127 19:59:25.467263 23 service_latency.go:356] Created: latency-svc-6clkm
  I0127 19:59:25.503551 23 service_latency.go:363] Got endpoints: latency-svc-hrc4z [747.562304ms]
  I0127 19:59:25.516418 23 service_latency.go:356] Created: latency-svc-vrrws
  I0127 19:59:25.554121 23 service_latency.go:363] Got endpoints: latency-svc-464xl [751.129706ms]
  I0127 19:59:25.565441 23 service_latency.go:356] Created: latency-svc-9s7h7
  I0127 19:59:25.606095 23 service_latency.go:363] Got endpoints: latency-svc-2xvz6 [751.114505ms]
  I0127 19:59:25.619357 23 service_latency.go:356] Created: latency-svc-sxdrc
  I0127 19:59:25.653447 23 service_latency.go:363] Got endpoints: latency-svc-f6mrs [750.221777ms]
  I0127 19:59:25.664121 23 service_latency.go:356] Created: latency-svc-n5krt
  I0127 19:59:25.707343 23 service_latency.go:363] Got endpoints: latency-svc-x9sfh [753.933998ms]
  I0127 19:59:25.720735 23 service_latency.go:356] Created: latency-svc-pw8cq
  I0127 19:59:25.753340 23 service_latency.go:363] Got endpoints: latency-svc-4fswv [749.564712ms]
  I0127 19:59:25.765456 23 service_latency.go:356] Created: latency-svc-4md2p
  I0127 19:59:25.802881 23 service_latency.go:363] Got endpoints: latency-svc-89sl7 [747.090497ms]
  I0127 19:59:25.820427 23 service_latency.go:356] Created: latency-svc-6r7bx
  I0127 19:59:25.853496 23 service_latency.go:363] Got endpoints: latency-svc-p6rjq [748.923014ms]
  I0127 19:59:25.864999 23 service_latency.go:356] Created: latency-svc-fp9gv
  I0127 19:59:25.906961 23 service_latency.go:363] Got endpoints: latency-svc-k6xtv [753.481659ms]
  I0127 19:59:25.922576 23 service_latency.go:356] Created: latency-svc-5982j
  I0127 19:59:25.952656 23 service_latency.go:363] Got endpoints: latency-svc-7q8sj [748.965939ms]
  I0127 19:59:25.972043 23 service_latency.go:356] Created: latency-svc-xxjhw
  I0127 19:59:26.002678 23 service_latency.go:363] Got endpoints: latency-svc-s6vc6 [746.735246ms]
  I0127 19:59:26.015356 23 service_latency.go:356] Created: latency-svc-2ln8q
  I0127 19:59:26.055699 23 service_latency.go:363] Got endpoints: latency-svc-zhwsh [750.993894ms]
  I0127 19:59:26.070288 23 service_latency.go:356] Created: latency-svc-xsk8p
  I0127 19:59:26.106799 23 service_latency.go:363] Got endpoints: latency-svc-jfm95 [751.635016ms]
  I0127 19:59:26.123278 23 service_latency.go:356] Created: latency-svc-g6gxg
  I0127 19:59:26.154897 23 service_latency.go:363] Got endpoints: latency-svc-98wb4 [750.697894ms]
  I0127 19:59:26.166342 23 service_latency.go:356] Created: latency-svc-f9v5x
  I0127 19:59:26.206429 23 service_latency.go:363] Got endpoints: latency-svc-6clkm [750.548195ms]
  I0127 19:59:26.220020 23 service_latency.go:356] Created: latency-svc-nkzkj
  I0127 19:59:26.253359 23 service_latency.go:363] Got endpoints: latency-svc-vrrws [749.764095ms]
  I0127 19:59:26.265066 23 service_latency.go:356] Created: latency-svc-dsrmx
  I0127 19:59:26.303058 23 service_latency.go:363] Got endpoints: latency-svc-9s7h7 [748.844595ms]
  I0127 19:59:26.320592 23 service_latency.go:356] Created: latency-svc-xs625
  I0127 19:59:26.353068 23 service_latency.go:363] Got endpoints: latency-svc-sxdrc [746.882712ms]
  I0127 19:59:26.364614 23 service_latency.go:356] Created: latency-svc-49b29
  I0127 19:59:26.403478 23 service_latency.go:363] Got endpoints: latency-svc-n5krt [749.977599ms]
  I0127 19:59:26.416091 23 service_latency.go:356] Created: latency-svc-hcshx
  I0127 19:59:26.455520 23 service_latency.go:363] Got endpoints: latency-svc-pw8cq [748.092616ms]
  I0127 19:59:26.466402 23 service_latency.go:356] Created: latency-svc-5qcc5
  I0127 19:59:26.506058 23 service_latency.go:363] Got endpoints: latency-svc-4md2p [752.657955ms]
  I0127 19:59:26.516755 23 service_latency.go:356] Created: latency-svc-g8sgg
  I0127 19:59:26.555300 23 service_latency.go:363] Got endpoints: latency-svc-6r7bx [752.374086ms]
  I0127 19:59:26.570802 23 service_latency.go:356] Created: latency-svc-pfgtp
  I0127 19:59:26.605593 23 service_latency.go:363] Got endpoints: latency-svc-fp9gv [752.018028ms]
  I0127 19:59:26.616549 23 service_latency.go:356] Created: latency-svc-z7zfm
  I0127 19:59:26.652612 23 service_latency.go:363] Got endpoints: latency-svc-5982j [745.587514ms]
  I0127 19:59:26.668301 23 service_latency.go:356] Created: latency-svc-fl9k4
  I0127 19:59:26.704884 23 service_latency.go:363] Got endpoints: latency-svc-xxjhw [752.189505ms]
  I0127 19:59:26.715599 23 service_latency.go:356] Created: latency-svc-mb8vq
  I0127 19:59:26.754252 23 service_latency.go:363] Got endpoints: latency-svc-2ln8q [751.545585ms]
  I0127 19:59:26.764910 23 service_latency.go:356] Created: latency-svc-nbxqp
  I0127 19:59:26.805556 23 service_latency.go:363] Got endpoints: latency-svc-xsk8p [749.796335ms]
  I0127 19:59:26.815423 23 service_latency.go:356] Created: latency-svc-gjpwf
  I0127 19:59:26.853755 23 service_latency.go:363] Got endpoints: latency-svc-g6gxg [746.918182ms]
  I0127 19:59:26.865780 23 service_latency.go:356] Created: latency-svc-v926t
  I0127 19:59:26.904125 23 service_latency.go:363] Got endpoints: latency-svc-f9v5x [749.197914ms]
  I0127 19:59:26.914327 23 service_latency.go:356] Created: latency-svc-hks62
  I0127 19:59:26.953286 23 service_latency.go:363] Got endpoints: latency-svc-nkzkj [746.819404ms]
  I0127 19:59:26.967159 23 service_latency.go:356] Created: latency-svc-2htxg
  I0127 19:59:27.003116 23 service_latency.go:363] Got endpoints: latency-svc-dsrmx [749.394821ms]
  I0127 19:59:27.013942 23 service_latency.go:356] Created: latency-svc-p447j
  I0127 19:59:27.056243 23 service_latency.go:363] Got endpoints: latency-svc-xs625 [753.135572ms]
  I0127 19:59:27.069137 23 service_latency.go:356] Created: latency-svc-7gmdz
  I0127 19:59:27.103537 23 service_latency.go:363] Got endpoints: latency-svc-49b29 [750.416546ms]
  I0127 19:59:27.114393 23 service_latency.go:356] Created: latency-svc-tn9jg
  I0127 19:59:27.153537 23 service_latency.go:363] Got endpoints: latency-svc-hcshx [750.00209ms]
  I0127 19:59:27.165152 23 service_latency.go:356] Created: latency-svc-bxcjk
  I0127 19:59:27.204673 23 service_latency.go:363] Got endpoints: latency-svc-5qcc5 [749.058811ms]
  I0127 19:59:27.215181 23 service_latency.go:356] Created: latency-svc-gxcfd
  I0127 19:59:27.256467 23 service_latency.go:363] Got endpoints: latency-svc-g8sgg [750.357611ms]
  I0127 19:59:27.266667 23 service_latency.go:356] Created: latency-svc-tqsf9
  I0127 19:59:27.307904 23 service_latency.go:363] Got endpoints: latency-svc-pfgtp [752.557157ms]
  I0127 19:59:27.320368 23 service_latency.go:356] Created: latency-svc-56jzs
  I0127 19:59:27.353416 23 service_latency.go:363] Got endpoints: latency-svc-z7zfm [747.780098ms]
  I0127 19:59:27.364418 23 service_latency.go:356] Created: latency-svc-tmz8h
  I0127 19:59:27.403490 23 service_latency.go:363] Got endpoints: latency-svc-fl9k4 [750.844041ms]
  I0127 19:59:27.419585 23 service_latency.go:356] Created: latency-svc-xbzgw
  I0127 19:59:27.453098 23 service_latency.go:363] Got endpoints: latency-svc-mb8vq [748.168422ms]
  I0127 19:59:27.463159 23 service_latency.go:356] Created: latency-svc-q2fgv
  I0127 19:59:27.506793 23 service_latency.go:363] Got endpoints: latency-svc-nbxqp [752.490294ms]
  I0127 19:59:27.523477 23 service_latency.go:356] Created: latency-svc-mmpwc
  I0127 19:59:27.553748 23 service_latency.go:363] Got endpoints: latency-svc-gjpwf [748.135937ms]
  I0127 19:59:27.564202 23 service_latency.go:356] Created: latency-svc-ks4gm
  I0127 19:59:27.605359 23 service_latency.go:363] Got endpoints: latency-svc-v926t [751.567735ms]
  I0127 19:59:27.615420 23 service_latency.go:356] Created: latency-svc-5cwxv
  I0127 19:59:27.653544 23 service_latency.go:363] Got endpoints: latency-svc-hks62 [749.384205ms]
  I0127 19:59:27.664164 23 service_latency.go:356] Created: latency-svc-z8qlr
  I0127 19:59:27.702884 23 service_latency.go:363] Got endpoints: latency-svc-2htxg [749.522243ms]
  I0127 19:59:27.714653 23 service_latency.go:356] Created: latency-svc-l8rcq
  I0127 19:59:27.753737 23 service_latency.go:363] Got endpoints: latency-svc-p447j [750.582659ms]
  I0127 19:59:27.764112 23 service_latency.go:356] Created: latency-svc-x9bk4
  I0127 19:59:27.805475 23 service_latency.go:363] Got endpoints: latency-svc-7gmdz [749.17924ms]
  I0127 19:59:27.816952 23 service_latency.go:356] Created: latency-svc-2dgp8
  I0127 19:59:27.853303 23 service_latency.go:363] Got endpoints: latency-svc-tn9jg [749.721924ms]
  I0127 19:59:27.864165 23 service_latency.go:356] Created: latency-svc-sbrv9
  I0127 19:59:27.905857 23 service_latency.go:363] Got endpoints: latency-svc-bxcjk [752.261592ms]
  I0127 19:59:27.916164 23 service_latency.go:356] Created: latency-svc-mbzfw
  I0127 19:59:27.952675 23 service_latency.go:363] Got endpoints: latency-svc-gxcfd [747.941144ms]
  I0127 19:59:27.966368 23 service_latency.go:356] Created: latency-svc-xdngv
  I0127 19:59:28.004518 23 service_latency.go:363] Got endpoints: latency-svc-tqsf9 [748.012712ms]
  I0127 19:59:28.014632 23 service_latency.go:356] Created: latency-svc-8ww68
  I0127 19:59:28.054859 23 service_latency.go:363] Got endpoints: latency-svc-56jzs [746.904702ms]
  I0127 19:59:28.065055 23 service_latency.go:356] Created: latency-svc-7mrlz
  I0127 19:59:28.106511 23 service_latency.go:363] Got endpoints: latency-svc-tmz8h [753.056849ms]
  I0127 19:59:28.118661 23 service_latency.go:356] Created: latency-svc-plm84
  I0127 19:59:28.152762 23 service_latency.go:363] Got endpoints: latency-svc-xbzgw [749.224379ms]
  I0127 19:59:28.169262 23 service_latency.go:356] Created: latency-svc-nrb9d
  I0127 19:59:28.205359 23 service_latency.go:363] Got endpoints: latency-svc-q2fgv [752.222328ms]
  I0127 19:59:28.216656 23 service_latency.go:356] Created: latency-svc-4564s
  I0127 19:59:28.253255 23 service_latency.go:363] Got endpoints: latency-svc-mmpwc [746.417163ms]
  I0127 19:59:28.269980 23 service_latency.go:356] Created: latency-svc-hmbc6
  I0127 19:59:28.305099 23 service_latency.go:363] Got endpoints: latency-svc-ks4gm [751.299611ms]
  I0127 19:59:28.315669 23 service_latency.go:356] Created: latency-svc-bnd68
  I0127 19:59:28.355933 23 service_latency.go:363] Got endpoints: latency-svc-5cwxv [750.529677ms]
  I0127 19:59:28.375851 23 service_latency.go:356] Created: latency-svc-cwqcg
  I0127 19:59:28.403102 23 service_latency.go:363] Got endpoints: latency-svc-z8qlr [749.521616ms]
  I0127 19:59:28.414312 23 service_latency.go:356] Created: latency-svc-fdt5t
  I0127 19:59:28.452702 23 service_latency.go:363] Got endpoints: latency-svc-l8rcq [749.762403ms]
  I0127 19:59:28.463199 23 service_latency.go:356] Created: latency-svc-qvpdz
  I0127 19:59:28.505904 23 service_latency.go:363] Got endpoints: latency-svc-x9bk4 [752.029121ms]
  I0127 19:59:28.516294 23 service_latency.go:356] Created: latency-svc-v9wnp
  I0127 19:59:28.554148 23 service_latency.go:363] Got endpoints: latency-svc-2dgp8 [748.617006ms]
  I0127 19:59:28.567279 23 service_latency.go:356] Created: latency-svc-rwjkv
  I0127 19:59:28.602561 23 service_latency.go:363] Got endpoints: latency-svc-sbrv9 [749.215888ms]
  I0127 19:59:28.614798 23 service_latency.go:356] Created: latency-svc-bkf8z
  I0127 19:59:28.652803 23 service_latency.go:363] Got endpoints: latency-svc-mbzfw [746.895408ms]
  I0127 19:59:28.664511 23 service_latency.go:356] Created: latency-svc-z4n8p
  I0127 19:59:28.703892 23 service_latency.go:363] Got endpoints: latency-svc-xdngv [751.174733ms]
  I0127 19:59:28.714571 23 service_latency.go:356] Created: latency-svc-bq6nn
  I0127 19:59:28.755156 23 service_latency.go:363] Got endpoints: latency-svc-8ww68 [750.593005ms]
  I0127 19:59:28.765715 23 service_latency.go:356] Created: latency-svc-6l5zg
  I0127 19:59:28.805103 23 service_latency.go:363] Got endpoints: latency-svc-7mrlz [750.200192ms]
  I0127 19:59:28.828251 23 service_latency.go:356] Created: latency-svc-sg25z
  I0127 19:59:28.860558 23 service_latency.go:363] Got endpoints: latency-svc-plm84 [754.007942ms]
  I0127 19:59:28.872933 23 service_latency.go:356] Created: latency-svc-x2jr9
  I0127 19:59:28.904044 23 service_latency.go:363] Got endpoints: latency-svc-nrb9d [751.229865ms]
  I0127 19:59:28.918897 23 service_latency.go:356] Created: latency-svc-5msch
  I0127 19:59:28.956203 23 service_latency.go:363] Got endpoints: latency-svc-4564s [750.793116ms]
  I0127 19:59:28.966416 23 service_latency.go:356] Created: latency-svc-wlttq
  I0127 19:59:29.005588 23 service_latency.go:363] Got endpoints: latency-svc-hmbc6 [752.292442ms]
  I0127 19:59:29.021979 23 service_latency.go:356] Created: latency-svc-62pnt
  I0127 19:59:29.053454 23 service_latency.go:363] Got endpoints: latency-svc-bnd68 [748.300731ms]
  I0127 19:59:29.063727 23 service_latency.go:356] Created: latency-svc-2wpzw
  I0127 19:59:29.103725 23 service_latency.go:363] Got endpoints: latency-svc-cwqcg [747.743392ms]
  I0127 19:59:29.124230 23 service_latency.go:356] Created: latency-svc-986tk
  I0127 19:59:29.152788 23 service_latency.go:363] Got endpoints: latency-svc-fdt5t [749.631773ms]
  I0127 19:59:29.163881 23 service_latency.go:356] Created: latency-svc-j5v9q
  I0127 19:59:29.205369 23 service_latency.go:363] Got endpoints: latency-svc-qvpdz [752.34867ms]
  I0127 19:59:29.218547 23 service_latency.go:356] Created: latency-svc-b9vjh
  I0127 19:59:29.253613 23 service_latency.go:363] Got endpoints: latency-svc-v9wnp [747.662574ms]
  I0127 19:59:29.263301 23 service_latency.go:356] Created: latency-svc-dbtsp
  I0127 19:59:29.303500 23 service_latency.go:363] Got endpoints: latency-svc-rwjkv [749.300679ms]
  I0127 19:59:29.315029 23 service_latency.go:356] Created: latency-svc-vrj8l
  I0127 19:59:29.354281 23 service_latency.go:363] Got endpoints: latency-svc-bkf8z [751.676421ms]
  I0127 19:59:29.364411 23 service_latency.go:356] Created: latency-svc-wq7fv
  I0127 19:59:29.404757 23 service_latency.go:363] Got endpoints: latency-svc-z4n8p [751.901664ms]
  I0127 19:59:29.414583 23 service_latency.go:356] Created: latency-svc-4ppgd
  I0127 19:59:29.455426 23 service_latency.go:363] Got endpoints: latency-svc-bq6nn [751.484204ms]
  I0127 19:59:29.466454 23 service_latency.go:356] Created: latency-svc-lnqtn
  I0127 19:59:29.506607 23 service_latency.go:363] Got endpoints: latency-svc-6l5zg [751.356006ms]
  I0127 19:59:29.518744 23 service_latency.go:356] Created: latency-svc-hxr4s
  I0127 19:59:29.553528 23 service_latency.go:363] Got endpoints: latency-svc-sg25z [748.380474ms]
  I0127 19:59:29.563675 23 service_latency.go:356] Created: latency-svc-bt7gl
  I0127 19:59:29.605233 23 service_latency.go:363] Got endpoints: latency-svc-x2jr9 [744.634804ms]
  I0127 19:59:29.617723 23 service_latency.go:356] Created: latency-svc-xp4b9
  I0127 19:59:29.656221 23 service_latency.go:363] Got endpoints: latency-svc-5msch [752.121902ms]
  I0127 19:59:29.666958 23 service_latency.go:356] Created: latency-svc-fsbhj
  I0127 19:59:29.705978 23 service_latency.go:363] Got endpoints: latency-svc-wlttq [749.734121ms]
  I0127 19:59:29.718531 23 service_latency.go:356] Created: latency-svc-drsbk
  I0127 19:59:29.753154 23 service_latency.go:363] Got endpoints: latency-svc-62pnt [747.532173ms]
  I0127 19:59:29.766193 23 service_latency.go:356] Created: latency-svc-s8lmd
  I0127 19:59:29.802791 23 service_latency.go:363] Got endpoints: latency-svc-2wpzw [749.288927ms]
  I0127 19:59:29.813944 23 service_latency.go:356] Created: latency-svc-lj9tj
  I0127 19:59:29.852461 23 service_latency.go:363] Got endpoints: latency-svc-986tk [748.695232ms]
  I0127 19:59:29.862448 23 service_latency.go:356] Created: latency-svc-cms7x
  I0127 19:59:29.905833 23 service_latency.go:363] Got endpoints: latency-svc-j5v9q [753.014788ms]
  I0127 19:59:29.915774 23 service_latency.go:356] Created: latency-svc-k2v8t
  I0127 19:59:29.955758 23 service_latency.go:363] Got endpoints: latency-svc-b9vjh [750.295757ms]
  I0127 19:59:29.967919 23 service_latency.go:356] Created: latency-svc-87t65
  I0127 19:59:30.002762 23 service_latency.go:363] Got endpoints: latency-svc-dbtsp [749.117419ms]
  I0127 19:59:30.012898 23 service_latency.go:356] Created: latency-svc-8dfpk
  I0127 19:59:30.056277 23 service_latency.go:363] Got endpoints: latency-svc-vrj8l [752.706118ms]
  I0127 19:59:30.068778 23 service_latency.go:356] Created: latency-svc-kz2n7
  I0127 19:59:30.102811 23 service_latency.go:363] Got endpoints: latency-svc-wq7fv [748.481852ms]
  I0127 19:59:30.113383 23 service_latency.go:356] Created: latency-svc-p2qd2
  I0127 19:59:30.152803 23 service_latency.go:363] Got endpoints: latency-svc-4ppgd [747.99669ms]
  I0127 19:59:30.164131 23 service_latency.go:356] Created: latency-svc-qpfbs
  I0127 19:59:30.203102 23 service_latency.go:363] Got endpoints: latency-svc-lnqtn [747.635605ms]
  I0127 19:59:30.213815 23 service_latency.go:356] Created: latency-svc-6297n
  I0127 19:59:30.252612 23 service_latency.go:363] Got endpoints: latency-svc-hxr4s [745.960669ms]
  I0127 19:59:30.263843 23 service_latency.go:356] Created: latency-svc-5p82q
  I0127 19:59:30.302828 23 service_latency.go:363] Got endpoints: latency-svc-bt7gl [749.247766ms]
  I0127 19:59:30.315566 23 service_latency.go:356] Created: latency-svc-x4xwr
  I0127 19:59:30.354412 23 service_latency.go:363] Got endpoints: latency-svc-xp4b9 [749.07525ms]
  I0127 19:59:30.364681 23 service_latency.go:356] Created: latency-svc-prsv8
  I0127 19:59:30.402999 23 service_latency.go:363] Got endpoints: latency-svc-fsbhj [746.514197ms]
  I0127 19:59:30.414561 23 service_latency.go:356] Created: latency-svc-csdsr
  I0127 19:59:30.453982 23 service_latency.go:363] Got endpoints: latency-svc-drsbk [747.965205ms]
  I0127 19:59:30.468579 23 service_latency.go:356] Created: latency-svc-59p2f
  I0127 19:59:30.503061 23 service_latency.go:363] Got endpoints: latency-svc-s8lmd [749.838099ms]
  I0127 19:59:30.517642 23 service_latency.go:356] Created: latency-svc-7gft6
  I0127 19:59:30.554195 23 service_latency.go:363] Got endpoints: latency-svc-lj9tj [751.360442ms]
  I0127 19:59:30.564343 23 service_latency.go:356] Created: latency-svc-s42ks
  I0127 19:59:30.605864 23 service_latency.go:363] Got endpoints: latency-svc-cms7x [753.365961ms]
  I0127 19:59:30.619354 23 service_latency.go:356] Created: latency-svc-xfxpk
  I0127 19:59:30.653350 23 service_latency.go:363] Got endpoints: latency-svc-k2v8t [747.478775ms]
  I0127 19:59:30.664328 23 service_latency.go:356] Created: latency-svc-z7fz2
  I0127 19:59:30.705458 23 service_latency.go:363] Got endpoints: latency-svc-87t65 [749.659635ms]
  I0127 19:59:30.715567 23 service_latency.go:356] Created: latency-svc-kbxrt
  I0127 19:59:30.753151 23 service_latency.go:363] Got endpoints: latency-svc-8dfpk [750.335072ms]
  I0127 19:59:30.765922 23 service_latency.go:356] Created: latency-svc-7g82q
  I0127 19:59:30.803223 23 service_latency.go:363] Got endpoints: latency-svc-kz2n7 [746.909523ms]
  I0127 19:59:30.813946 23 service_latency.go:356] Created: latency-svc-vjhfp
  I0127 19:59:30.855789 23 service_latency.go:363] Got endpoints: latency-svc-p2qd2 [752.926877ms]
  I0127 19:59:30.868544 23 service_latency.go:356] Created: latency-svc-jznsz
  I0127 19:59:30.903458 23 service_latency.go:363] Got endpoints: latency-svc-qpfbs [750.613542ms]
  I0127 19:59:30.913360 23 service_latency.go:356] Created: latency-svc-shvbx
  I0127 19:59:30.952839 23 service_latency.go:363] Got endpoints: latency-svc-6297n [749.704158ms]
  I0127 19:59:30.966908 23 service_latency.go:356] Created: latency-svc-r7b7f
  I0127 19:59:31.002999 23 service_latency.go:363] Got endpoints: latency-svc-5p82q [750.315519ms]
  I0127 19:59:31.017308 23 service_latency.go:356] Created: latency-svc-swrgr
  I0127 19:59:31.053254 23 service_latency.go:363] Got endpoints: latency-svc-x4xwr [750.373479ms]
  I0127 19:59:31.063591 23 service_latency.go:356] Created: latency-svc-mb87g
  I0127 19:59:31.104736 23 service_latency.go:363] Got endpoints: latency-svc-prsv8 [750.279184ms]
  I0127 19:59:31.117185 23 service_latency.go:356] Created: latency-svc-8kwhx
  I0127 19:59:31.153613 23 service_latency.go:363] Got endpoints: latency-svc-csdsr [750.532896ms]
  I0127 19:59:31.164237 23 service_latency.go:356] Created: latency-svc-krmn4
  I0127 19:59:31.206028 23 service_latency.go:363] Got endpoints: latency-svc-59p2f [751.968989ms]
  I0127 19:59:31.216096 23 service_latency.go:356] Created: latency-svc-wlvd5
  I0127 19:59:31.258415 23 service_latency.go:363] Got endpoints: latency-svc-7gft6 [755.296713ms]
  I0127 19:59:31.268800 23 service_latency.go:356] Created: latency-svc-cp9r6
  I0127 19:59:31.304875 23 service_latency.go:363] Got endpoints: latency-svc-s42ks [750.630156ms]
  I0127 19:59:31.315528 23 service_latency.go:356] Created: latency-svc-2827q
  I0127 19:59:31.354282 23 service_latency.go:363] Got endpoints: latency-svc-xfxpk [748.369581ms]
  I0127 19:59:31.367858 23 service_latency.go:356] Created: latency-svc-5f6qc
  I0127 19:59:31.404972 23 service_latency.go:363] Got endpoints: latency-svc-z7fz2 [751.582886ms]
  I0127 19:59:31.415491 23 service_latency.go:356] Created: latency-svc-hd9dx
  I0127 19:59:31.452707 23 service_latency.go:363] Got endpoints: latency-svc-kbxrt [747.201509ms]
  I0127 19:59:31.462973 23 service_latency.go:356] Created: latency-svc-6lmv6
  I0127 19:59:31.505143 23 service_latency.go:363] Got endpoints: latency-svc-7g82q [751.939977ms]
  I0127 19:59:31.515336 23 service_latency.go:356] Created: latency-svc-cnq76
  I0127 19:59:31.556338 23 service_latency.go:363] Got endpoints: latency-svc-vjhfp [753.064138ms]
  I0127 19:59:31.568179 23 service_latency.go:356] Created: latency-svc-52t2z
  I0127 19:59:31.603492 23 service_latency.go:363] Got endpoints: latency-svc-jznsz [747.654743ms]
  I0127 19:59:31.613156 23 service_latency.go:356] Created: latency-svc-btbpk
  I0127 19:59:31.656065 23 service_latency.go:363] Got endpoints: latency-svc-shvbx [752.571641ms]
  I0127 19:59:31.668126 23 service_latency.go:356] Created: latency-svc-krh7s
  I0127 19:59:31.703304 23 service_latency.go:363] Got endpoints: latency-svc-r7b7f [750.396241ms]
  I0127 19:59:31.721775 23 service_latency.go:356] Created: latency-svc-q7l9w
  I0127 19:59:31.760176 23 service_latency.go:363] Got endpoints: latency-svc-swrgr [757.112425ms]
  I0127 19:59:31.769860 23 service_latency.go:356] Created: latency-svc-fmwvj
  I0127 19:59:31.804247 23 service_latency.go:363] Got endpoints: latency-svc-mb87g [750.949178ms]
  I0127 19:59:31.814082 23 service_latency.go:356] Created: latency-svc-rmrww
  I0127 19:59:31.853320 23 service_latency.go:363] Got endpoints: latency-svc-8kwhx [748.392755ms]
  I0127 19:59:31.865199 23 service_latency.go:356] Created: latency-svc-b8vrt
  I0127 19:59:31.903293 23 service_latency.go:363] Got endpoints: latency-svc-krmn4 [749.636202ms]
  I0127 19:59:31.914357 23 service_latency.go:356] Created: latency-svc-pmgdq
  I0127 19:59:31.953286 23 service_latency.go:363] Got endpoints: latency-svc-wlvd5 [747.148224ms]
  I0127 19:59:31.963348 23 service_latency.go:356] Created: latency-svc-jhtcx
  I0127 19:59:32.004236 23 service_latency.go:363] Got endpoints: latency-svc-cp9r6 [745.769865ms]
  I0127 19:59:32.016785 23 service_latency.go:356] Created: latency-svc-4s8q7
  I0127 19:59:32.052434 23 service_latency.go:363] Got endpoints: latency-svc-2827q [747.509761ms]
  I0127 19:59:32.110452 23 service_latency.go:363] Got endpoints: latency-svc-5f6qc [756.142157ms]
  I0127 19:59:32.155183 23 service_latency.go:363] Got endpoints: latency-svc-hd9dx [750.168396ms]
  I0127 19:59:32.206096 23 service_latency.go:363] Got endpoints: latency-svc-6lmv6 [753.359672ms]
  I0127 19:59:32.254061 23 service_latency.go:363] Got endpoints: latency-svc-cnq76 [748.871956ms]
  I0127 19:59:32.304769 23 service_latency.go:363] Got endpoints: latency-svc-52t2z [748.383791ms]
  I0127 19:59:32.353764 23 service_latency.go:363] Got endpoints: latency-svc-btbpk [750.188109ms]
  I0127 19:59:32.405272 23 service_latency.go:363] Got endpoints: latency-svc-krh7s [749.173159ms]
  I0127 19:59:32.453389 23 service_latency.go:363] Got endpoints: latency-svc-q7l9w [750.031653ms]
  I0127 19:59:32.505520 23 service_latency.go:363] Got endpoints: latency-svc-fmwvj [745.306545ms]
  I0127 19:59:32.553248 23 service_latency.go:363] Got endpoints: latency-svc-rmrww [748.959177ms]
  I0127 19:59:32.606508 23 service_latency.go:363] Got endpoints: latency-svc-b8vrt [753.142714ms]
  I0127 19:59:32.653145 23 service_latency.go:363] Got endpoints: latency-svc-pmgdq [749.813092ms]
  I0127 19:59:32.707299 23 service_latency.go:363] Got endpoints: latency-svc-jhtcx [753.942046ms]
  I0127 19:59:32.753891 23 service_latency.go:363] Got endpoints: latency-svc-4s8q7 [749.610637ms]
  I0127 19:59:32.754020 23 service_latency.go:114] Latencies: [20.8176ms 31.881567ms 39.890426ms 51.434011ms 60.809879ms 72.860158ms 81.991649ms 95.196256ms 105.160437ms 113.486939ms 120.900565ms 131.039876ms 141.925073ms 144.809257ms 144.994939ms 145.361759ms 145.791019ms 146.363651ms 146.667227ms 147.1189ms 147.785966ms 155.169036ms 168.540947ms 172.0387ms 173.749569ms 174.520453ms 174.771185ms 175.776799ms 177.881397ms 178.100937ms 178.420529ms 179.291058ms 180.183253ms 180.300133ms 180.919778ms 181.399128ms 182.705597ms 191.550133ms 226.625277ms 267.391426ms 299.753974ms 339.512973ms 375.4366ms 417.255584ms 458.457446ms 501.532085ms 540.400907ms 580.904333ms 620.553138ms 664.027555ms 701.059332ms 742.392523ms 744.634804ms 745.306545ms 745.34128ms 745.587514ms 745.769865ms 745.960669ms 746.417163ms 746.514197ms 746.735246ms 746.819404ms 746.882712ms 746.895408ms 746.904702ms 746.909523ms 746.918182ms 747.090497ms 747.148224ms 747.201509ms 747.478775ms 747.509761ms 747.532173ms 747.562304ms 747.635605ms 747.654743ms 747.662574ms 747.743392ms 747.780098ms 747.941144ms 747.965205ms 747.99669ms 748.012712ms 748.092616ms 748.135937ms 748.168422ms 748.300731ms 748.369581ms 748.380474ms 748.383791ms 748.392755ms 748.481852ms 748.617006ms 748.695232ms 748.705794ms 748.844595ms 748.871956ms 748.923014ms 748.959177ms 748.965939ms 749.058811ms 749.07525ms 749.117419ms 749.173159ms 749.17924ms 749.197914ms 749.215888ms 749.224379ms 749.247766ms 749.288927ms 749.300679ms 749.384205ms 749.394821ms 749.521616ms 749.522243ms 749.564712ms 749.610637ms 749.631773ms 749.636202ms 749.659635ms 749.704158ms 749.721924ms 749.734121ms 749.762403ms 749.764095ms 749.796335ms 749.813092ms 749.838099ms 749.977599ms 750.00209ms 750.031653ms 750.168396ms 750.188109ms 750.200192ms 750.221777ms 750.279184ms 750.295757ms 750.315519ms 750.335072ms 750.357611ms 750.373479ms 750.396241ms 750.416546ms 750.529677ms 750.532896ms 750.548195ms 750.582659ms 750.593005ms 750.613542ms 750.630156ms 750.697894ms 750.793116ms 750.844041ms 750.949178ms 750.993894ms 751.114505ms 751.129706ms 751.174733ms 751.229865ms 751.299611ms 751.356006ms 751.360442ms 751.484204ms 751.545585ms 751.567735ms 751.582886ms 751.635016ms 751.676421ms 751.901664ms 751.939977ms 751.968989ms 752.018028ms 752.029121ms 752.121902ms 752.189505ms 752.222328ms 752.261592ms 752.292442ms 752.34867ms 752.374086ms 752.490294ms 752.557157ms 752.571641ms 752.657955ms 752.706118ms 752.926877ms 753.014788ms 753.056849ms 753.064138ms 753.135572ms 753.142714ms 753.359672ms 753.365961ms 753.481659ms 753.933998ms 753.942046ms 754.007942ms 755.296713ms 756.142157ms 757.112425ms]
  I0127 19:59:32.754064 23 service_latency.go:118] 50 %ile: 749.058811ms
  I0127 19:59:32.754090 23 service_latency.go:119] 90 %ile: 752.490294ms
  I0127 19:59:32.754100 23 service_latency.go:120] 99 %ile: 756.142157ms
  I0127 19:59:32.754116 23 service_latency.go:121] Total sample count: 200
  I0127 19:59:32.754227 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9702" for this suite. @ 01/27/25 19:59:32.756
• [9.746 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/27/25 19:59:32.762
  I0127 19:59:32.762438 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/27/25 19:59:32.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:32.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:32.773
  STEP: mirroring a new custom Endpoint @ 01/27/25 19:59:32.787
  I0127 19:59:32.792516 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/27/25 19:59:34.796
  STEP: mirroring deletion of a custom Endpoint @ 01/27/25 19:59:34.806
  I0127 19:59:34.813195 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8718" for this suite. @ 01/27/25 19:59:34.815
• [2.056 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/27/25 19:59:34.818
  I0127 19:59:34.818920 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 19:59:34.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:34.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:34.831
  STEP: Creating projection with secret that has name projected-secret-test-map-bf6dfa7b-b947-415a-9c28-d19a23613939 @ 01/27/25 19:59:34.833
  STEP: Creating a pod to test consume secrets @ 01/27/25 19:59:34.836
  STEP: Saw pod success @ 01/27/25 19:59:36.849
  I0127 19:59:36.851120 23 output.go:207] Trying to get logs from node worker-0 pod pod-projected-secrets-1d48b0d4-ad91-4fa5-9ccb-f99453562b5e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 19:59:36.855
  I0127 19:59:36.866412 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9975" for this suite. @ 01/27/25 19:59:36.868
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/27/25 19:59:36.872
  I0127 19:59:36.872831 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/27/25 19:59:36.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:36.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:36.885
  STEP: create the container to handle the HTTPGet hook request. @ 01/27/25 19:59:36.969
  STEP: create the pod with lifecycle hook @ 01/27/25 19:59:38.985
  STEP: check poststart hook @ 01/27/25 19:59:41
  STEP: delete the pod with lifecycle hook @ 01/27/25 19:59:41.005
  I0127 19:59:43.023472 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4358" for this suite. @ 01/27/25 19:59:43.026
• [6.158 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/27/25 19:59:43.03
  I0127 19:59:43.030450 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pod-network-test @ 01/27/25 19:59:43.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:43.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:43.043
  STEP: Performing setup for networking test in namespace pod-network-test-8786 @ 01/27/25 19:59:43.046
  STEP: creating a selector @ 01/27/25 19:59:43.046
  STEP: Creating the service pods in kubernetes @ 01/27/25 19:59:43.046
  I0127 19:59:43.046132 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/27/25 19:59:55.166
  I0127 19:59:57.186629 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0127 19:59:57.186664 23 utils.go:496] Going to poll 10.244.1.170 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0127 19:59:57.188195 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.170 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8786 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:59:57.188220 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:59:57.188254 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8786/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.170+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0127 19:59:58.231007 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0127 19:59:58.231063 23 utils.go:496] Going to poll 10.244.0.47 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0127 19:59:58.233181 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.47 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8786 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 19:59:58.233209 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 19:59:58.233257 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-8786/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.47+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0127 19:59:59.278394 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0127 19:59:59.278538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8786" for this suite. @ 01/27/25 19:59:59.281
• [16.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/27/25 19:59:59.287
  I0127 19:59:59.287258 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename proxy @ 01/27/25 19:59:59.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 19:59:59.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 19:59:59.298
  STEP: starting an echo server on multiple ports @ 01/27/25 19:59:59.309
  STEP: creating replication controller proxy-service-zvccb in namespace proxy-3593 @ 01/27/25 19:59:59.31
  I0127 19:59:59.316841      23 runners.go:193] Created replication controller with name: proxy-service-zvccb, namespace: proxy-3593, replica count: 1
  I0127 20:00:00.367325      23 runners.go:193] proxy-service-zvccb Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0127 20:00:01.368080      23 runners.go:193] proxy-service-zvccb Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 20:00:01.370939 23 proxy.go:230] setup took 2.070445195s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/27/25 20:00:01.37
  I0127 20:00:01.382566 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 11.242564ms)
  I0127 20:00:01.382664 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 11.502481ms)
  I0127 20:00:01.382718 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 11.496026ms)
  I0127 20:00:01.382779 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 11.494347ms)
  I0127 20:00:01.383290 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 12.108231ms)
  I0127 20:00:01.383342 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 12.154726ms)
  I0127 20:00:01.388672 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 17.291789ms)
  I0127 20:00:01.388708 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 17.289481ms)
  I0127 20:00:01.389789 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 18.442421ms)
  I0127 20:00:01.389803 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 18.781724ms)
  I0127 20:00:01.389768 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 18.383431ms)
  I0127 20:00:01.391806 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 20.718707ms)
  I0127 20:00:01.391898 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 20.614202ms)
  I0127 20:00:01.392088 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 21.026482ms)
  I0127 20:00:01.392384 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 21.138467ms)
  I0127 20:00:01.394339 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 23.310374ms)
  I0127 20:00:01.401809 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 6.984102ms)
  I0127 20:00:01.401839 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 7.397216ms)
  I0127 20:00:01.404237 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 9.668944ms)
  I0127 20:00:01.404296 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 9.550396ms)
  I0127 20:00:01.404434 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 9.813503ms)
  I0127 20:00:01.404501 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 9.802481ms)
  I0127 20:00:01.404608 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 9.840781ms)
  I0127 20:00:01.404749 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 10.162222ms)
  I0127 20:00:01.404774 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 10.065224ms)
  I0127 20:00:01.404790 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 10.171883ms)
  I0127 20:00:01.404887 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 10.204799ms)
  I0127 20:00:01.404907 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 10.258935ms)
  I0127 20:00:01.405726 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 11.057219ms)
  I0127 20:00:01.406216 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 11.445792ms)
  I0127 20:00:01.406592 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 11.86368ms)
  I0127 20:00:01.406691 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 12.1785ms)
  I0127 20:00:01.410779 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 4.042372ms)
  I0127 20:00:01.413657 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 6.62828ms)
  I0127 20:00:01.414058 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 7.067515ms)
  I0127 20:00:01.414397 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 7.514987ms)
  I0127 20:00:01.414402 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 7.480496ms)
  I0127 20:00:01.414407 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 7.446629ms)
  I0127 20:00:01.414479 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 7.444371ms)
  I0127 20:00:01.414482 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 7.637662ms)
  I0127 20:00:01.414581 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 7.764044ms)
  I0127 20:00:01.415854 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 8.937505ms)
  I0127 20:00:01.415891 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 9.144348ms)
  I0127 20:00:01.416316 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 9.559828ms)
  I0127 20:00:01.416354 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 9.478252ms)
  I0127 20:00:01.416379 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 9.420067ms)
  I0127 20:00:01.416745 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 9.938299ms)
  I0127 20:00:01.417034 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 10.036652ms)
  I0127 20:00:01.424506 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 7.218721ms)
  I0127 20:00:01.424508 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 7.424823ms)
  I0127 20:00:01.424651 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 7.069159ms)
  I0127 20:00:01.424905 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 7.588061ms)
  I0127 20:00:01.425086 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 7.536645ms)
  I0127 20:00:01.425123 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 7.92439ms)
  I0127 20:00:01.425771 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 8.300579ms)
  I0127 20:00:01.425808 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 8.056346ms)
  I0127 20:00:01.426534 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 9.139712ms)
  I0127 20:00:01.426588 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 9.240838ms)
  I0127 20:00:01.426596 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 8.929753ms)
  I0127 20:00:01.426611 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 9.180396ms)
  I0127 20:00:01.426616 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 8.913992ms)
  I0127 20:00:01.426634 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 9.119697ms)
  I0127 20:00:01.427778 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 10.54333ms)
  I0127 20:00:01.430540 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 12.911635ms)
  I0127 20:00:01.439204 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 8.468935ms)
  I0127 20:00:01.444201 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 13.398353ms)
  I0127 20:00:01.444767 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 13.929855ms)
  I0127 20:00:01.445986 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 15.148061ms)
  I0127 20:00:01.446036 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 15.257482ms)
  I0127 20:00:01.446028 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 15.435728ms)
  I0127 20:00:01.446076 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 15.336789ms)
  I0127 20:00:01.446906 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 16.081476ms)
  I0127 20:00:01.447032 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 16.24716ms)
  I0127 20:00:01.447088 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 16.37115ms)
  I0127 20:00:01.447382 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 16.613517ms)
  I0127 20:00:01.447441 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 16.746065ms)
  I0127 20:00:01.448054 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 17.438995ms)
  I0127 20:00:01.448158 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 17.570225ms)
  I0127 20:00:01.449403 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 18.533542ms)
  I0127 20:00:01.449403 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 18.715761ms)
  I0127 20:00:01.458655 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 9.024487ms)
  I0127 20:00:01.460376 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 10.902915ms)
  I0127 20:00:01.460411 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 10.632145ms)
  I0127 20:00:01.460647 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 11.053276ms)
  I0127 20:00:01.460702 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 11.158318ms)
  I0127 20:00:01.460801 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 11.338325ms)
  I0127 20:00:01.464314 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 14.637552ms)
  I0127 20:00:01.464364 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 14.722955ms)
  I0127 20:00:01.464541 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 14.790138ms)
  I0127 20:00:01.464642 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 15.082811ms)
  I0127 20:00:01.464659 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 15.047545ms)
  I0127 20:00:01.464696 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 15.005699ms)
  I0127 20:00:01.464707 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 15.129387ms)
  I0127 20:00:01.465612 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 15.829221ms)
  I0127 20:00:01.465619 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 16.137216ms)
  I0127 20:00:01.466719 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 17.226766ms)
  I0127 20:00:01.473583 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 6.479441ms)
  I0127 20:00:01.474211 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.241639ms)
  I0127 20:00:01.474357 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.547966ms)
  I0127 20:00:01.476672 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 8.45152ms)
  I0127 20:00:01.477370 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 10.157215ms)
  I0127 20:00:01.477492 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 10.148604ms)
  I0127 20:00:01.478015 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 9.870985ms)
  I0127 20:00:01.478057 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 10.401305ms)
  I0127 20:00:01.478127 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 10.569565ms)
  I0127 20:00:01.481798 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 13.891399ms)
  I0127 20:00:01.481854 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 13.543837ms)
  I0127 20:00:01.481938 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 14.505814ms)
  I0127 20:00:01.482239 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 14.20792ms)
  I0127 20:00:01.483077 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 14.608859ms)
  I0127 20:00:01.483100 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 14.708172ms)
  I0127 20:00:01.483479 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 15.73696ms)
  I0127 20:00:01.488956 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 5.428151ms)
  I0127 20:00:01.492257 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 8.677906ms)
  I0127 20:00:01.492264 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 8.674139ms)
  I0127 20:00:01.494217 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 10.67221ms)
  I0127 20:00:01.494521 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 10.768443ms)
  I0127 20:00:01.494870 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 11.347673ms)
  I0127 20:00:01.496694 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 13.065913ms)
  I0127 20:00:01.497114 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 13.348512ms)
  I0127 20:00:01.497483 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 13.893789ms)
  I0127 20:00:01.497486 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 13.790499ms)
  I0127 20:00:01.498041 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 14.419513ms)
  I0127 20:00:01.498033 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 14.359367ms)
  I0127 20:00:01.498201 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 14.408774ms)
  I0127 20:00:01.498572 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 14.847109ms)
  I0127 20:00:01.498553 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 14.884419ms)
  I0127 20:00:01.499057 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 15.427509ms)
  I0127 20:00:01.509121 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 9.817393ms)
  I0127 20:00:01.509486 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 10.380089ms)
  I0127 20:00:01.509559 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 10.297166ms)
  I0127 20:00:01.511076 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 11.614705ms)
  I0127 20:00:01.511135 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 11.5493ms)
  I0127 20:00:01.511257 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 12.143839ms)
  I0127 20:00:01.511375 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 11.840486ms)
  I0127 20:00:01.511471 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 12.284921ms)
  I0127 20:00:01.513260 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 13.842383ms)
  I0127 20:00:01.513504 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 14.065229ms)
  I0127 20:00:01.513768 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 14.204613ms)
  I0127 20:00:01.513808 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 14.191683ms)
  I0127 20:00:01.513818 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 14.330577ms)
  I0127 20:00:01.514079 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 14.695312ms)
  I0127 20:00:01.514369 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 14.860157ms)
  I0127 20:00:01.518377 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 19.025811ms)
  I0127 20:00:01.524425 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 5.936028ms)
  I0127 20:00:01.525729 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 7.158352ms)
  I0127 20:00:01.525729 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.298329ms)
  I0127 20:00:01.527600 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 9.057177ms)
  I0127 20:00:01.530993 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 12.276219ms)
  I0127 20:00:01.531208 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 12.603075ms)
  I0127 20:00:01.531208 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 12.780467ms)
  I0127 20:00:01.532207 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 13.512833ms)
  I0127 20:00:01.532212 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 13.555318ms)
  I0127 20:00:01.532275 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 13.539827ms)
  I0127 20:00:01.532308 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 13.698126ms)
  I0127 20:00:01.532494 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 13.804532ms)
  I0127 20:00:01.535522 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 16.872216ms)
  I0127 20:00:01.536328 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 17.73362ms)
  I0127 20:00:01.536434 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 17.906576ms)
  I0127 20:00:01.536625 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 17.964978ms)
  I0127 20:00:01.541977 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 5.300577ms)
  I0127 20:00:01.543304 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 6.497397ms)
  I0127 20:00:01.543984 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 6.7951ms)
  I0127 20:00:01.543995 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 6.725959ms)
  I0127 20:00:01.546240 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 8.673883ms)
  I0127 20:00:01.546674 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 9.333027ms)
  I0127 20:00:01.547763 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 10.866695ms)
  I0127 20:00:01.548168 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 11.200105ms)
  I0127 20:00:01.548461 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 10.725855ms)
  I0127 20:00:01.548766 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 11.684872ms)
  I0127 20:00:01.548805 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 11.400344ms)
  I0127 20:00:01.549679 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 11.876111ms)
  I0127 20:00:01.550158 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 12.476234ms)
  I0127 20:00:01.550513 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 12.650213ms)
  I0127 20:00:01.550513 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 12.888582ms)
  I0127 20:00:01.550746 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 13.254735ms)
  I0127 20:00:01.557613 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 6.782334ms)
  I0127 20:00:01.559206 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 8.236299ms)
  I0127 20:00:01.560401 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 9.510194ms)
  I0127 20:00:01.560473 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 9.50861ms)
  I0127 20:00:01.560538 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 9.710939ms)
  I0127 20:00:01.561177 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 10.257116ms)
  I0127 20:00:01.561306 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 10.504432ms)
  I0127 20:00:01.561340 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 10.321696ms)
  I0127 20:00:01.561595 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 10.590082ms)
  I0127 20:00:01.562687 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 11.819399ms)
  I0127 20:00:01.562968 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 12.130615ms)
  I0127 20:00:01.563403 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 12.514995ms)
  I0127 20:00:01.563759 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 12.831949ms)
  I0127 20:00:01.563943 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 12.847639ms)
  I0127 20:00:01.565541 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 14.522374ms)
  I0127 20:00:01.565632 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 14.562772ms)
  I0127 20:00:01.575273 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 9.56406ms)
  I0127 20:00:01.575527 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 9.619396ms)
  I0127 20:00:01.575529 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 9.802902ms)
  I0127 20:00:01.575588 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 9.887186ms)
  I0127 20:00:01.576779 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 10.835143ms)
  I0127 20:00:01.576984 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 11.216344ms)
  I0127 20:00:01.577096 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 11.295887ms)
  I0127 20:00:01.577112 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 11.091043ms)
  I0127 20:00:01.577132 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 11.30123ms)
  I0127 20:00:01.578165 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 12.23063ms)
  I0127 20:00:01.578355 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 12.243871ms)
  I0127 20:00:01.579093 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 13.094185ms)
  I0127 20:00:01.579145 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 13.061343ms)
  I0127 20:00:01.579150 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 13.38111ms)
  I0127 20:00:01.579171 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 13.329073ms)
  I0127 20:00:01.579469 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 13.322521ms)
  I0127 20:00:01.586324 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 5.836369ms)
  I0127 20:00:01.586350 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 6.750542ms)
  I0127 20:00:01.587657 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 6.578589ms)
  I0127 20:00:01.587707 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 7.143867ms)
  I0127 20:00:01.588922 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 8.703802ms)
  I0127 20:00:01.588984 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.732829ms)
  I0127 20:00:01.589561 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 9.525012ms)
  I0127 20:00:01.590655 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 9.943464ms)
  I0127 20:00:01.590762 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 9.964905ms)
  I0127 20:00:01.590914 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 10.420067ms)
  I0127 20:00:01.591307 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 10.140876ms)
  I0127 20:00:01.591360 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 10.467345ms)
  I0127 20:00:01.591385 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 11.074631ms)
  I0127 20:00:01.592307 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 11.647869ms)
  I0127 20:00:01.592312 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 11.34748ms)
  I0127 20:00:01.593016 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 13.140622ms)
  I0127 20:00:01.598056 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 4.950495ms)
  I0127 20:00:01.598422 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 5.240582ms)
  I0127 20:00:01.598884 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 5.681906ms)
  I0127 20:00:01.602021 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 8.859276ms)
  I0127 20:00:01.602123 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 8.779949ms)
  I0127 20:00:01.602447 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 9.102371ms)
  I0127 20:00:01.602643 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 9.310885ms)
  I0127 20:00:01.602770 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 9.505007ms)
  I0127 20:00:01.602806 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 9.431265ms)
  I0127 20:00:01.602804 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 9.505799ms)
  I0127 20:00:01.604916 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 11.538185ms)
  I0127 20:00:01.605021 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 11.757623ms)
  I0127 20:00:01.605033 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 11.952735ms)
  I0127 20:00:01.605614 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 12.399085ms)
  I0127 20:00:01.605651 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 12.354529ms)
  I0127 20:00:01.607163 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 13.884568ms)
  I0127 20:00:01.614397 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 6.959815ms)
  I0127 20:00:01.615449 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 8.241313ms)
  I0127 20:00:01.615921 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 8.61898ms)
  I0127 20:00:01.616021 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 8.656131ms)
  I0127 20:00:01.616079 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 8.584849ms)
  I0127 20:00:01.616226 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 8.688031ms)
  I0127 20:00:01.616253 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 8.919186ms)
  I0127 20:00:01.616325 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 8.923256ms)
  I0127 20:00:01.616524 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 9.280358ms)
  I0127 20:00:01.616555 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 9.340894ms)
  I0127 20:00:01.617433 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 10.059772ms)
  I0127 20:00:01.617492 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 10.158245ms)
  I0127 20:00:01.617767 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 10.298827ms)
  I0127 20:00:01.618169 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 10.715048ms)
  I0127 20:00:01.618640 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 11.219692ms)
  I0127 20:00:01.618826 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 11.526429ms)
  I0127 20:00:01.626346 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.870713ms)
  I0127 20:00:01.626351 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 7.204352ms)
  I0127 20:00:01.626392 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.851551ms)
  I0127 20:00:01.626416 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 6.784212ms)
  I0127 20:00:01.626443 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 6.732064ms)
  I0127 20:00:01.626472 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 6.618171ms)
  I0127 20:00:01.626682 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.814968ms)
  I0127 20:00:01.626710 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 7.740868ms)
  I0127 20:00:01.626717 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 6.791035ms)
  I0127 20:00:01.626759 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.688101ms)
  I0127 20:00:01.627641 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 8.330796ms)
  I0127 20:00:01.627646 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 8.422358ms)
  I0127 20:00:01.627652 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 7.645467ms)
  I0127 20:00:01.627703 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 7.929721ms)
  I0127 20:00:01.628172 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 8.779613ms)
  I0127 20:00:01.628176 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 8.085723ms)
  I0127 20:00:01.632907 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 4.679433ms)
  I0127 20:00:01.632932 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 4.700199ms)
  I0127 20:00:01.634860 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 6.438705ms)
  I0127 20:00:01.635413 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 6.955809ms)
  I0127 20:00:01.635428 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.055925ms)
  I0127 20:00:01.635450 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 6.957953ms)
  I0127 20:00:01.635454 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.961419ms)
  I0127 20:00:01.635471 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.141888ms)
  I0127 20:00:01.635453 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 7.216246ms)
  I0127 20:00:01.636088 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 7.793012ms)
  I0127 20:00:01.636772 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 8.388769ms)
  I0127 20:00:01.637245 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 8.91113ms)
  I0127 20:00:01.637544 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 9.137833ms)
  I0127 20:00:01.637579 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 9.123391ms)
  I0127 20:00:01.637565 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 9.262934ms)
  I0127 20:00:01.637582 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 9.05688ms)
  I0127 20:00:01.642026 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 4.394691ms)
  I0127 20:00:01.644057 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.292012ms)
  I0127 20:00:01.644152 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 6.297879ms)
  I0127 20:00:01.644830 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 7.003273ms)
  I0127 20:00:01.644835 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.958627ms)
  I0127 20:00:01.644853 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 6.976686ms)
  I0127 20:00:01.645365 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 7.589999ms)
  I0127 20:00:01.645392 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 7.4809ms)
  I0127 20:00:01.645431 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 7.518217ms)
  I0127 20:00:01.646011 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 8.08717ms)
  I0127 20:00:01.646074 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 8.254631ms)
  I0127 20:00:01.646884 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 9.158607ms)
  I0127 20:00:01.647382 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 9.589534ms)
  I0127 20:00:01.647377 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 9.488297ms)
  I0127 20:00:01.647492 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 9.74236ms)
  I0127 20:00:01.647814 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 9.987164ms)
  I0127 20:00:01.651600 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 3.727329ms)
  I0127 20:00:01.653089 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:443/proxy/tlsrewritem... (200; 5.142987ms)
  I0127 20:00:01.653112 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:160/proxy/: foo (200; 5.21085ms)
  I0127 20:00:01.655013 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.912776ms)
  I0127 20:00:01.655065 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:162/proxy/: bar (200; 6.768629ms)
  I0127 20:00:01.655174 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">test<... (200; 6.906188ms)
  I0127 20:00:01.655210 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:462/proxy/: tls qux (200; 7.034833ms)
  I0127 20:00:01.655847 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/http:proxy-service-zvccb-c9n8q:1080/proxy/rewriteme">... (200; 7.771786ms)
  I0127 20:00:01.655926 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname1/proxy/: foo (200; 7.954263ms)
  I0127 20:00:01.655957 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/: <a href="/api/v1/namespaces/proxy-3593/pods/proxy-service-zvccb-c9n8q/proxy/rewriteme">test</a> (200; 7.939313ms)
  I0127 20:00:01.656493 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/pods/https:proxy-service-zvccb-c9n8q:460/proxy/: tls baz (200; 8.365871ms)
  I0127 20:00:01.656730 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/services/proxy-service-zvccb:portname2/proxy/: bar (200; 8.516585ms)
  I0127 20:00:01.656790 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname2/proxy/: bar (200; 8.795022ms)
  I0127 20:00:01.656799 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname1/proxy/: tls baz (200; 8.471839ms)
  I0127 20:00:01.657944 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/services/http:proxy-service-zvccb:portname1/proxy/: foo (200; 9.699586ms)
  I0127 20:00:01.658342 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3593/services/https:proxy-service-zvccb:tlsportname2/proxy/: tls qux (200; 10.486839ms)
  STEP: deleting ReplicationController proxy-service-zvccb in namespace proxy-3593, will wait for the garbage collector to delete the pods @ 01/27/25 20:00:01.658
  I0127 20:00:01.715278 23 resources.go:139] Deleting ReplicationController proxy-service-zvccb took: 4.806159ms
  I0127 20:00:01.816240 23 resources.go:163] Terminating ReplicationController proxy-service-zvccb pods took: 100.958195ms
  I0127 20:00:03.916699 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3593" for this suite. @ 01/27/25 20:00:03.92
• [4.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/27/25 20:00:03.924
  I0127 20:00:03.924501 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename watch @ 01/27/25 20:00:03.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:03.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:03.937
  STEP: creating a new configmap @ 01/27/25 20:00:03.939
  STEP: modifying the configmap once @ 01/27/25 20:00:03.942
  STEP: modifying the configmap a second time @ 01/27/25 20:00:03.947
  STEP: deleting the configmap @ 01/27/25 20:00:03.952
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/27/25 20:00:03.955
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/27/25 20:00:03.956
  I0127 20:00:03.956255 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5280  5f0e265b-656a-4ef5-9306-1a94da272b09 35166 0 2025-01-27 20:00:03 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-27 20:00:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 20:00:03.956400 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5280  5f0e265b-656a-4ef5-9306-1a94da272b09 35167 0 2025-01-27 20:00:03 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-27 20:00:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 20:00:03.956495 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5280" for this suite. @ 01/27/25 20:00:04.019
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/27/25 20:00:04.024
  I0127 20:00:04.024056 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 20:00:04.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:04.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:04.036
  STEP: Creating the pod @ 01/27/25 20:00:04.038
  I0127 20:00:06.575147 23 pod_client.go:173] Successfully updated pod "annotationupdateab81c0a4-661b-429c-9418-ac66a3aad790"
  I0127 20:00:08.586512 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9945" for this suite. @ 01/27/25 20:00:08.589
• [4.571 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 01/27/25 20:00:08.595
  I0127 20:00:08.595236 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename dns @ 01/27/25 20:00:08.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:08.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:08.607
  STEP: Creating a test headless service @ 01/27/25 20:00:08.609
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 15.137.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.137.15_udp@PTR;check="$$(dig +tcp +noall +answer +search 15.137.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.137.15_tcp@PTR;sleep 1; done
   @ 01/27/25 20:00:08.625
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9798.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9798.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9798.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9798.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 15.137.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.137.15_udp@PTR;check="$$(dig +tcp +noall +answer +search 15.137.105.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.105.137.15_tcp@PTR;sleep 1; done
   @ 01/27/25 20:00:08.625
  STEP: creating a pod to probe DNS @ 01/27/25 20:00:08.625
  STEP: submitting the pod to kubernetes @ 01/27/25 20:00:08.626
  STEP: retrieving the pod @ 01/27/25 20:00:10.64
  STEP: looking for the results for each expected name from probers @ 01/27/25 20:00:10.642
  I0127 20:00:10.647850 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:10.650487 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:10.655628 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:10.668024 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:10.670435 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:10.675236 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:10.685281 23 dns_common.go:506] Lookups using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 failed for: [agnhost_udp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local jessie_udp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9798.svc.cluster.local]

  I0127 20:00:10.689543 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 20:00:10.693155 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 20:00:10.696739 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 20:00:15.648567 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:15.651420 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:15.669482 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:15.672232 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:15.686761 23 dns_common.go:506] Lookups using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 failed for: [agnhost_udp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local jessie_udp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@dns-test-service.dns-9798.svc.cluster.local]

  I0127 20:00:15.691769 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 20:00:15.695540 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 20:00:15.699502 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 20:00:20.649246 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:20.652122 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:20.669945 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:20.672358 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:20.686580 23 dns_common.go:506] Lookups using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 failed for: [agnhost_udp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local jessie_udp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@dns-test-service.dns-9798.svc.cluster.local]

  I0127 20:00:20.690576 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 20:00:20.694064 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 20:00:20.697525 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 20:00:25.649363 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:25.652228 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:25.669632 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:25.672005 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:25.685896 23 dns_common.go:506] Lookups using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 failed for: [agnhost_udp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local jessie_udp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@dns-test-service.dns-9798.svc.cluster.local]

  I0127 20:00:25.690015 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 20:00:25.693669 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 20:00:25.697059 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 20:00:30.648659 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:30.651677 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:30.669988 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:30.672537 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:30.686817 23 dns_common.go:506] Lookups using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 failed for: [agnhost_udp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local jessie_udp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@dns-test-service.dns-9798.svc.cluster.local]

  I0127 20:00:30.690695 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 20:00:30.694224 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 20:00:30.697796 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 20:00:35.648394 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:35.651430 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:35.669707 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:35.672289 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9798.svc.cluster.local from pod dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374: the server could not find the requested resource (get pods dns-test-d810b830-c61b-4b11-931c-c6d79978e374)
  I0127 20:00:35.686889 23 dns_common.go:506] Lookups using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 failed for: [agnhost_udp@dns-test-service.dns-9798.svc.cluster.local agnhost_tcp@dns-test-service.dns-9798.svc.cluster.local jessie_udp@dns-test-service.dns-9798.svc.cluster.local jessie_tcp@dns-test-service.dns-9798.svc.cluster.local]

  I0127 20:00:35.691064 23 dns_common.go:514] Pod client logs for webserver: 
  I0127 20:00:35.695108 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0127 20:00:35.698701 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0127 20:00:40.687056 23 dns_common.go:546] DNS probes using dns-9798/dns-test-d810b830-c61b-4b11-931c-c6d79978e374 succeeded

  STEP: deleting the pod @ 01/27/25 20:00:40.687
  STEP: deleting the test service @ 01/27/25 20:00:40.696
  STEP: deleting the test headless service @ 01/27/25 20:00:40.717
  I0127 20:00:40.725456 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9798" for this suite. @ 01/27/25 20:00:40.727
• [32.136 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/27/25 20:00:40.731
  I0127 20:00:40.731760 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 20:00:40.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:40.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:40.741
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 20:00:40.744
  STEP: Saw pod success @ 01/27/25 20:00:44.757
  I0127 20:00:44.759692 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-03e42c21-0943-4b09-a941-9ad449583bf6 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 20:00:44.764
  I0127 20:00:44.774948 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3095" for this suite. @ 01/27/25 20:00:44.777
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/27/25 20:00:44.783
  I0127 20:00:44.783417 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/27/25 20:00:44.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:44.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:44.794
  I0127 20:00:44.799530 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7075" for this suite. @ 01/27/25 20:00:44.878
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/27/25 20:00:44.884
  I0127 20:00:44.884706 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 20:00:44.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:44.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:44.896
  STEP: creating a secret @ 01/27/25 20:00:44.898
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/27/25 20:00:44.901
  STEP: patching the secret @ 01/27/25 20:00:44.903
  STEP: deleting the secret using a LabelSelector @ 01/27/25 20:00:44.919
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/27/25 20:00:44.924
  I0127 20:00:44.926068 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1368" for this suite. @ 01/27/25 20:00:44.979
• [0.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/27/25 20:00:44.983
  I0127 20:00:44.983420 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename namespaces @ 01/27/25 20:00:44.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:44.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:44.999
  STEP: Read namespace status @ 01/27/25 20:00:45.001
  I0127 20:00:45.003673 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/27/25 20:00:45.003
  I0127 20:00:45.007297 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/27/25 20:00:45.007
  I0127 20:00:45.012884 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0127 20:00:45.013008 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8624" for this suite. @ 01/27/25 20:00:45.081
• [0.104 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/27/25 20:00:45.087
  I0127 20:00:45.087859 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 20:00:45.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:45.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:45.098
  STEP: Setting up server cert @ 01/27/25 20:00:45.197
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 20:00:45.877
  STEP: Deploying the webhook pod @ 01/27/25 20:00:45.958
  STEP: Wait for the deployment to be ready @ 01/27/25 20:00:45.968
  I0127 20:00:45.974720 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 20:00:47.981
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 20:00:47.994
  I0127 20:00:48.994762 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/27/25 20:00:48.999
  I0127 20:00:49.025604 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4251" for this suite. @ 01/27/25 20:00:49.028
  STEP: Destroying namespace "webhook-markers-9567" for this suite. @ 01/27/25 20:00:49.038
• [3.954 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/27/25 20:00:49.042
  I0127 20:00:49.042326 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 20:00:49.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:49.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:49.054
  I0127 20:00:49.056579 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I0127 20:00:49.065457 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/27/25 20:00:51.074
  STEP: updating a scale subresource @ 01/27/25 20:00:51.075
  STEP: verifying the deployment Spec.Replicas was modified @ 01/27/25 20:00:51.079
  STEP: Patch a scale subresource @ 01/27/25 20:00:51.081
  I0127 20:00:51.099511 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b1e0485-465f-49f2-b9dd-9fd1ac24ff50",
      ResourceVersion: (string) (len=5) "35536",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873604849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 20:00:51.104406 23 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3d587e06-44bb-45bf-9348-7a241eb686d1",
      ResourceVersion: (string) (len=5) "35543",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873604849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "6b1e0485-465f-49f2-b9dd-9fd1ac24ff50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 62 31 65 30 34  38 35 2d 34 36 35 66 2d  |\"6b1e0485-465f-|
              00000120  34 39 66 32 2d 62 39 64  64 2d 39 66 64 31 61 63  |49f2-b9dd-9fd1ac|
              00000130  32 34 66 66 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |24ff50\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 20:00:51.110876 23 deployment.go:68] Pod "test-new-deployment-685b768f58-klpkt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-klpkt",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "077694d3-494a-4366-a004-d09480746857",
      ResourceVersion: (string) (len=5) "35511",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873604849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "3d587e06-44bb-45bf-9348-7a241eb686d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 64  35 38 37 65 30 36 2d 34  |d\":\"3d587e06-4|
              00000090  34 62 62 2d 34 35 62 66  2d 39 33 34 38 2d 37 61  |4bb-45bf-9348-7a|
              000000a0  32 34 31 65 62 36 38 36  64 31 5c 22 7d 22 3a 7b  |241eb686d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 35 5c 22 7d 22 3a 7b  |.244.1.175\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbs57",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbs57",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604849,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=12) "10.244.1.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873604849,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873604849,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6f46d1d0b4c6b99768ad6a94ee3d95af7cce97a2b46796868e429da6eecd5581",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wbs57",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 20:00:51.113028 23 deployment.go:68] Pod "test-new-deployment-685b768f58-zl2xx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-zl2xx",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=14) "deployment-519",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee4a904c-43cd-45c1-978c-6f9edf3d99a4",
      ResourceVersion: (string) (len=5) "35544",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873604851,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "3d587e06-44bb-45bf-9348-7a241eb686d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 64  35 38 37 65 30 36 2d 34  |d\":\"3d587e06-4|
              00000090  34 62 62 2d 34 35 62 66  2d 39 33 34 38 2d 37 61  |4bb-45bf-9348-7a|
              000000a0  32 34 31 65 62 36 38 36  64 31 5c 22 7d 22 3a 7b  |241eb686d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26rxb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26rxb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873604851,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=9) "10.0.33.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=9) "10.0.33.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873604851,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-26rxb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 20:00:51.115236 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-519" for this suite. @ 01/27/25 20:00:51.118
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/27/25 20:00:51.131
  I0127 20:00:51.131941 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-runtime @ 01/27/25 20:00:51.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:51.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:51.153
  STEP: create the container @ 01/27/25 20:00:51.155
  W0127 20:00:51.160203      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/27/25 20:00:51.16
  STEP: get the container status @ 01/27/25 20:00:53.167
  STEP: the container should be terminated @ 01/27/25 20:00:53.169
  STEP: the termination message should be set @ 01/27/25 20:00:53.169
  I0127 20:00:53.169926 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/27/25 20:00:53.169
  I0127 20:00:53.181250 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8197" for this suite. @ 01/27/25 20:00:53.183
• [2.055 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/27/25 20:00:53.187
  I0127 20:00:53.187394 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 20:00:53.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:53.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:53.197
  STEP: Creating the pod @ 01/27/25 20:00:53.2
  I0127 20:00:55.726614 23 pod_client.go:173] Successfully updated pod "labelsupdatea23cf45e-8d8a-4608-8cd1-f1560e0de69b"
  I0127 20:00:57.738026 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1653" for this suite. @ 01/27/25 20:00:57.74
• [4.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/27/25 20:00:57.744
  I0127 20:00:57.744648 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 20:00:57.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:00:57.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:00:57.755
  STEP: Creating pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490 @ 01/27/25 20:00:57.757
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/27/25 20:00:59.767
  I0127 20:00:59.769754 23 container_probe.go:1749] Initial restart count of pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 is 0
  I0127 20:00:59.771292 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:01.774093 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:03.777809 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:05.781339 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:07.785247 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:09.788644 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:11.792107 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:13.795305 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:15.799283 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:17.802430 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:19.806763 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:21.810178 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:23.813406 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:25.816814 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:27.820501 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:29.824708 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:31.827217 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:33.829620 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:35.832062 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:37.835676 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:39.838098 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:41.842197 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:43.845619 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:45.848083 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:47.851776 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:49.854362 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:51.857917 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:53.861429 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:55.863812 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:57.866671 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:01:59.870080 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:01.872632 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:03.875536 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:05.878944 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:07.882643 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:09.886162 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:11.889678 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:13.893106 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:15.896525 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:17.900031 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:19.903499 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:21.906469 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:23.909641 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:25.913368 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:27.916512 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:29.919393 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:31.922699 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:33.926105 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:35.929355 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:37.932875 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:39.936346 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:41.939743 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:43.942929 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:45.945486 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:47.949013 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:49.951428 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:51.953847 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:53.957268 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:55.960645 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:57.963459 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:02:59.966253 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:01.968784 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:03.972350 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:05.975698 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:07.979272 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:09.981778 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:11.984347 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:13.987643 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:15.990141 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:17.993106 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:19.995596 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:21.999762 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:24.003013 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:26.005566 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:28.008658 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:30.011723 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:32.014276 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:34.017457 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:36.020204 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:38.022787 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:40.026722 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:42.030085 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:44.033370 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:46.035679 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:48.039248 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:50.041759 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:52.045316 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:54.047761 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:56.050481 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:03:58.054473 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:00.057485 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:02.060906 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:04.063579 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:06.066890 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:08.069867 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:10.073257 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:12.075528 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:14.079332 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:16.082417 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:18.085968 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:20.088408 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:22.091745 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:24.094350 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:26.097389 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:28.100891 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:30.103355 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:32.106775 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:34.109857 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:36.113199 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:38.115881 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:40.119315 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:42.122696 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:44.126077 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:46.129935 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:48.133632 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:50.137026 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:52.139481 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:54.142622 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:56.146031 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  I0127 20:04:58.149299 23 container_probe.go:1759] Get pod test-webserver-d0d39d4d-fd21-4c9e-a36e-fa2fa5f0df63 in namespace container-probe-7490
  STEP: deleting the pod @ 01/27/25 20:05:00.15
  I0127 20:05:00.161000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7490" for this suite. @ 01/27/25 20:05:00.164
• [242.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/27/25 20:05:00.168
  I0127 20:05:00.168662 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 20:05:00.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:05:00.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:05:00.18
  STEP: creating service nodeport-test with type=NodePort in namespace services-5153 @ 01/27/25 20:05:00.182
  STEP: creating replication controller nodeport-test in namespace services-5153 @ 01/27/25 20:05:00.195
  I0127 20:05:00.202104      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5153, replica count: 2
  I0127 20:05:03.253594      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0127 20:05:03.253636 23 resource.go:361] Creating new exec pod
  I0127 20:05:06.268266 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0127 20:05:06.372730 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.104.212.236) 80 port [tcp/http] succeeded!\n"
  I0127 20:05:06.372772 23 builder.go:147] stdout: ""
  I0127 20:05:07.269004 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0127 20:05:07.362306 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.104.212.236) 80 port [tcp/http] succeeded!\n"
  I0127 20:05:07.362346 23 builder.go:147] stdout: "nodeport-test-256t5"
  I0127 20:05:07.362410 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.212.236 80'
  I0127 20:05:07.458331 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.212.236 80\nConnection to 10.104.212.236 80 port [tcp/http] succeeded!\n"
  I0127 20:05:07.458373 23 builder.go:147] stdout: ""
  I0127 20:05:08.364003 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.212.236 80'
  I0127 20:05:08.456982 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.212.236 80\nConnection to 10.104.212.236 80 port [tcp/http] succeeded!\n"
  I0127 20:05:08.457191 23 builder.go:147] stdout: "nodeport-test-r7lsl"
  I0127 20:05:08.457268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.52.184 32435'
  I0127 20:05:08.550529 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.52.184 32435\nConnection to 10.0.52.184 32435 port [tcp/*] succeeded!\n"
  I0127 20:05:08.550569 23 builder.go:147] stdout: ""
  I0127 20:05:09.457384 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.52.184 32435'
  I0127 20:05:09.552139 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.52.184 32435\nConnection to 10.0.52.184 32435 port [tcp/*] succeeded!\n"
  I0127 20:05:09.552181 23 builder.go:147] stdout: "nodeport-test-r7lsl"
  I0127 20:05:09.552262 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-5153 exec execpodtfd5d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.33.3 32435'
  I0127 20:05:09.648525 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.33.3 32435\nConnection to 10.0.33.3 32435 port [tcp/*] succeeded!\n"
  I0127 20:05:09.648566 23 builder.go:147] stdout: "nodeport-test-r7lsl"
  I0127 20:05:09.648894 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5153" for this suite. @ 01/27/25 20:05:09.651
• [9.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/27/25 20:05:09.655
  I0127 20:05:09.655729 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename cronjob @ 01/27/25 20:05:09.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:05:09.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:05:09.67
  STEP: Creating a cronjob @ 01/27/25 20:05:09.672
  STEP: Ensuring more than one job is running at a time @ 01/27/25 20:05:09.677
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/27/25 20:07:01.682
  STEP: Removing cronjob @ 01/27/25 20:07:01.684
  I0127 20:07:01.687981 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1886" for this suite. @ 01/27/25 20:07:01.69
• [112.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687
  STEP: Creating a kubernetes client @ 01/27/25 20:07:01.694
  I0127 20:07:01.694540 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 20:07:01.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:01.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:01.714
  STEP: creating Agnhost RC @ 01/27/25 20:07:01.716
  I0127 20:07:01.716991 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-5860 create -f -'
  I0127 20:07:01.828380 23 builder.go:146] stderr: ""
  I0127 20:07:01.828419 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/27/25 20:07:01.828
  I0127 20:07:02.831667 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 20:07:02.831699 23 framework.go:733] Found 1 / 1
  I0127 20:07:02.831713 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/27/25 20:07:02.831
  I0127 20:07:02.833532 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 20:07:02.833556 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0127 20:07:02.833598 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-5860 patch pod agnhost-primary-z2fdm -p {"metadata":{"annotations":{"x":"y"}}}'
  I0127 20:07:02.895435 23 builder.go:146] stderr: ""
  I0127 20:07:02.895473 23 builder.go:147] stdout: "pod/agnhost-primary-z2fdm patched\n"
  STEP: checking annotations @ 01/27/25 20:07:02.895
  I0127 20:07:02.897472 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0127 20:07:02.897498 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0127 20:07:02.897616 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5860" for this suite. @ 01/27/25 20:07:02.899
• [1.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/27/25 20:07:02.903
  I0127 20:07:02.903919 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename deployment @ 01/27/25 20:07:02.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:02.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:02.916
  I0127 20:07:02.930149 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/27/25 20:07:02.93
  I0127 20:07:04.934760 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/27/25 20:07:04.943
  I0127 20:07:04.949645 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d50f1747-bd84-45b3-bc93-e51641f28221",
      ResourceVersion: (string) (len=5) "36648",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873605224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0127 20:07:04.955283 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8900b66b-23e2-4c6c-8794-baa993102b99",
      ResourceVersion: (string) (len=5) "36650",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873605224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d50f1747-bd84-45b3-bc93-e51641f28221",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 30 66 31 37  34 37 2d 62 64 38 34 2d  |\"d50f1747-bd84-|
              00000120  34 35 62 33 2d 62 63 39  33 2d 65 35 31 36 34 31  |45b3-bc93-e51641|
              00000130  66 32 38 32 32 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f28221\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 20:07:04.956205 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0127 20:07:04.956422 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a8d2074-ce6b-4988-a21a-eb37c0e6465b",
      ResourceVersion: (string) (len=5) "36649",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873605222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d50f1747-bd84-45b3-bc93-e51641f28221",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 35 30 66 31 37 34  |"uid\":\"d50f174|
              00000040  37 2d 62 64 38 34 2d 34  35 62 33 2d 62 63 39 33  |7-bd84-45b3-bc93|
              00000050  2d 65 35 31 36 34 31 66  32 38 32 32 31 5c 22 7d  |-e51641f28221\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0127 20:07:04.962196 23 deployment.go:68] Pod "test-cleanup-controller-7xldk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-7xldk",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5f75ef3-3891-4be7-a5b6-9e6cc57da8a9",
      ResourceVersion: (string) (len=5) "36645",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873605222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0a8d2074-ce6b-4988-a21a-eb37c0e6465b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 61 38 64 32 30 37 34  |uid\":\"0a8d2074|
              00000080  2d 63 65 36 62 2d 34 39  38 38 2d 61 32 31 61 2d  |-ce6b-4988-a21a-|
              00000090  65 62 33 37 63 30 65 36  34 36 35 62 5c 22 7d 22  |eb37c0e6465b\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  38 32 5c 22 7d 22 3a 7b  |.244.1.182\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96zmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96zmn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.0.52.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.0.52.184"
        }
      },
      PodIP: (string) (len=12) "10.244.1.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873605222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63873605223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d0f810349af10167c73d378959a7731e1f02f1d81eb3619e7c5c9a1b5d557d23",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-96zmn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 20:07:04.964451 23 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-99jrt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-99jrt",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4917d1b9-2c44-4f6e-8e87-cb2465db57f6",
      ResourceVersion: (string) (len=5) "36651",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63873605224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "8900b66b-23e2-4c6c-8794-baa993102b99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63873605224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 39  30 30 62 36 36 62 2d 32  |d\":\"8900b66b-2|
              00000090  33 65 32 2d 34 63 36 63  2d 38 37 39 34 2d 62 61  |3e2-4c6c-8794-ba|
              000000a0  61 39 39 33 31 30 32 62  39 39 5c 22 7d 22 3a 7b  |a993102b99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nhk6m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nhk6m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0127 20:07:04.966322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9985" for this suite. @ 01/27/25 20:07:04.972
• [2.078 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/27/25 20:07:04.982
  I0127 20:07:04.982347 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 20:07:04.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:04.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:04.996
  STEP: Creating secret with name secret-test-map-e768d832-5b44-4b04-9efa-d3bc28568076 @ 01/27/25 20:07:04.998
  STEP: Creating a pod to test consume secrets @ 01/27/25 20:07:05.002
  STEP: Saw pod success @ 01/27/25 20:07:09.016
  I0127 20:07:09.018009 23 output.go:207] Trying to get logs from node worker-0 pod pod-secrets-23cae66c-9396-4469-9171-9b85c262dc68 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 20:07:09.031
  I0127 20:07:09.042301 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3472" for this suite. @ 01/27/25 20:07:09.044
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/27/25 20:07:09.057
  I0127 20:07:09.057548 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 20:07:09.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:09.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:09.069
  STEP: Creating configMap configmap-9055/configmap-test-e1de0a24-4ee8-43bb-a691-df33e9f8d262 @ 01/27/25 20:07:09.071
  STEP: Creating a pod to test consume configMaps @ 01/27/25 20:07:09.074
  STEP: Saw pod success @ 01/27/25 20:07:13.089
  I0127 20:07:13.091606 23 output.go:207] Trying to get logs from node worker-1 pod pod-configmaps-03c2a659-9834-46ea-9a4c-d2699638234c container env-test: <nil>
  STEP: delete the pod @ 01/27/25 20:07:13.103
  I0127 20:07:13.114741 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9055" for this suite. @ 01/27/25 20:07:13.116
• [4.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/27/25 20:07:13.12
  I0127 20:07:13.120703 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 20:07:13.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:13.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:13.131
  I0127 20:07:13.134986 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6372" for this suite. @ 01/27/25 20:07:13.218
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/27/25 20:07:13.221
  I0127 20:07:13.221999 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 20:07:13.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:13.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:13.235
  I0127 20:07:13.238174 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/27/25 20:07:14.467
  I0127 20:07:14.467786 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 create -f -'
  I0127 20:07:16.539225 23 builder.go:146] stderr: ""
  I0127 20:07:16.539268 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6382-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0127 20:07:16.539315 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 delete e2e-test-crd-publish-openapi-6382-crds test-foo'
  I0127 20:07:16.598796 23 builder.go:146] stderr: ""
  I0127 20:07:16.598840 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6382-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0127 20:07:16.598882 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 apply -f -'
  I0127 20:07:16.658276 23 builder.go:146] stderr: ""
  I0127 20:07:16.658455 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6382-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0127 20:07:16.658916 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 delete e2e-test-crd-publish-openapi-6382-crds test-foo'
  I0127 20:07:16.716477 23 builder.go:146] stderr: ""
  I0127 20:07:16.716516 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6382-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/27/25 20:07:16.716
  I0127 20:07:16.716603 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 create -f -'
  I0127 20:07:16.770922 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/27/25 20:07:16.771
  I0127 20:07:16.771201 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 create -f -'
  I0127 20:07:16.826728 23 builder.go:135] rc: 1
  I0127 20:07:16.826837 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 apply -f -'
  I0127 20:07:16.883765 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/27/25 20:07:16.883
  I0127 20:07:16.883878 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 create -f -'
  I0127 20:07:16.939269 23 builder.go:135] rc: 1
  I0127 20:07:16.939481 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 --namespace=crd-publish-openapi-9127 apply -f -'
  I0127 20:07:16.995938 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/27/25 20:07:16.995
  I0127 20:07:16.996061 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 explain e2e-test-crd-publish-openapi-6382-crds'
  I0127 20:07:17.050156 23 builder.go:146] stderr: ""
  I0127 20:07:17.050214 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6382-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/27/25 20:07:17.05
  I0127 20:07:17.050527 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 explain e2e-test-crd-publish-openapi-6382-crds.metadata'
  I0127 20:07:17.101732 23 builder.go:146] stderr: ""
  I0127 20:07:17.101964 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6382-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0127 20:07:17.102270 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 explain e2e-test-crd-publish-openapi-6382-crds.spec'
  I0127 20:07:17.153202 23 builder.go:146] stderr: ""
  I0127 20:07:17.153251 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6382-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0127 20:07:17.153336 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 explain e2e-test-crd-publish-openapi-6382-crds.spec.bars'
  I0127 20:07:17.205196 23 builder.go:146] stderr: ""
  I0127 20:07:17.205404 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6382-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/27/25 20:07:17.205
  I0127 20:07:17.205613 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=crd-publish-openapi-9127 explain e2e-test-crd-publish-openapi-6382-crds.spec.bars2'
  I0127 20:07:17.257454 23 builder.go:135] rc: 1
  I0127 20:07:18.531638 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9127" for this suite. @ 01/27/25 20:07:18.537
• [5.320 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 01/27/25 20:07:18.541
  I0127 20:07:18.541700 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename fake-node @ 01/27/25 20:07:18.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:18.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:18.56
  STEP: Create "e2e-fake-node-hqr79" @ 01/27/25 20:07:18.564
  STEP: Getting "e2e-fake-node-hqr79" @ 01/27/25 20:07:18.567
  STEP: Patching "e2e-fake-node-hqr79" @ 01/27/25 20:07:18.57
  STEP: Listing nodes with LabelSelector "e2e-fake-node-hqr79=patched" @ 01/27/25 20:07:18.579
  STEP: Updating "e2e-fake-node-hqr79" @ 01/27/25 20:07:18.581
  STEP: Delete "e2e-fake-node-hqr79" @ 01/27/25 20:07:18.589
  STEP: Confirm deletion of "e2e-fake-node-hqr79" @ 01/27/25 20:07:18.593
  I0127 20:07:18.594872 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-948" for this suite. @ 01/27/25 20:07:18.596
• [0.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/27/25 20:07:18.6
  I0127 20:07:18.600321 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubelet-test @ 01/27/25 20:07:18.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:18.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:18.669
  I0127 20:07:22.689184 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9615" for this suite. @ 01/27/25 20:07:22.691
• [4.095 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/27/25 20:07:22.695
  I0127 20:07:22.695779 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 20:07:22.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:22.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:22.709
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/27/25 20:07:22.711
  I0127 20:07:22.712168 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 20:07:23.943907 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 20:07:28.911291 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8467" for this suite. @ 01/27/25 20:07:28.917
• [6.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/27/25 20:07:28.921
  I0127 20:07:28.921826 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 20:07:28.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:28.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:28.934
  STEP: Setting up server cert @ 01/27/25 20:07:29.034
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 20:07:29.51
  STEP: Deploying the webhook pod @ 01/27/25 20:07:29.514
  STEP: Wait for the deployment to be ready @ 01/27/25 20:07:29.523
  I0127 20:07:29.527378 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/27/25 20:07:31.534
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 20:07:31.544
  I0127 20:07:32.544457 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0127 20:07:32.548819 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7934-crds.webhook.example.com via the AdmissionRegistration API @ 01/27/25 20:07:33.055
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/27/25 20:07:33.072
  I0127 20:07:35.638925 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7372" for this suite. @ 01/27/25 20:07:35.641
  STEP: Destroying namespace "webhook-markers-8975" for this suite. @ 01/27/25 20:07:35.647
• [6.729 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/27/25 20:07:35.651
  I0127 20:07:35.651286 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 20:07:35.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:35.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:35.666
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 20:07:35.669
  STEP: Saw pod success @ 01/27/25 20:07:37.679
  I0127 20:07:37.681758 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-08bd7648-cb91-433c-9837-d79425981c06 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 20:07:37.686
  I0127 20:07:37.699491 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3143" for this suite. @ 01/27/25 20:07:37.701
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 01/27/25 20:07:37.705
  I0127 20:07:37.705862 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/27/25 20:07:37.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:37.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:37.717
  STEP: Setting up the test @ 01/27/25 20:07:37.719
  STEP: Creating hostNetwork=false pod @ 01/27/25 20:07:37.719
  STEP: Creating hostNetwork=true pod @ 01/27/25 20:07:39.731
  STEP: Running the test @ 01/27/25 20:07:41.745
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/27/25 20:07:41.745
  I0127 20:07:41.745563 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:41.745582 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:41.745627 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0127 20:07:41.794357 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:41.794424 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:41.794435 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:41.794563 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0127 20:07:41.840196 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:41.840266 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:41.840283 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:41.840339 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0127 20:07:41.886203 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:41.886249 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:41.886263 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:41.886318 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0127 20:07:41.929244 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/27/25 20:07:41.929
  I0127 20:07:41.929364 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:41.929402 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:41.929455 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0127 20:07:41.968979 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:41.969020 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:41.969052 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:41.969126 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0127 20:07:42.006822 23 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/27/25 20:07:42.006
  I0127 20:07:42.006950 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:42.006973 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:42.007021 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0127 20:07:42.054109 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:42.054182 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:42.054192 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:42.054241 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0127 20:07:42.091186 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:42.091272 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:42.091293 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:42.091371 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0127 20:07:42.130766 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:42.130807 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7967 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:07:42.130821 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:07:42.130878 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7967/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0127 20:07:42.169012 23 exec_util.go:108] Exec stderr: ""
  I0127 20:07:42.169202 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7967" for this suite. @ 01/27/25 20:07:42.172
• [4.470 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/27/25 20:07:42.175
  I0127 20:07:42.175938 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 20:07:42.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:42.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:42.19
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/27/25 20:07:42.192
  STEP: Saw pod success @ 01/27/25 20:07:46.205
  I0127 20:07:46.207132 23 output.go:207] Trying to get logs from node worker-1 pod pod-d6f52e02-0500-46c7-89f3-a3e87efcf72d container test-container: <nil>
  STEP: delete the pod @ 01/27/25 20:07:46.211
  I0127 20:07:46.221170 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1859" for this suite. @ 01/27/25 20:07:46.223
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/27/25 20:07:46.227
  I0127 20:07:46.227682 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 20:07:46.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:07:46.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:07:46.241
  I0127 20:08:10.293321 23 container_probe.go:92] Container started at 2025-01-27 20:07:46 +0000 UTC, pod became ready at 2025-01-27 20:08:08 +0000 UTC
  I0127 20:08:10.293457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8737" for this suite. @ 01/27/25 20:08:10.295
• [24.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/27/25 20:08:10.299
  I0127 20:08:10.299589 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-pred @ 01/27/25 20:08:10.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:10.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:10.31
  I0127 20:08:10.313100 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0127 20:08:10.399123 23 util.go:396] Waiting for terminating namespaces to be deleted...
  I0127 20:08:10.401203 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-0 before test
  I0127 20:08:10.403711 23 predicates.go:957] coredns-7d4f7fbd5c-xx7x8 from kube-system started at 2025-01-27 19:30:18 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.403734 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 20:08:10.403747 23 predicates.go:957] konnectivity-agent-dtqvz from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.403757 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 20:08:10.403769 23 predicates.go:957] kube-proxy-llfpl from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.403782 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 20:08:10.403813 23 predicates.go:957] kube-router-bn8bm from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.403823 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 20:08:10.403835 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-27 18:31:43 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.403849 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0127 20:08:10.403862 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-6tlkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 20:08:10.403874 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 20:08:10.403889 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0127 20:08:10.403899 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker-1 before test
  I0127 20:08:10.406277 23 predicates.go:957] test-webserver-957da1d9-dca2-43f0-abf7-db865f39052e from container-probe-8737 started at 2025-01-27 20:07:46 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.406297 23 predicates.go:959] 	Container test-webserver ready: true, restart count 0
  I0127 20:08:10.406310 23 predicates.go:957] coredns-7d4f7fbd5c-7v98h from kube-system started at 2025-01-27 18:31:40 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.406320 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0127 20:08:10.406331 23 predicates.go:957] konnectivity-agent-glhh6 from kube-system started at 2025-01-27 18:31:24 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.406342 23 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0127 20:08:10.406354 23 predicates.go:957] kube-proxy-g28cd from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.406375 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0127 20:08:10.406387 23 predicates.go:957] kube-router-b745k from kube-system started at 2025-01-27 18:31:22 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.406397 23 predicates.go:959] 	Container kube-router ready: true, restart count 0
  I0127 20:08:10.406414 23 predicates.go:957] metrics-server-7778865875-f27vw from kube-system started at 2025-01-27 19:29:53 +0000 UTC (1 container statuses recorded)
  I0127 20:08:10.406424 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0127 20:08:10.406439 23 predicates.go:957] sonobuoy-e2e-job-fe498577155e4cf6 from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 20:08:10.406454 23 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0127 20:08:10.406464 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 20:08:10.406475 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-nchkx from sonobuoy started at 2025-01-27 18:31:56 +0000 UTC (2 container statuses recorded)
  I0127 20:08:10.406489 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0127 20:08:10.406499 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node worker-0 @ 01/27/25 20:08:10.416
  STEP: verifying the node has the label node worker-1 @ 01/27/25 20:08:10.425
  I0127 20:08:10.505703 23 predicates.go:372] Pod test-webserver-957da1d9-dca2-43f0-abf7-db865f39052e requesting resource cpu=0m on Node worker-1
  I0127 20:08:10.505736 23 predicates.go:372] Pod coredns-7d4f7fbd5c-7v98h requesting resource cpu=100m on Node worker-1
  I0127 20:08:10.505744 23 predicates.go:372] Pod coredns-7d4f7fbd5c-xx7x8 requesting resource cpu=100m on Node worker-0
  I0127 20:08:10.505752 23 predicates.go:372] Pod konnectivity-agent-dtqvz requesting resource cpu=0m on Node worker-0
  I0127 20:08:10.505759 23 predicates.go:372] Pod konnectivity-agent-glhh6 requesting resource cpu=0m on Node worker-1
  I0127 20:08:10.505766 23 predicates.go:372] Pod kube-proxy-g28cd requesting resource cpu=0m on Node worker-1
  I0127 20:08:10.505776 23 predicates.go:372] Pod kube-proxy-llfpl requesting resource cpu=0m on Node worker-0
  I0127 20:08:10.505786 23 predicates.go:372] Pod kube-router-b745k requesting resource cpu=250m on Node worker-1
  I0127 20:08:10.505797 23 predicates.go:372] Pod kube-router-bn8bm requesting resource cpu=250m on Node worker-0
  I0127 20:08:10.505808 23 predicates.go:372] Pod metrics-server-7778865875-f27vw requesting resource cpu=10m on Node worker-1
  I0127 20:08:10.505819 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node worker-0
  I0127 20:08:10.505836 23 predicates.go:372] Pod sonobuoy-e2e-job-fe498577155e4cf6 requesting resource cpu=0m on Node worker-1
  I0127 20:08:10.505846 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-6tlkx requesting resource cpu=0m on Node worker-0
  I0127 20:08:10.505857 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-3f9b88975d054368-nchkx requesting resource cpu=0m on Node worker-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/27/25 20:08:10.505
  I0127 20:08:10.505901 23 predicates.go:382] Creating a pod which consumes cpu=2555m on Node worker-0
  I0127 20:08:10.511583 23 predicates.go:382] Creating a pod which consumes cpu=2548m on Node worker-1
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/27/25 20:08:12.528
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e.181ea58386553d08], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2839/filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e to worker-1] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e.181ea5839ec34e41], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e.181ea583a01c5638], Reason = [Created], Message = [Created container: filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e.181ea583a3b76493], Reason = [Started], Message = [Started container filler-pod-40b5acb6-b406-45c5-b618-4c6aa3ff5d0e] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831.181ea58385e466df], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2839/filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831 to worker-0] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831.181ea5839e84b8a4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831.181ea5839fb3d35a], Reason = [Created], Message = [Created container: filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831.181ea583a34dd92b], Reason = [Started], Message = [Started container filler-pod-54ea738a-87db-48c5-8cf2-7a1c62906831] @ 01/27/25 20:08:12.53
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.181ea583fe31ec4f], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 01/27/25 20:08:12.54
  STEP: removing the label node off the node worker-0 @ 01/27/25 20:08:13.539
  STEP: verifying the node doesn't have the label node @ 01/27/25 20:08:13.548
  STEP: removing the label node off the node worker-1 @ 01/27/25 20:08:13.55
  STEP: verifying the node doesn't have the label node @ 01/27/25 20:08:13.559
  I0127 20:08:13.562249 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2839" for this suite. @ 01/27/25 20:08:13.564
• [3.271 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/27/25 20:08:13.57
  I0127 20:08:13.570748 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 20:08:13.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:13.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:13.582
  STEP: creating service endpoint-test2 in namespace services-1514 @ 01/27/25 20:08:13.584
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1514 to expose endpoints map[] @ 01/27/25 20:08:13.594
  I0127 20:08:13.604997 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-1514 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1514 @ 01/27/25 20:08:13.605
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1514 to expose endpoints map[pod1:[80]] @ 01/27/25 20:08:15.617
  I0127 20:08:15.623060 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-1514 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/27/25 20:08:15.623
  I0127 20:08:15.623113 23 resource.go:361] Creating new exec pod
  I0127 20:08:18.632231 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:18.754616 23 builder.go:146] stderr: "+ echo hostName+ nc -v -t -w 2 endpoint-test2 80\n\nConnection to endpoint-test2 (10.109.130.45) 80 port [tcp/http] succeeded!\n"
  I0127 20:08:18.754663 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 20:08:18.754756 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.130.45 80'
  I0127 20:08:18.863687 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.109.130.45 80\n+ echo hostName\nConnection to 10.109.130.45 80 port [tcp/http] succeeded!\n"
  I0127 20:08:18.863726 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1514 @ 01/27/25 20:08:18.863
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1514 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/27/25 20:08:20.874
  I0127 20:08:20.881608 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-1514 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/27/25 20:08:20.881
  I0127 20:08:21.882543 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:23.979719 23 builder.go:135] rc: 1
  I0127 20:08:23.979910 23 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.109.130.45) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 20:08:23.980066 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:26.073932 23 builder.go:135] rc: 1
  I0127 20:08:26.073993 23 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 endpoint-test2 80
  echo hostName
  nc: connect to endpoint-test2 (10.109.130.45) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 20:08:26.074153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:28.172501 23 builder.go:135] rc: 1
  I0127 20:08:28.172561 23 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo+  hostName
  nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.109.130.45) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 20:08:28.172646 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:30.269784 23 builder.go:135] rc: 1
  I0127 20:08:30.269876 23 jig.go:914] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.109.130.45) port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0127 20:08:30.269970 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:31.397150 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.109.130.45) 80 port [tcp/http] succeeded!\n"
  I0127 20:08:31.397192 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 20:08:31.397262 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.130.45 80'
  I0127 20:08:31.491302 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.130.45 80\nConnection to 10.109.130.45 80 port [tcp/http] succeeded!\n"
  I0127 20:08:31.491469 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1514 @ 01/27/25 20:08:31.491
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1514 to expose endpoints map[pod2:[80]] @ 01/27/25 20:08:31.504
  I0127 20:08:31.512345 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-1514 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/27/25 20:08:31.512
  I0127 20:08:32.513038 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0127 20:08:32.608672 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.109.130.45) 80 port [tcp/http] succeeded!\n"
  I0127 20:08:32.608713 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0127 20:08:32.608787 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=services-1514 exec execpodmm5bq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.130.45 80'
  I0127 20:08:32.702781 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.130.45 80\nConnection to 10.109.130.45 80 port [tcp/http] succeeded!\n"
  I0127 20:08:32.702824 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1514 @ 01/27/25 20:08:32.702
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1514 to expose endpoints map[] @ 01/27/25 20:08:32.713
  I0127 20:08:32.723322 23 service.go:4460] successfully validated that service endpoint-test2 in namespace services-1514 exposes endpoints map[]
  I0127 20:08:32.737086 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1514" for this suite. @ 01/27/25 20:08:32.739
• [19.172 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/27/25 20:08:32.743
  I0127 20:08:32.743190 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/27/25 20:08:32.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:32.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:32.756
  STEP: creating a target pod @ 01/27/25 20:08:32.758
  STEP: adding an ephemeral container @ 01/27/25 20:08:34.771
  STEP: checking pod container endpoints @ 01/27/25 20:08:36.784
  I0127 20:08:36.785007 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7996 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:08:36.785024 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:08:36.785080 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-7996/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0127 20:08:36.832435 23 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/27/25 20:08:36.836
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/27/25 20:08:36.839
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/27/25 20:08:36.847
  I0127 20:08:36.850065 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7996" for this suite. @ 01/27/25 20:08:36.853
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/27/25 20:08:36.859
  I0127 20:08:36.859867 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 20:08:36.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:36.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:36.871
  STEP: Creating a pod to test substitution in volume subpath @ 01/27/25 20:08:36.873
  STEP: Saw pod success @ 01/27/25 20:08:38.882
  I0127 20:08:38.884824 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-ae99f079-ccb0-4522-93cd-430ee13b60d0 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 20:08:38.889
  I0127 20:08:38.901940 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6125" for this suite. @ 01/27/25 20:08:38.904
• [2.050 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/27/25 20:08:38.909
  I0127 20:08:38.909590 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename daemonsets @ 01/27/25 20:08:38.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:38.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:38.921
  I0127 20:08:39.008920 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/27/25 20:08:39.012
  I0127 20:08:39.107566 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 20:08:39.107604 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 20:08:40.017345 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 20:08:40.017381 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/27/25 20:08:40.024
  STEP: Check that daemon pods images are updated. @ 01/27/25 20:08:40.116
  I0127 20:08:40.118830 23 daemon_set.go:1193] Wrong image for pod: daemon-set-krbmf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0127 20:08:41.119669 23 daemon_set.go:1198] Pod daemon-set-fvt8d is not available
  I0127 20:08:41.119703 23 daemon_set.go:1193] Wrong image for pod: daemon-set-krbmf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0127 20:08:42.119348 23 daemon_set.go:1198] Pod daemon-set-nxfxt is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/27/25 20:08:42.121
  I0127 20:08:42.124845 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0127 20:08:42.124873 23 fixtures.go:131] Node worker-0 is running 0 daemon pod, expected 1
  I0127 20:08:43.126277 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0127 20:08:43.126312 23 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/27/25 20:08:43.134
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9350, will wait for the garbage collector to delete the pods @ 01/27/25 20:08:43.134
  I0127 20:08:43.190835 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.264541ms
  I0127 20:08:43.291481 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.640868ms
  I0127 20:08:44.795766 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0127 20:08:44.795798 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0127 20:08:44.797930 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37554"},"items":null}

  I0127 20:08:44.799608 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37554"},"items":null}

  I0127 20:08:44.805698 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9350" for this suite. @ 01/27/25 20:08:44.807
• [5.901 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/27/25 20:08:44.811
  I0127 20:08:44.811381 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename downward-api @ 01/27/25 20:08:44.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:44.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:44.824
  STEP: Creating a pod to test downward API volume plugin @ 01/27/25 20:08:44.827
  STEP: Saw pod success @ 01/27/25 20:08:46.838
  I0127 20:08:46.840215 23 output.go:207] Trying to get logs from node worker-0 pod downwardapi-volume-14934a11-9f64-4cdc-bd7e-baeb4c66b1b0 container client-container: <nil>
  STEP: delete the pod @ 01/27/25 20:08:46.844
  I0127 20:08:46.855777 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2183" for this suite. @ 01/27/25 20:08:46.858
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/27/25 20:08:46.861
  I0127 20:08:46.861988 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 20:08:46.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:08:46.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:08:46.872
  STEP: Creating resourceQuota "e2e-rq-status-hdrh9" @ 01/27/25 20:08:46.966
  I0127 20:08:46.971414 23 resource_quota.go:1102] Resource quota "e2e-rq-status-hdrh9" reports spec: hard cpu limit of 500m
  I0127 20:08:46.971445 23 resource_quota.go:1104] Resource quota "e2e-rq-status-hdrh9" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-hdrh9" /status @ 01/27/25 20:08:46.971
  STEP: Confirm /status for "e2e-rq-status-hdrh9" resourceQuota via watch @ 01/27/25 20:08:46.976
  I0127 20:08:46.977609 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-hdrh9" in namespace "resourcequota-8329" with hard status: v1.ResourceList(nil)
  I0127 20:08:46.977663 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-hdrh9" in namespace "resourcequota-8329" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0127 20:08:46.977685 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-hdrh9" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/27/25 20:08:46.979
  I0127 20:08:46.982516 23 resource_quota.go:1152] Resource quota "e2e-rq-status-hdrh9" reports spec: hard cpu limit of 1
  I0127 20:08:46.982540 23 resource_quota.go:1153] Resource quota "e2e-rq-status-hdrh9" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-hdrh9" /status @ 01/27/25 20:08:46.982
  STEP: Confirm /status for "e2e-rq-status-hdrh9" resourceQuota via watch @ 01/27/25 20:08:46.989
  I0127 20:08:46.990276 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-hdrh9" in namespace "resourcequota-8329" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0127 20:08:46.990311 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-hdrh9" in namespace "resourcequota-8329" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0127 20:08:46.990326 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-hdrh9" /status was patched
  STEP: Get "e2e-rq-status-hdrh9" /status @ 01/27/25 20:08:46.99
  I0127 20:08:46.992260 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-hdrh9" reports status: hard cpu of 1
  I0127 20:08:46.992285 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-hdrh9" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-hdrh9" /status before checking Spec is unchanged @ 01/27/25 20:08:46.993
  I0127 20:08:46.997676 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-hdrh9" reports status: hard cpu of 2
  I0127 20:08:46.997705 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-hdrh9" reports status: hard memory of 2Gi
  I0127 20:08:46.998722 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-hdrh9" in namespace "resourcequota-8329" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0127 20:08:47.000278 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d67d28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d67d58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d67d88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:08:52.004096 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:08:57.004428 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae1e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:02.004686 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae3a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:07.005726 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae498), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae4c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae4f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:12.004856 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae5e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:17.001770 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c5b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c5e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:22.004558 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:27.005187 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae9f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038aea20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:32.001498 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038aeb10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038aeb58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038aebd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:37.002168 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:42.004523 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035221f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:47.003626 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae0f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:52.004750 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:09:57.004605 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035224c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:02.004538 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035225b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035225e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:07.005033 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:12.004319 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae2a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:17.004521 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035228b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035228e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:22.004634 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522a50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:27.004967 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522be8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:32.005376 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522d20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522d50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:37.004360 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003522e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:42.004555 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:47.001631 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c3a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:52.004945 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:10:57.004534 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:11:02.004699 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae7f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038ae858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:11:07.005687 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c6a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:11:12.005005 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c7c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00025c7f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:11:17.001650 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hdrh9" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hdrh9", GenerateName:"", Namespace:"resourcequota-8329", SelfLink:"", UID:"eb3db0e6-9e50-4011-a673-1ed4aee84caf", ResourceVersion:"37583", Generation:0, CreationTimestamp:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hdrh9"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003523020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003523068), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 27, 20, 8, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003523098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0127 20:11:22.004907 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-hdrh9" Spec was unchanged and /status reset
  I0127 20:11:22.005079 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8329" for this suite. @ 01/27/25 20:11:22.007
• [155.151 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/27/25 20:11:22.013
  I0127 20:11:22.013566 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pv @ 01/27/25 20:11:22.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:22.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:22.03
  STEP: Creating initial PV and PVC @ 01/27/25 20:11:22.032
  I0127 20:11:22.032954 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1945" @ 01/27/25 20:11:22.043
  STEP: Listing PVCs in namespace "pv-1945" @ 01/27/25 20:11:22.045
  STEP: Reading "pvc-2xx8b" Status @ 01/27/25 20:11:22.047
  STEP: Reading "pv-1945-2xv79" Status @ 01/27/25 20:11:22.05
  STEP: Patching "pvc-2xx8b" Status @ 01/27/25 20:11:22.055
  STEP: Patching "pv-1945-2xv79" Status @ 01/27/25 20:11:22.061
  STEP: Updating "pvc-2xx8b" Status @ 01/27/25 20:11:22.077
  STEP: Updating "pv-1945-2xv79" Status @ 01/27/25 20:11:22.085
  I0127 20:11:22.090383 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0127 20:11:22.090404 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-2xx8b"
  I0127 20:11:22.093596 23 pv.go:193] Deleting PersistentVolume "pv-1945-2xv79"
  I0127 20:11:22.099454 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1945" for this suite. @ 01/27/25 20:11:22.107
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/27/25 20:11:22.111
  I0127 20:11:22.111368 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 20:11:22.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:22.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:22.125
  STEP: Discovering how many secrets are in namespace by default @ 01/27/25 20:11:22.127
  STEP: Counting existing ResourceQuota @ 01/27/25 20:11:27.208
  STEP: Creating a ResourceQuota @ 01/27/25 20:11:32.211
  STEP: Ensuring resource quota status is calculated @ 01/27/25 20:11:32.215
  STEP: Creating a Secret @ 01/27/25 20:11:34.218
  STEP: Ensuring resource quota status captures secret creation @ 01/27/25 20:11:34.228
  STEP: Deleting a secret @ 01/27/25 20:11:36.231
  STEP: Ensuring resource quota status released usage @ 01/27/25 20:11:36.235
  I0127 20:11:38.237772 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8141" for this suite. @ 01/27/25 20:11:38.24
• [16.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/27/25 20:11:38.246
  I0127 20:11:38.246249 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename runtimeclass @ 01/27/25 20:11:38.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:38.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:38.258
  I0127 20:11:40.279254 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3674" for this suite. @ 01/27/25 20:11:40.281
• [2.039 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/27/25 20:11:40.285
  I0127 20:11:40.285481 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename certificates @ 01/27/25 20:11:40.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:40.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:40.299
  STEP: getting /apis @ 01/27/25 20:11:41.161
  STEP: getting /apis/certificates.k8s.io @ 01/27/25 20:11:41.164
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/27/25 20:11:41.165
  STEP: creating @ 01/27/25 20:11:41.166
  STEP: getting @ 01/27/25 20:11:41.181
  STEP: listing @ 01/27/25 20:11:41.182
  STEP: watching @ 01/27/25 20:11:41.184
  I0127 20:11:41.184537 23 certificates.go:316] starting watch
  STEP: patching @ 01/27/25 20:11:41.185
  STEP: updating @ 01/27/25 20:11:41.188
  I0127 20:11:41.194035 23 certificates.go:332] waiting for watch events with expected annotations
  I0127 20:11:41.194095 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/27/25 20:11:41.194
  STEP: patching /approval @ 01/27/25 20:11:41.195
  STEP: updating /approval @ 01/27/25 20:11:41.201
  STEP: getting /status @ 01/27/25 20:11:41.204
  STEP: patching /status @ 01/27/25 20:11:41.206
  STEP: updating /status @ 01/27/25 20:11:41.213
  STEP: deleting @ 01/27/25 20:11:41.219
  STEP: deleting a collection @ 01/27/25 20:11:41.225
  I0127 20:11:41.233306 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7127" for this suite. @ 01/27/25 20:11:41.235
• [0.954 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/27/25 20:11:41.239
  I0127 20:11:41.239855 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 20:11:41.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:41.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:41.253
  STEP: Creating Pod @ 01/27/25 20:11:41.255
  STEP: Reading file content from the nginx-container @ 01/27/25 20:11:43.267
  I0127 20:11:43.267666 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5202 PodName:pod-sharedvolume-d94b5d46-7ee7-4f32-b19b-518dfa9fce84 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:11:43.267684 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:11:43.267730 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-5202/pods/pod-sharedvolume-d94b5d46-7ee7-4f32-b19b-518dfa9fce84/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0127 20:11:43.312085 23 exec_util.go:108] Exec stderr: ""
  I0127 20:11:43.312312 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5202" for this suite. @ 01/27/25 20:11:43.397
• [2.162 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/27/25 20:11:43.401
  I0127 20:11:43.401846 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename field-validation @ 01/27/25 20:11:43.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:43.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:43.412
  I0127 20:11:43.414640 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  W0127 20:11:45.943620      23 warnings.go:70] unknown field "alpha"
  W0127 20:11:45.943642      23 warnings.go:70] unknown field "beta"
  W0127 20:11:45.943648      23 warnings.go:70] unknown field "delta"
  W0127 20:11:45.943653      23 warnings.go:70] unknown field "epsilon"
  W0127 20:11:45.943657      23 warnings.go:70] unknown field "gamma"
  I0127 20:11:46.468663 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4815" for this suite. @ 01/27/25 20:11:46.471
• [3.073 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/27/25 20:11:46.474
  I0127 20:11:46.474739 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename secrets @ 01/27/25 20:11:46.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:46.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:46.487
  STEP: Creating secret with name s-test-opt-del-b9af5e78-718f-4bb6-a922-ba4dc32380fb @ 01/27/25 20:11:46.571
  STEP: Creating secret with name s-test-opt-upd-3087aa89-58ca-428a-b3c3-7e62623d79a8 @ 01/27/25 20:11:46.575
  STEP: Creating the pod @ 01/27/25 20:11:46.581
  STEP: Deleting secret s-test-opt-del-b9af5e78-718f-4bb6-a922-ba4dc32380fb @ 01/27/25 20:11:48.613
  STEP: Updating secret s-test-opt-upd-3087aa89-58ca-428a-b3c3-7e62623d79a8 @ 01/27/25 20:11:48.616
  STEP: Creating secret with name s-test-opt-create-08b6e6ca-530f-419f-b367-339f23ce406c @ 01/27/25 20:11:48.619
  STEP: waiting to observe update in volume @ 01/27/25 20:11:48.622
  I0127 20:11:50.640784 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6842" for this suite. @ 01/27/25 20:11:50.643
• [4.173 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/27/25 20:11:50.647
  I0127 20:11:50.647517 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 20:11:50.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:11:50.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:11:50.661
  STEP: Setting up server cert @ 01/27/25 20:11:50.761
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 20:11:51.058
  STEP: Deploying the webhook pod @ 01/27/25 20:11:51.064
  STEP: Wait for the deployment to be ready @ 01/27/25 20:11:51.075
  I0127 20:11:51.079205 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0127 20:11:53.086539 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 20:11:55.089907 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 20:11:57.090509 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 20:11:59.089672 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0127 20:12:01.089861 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 27, 20, 11, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/27/25 20:12:03.089
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 20:12:03.102
  I0127 20:12:04.103170 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/27/25 20:12:04.107
  STEP: verifying the validating webhook match conditions @ 01/27/25 20:12:04.113
  STEP: updating the validating webhook match conditions @ 01/27/25 20:12:04.115
  STEP: verifying the validating webhook match conditions @ 01/27/25 20:12:04.122
  I0127 20:12:04.153642 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7873" for this suite. @ 01/27/25 20:12:04.155
  STEP: Destroying namespace "webhook-markers-4875" for this suite. @ 01/27/25 20:12:04.163
• [13.521 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 01/27/25 20:12:04.168
  I0127 20:12:04.168634 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 20:12:04.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:04.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:04.179
  STEP: Creating service test in namespace statefulset-3747 @ 01/27/25 20:12:04.182
  STEP: Looking for a node to schedule stateful set and pod @ 01/27/25 20:12:04.186
  STEP: Creating pod with conflicting port in namespace statefulset-3747 @ 01/27/25 20:12:04.257
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3747 @ 01/27/25 20:12:04.265
  STEP: Creating statefulset with conflicting port in namespace statefulset-3747 @ 01/27/25 20:12:06.269
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3747 @ 01/27/25 20:12:06.276
  I0127 20:12:06.291383 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-3747, name: ss-0, uid: ccd74886-3ede-42a9-a936-07e09ed458ed, status phase: Pending. Waiting for statefulset controller to delete.
  I0127 20:12:06.300311 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-3747, name: ss-0, uid: ccd74886-3ede-42a9-a936-07e09ed458ed, status phase: Failed. Waiting for statefulset controller to delete.
  I0127 20:12:06.307493 23 statefulset.go:872] Observed stateful pod in namespace: statefulset-3747, name: ss-0, uid: ccd74886-3ede-42a9-a936-07e09ed458ed, status phase: Failed. Waiting for statefulset controller to delete.
  I0127 20:12:06.310958 23 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-3747
  STEP: Removing pod with conflicting port in namespace statefulset-3747 @ 01/27/25 20:12:06.311
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3747 and will be in running state @ 01/27/25 20:12:06.327
  I0127 20:12:08.334773 23 statefulset.go:138] Deleting all statefulset in ns statefulset-3747
  I0127 20:12:08.336899 23 rest.go:152] Scaling statefulset ss to 0
  I0127 20:12:18.347727 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 20:12:18.349440 23 rest.go:90] Deleting statefulset ss
  I0127 20:12:18.357134 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3747" for this suite. @ 01/27/25 20:12:18.359
• [14.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/27/25 20:12:18.363
  I0127 20:12:18.363808 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename apf @ 01/27/25 20:12:18.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:18.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:18.377
  STEP: getting /apis @ 01/27/25 20:12:18.379
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/27/25 20:12:18.382
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/27/25 20:12:18.383
  STEP: creating @ 01/27/25 20:12:18.384
  STEP: getting @ 01/27/25 20:12:18.395
  STEP: listing @ 01/27/25 20:12:18.397
  STEP: watching @ 01/27/25 20:12:18.4
  I0127 20:12:18.400269 23 flowcontrol.go:394] starting watch
  STEP: patching @ 01/27/25 20:12:18.401
  STEP: updating @ 01/27/25 20:12:18.406
  I0127 20:12:18.411901 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 01/27/25 20:12:18.411
  STEP: patching /status @ 01/27/25 20:12:18.413
  STEP: updating /status @ 01/27/25 20:12:18.416
  STEP: deleting @ 01/27/25 20:12:18.441
  STEP: deleting a collection @ 01/27/25 20:12:18.447
  I0127 20:12:18.458572 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9463" for this suite. @ 01/27/25 20:12:18.46
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/27/25 20:12:18.465
  I0127 20:12:18.465629 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename podtemplate @ 01/27/25 20:12:18.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:18.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:18.476
  I0127 20:12:18.498689 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8741" for this suite. @ 01/27/25 20:12:18.561
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/27/25 20:12:18.566
  I0127 20:12:18.566075 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 20:12:18.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:18.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:18.584
  STEP: creating the pod @ 01/27/25 20:12:18.587
  STEP: setting up watch @ 01/27/25 20:12:18.587
  STEP: submitting the pod to kubernetes @ 01/27/25 20:12:18.69
  STEP: verifying the pod is in kubernetes @ 01/27/25 20:12:18.698
  STEP: verifying pod creation was observed @ 01/27/25 20:12:18.7
  STEP: deleting the pod gracefully @ 01/27/25 20:12:20.708
  STEP: verifying pod deletion was observed @ 01/27/25 20:12:20.714
  I0127 20:12:22.136179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5490" for this suite. @ 01/27/25 20:12:22.138
• [3.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/27/25 20:12:22.142
  I0127 20:12:22.142339 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sysctl @ 01/27/25 20:12:22.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:22.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:22.153
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/27/25 20:12:22.155
  STEP: Watching for error events or started pod @ 01/27/25 20:12:22.16
  STEP: Waiting for pod completion @ 01/27/25 20:12:24.163
  STEP: Checking that the pod succeeded @ 01/27/25 20:12:26.173
  STEP: Getting logs from the pod @ 01/27/25 20:12:26.173
  STEP: Checking that the sysctl is actually updated @ 01/27/25 20:12:26.18
  I0127 20:12:26.180365 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6580" for this suite. @ 01/27/25 20:12:26.182
• [4.044 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/27/25 20:12:26.186
  I0127 20:12:26.186552 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename watch @ 01/27/25 20:12:26.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:26.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:26.199
  STEP: creating a watch on configmaps @ 01/27/25 20:12:26.203
  STEP: creating a new configmap @ 01/27/25 20:12:26.205
  STEP: modifying the configmap once @ 01/27/25 20:12:26.209
  STEP: closing the watch once it receives two notifications @ 01/27/25 20:12:26.213
  I0127 20:12:26.214069 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4956  c40f7bad-a186-403d-891c-e366655ee6d7 38516 0 2025-01-27 20:12:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-27 20:12:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 20:12:26.214254 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4956  c40f7bad-a186-403d-891c-e366655ee6d7 38517 0 2025-01-27 20:12:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-27 20:12:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/27/25 20:12:26.214
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/27/25 20:12:26.218
  STEP: deleting the configmap @ 01/27/25 20:12:26.219
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/27/25 20:12:26.223
  I0127 20:12:26.223420 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4956  c40f7bad-a186-403d-891c-e366655ee6d7 38518 0 2025-01-27 20:12:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-27 20:12:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 20:12:26.223540 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4956  c40f7bad-a186-403d-891c-e366655ee6d7 38519 0 2025-01-27 20:12:26 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-27 20:12:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0127 20:12:26.223658 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4956" for this suite. @ 01/27/25 20:12:26.283
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/27/25 20:12:26.29
  I0127 20:12:26.290507 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 20:12:26.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:26.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:26.302
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/27/25 20:12:26.305
  STEP: Saw pod success @ 01/27/25 20:12:28.317
  I0127 20:12:28.319846 23 output.go:207] Trying to get logs from node worker-0 pod pod-16302fe2-d9f4-4784-a4a0-d56755d099d8 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 20:12:28.324
  I0127 20:12:28.335173 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4553" for this suite. @ 01/27/25 20:12:28.337
• [2.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/27/25 20:12:28.341
  I0127 20:12:28.341175 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 20:12:28.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:28.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:28.352
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/27/25 20:12:28.354
  I0127 20:12:28.354889 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/27/25 20:12:33.365
  I0127 20:12:33.365566 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 20:12:34.576609 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 20:12:39.526618 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2431" for this suite. @ 01/27/25 20:12:39.532
• [11.195 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/27/25 20:12:39.536
  I0127 20:12:39.536567 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 20:12:39.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:39.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:39.55
  STEP: Setting up server cert @ 01/27/25 20:12:39.646
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 20:12:39.948
  STEP: Deploying the webhook pod @ 01/27/25 20:12:39.954
  STEP: Wait for the deployment to be ready @ 01/27/25 20:12:39.963
  I0127 20:12:39.969574 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 20:12:41.976
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 20:12:41.987
  I0127 20:12:42.987365 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/27/25 20:12:42.991
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/27/25 20:12:43.008
  I0127 20:12:43.008530 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 20:12:43.046887 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9756" for this suite. @ 01/27/25 20:12:43.054
  STEP: Destroying namespace "webhook-markers-2691" for this suite. @ 01/27/25 20:12:43.058
• [3.525 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/27/25 20:12:43.061
  I0127 20:12:43.061601 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/27/25 20:12:43.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:43.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:43.074
  STEP: set up a multi version CRD @ 01/27/25 20:12:43.076
  I0127 20:12:43.076626 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: rename a version @ 01/27/25 20:12:46.258
  STEP: check the new version name is served @ 01/27/25 20:12:46.269
  STEP: check the old version name is removed @ 01/27/25 20:12:46.984
  STEP: check the other version is not changed @ 01/27/25 20:12:47.612
  I0127 20:12:50.138643 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-978" for this suite. @ 01/27/25 20:12:50.144
• [7.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/27/25 20:12:50.148
  I0127 20:12:50.148731 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename resourcequota @ 01/27/25 20:12:50.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:12:50.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:12:50.162
  STEP: Counting existing ResourceQuota @ 01/27/25 20:13:07.168
  STEP: Creating a ResourceQuota @ 01/27/25 20:13:12.171
  STEP: Ensuring resource quota status is calculated @ 01/27/25 20:13:12.177
  STEP: Creating a ConfigMap @ 01/27/25 20:13:14.179
  STEP: Ensuring resource quota status captures configMap creation @ 01/27/25 20:13:14.188
  STEP: Deleting a ConfigMap @ 01/27/25 20:13:16.19
  STEP: Ensuring resource quota status released usage @ 01/27/25 20:13:16.193
  I0127 20:13:18.197410 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-426" for this suite. @ 01/27/25 20:13:18.199
• [28.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 01/27/25 20:13:18.203
  I0127 20:13:18.203634 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename services @ 01/27/25 20:13:18.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:18.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:18.214
  STEP: creating an Endpoint @ 01/27/25 20:13:18.218
  STEP: waiting for available Endpoint @ 01/27/25 20:13:18.221
  STEP: listing all Endpoints @ 01/27/25 20:13:18.223
  STEP: updating the Endpoint @ 01/27/25 20:13:18.224
  STEP: fetching the Endpoint @ 01/27/25 20:13:18.228
  STEP: patching the Endpoint @ 01/27/25 20:13:18.23
  STEP: fetching the Endpoint @ 01/27/25 20:13:18.236
  STEP: deleting the Endpoint by Collection @ 01/27/25 20:13:18.237
  STEP: waiting for Endpoint deletion @ 01/27/25 20:13:18.241
  STEP: fetching the Endpoint @ 01/27/25 20:13:18.242
  I0127 20:13:18.244461 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4528" for this suite. @ 01/27/25 20:13:18.3
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/27/25 20:13:18.306
  I0127 20:13:18.306790 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename webhook @ 01/27/25 20:13:18.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:18.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:18.318
  STEP: Setting up server cert @ 01/27/25 20:13:18.417
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/27/25 20:13:18.769
  STEP: Deploying the webhook pod @ 01/27/25 20:13:18.777
  STEP: Wait for the deployment to be ready @ 01/27/25 20:13:18.786
  I0127 20:13:18.793140 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/27/25 20:13:20.8
  STEP: Verifying the service has paired with the endpoint @ 01/27/25 20:13:20.81
  I0127 20:13:21.810935 23 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/27/25 20:13:21.815
  STEP: create a pod that should be denied by the webhook @ 01/27/25 20:13:21.833
  STEP: create a pod that causes the webhook to hang @ 01/27/25 20:13:21.844
  STEP: create a configmap that should be denied by the webhook @ 01/27/25 20:13:31.85
  STEP: create a configmap that should be admitted by the webhook @ 01/27/25 20:13:31.862
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/27/25 20:13:31.873
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/27/25 20:13:31.878
  STEP: create a namespace that bypass the webhook @ 01/27/25 20:13:31.883
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/27/25 20:13:31.891
  I0127 20:13:31.936496 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5859" for this suite. @ 01/27/25 20:13:31.94
  STEP: Destroying namespace "webhook-markers-5443" for this suite. @ 01/27/25 20:13:31.945
  STEP: Destroying namespace "exempted-namespace-5143" for this suite. @ 01/27/25 20:13:31.951
• [13.648 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/27/25 20:13:31.954
  I0127 20:13:31.954435 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/27/25 20:13:31.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:31.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:31.997
  I0127 20:13:32.000134 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  I0127 20:13:35.095425 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5540" for this suite. @ 01/27/25 20:13:35.098
• [3.147 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 01/27/25 20:13:35.102
  I0127 20:13:35.102105 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/27/25 20:13:35.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:35.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:35.115
  STEP: getting /apis @ 01/27/25 20:13:35.123
  STEP: getting /apis/admissionregistration.k8s.io @ 01/27/25 20:13:35.126
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/27/25 20:13:35.127
  STEP: creating @ 01/27/25 20:13:35.128
  STEP: getting @ 01/27/25 20:13:35.137
  STEP: listing @ 01/27/25 20:13:35.138
  STEP: watching @ 01/27/25 20:13:35.14
  I0127 20:13:35.140442 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 01/27/25 20:13:35.141
  STEP: updating @ 01/27/25 20:13:35.144
  I0127 20:13:35.150790 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 01/27/25 20:13:35.15
  STEP: deleting a collection @ 01/27/25 20:13:35.156
  I0127 20:13:35.165690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8366" for this suite. @ 01/27/25 20:13:35.199
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/27/25 20:13:35.204
  I0127 20:13:35.204222 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pod-network-test @ 01/27/25 20:13:35.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:35.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:35.217
  STEP: Performing setup for networking test in namespace pod-network-test-3943 @ 01/27/25 20:13:35.219
  STEP: creating a selector @ 01/27/25 20:13:35.219
  STEP: Creating the service pods in kubernetes @ 01/27/25 20:13:35.219
  I0127 20:13:35.219612 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/27/25 20:13:49.346
  I0127 20:13:51.357495 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0127 20:13:51.357555 23 networking.go:42] Breadth first check of 10.244.1.199 on host 10.0.52.184...
  I0127 20:13:51.359350 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.200:9080/dial?request=hostname&protocol=udp&host=10.244.1.199&port=8081&tries=1'] Namespace:pod-network-test-3943 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:13:51.359378 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:13:51.359436 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3943/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.200%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.199%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0127 20:13:51.405436 23 utils.go:356] Waiting for responses: map[]
  I0127 20:13:51.405468 23 utils.go:360] reached 10.244.1.199 after 0/1 tries
  I0127 20:13:51.405480 23 networking.go:42] Breadth first check of 10.244.0.67 on host 10.0.33.3...
  I0127 20:13:51.407708 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.200:9080/dial?request=hostname&protocol=udp&host=10.244.0.67&port=8081&tries=1'] Namespace:pod-network-test-3943 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0127 20:13:51.407733 23 exec_util.go:64] ExecWithOptions: Clientset creation
  I0127 20:13:51.407784 23 exec_util.go:80] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3943/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.200%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.67%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0127 20:13:51.454178 23 utils.go:356] Waiting for responses: map[]
  I0127 20:13:51.454203 23 utils.go:360] reached 10.244.0.67 after 0/1 tries
  I0127 20:13:51.454217 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0127 20:13:51.454334 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3943" for this suite. @ 01/27/25 20:13:51.456
• [16.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 01/27/25 20:13:51.461
  I0127 20:13:51.461375 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename job @ 01/27/25 20:13:51.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:51.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:51.475
  STEP: Creating a job @ 01/27/25 20:13:51.477
  STEP: Ensuring active pods == parallelism @ 01/27/25 20:13:51.481
  STEP: Orphaning one of the Job's Pods @ 01/27/25 20:13:53.487
  I0127 20:13:53.999970 23 pod_client.go:173] Successfully updated pod "adopt-release-2tcpd"
  STEP: Checking that the Job readopts the Pod @ 01/27/25 20:13:54
  STEP: Removing the labels from the Job's Pod @ 01/27/25 20:13:56.005
  I0127 20:13:56.513586 23 pod_client.go:173] Successfully updated pod "adopt-release-2tcpd"
  STEP: Checking that the Job releases the Pod @ 01/27/25 20:13:56.513
  I0127 20:13:58.518908 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8974" for this suite. @ 01/27/25 20:13:58.521
• [7.064 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855
  STEP: Creating a kubernetes client @ 01/27/25 20:13:58.525
  I0127 20:13:58.525593 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename kubectl @ 01/27/25 20:13:58.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:58.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:58.537
  STEP: Starting the proxy @ 01/27/25 20:13:58.54
  I0127 20:13:58.540410 23 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=kubectl-6873 proxy --unix-socket=/tmp/kubectl-proxy-unix1690105461/test'
  STEP: retrieving proxy /api/ output @ 01/27/25 20:13:58.584
  I0127 20:13:58.584882 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6873" for this suite. @ 01/27/25 20:13:58.622
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/27/25 20:13:58.626
  I0127 20:13:58.626668 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 20:13:58.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:13:58.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:13:58.64
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/27/25 20:13:58.643
  STEP: Saw pod success @ 01/27/25 20:14:00.655
  I0127 20:14:00.657073 23 output.go:207] Trying to get logs from node worker-0 pod pod-6ebb09fe-89b8-411e-aa12-db337825c953 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 20:14:00.667
  I0127 20:14:00.678708 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2869" for this suite. @ 01/27/25 20:14:00.68
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/27/25 20:14:00.684
  I0127 20:14:00.684872 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/27/25 20:14:00.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:14:00.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:14:00.697
  I0127 20:14:00.702937 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6109" for this suite. @ 01/27/25 20:14:00.781
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/27/25 20:14:00.787
  I0127 20:14:00.787823 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename container-probe @ 01/27/25 20:14:00.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:14:00.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:14:00.798
  I0127 20:15:00.811546 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8609" for this suite. @ 01/27/25 20:15:00.814
• [60.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/27/25 20:15:00.818
  I0127 20:15:00.818520 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename init-container @ 01/27/25 20:15:00.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:15:00.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:15:00.83
  STEP: creating the pod @ 01/27/25 20:15:00.832
  I0127 20:15:00.832638 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0127 20:15:04.529021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3718" for this suite. @ 01/27/25 20:15:04.532
• [3.718 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/27/25 20:15:04.536
  I0127 20:15:04.536294 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename svcaccounts @ 01/27/25 20:15:04.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:15:04.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:15:04.55
  STEP: reading a file in the container @ 01/27/25 20:15:06.572
  I0127 20:15:06.572328 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8068 pod-service-account-a28099ff-938c-4372-8586-d6154b3eec1c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/27/25 20:15:06.664
  I0127 20:15:06.665071 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8068 pod-service-account-a28099ff-938c-4372-8586-d6154b3eec1c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/27/25 20:15:06.766
  I0127 20:15:06.766500 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8068 pod-service-account-a28099ff-938c-4372-8586-d6154b3eec1c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0127 20:15:06.859433 23 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-8068"
  I0127 20:15:06.861267 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8068" for this suite. @ 01/27/25 20:15:06.863
• [2.333 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/27/25 20:15:06.869
  I0127 20:15:06.869612 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename disruption @ 01/27/25 20:15:06.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:15:06.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:15:06.88
  STEP: Creating a kubernetes client @ 01/27/25 20:15:06.883
  I0127 20:15:06.883373 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename disruption-2 @ 01/27/25 20:15:06.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:15:06.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:15:06.984
  STEP: Waiting for the pdb to be processed @ 01/27/25 20:15:06.99
  STEP: Waiting for the pdb to be processed @ 01/27/25 20:15:08.997
  STEP: Waiting for the pdb to be processed @ 01/27/25 20:15:11.004
  STEP: listing a collection of PDBs across all namespaces @ 01/27/25 20:15:13.007
  STEP: listing a collection of PDBs in namespace disruption-3329 @ 01/27/25 20:15:13.009
  STEP: deleting a collection of PDBs @ 01/27/25 20:15:13.011
  STEP: Waiting for the PDB collection to be deleted @ 01/27/25 20:15:13.017
  I0127 20:15:13.019272 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5471" for this suite. @ 01/27/25 20:15:13.021
  I0127 20:15:13.027025 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3329" for this suite. @ 01/27/25 20:15:13.122
• [6.260 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 01/27/25 20:15:13.129
  I0127 20:15:13.129710 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 20:15:13.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:15:13.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:15:13.141
  STEP: Creating service test in namespace statefulset-2788 @ 01/27/25 20:15:13.143
  STEP: Creating a new StatefulSet @ 01/27/25 20:15:13.146
  I0127 20:15:13.155284 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I0127 20:15:23.156611 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:15:23.156646 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:15:23.156656 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:15:23.161931 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-2788 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 20:15:23.263125 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 20:15:23.263293 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 20:15:23.263308 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/27/25 20:15:33.268
  I0127 20:15:33.273561 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/27/25 20:15:33.273
  STEP: Updating Pods in reverse ordinal order @ 01/27/25 20:15:43.278
  I0127 20:15:43.280721 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-2788 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 20:15:43.373898 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 20:15:43.373973 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 20:15:43.373991 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/27/25 20:16:03.382
  I0127 20:16:03.382967 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-2788 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0127 20:16:03.479256 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0127 20:16:03.479295 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0127 20:16:03.479452 23 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0127 20:16:13.492465 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/27/25 20:16:23.497
  I0127 20:16:23.499563 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-832093543 --namespace=statefulset-2788 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0127 20:16:23.595668 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0127 20:16:23.595718 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0127 20:16:23.595736 23 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0127 20:16:33.604070 23 statefulset.go:138] Deleting all statefulset in ns statefulset-2788
  I0127 20:16:33.605787 23 rest.go:152] Scaling statefulset ss2 to 0
  I0127 20:16:43.614672 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 20:16:43.616487 23 rest.go:90] Deleting statefulset ss2
  I0127 20:16:43.624136 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2788" for this suite. @ 01/27/25 20:16:43.626
• [90.502 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/27/25 20:16:43.631
  I0127 20:16:43.631673 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename configmap @ 01/27/25 20:16:43.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:16:43.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:16:43.645
  STEP: Creating configMap with name configmap-test-volume-12b7dd11-437c-4442-8af3-79246ebddbd6 @ 01/27/25 20:16:43.647
  STEP: Creating a pod to test consume configMaps @ 01/27/25 20:16:43.65
  STEP: Saw pod success @ 01/27/25 20:16:47.665
  I0127 20:16:47.667461 23 output.go:207] Trying to get logs from node worker-0 pod pod-configmaps-a294533d-598e-40ae-aad4-8b9623f4eb44 container agnhost-container: <nil>
  STEP: delete the pod @ 01/27/25 20:16:47.678
  I0127 20:16:47.689229 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8316" for this suite. @ 01/27/25 20:16:47.691
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/27/25 20:16:47.697
  I0127 20:16:47.697790 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename replication-controller @ 01/27/25 20:16:47.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:16:47.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:16:47.708
  STEP: creating a ReplicationController @ 01/27/25 20:16:47.712
  STEP: waiting for RC to be added @ 01/27/25 20:16:47.717
  STEP: waiting for available Replicas @ 01/27/25 20:16:47.718
  STEP: patching ReplicationController @ 01/27/25 20:16:48.683
  STEP: waiting for RC to be modified @ 01/27/25 20:16:48.69
  STEP: patching ReplicationController status @ 01/27/25 20:16:48.691
  STEP: waiting for RC to be modified @ 01/27/25 20:16:48.697
  STEP: waiting for available Replicas @ 01/27/25 20:16:48.697
  STEP: fetching ReplicationController status @ 01/27/25 20:16:48.7
  STEP: patching ReplicationController scale @ 01/27/25 20:16:48.702
  STEP: waiting for RC to be modified @ 01/27/25 20:16:48.708
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/27/25 20:16:48.708
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/27/25 20:16:49.722
  STEP: updating ReplicationController status @ 01/27/25 20:16:49.724
  STEP: waiting for RC to be modified @ 01/27/25 20:16:49.728
  STEP: listing all ReplicationControllers @ 01/27/25 20:16:49.728
  STEP: checking that ReplicationController has expected values @ 01/27/25 20:16:49.73
  STEP: deleting ReplicationControllers by collection @ 01/27/25 20:16:49.73
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/27/25 20:16:49.737
  I0127 20:16:49.776879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0127 20:16:49.777111      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4131" for this suite. @ 01/27/25 20:16:49.779
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/27/25 20:16:49.785
  I0127 20:16:49.785231 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename pods @ 01/27/25 20:16:49.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:16:49.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:16:49.796
  STEP: creating the pod @ 01/27/25 20:16:49.798
  STEP: submitting the pod to kubernetes @ 01/27/25 20:16:49.798
  E0127 20:16:50.778072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:51.778248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/27/25 20:16:51.812
  STEP: updating the pod @ 01/27/25 20:16:51.814
  I0127 20:16:52.322272 23 pod_client.go:173] Successfully updated pod "pod-update-e0f9757f-5440-41c7-a3dd-f7d9af9399c7"
  STEP: verifying the updated pod is in kubernetes @ 01/27/25 20:16:52.324
  I0127 20:16:52.325897 23 pods.go:391] Pod update OK
  I0127 20:16:52.326032 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-506" for this suite. @ 01/27/25 20:16:52.328
• [2.549 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/27/25 20:16:52.334
  I0127 20:16:52.334519 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 20:16:52.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:16:52.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:16:52.345
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/27/25 20:16:52.348
  E0127 20:16:52.779132      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:53.779274      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:54.780103      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:55.780278      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/27/25 20:16:56.364
  I0127 20:16:56.366182 23 output.go:207] Trying to get logs from node worker-0 pod pod-f89e2c64-af03-41ea-a06d-7e0c49dc513c container test-container: <nil>
  STEP: delete the pod @ 01/27/25 20:16:56.37
  I0127 20:16:56.379671 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4926" for this suite. @ 01/27/25 20:16:56.381
• [4.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/27/25 20:16:56.385
  I0127 20:16:56.385502 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename security-context @ 01/27/25 20:16:56.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:16:56.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:16:56.398
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/27/25 20:16:56.4
  E0127 20:16:56.780927      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:57.781137      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:58.781614      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:16:59.781798      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/27/25 20:17:00.414
  I0127 20:17:00.416506 23 output.go:207] Trying to get logs from node worker-0 pod security-context-09bd2e48-966c-4d5c-b1e9-a1525b6186b8 container test-container: <nil>
  STEP: delete the pod @ 01/27/25 20:17:00.421
  I0127 20:17:00.432285 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6835" for this suite. @ 01/27/25 20:17:00.434
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/27/25 20:17:00.438
  I0127 20:17:00.438589 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename emptydir @ 01/27/25 20:17:00.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:17:00.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:17:00.452
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/27/25 20:17:00.454
  E0127 20:17:00.782765      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:01.783560      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:02.784072      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:03.784180      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/27/25 20:17:04.467
  I0127 20:17:04.469075 23 output.go:207] Trying to get logs from node worker-0 pod pod-c21d540f-f275-4c8a-90ed-9eeb9f97b66e container test-container: <nil>
  STEP: delete the pod @ 01/27/25 20:17:04.473
  I0127 20:17:04.484176 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3776" for this suite. @ 01/27/25 20:17:04.486
• [4.051 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/27/25 20:17:04.49
  I0127 20:17:04.490265 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename projected @ 01/27/25 20:17:04.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:17:04.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:17:04.5
  STEP: Creating configMap with name configmap-projected-all-test-volume-192ffa9b-5457-4f2e-9b6d-674f75a66cb3 @ 01/27/25 20:17:04.502
  STEP: Creating secret with name secret-projected-all-test-volume-424a5e50-46c6-47fe-894a-dab8d4739321 @ 01/27/25 20:17:04.505
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/27/25 20:17:04.508
  W0127 20:17:04.515075      23 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0127 20:17:04.785134      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:05.785160      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:06.785685      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:07.785866      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/27/25 20:17:08.521
  I0127 20:17:08.523908 23 output.go:207] Trying to get logs from node worker-0 pod projected-volume-14806bd8-5256-451d-83ad-8233f465ddbc container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/27/25 20:17:08.529
  I0127 20:17:08.538301 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9378" for this suite. @ 01/27/25 20:17:08.54
• [4.054 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 01/27/25 20:17:08.544
  I0127 20:17:08.544428 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename statefulset @ 01/27/25 20:17:08.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:17:08.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:17:08.554
  STEP: Creating service test in namespace statefulset-359 @ 01/27/25 20:17:08.557
  STEP: Creating a new StatefulSet @ 01/27/25 20:17:08.56
  I0127 20:17:08.569067 23 wait.go:40] Found 0 stateful pods, waiting for 3
  E0127 20:17:08.786280      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:09.787248      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:10.788293      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:11.789311      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:12.789486      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:13.789687      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:14.789889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:15.790096      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:16.790276      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:17.790369      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0127 20:17:18.570094 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:17:18.570154 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:17:18.570165 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/27/25 20:17:18.575
  I0127 20:17:18.583319 23 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 01/27/25 20:17:18.583
  E0127 20:17:18.791430      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:19.791627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:20.791834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:21.792053      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:22.792234      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:23.792420      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:24.792612      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:25.792806      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:26.793001      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:27.793617      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/27/25 20:17:28.588
  STEP: Performing a canary update @ 01/27/25 20:17:28.588
  I0127 20:17:28.596614 23 statefulset.go:2510] Updating stateful set ss2
  I0127 20:17:28.603601 23 wait.go:74] Waiting for Pod statefulset-359/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0127 20:17:28.793679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:29.794284      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:30.794368      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:31.795252      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:32.796273      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:33.796539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:34.797004      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:35.797176      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:36.797359      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:37.797532      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/27/25 20:17:38.602
  I0127 20:17:38.635124 23 wait.go:40] Found 2 stateful pods, waiting for 3
  E0127 20:17:38.798251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:39.798460      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:40.798654      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:41.798840      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:42.798940      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:43.799097      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:44.799169      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:45.799370      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:46.799542      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:47.799676      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0127 20:17:48.630806 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:17:48.630844 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0127 20:17:48.630854 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/27/25 20:17:48.634
  I0127 20:17:48.640308 23 statefulset.go:2510] Updating stateful set ss2
  I0127 20:17:48.647451 23 wait.go:74] Waiting for Pod statefulset-359/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0127 20:17:48.800485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:49.800679      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:50.800871      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:51.801106      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:52.801528      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:53.802189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:54.802014      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:55.802226      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:56.802326      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:57.802433      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0127 20:17:58.651160 23 statefulset.go:2510] Updating stateful set ss2
  I0127 20:17:58.658212 23 wait.go:56] Waiting for StatefulSet statefulset-359/ss2 to complete update
  I0127 20:17:58.658260 23 wait.go:63] Waiting for Pod statefulset-359/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0127 20:17:58.803192      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:17:59.803398      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:00.803952      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:01.804193      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:02.804386      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:03.804590      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:04.804767      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:05.804964      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:06.805158      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:07.805337      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0127 20:18:08.656244 23 statefulset.go:138] Deleting all statefulset in ns statefulset-359
  I0127 20:18:08.658180 23 rest.go:152] Scaling statefulset ss2 to 0
  E0127 20:18:08.805801      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:09.805889      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:10.806289      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:11.806459      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:12.806653      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:13.806847      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:14.806936      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:15.807067      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:16.807268      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:17.807463      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0127 20:18:18.667268 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0127 20:18:18.669538 23 rest.go:90] Deleting statefulset ss2
  I0127 20:18:18.679081 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-359" for this suite. @ 01/27/25 20:18:18.681
• [70.144 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 01/27/25 20:18:18.688
  I0127 20:18:18.688087 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename sched-preemption @ 01/27/25 20:18:18.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:18:18.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:18:18.699
  I0127 20:18:18.712425 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0127 20:18:18.807804      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:19.807981      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:20.808508      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:21.808707      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:22.809231      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:23.809407      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:24.809897      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:25.809979      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:26.810271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:27.810476      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:28.811396      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:29.811572      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:30.812633      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:31.812817      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:32.813334      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:33.814269      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:34.815251      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:35.815444      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:36.815738      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:37.815949      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:38.816281      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:39.816471      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:40.816997      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:41.817189      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:42.817834      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:43.818013      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:44.818684      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:45.819131      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:46.819211      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:47.819329      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:48.820168      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:49.820485      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:50.821538      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:51.821724      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:52.822441      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:53.822622      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:54.823659      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:55.824166      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:56.824424      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:57.824627      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:58.825144      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:18:59.825347      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:00.825770      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:01.825990      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:02.826603      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:03.826794      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:04.827212      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:05.827416      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:06.828399      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:07.828621      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:08.829539      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:09.829752      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:10.830493      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:11.830731      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:12.830722      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:13.830902      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:14.831525      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:15.831709      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:16.831774      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:17.831955      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0127 20:19:18.715549 23 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/27/25 20:19:18.717
  STEP: Adding a custom resource @ 01/27/25 20:19:18.717
  I0127 20:19:18.733388 23 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0127 20:19:18.737188 23 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 01/27/25 20:19:18.737
  I0127 20:19:18.752276 23 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0127 20:19:18.758393 23 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/27/25 20:19:18.758
  E0127 20:19:18.832257      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:19.832394      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/27/25 20:19:20.768
  E0127 20:19:20.833179      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:21.833233      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:22.833870      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:23.834105      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 01/27/25 20:19:24.799
  STEP: Removing a custom resource @ 01/27/25 20:19:24.807
  I0127 20:19:24.816361 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4876" for this suite. @ 01/27/25 20:19:24.818
• [66.134 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/27/25 20:19:24.822
  I0127 20:19:24.822599 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename var-expansion @ 01/27/25 20:19:24.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:19:24.833
  E0127 20:19:24.834201      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:19:24.836
  STEP: Creating a pod to test substitution in container's command @ 01/27/25 20:19:24.838
  E0127 20:19:25.835023      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:26.835271      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:27.835351      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0127 20:19:28.835545      23 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/27/25 20:19:28.854
  I0127 20:19:28.855944 23 output.go:207] Trying to get logs from node worker-0 pod var-expansion-6d0c923f-f284-4fe3-81aa-de97269e5499 container dapi-container: <nil>
  STEP: delete the pod @ 01/27/25 20:19:28.868
  I0127 20:19:28.879407 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5755" for this suite. @ 01/27/25 20:19:28.881
• [4.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/27/25 20:19:28.885
  I0127 20:19:28.885359 23 util.go:502] >>> kubeConfig: /tmp/kubeconfig-832093543
  STEP: Building a namespace api object, basename tables @ 01/27/25 20:19:28.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/27/25 20:19:28.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/27/25 20:19:28.898
  I0127 20:19:28.903323 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1748" for this suite. @ 01/27/25 20:19:28.905
• [0.026 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0127 20:19:28.911026 23 suites.go:34] Running AfterSuite actions on node 1
  I0127 20:19:28.911061 23 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.054 seconds]
------------------------------

Ran 411 of 6622 Specs in 6440.880 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6211 Skipped
PASS

Ginkgo ran 1 suite in 1h47m21.731796065s
Test Suite Passed
